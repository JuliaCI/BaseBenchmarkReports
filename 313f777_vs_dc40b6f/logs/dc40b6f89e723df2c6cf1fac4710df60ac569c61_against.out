cset: moving following pidspec: 16983
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.266604467 seconds)
loading group "string"... done (took 0.480417382 seconds)
loading group "linalg"... done (took 7.783233633 seconds)
loading group "parallel"... done (took 0.175125947 seconds)
loading group "find"... done (took 1.191181805 seconds)
loading group "tuple"... done (took 1.900613477 seconds)
loading group "dates"... done (took 1.27765397 seconds)
loading group "micro"... done (took 0.238323859 seconds)
loading group "io"... done (took 0.730559531 seconds)
loading group "scalar"... done (took 43.060519015 seconds)
loading group "sparse"... done (took 13.490365837 seconds)
loading group "broadcast"... done (took 1.10234743 seconds)
loading group "union"... done (took 14.962237189 seconds)
loading group "simd"... done (took 5.286162434 seconds)
loading group "random"... done (took 10.552440261 seconds)
loading group "problem"... done (took 2.100605144 seconds)
loading group "array"... done (took 24.86385266 seconds)
loading group "misc"... done (took 1.555920105 seconds)
loading group "sort"... done (took 4.056077991 seconds)
loading group "collection"... done (took 21.323261567 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.463752036 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.145055152 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.150067739 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.135179764 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.210897607 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.140909805 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.159757627 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.1120921 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.073175086 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179049709 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144131473 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.49488916 seconds)
done (took 5.212721406 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.217323019 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08120717 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094943472 seconds)
  done (took 0.925726534 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090874043 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.143079384 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.092220531 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075261032 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074114114 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.093175425 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.073641045 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.091685967 seconds)
  done (took 1.393269751 seconds)
done (took 3.387124753 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.740275214 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286564395 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202655927 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.519365392 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179362734 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217970108 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680151415 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.361693644 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.245611121 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103820205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130780002 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.453481794 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113788297 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.684242116 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089629115 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12813377 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.172682452 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.43864718 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.091460193 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.090239629 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116546309 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.152633343 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.090495698 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101019108 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.170187152 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.092257362 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.190139727 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106193658 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.075662748 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.269834945 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202604232 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.741764067 seconds)
  done (took 11.028782844 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113778589 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.139642454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076268156 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154153306 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137212627 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079815192 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099484711 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077194868 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.124282652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180843775 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115930491 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.142674108 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092082417 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.079166 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117889576 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.230781016 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121385746 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.119701619 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.080476151 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104816255 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.120225724 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112597722 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.090442527 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109097572 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168096798 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204613798 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.108739409 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124956866 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.077815416 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112318817 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142451499 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158564483 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.076064408 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.076433203 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.176815859 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123301409 seconds)
  done (took 5.134481061 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191308611 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.100522281 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.172340526 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16498315 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.146925042 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.126477752 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.156723208 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114277857 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265620332 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.128168397 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162942241 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143953199 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115314226 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077797993 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.101642774 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.076324015 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.699490875 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165498613 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112397859 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115580833 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096564342 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084150942 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.370648714 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082391117 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.072732649 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099310966 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068083875 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159402645 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098489235 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168367756 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.096370873 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10172665 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131123398 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.200450399 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106963019 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134867106 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095856501 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073965626 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177016799 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081305733 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095359515 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.104256353 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13472034 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.135651824 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.09062229 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077754125 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211163578 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09297606 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.091049405 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.008532472 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177669072 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089042481 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073029523 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.341764342 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.115309777 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076093238 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123669419 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073677232 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.292760144 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111211838 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096553235 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.075258769 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096377873 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.078207309 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.74088527 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.093752149 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.696725586 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078570123 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.085065328 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095328899 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094916003 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085819704 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083315942 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11496917 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.075915423 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097624991 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.075828279 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096349206 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.078309402 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.114928242 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082342084 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.095056379 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146278974 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09293331 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.096003307 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125530888 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.080884138 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094036711 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127839715 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075329896 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078147141 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096032904 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115865795 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097369113 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.114282766 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.079513988 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141672244 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094752054 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.170598352 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.075947348 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123487836 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.08293521 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.091709972 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126355713 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.093596266 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096163339 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082379678 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.074314887 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094171703 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145687217 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094606908 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.077609405 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.076388746 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111116573 seconds)
  done (took 22.773098364 seconds)
done (took 39.686623545 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.363054882 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109881926 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.110873433 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.109844094 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.108662713 seconds)
  done (took 1.629002521 seconds)
done (took 2.429964322 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320327373 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178245318 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094850973 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17206608 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.072359702 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.197979141 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162814493 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092603004 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207846818 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.073909137 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166902303 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092346529 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074366586 seconds)
  done (took 2.732872754 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092108095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114410961 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080589014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091661419 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09248562 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092224394 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10945679 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097914131 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109429658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082351826 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.072146322 seconds)
  done (took 1.83148902 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090933006 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.093408377 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101962029 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089801851 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092193205 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090773923 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108698038 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09676024 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108560363 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082798325 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071763795 seconds)
  done (took 1.824424253 seconds)
done (took 7.178928548 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096058741 seconds)
  done (took 0.888164902 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.084214981 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.675994257 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.123503264 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.167559782 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.335042877 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.212746385 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.600950999 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.134537411 seconds)
  done (took 16.330269561 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.127731769 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101365439 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.078558042 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099244655 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.081152616 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09808818 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080372377 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096655461 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078285708 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.077385262 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.099439956 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.079708092 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.100137281 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.077083082 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.096002294 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078731785 seconds)
  done (took 2.30288955 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.115336506 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114033325 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104335257 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.086367553 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.10276178 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.081926315 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106421244 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.083408144 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099508295 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.081911017 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.10634937 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.084986128 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103963726 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080129383 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.102649064 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.087772867 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.100243346 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08422583 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105101034 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.102945117 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.087635566 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.10075925 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.085662428 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104754937 seconds)
  done (took 3.216581517 seconds)
done (took 23.537193141 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163570187 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082882536 seconds)
  done (took 1.044410596 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097642097 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117778787 seconds)
  done (took 1.019069895 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.10378664 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097034227 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.135131274 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096492145 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.098789853 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.078536064 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130074321 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.097865104 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080536216 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079618271 seconds)
  done (took 1.801724585 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082827885 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082983001 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.107751346 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.118676729 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.089745826 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.099575828 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.083558474 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102097234 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.084590011 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095993323 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08757203 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114337662 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084261541 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116412095 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10228689 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085030246 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106933774 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.083292385 seconds)
  done (took 2.53606878 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077949783 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080407434 seconds)
  done (took 0.964714543 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081122074 seconds)
    (2/7) benchmarking "second"...
    done (took 0.076417465 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100485762 seconds)
    (4/7) benchmarking "year"...
    done (took 0.0979666 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.07838728 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077336164 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096326954 seconds)
  done (took 1.41450813 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.46785187 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.143792804 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.27392489 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08212478 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.122748031 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.336999144 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096372582 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084049982 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102766434 seconds)
  done (took 2.557345651 seconds)
done (took 12.140550131 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.089466395 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.099099368 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.130711258 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.479330743 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.118267591 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076574534 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162648812 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.261543868 seconds)
done (took 2.228429709 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.14614595 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33477671 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.125279361 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.070475449 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096405461 seconds)
  done (took 1.44128868 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.075935217 seconds)
    (2/2) benchmarking "read"...
    done (took 0.078905608 seconds)
  done (took 0.969370943 seconds)
done (took 3.370592752 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076959657 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.076609503 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.128790368 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.073583746 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097762492 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.073731414 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095512901 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.076718964 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.076011318 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.09692824 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.074256913 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.095353149 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07692332 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076147842 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09304817 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074242039 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09474728 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077781847 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073618263 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093275551 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074484129 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094923326 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.074299812 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.073806038 seconds)
  done (took 2.869174423 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104397433 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096800601 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.083119897 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101620581 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.081457491 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102371757 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08205838 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096558399 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.0828621 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098300348 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081266689 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.100016789 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.078942194 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.100130166 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079204994 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.099990671 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.082503006 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09635772 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079122445 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100640395 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.083132688 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097531511 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.081882215 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101908576 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.080268111 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100650509 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07897329 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096838665 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083006927 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100717815 seconds)
  done (took 3.5502837 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082211804 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.073780425 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094108126 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081779938 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093200031 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.079502617 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.074200801 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094810557 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078915835 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094015451 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080424502 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.073855889 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.094142545 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.078927842 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098936113 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.077941021 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.218192496 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.075889596 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.074351406 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099138837 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077131935 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093673251 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078506562 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.073288899 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094345909 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.074152477 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094671655 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.075474476 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.075209678 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.095020904 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.077420774 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.097442462 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.07509663 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.081089977 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098047096 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.074183854 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09753373 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.074630993 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.07854869 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093321806 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.074411686 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.092982917 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.075291295 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.081318689 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097747733 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.076342527 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.093808313 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080236594 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078142957 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100917949 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07399705 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09384991 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081065768 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098328596 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07961983 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.073678296 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095176174 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.074088231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097811278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.075366295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.073411557 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093423616 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07756891 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094818961 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.092198378 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.080891638 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094727155 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079934017 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.098697953 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.077495709 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099699878 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090590797 seconds)
  done (took 7.065113071 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.079380752 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104035156 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07820355 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.076427944 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094121518 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075928432 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101780549 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076362088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095991104 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09338949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094819749 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077050367 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075928275 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100043607 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075723506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096820957 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084754365 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092683555 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.075904309 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097949301 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07602541 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100148433 seconds)
  done (took 2.747916691 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.221616734 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10565214 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143088164 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.094365852 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115966627 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113292535 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.082435793 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103136386 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082068432 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105226808 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086076914 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10175486 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113966725 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086066381 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.105984401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086124697 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10145833 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086622515 seconds)
  done (took 2.757437246 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091701704 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09712514 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103900897 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097582476 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079114267 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099595154 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085384258 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11352713 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.080056927 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097152789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088763321 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100381412 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.080906261 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097884791 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080862179 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077187961 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100781951 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077386084 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107716159 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103722181 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085232809 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108054028 seconds)
  done (took 2.880912518 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09491731 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100105124 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.100100423 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.102157517 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.076751834 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099040213 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086977647 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097767358 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088557065 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099563324 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079074111 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098688925 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086985289 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.09665619 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08634505 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097417705 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.081443123 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07772106 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10014407 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077091356 seconds)
  done (took 2.653801497 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118038229 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112795613 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093081175 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.12372139 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09249065 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113341887 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123817047 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093926499 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.112580652 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107439588 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113278942 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.093026774 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125496608 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119388407 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093569383 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123693249 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12265338 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105137416 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112978459 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094230358 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.1261893 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092483155 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124763152 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.112126821 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.093859025 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112654503 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093764981 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120102484 seconds)
  done (took 3.90186473 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076940589 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077337832 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.095628757 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07564347 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07472699 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09611371 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.07557911 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095932231 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.078151555 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074386289 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.098101465 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.077689843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099934086 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.078025692 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07739733 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097655778 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077746794 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09482655 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075649298 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075172046 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.098281986 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077639388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097664647 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076042314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075048127 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097980055 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075715153 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094214607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079225782 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074528403 seconds)
  done (took 3.349168917 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.086233853 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103022681 seconds)
  done (took 1.02267227 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075017747 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113902588 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.076292525 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080860686 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104490279 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078436255 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109328768 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083384176 seconds)
  done (took 1.553342997 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.095707465 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115954625 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085442809 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.110381656 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097588921 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.114353173 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.139768954 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10576106 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.084166285 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.096981646 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095623893 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.097535123 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084600423 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098399654 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086152264 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084153231 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.100550217 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089670757 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107828699 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.081560785 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105080821 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091373197 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101233945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.087620786 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100034422 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0908822 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108815202 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.09121029 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101441004 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.090262122 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.107415151 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.073642125 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082153397 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105830427 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080096683 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.116492396 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092923886 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102986698 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.087558938 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105685763 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088601091 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09758615 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086597273 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.104139797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090180842 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.103364902 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085915258 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07735045 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099279337 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081664486 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098280568 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079470069 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092297276 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087947075 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082589889 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115057684 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080830181 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101502511 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081011201 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103127758 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085645134 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101160804 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081972391 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101887216 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08728339 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.082636024 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107851865 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076718073 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093256528 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080333985 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107804962 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.102398964 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108950872 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084142372 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105987783 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080322567 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10280533 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086013224 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107174841 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089076792 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103972582 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087869669 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107478785 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079181464 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100606227 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.087270764 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080468511 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103063224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.076255694 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116144184 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081520657 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.100228032 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.076743635 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108610979 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083432618 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082172945 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098225052 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086354534 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093643837 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085150574 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105951459 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080528368 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109184583 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085783084 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105456113 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.08793866 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.109610578 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079655916 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.081982944 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096101296 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085918453 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102305504 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.087103663 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092290122 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083180203 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081602916 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10619559 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.087272326 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102539733 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083351064 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108776357 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.088029655 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.102451148 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076464442 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102398463 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084967418 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108895136 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08773995 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100963303 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079369515 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.077306304 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.105152016 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083681431 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.105091109 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084560858 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103459852 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.073862988 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099592553 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085652482 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106847886 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080500648 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.079103901 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105127854 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.080206603 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102880541 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.085835093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101546223 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079881747 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.083598351 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102986459 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077249419 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110744662 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.082081754 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102230864 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.083286755 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110200662 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083712667 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.105446433 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082568201 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.104008763 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08661538 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078410486 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099524707 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082321958 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111016695 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.08186278 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.09884415 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.077559782 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105614937 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.07798992 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083158496 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09894285 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082353202 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.105841658 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080985509 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102905534 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.082201102 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11465445 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094948039 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105593969 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088026525 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.109042728 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084965136 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.080870367 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.104979942 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086257077 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105663644 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.087680719 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105880784 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085679055 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102385235 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07689133 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105665793 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088821333 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.078458637 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101807002 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.078269278 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10477592 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088054668 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103885726 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085645077 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101030839 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081341575 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088161473 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104392295 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082814122 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.099940296 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.08359944 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.110040744 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.086083952 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107201223 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.090445974 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103548239 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.07952788 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109457183 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082532098 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.085155485 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098909373 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077471157 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098440819 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086178596 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102806145 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083620032 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0733387 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108870278 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087660527 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100515819 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079398474 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105880235 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090138721 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102026746 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084169226 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104099994 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087399947 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114460449 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080395115 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.083103759 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111169768 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08451104 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095720959 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086382342 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103283531 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.079468709 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103744699 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083098875 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082943373 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108282356 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.084806918 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094879645 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.082732294 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10281398 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079546682 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078191668 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10922768 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.082886315 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.103317405 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088776818 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108235469 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085695152 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10494063 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084171218 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107154492 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087036364 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105576265 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086412951 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104531158 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.079644489 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.081474908 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101133197 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081223864 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105051928 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085216824 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100218376 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086701697 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103678803 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081687295 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.082566366 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107286847 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081022469 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101303181 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.07904539 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103996245 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081336455 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07962652 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104970174 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078610272 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109135857 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083965025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110210451 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.080265569 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097099365 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.086116597 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.081752966 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108430367 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084970654 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107599735 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.081021816 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105062263 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.083037835 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111626489 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.078080756 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110135209 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08691052 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10135657 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084719566 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.079308172 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103420363 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.079042519 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103021528 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086218197 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100257937 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085337403 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105714886 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.084825292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07950598 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103587698 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086437429 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.101093726 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086751219 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095017075 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.079932176 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079281369 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107030217 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088117306 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107409613 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083795461 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.11249585 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087652693 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103351905 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.077605204 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087246569 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109416832 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085369817 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111406326 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079706243 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10347511 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0904289 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095688389 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.08315819 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102168126 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080133925 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088022776 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.108594876 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0889152 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102363897 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079826454 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098920954 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.087248296 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.10382227 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.076529052 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081293584 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105355449 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082987268 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104774761 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.086244922 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.103733866 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088764522 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108619248 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.085442811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082376312 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107817185 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.077695351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100121995 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080482838 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104116816 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.087589394 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.077993999 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099772254 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085184289 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104478326 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082065196 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.105668887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084005017 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088497877 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.107608407 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.084412053 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113146813 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075454455 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106060059 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085260118 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106030216 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081640687 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106226732 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08669306 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086384472 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110965211 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084599981 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103574986 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085015327 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.103969221 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.085436993 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106183158 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087494312 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100485482 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089039726 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110062836 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08405335 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084083686 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102755036 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.081900973 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.107221634 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.087868032 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104590816 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089489047 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.104865332 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084025713 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.087284638 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.108538552 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084411063 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109039742 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083507521 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108670664 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081078031 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11132489 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082000577 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.106427669 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083935542 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.078180768 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106953714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.085282834 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105310105 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087036912 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10873742 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080778983 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.079693134 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.104165648 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083944918 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11267879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089607236 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105295906 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.084893054 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10117957 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079375116 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10772605 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.080532661 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082590701 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105591771 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087849786 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105395918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.082282748 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10582742 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091064561 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10868709 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087785167 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.078450804 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109539713 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.086836347 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106238272 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082379433 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.1033775 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087663049 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108101917 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.083356355 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101159566 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092559242 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105983065 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089026122 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.082352548 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104515584 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.081073702 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.101898983 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.088063308 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104239699 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08939972 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104826784 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086760332 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112937991 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08257946 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.081078451 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113582505 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085512771 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110885731 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080009116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103980567 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088287102 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10919667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081586413 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082196533 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102237791 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.083883629 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102691989 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.080524378 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113961565 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091481296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106378756 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085082166 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103900946 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08230614 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080528744 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.103234604 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088106659 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105374685 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092910535 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102166216 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081994403 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080017206 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.1087834 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084731091 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107252159 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079128349 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101324023 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081559036 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083422626 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111947417 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084141229 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.108651073 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08503906 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106390011 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083434225 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.113629766 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.078888114 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107745976 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09479394 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108468235 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08386129 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109014415 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091723451 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086953744 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103680276 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087500792 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106471623 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.082359031 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109718533 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08874158 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.1191561 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086183841 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.10296411 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085703515 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105804756 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083508159 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090032793 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111644643 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.087655789 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109316068 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.083310474 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111440461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085033325 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110095836 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.085424938 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106172043 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.086080186 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082156781 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106298666 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.080167862 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110419619 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.088644543 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107549038 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.090120447 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.080365804 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115643532 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111774418 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.087998673 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077845935 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103934693 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.081886223 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.102999222 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.09060299 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079084499 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.107700589 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083802373 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106963758 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.083299013 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109707033 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.084617517 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108965016 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087385567 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.075579397 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106159208 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084945511 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104413457 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081338236 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107679956 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.089857408 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088904313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114919617 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.082053196 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105754504 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.083665771 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105051674 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08144263 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110565129 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086435416 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085672488 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105135791 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086014902 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110449141 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085775154 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109871872 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089826118 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.1066565 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.091716151 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111154578 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080352968 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.078742813 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111572928 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.083278297 seconds)
  done (took 56.776145808 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125132498 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110930091 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077440084 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100374766 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125450071 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082669858 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076489664 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104936922 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081837857 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113354034 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077631083 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09952316 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.120344264 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106214066 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124555096 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114238483 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07756821 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104244242 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078119343 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102833384 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.099905072 seconds)
  done (took 2.988871978 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103258339 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118326907 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09343391 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123448753 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111523197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096433896 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116497253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118122122 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100170621 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112879235 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120891896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096088711 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112817668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111070561 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09091975 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114785997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100661273 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111183204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118064659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095187286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115222349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115732961 seconds)
  done (took 3.282178016 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089643767 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.085001162 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.109168358 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076920939 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.107502348 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.078159285 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.112726314 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.081209041 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.090577894 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104202391 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081020276 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102461753 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.087612035 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.076578991 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104114779 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.08000805 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15780008 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.113334725 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.086183484 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110812903 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081010064 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106473984 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.081478466 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080347866 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103706066 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.096482861 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11024955 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086154952 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.108107804 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082201518 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.085893929 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.10266441 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.083459903 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10473023 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082134003 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.08017857 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.109028901 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085304916 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.10248612 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.083173739 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.10428631 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082738161 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086590727 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106392037 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083328866 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101823452 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.085546462 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085130489 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100443381 seconds)
  done (took 5.509530687 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.115453026 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.136072718 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.109647679 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14957456 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123152051 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096582155 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.110030708 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.148054387 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.081713156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083806907 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.128291319 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123639038 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.085421496 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.116206579 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110830863 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087699774 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.109640597 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082418825 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113735313 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08277082 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114161783 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090023293 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.123334397 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121358867 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091134398 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108062218 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.082592195 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11499432 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11916857 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094598031 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.115049626 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094461143 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123930028 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.10519382 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08310208 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.110328553 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.104953407 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109278569 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089127613 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103223741 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088528086 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.114452419 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.089383962 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.126048459 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10883948 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088930476 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108490559 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079939976 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120899567 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089770545 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11971609 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.123161037 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091184422 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.110216076 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092615899 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.123631691 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.108736985 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.086006671 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11191549 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.097889099 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103275337 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091556 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122159938 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087924482 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.120017423 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12273003 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.087690514 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113527219 seconds)
  done (took 8.259668989 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113374854 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.114724154 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103729616 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126234921 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1143035 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.092256078 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114261147 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091520098 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114529277 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11984106 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093111817 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163496495 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088515262 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121428334 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.113971254 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092760511 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115374324 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092910928 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114993268 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091446275 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114845098 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1260195 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092897721 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126171678 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126796679 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.089822082 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.115312551 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.091988606 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126439279 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11301151 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106052454 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.115375143 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09099677 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.126511719 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127642947 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091684564 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109706355 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090984476 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.115874821 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112989841 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090517568 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12602833 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091941601 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.112355872 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092608923 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115134679 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126535586 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.104904791 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121271353 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.121955701 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092729771 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.125427686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091959485 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.115429949 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126779525 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.134737299 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.103135298 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.125829873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114241239 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104265373 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12529654 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.134549185 seconds)
  done (took 7.794066904 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113224645 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.122062707 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127019406 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.078873573 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.104205457 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.092066185 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103524505 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.082227938 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119147156 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.098741991 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123450215 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.112314257 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095801308 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124114459 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.091072059 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118638237 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114551053 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091619554 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121592606 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112809078 seconds)
  done (took 3.043046456 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090471875 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127016047 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084900003 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113352075 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08705529 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.113938563 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.086843633 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10948584 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084918946 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109002873 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097945591 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.12005079 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084204779 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114002478 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118373705 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091959122 seconds)
  done (took 2.529373477 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101849894 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.128857675 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.107502716 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.114183753 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.080974283 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.112313946 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086472688 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102491529 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080369701 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124309994 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.090443371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113629448 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.08769577 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.104964617 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.086322311 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.114971888 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.081209845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.087277685 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10998834 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.10819505 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.112617699 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086461459 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111940948 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.085479649 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111109453 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.088541475 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.115073696 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.082029039 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105637529 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.086718167 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.109928641 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.09197001 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.104051806 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088876486 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106206134 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.081835539 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109707684 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08848376 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.113225664 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.088338241 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081248323 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.109939088 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086127736 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.109501105 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081276789 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.111184664 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080477706 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113645293 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.086956899 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.109208169 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.087632897 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114708931 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.092427228 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117667694 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.094837795 seconds)
  done (took 6.372664422 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096794367 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111205554 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080306568 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080853869 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.11097686 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.086963007 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111703976 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086867635 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109984417 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081468434 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109452042 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08897706 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109656663 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089362183 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108727087 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090432366 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079059623 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109158239 seconds)
  done (took 2.648618133 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.087773647 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083872857 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.115592216 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.083396684 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.107992441 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086426204 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102713981 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.083437722 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082083373 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108453416 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083763411 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.109948864 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082623692 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.109769714 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084895511 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10692637 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.087980133 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081884401 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.108202475 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08011652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10950727 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083059526 seconds)
  done (took 2.976925882 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119022239 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127704798 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092847651 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.215076627 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.127859111 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.110435707 seconds)
  done (took 1.701500543 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106167296 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146107113 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085438363 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110501413 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097952317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113810622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089935925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112809521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125366079 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102309533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112636219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126037213 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102909641 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124718691 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121447425 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098228458 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112891812 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089021755 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110102745 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134900071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089890965 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127065649 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112154978 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091310045 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111890084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100762298 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126589361 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12601397 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088636472 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127206255 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122204786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089721334 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127080009 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125700214 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087377226 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126554375 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088535266 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135295378 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122487296 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12274393 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087158044 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12216427 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103151137 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120672858 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126970832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089005635 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12089408 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111971317 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090940114 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14193508 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121563301 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101557726 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122140696 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126682814 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126911167 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140643169 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105034399 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123896587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121197657 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102467481 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12432416 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122433273 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100625005 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126420103 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121525319 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12381816 seconds)
  done (took 8.412053667 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122310319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107494702 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089252166 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127562709 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124899551 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089401305 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113528033 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089761725 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113436543 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085564036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.159926498 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113876632 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124742312 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101960127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113676427 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089002646 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114058531 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124379734 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087045495 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141972278 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114202604 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101270851 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126002321 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124765154 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126784693 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098829983 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114540905 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08956863 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113971704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089330473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122189024 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113091493 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101880702 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110352814 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12467428 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09098002 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11350353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097924567 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11366661 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099129043 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125689694 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135412797 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11227951 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091078299 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126486282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088791208 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114839391 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085798832 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114254895 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086060684 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126197459 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127386795 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127129942 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101812888 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114247392 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112845054 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091485775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114087799 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.090875761 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122296777 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124065153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091728884 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142366158 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112224725 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090995349 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125589612 seconds)
  done (took 8.231436856 seconds)
done (took 155.695248289 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098341713 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142202675 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10029153 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171173718 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.082300043 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.117388535 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137333998 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.095885143 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.110100068 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086181939 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109151551 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088381977 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.149710715 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107115191 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.085519399 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.111379416 seconds)
  done (took 2.704389679 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.17971121 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.302120202 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104965981 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106776541 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.091144585 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.084891675 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.108729459 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.093849888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110695793 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085275029 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.084372212 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.110498784 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084673837 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.109310384 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087050967 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107956731 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.086351344 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.084387931 seconds)
  done (took 2.943991265 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109466747 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.148164932 seconds)
  done (took 1.182108381 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.11685196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177178198 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272603969 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156735606 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.138172688 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099994512 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.160044415 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130014553 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.211615251 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132364033 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110374692 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117377459 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142033348 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097095986 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.118127151 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.093344411 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143900668 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093148544 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11778336 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.093455412 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.142942178 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084701962 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.121423472 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092137695 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.191484633 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133986026 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108132628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086080237 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.092413179 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.118647977 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.091505993 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12364445 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.132028242 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.153327507 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.097772549 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177722017 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.094899138 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114136925 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.095671263 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092768509 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121881502 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11885051 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101750833 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.116357512 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085606648 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.115783418 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.086364712 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085042766 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11790969 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09388664 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.119268277 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091842467 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.394559568 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.090631927 seconds)
  done (took 7.725067724 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.798059084 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15588476 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091673393 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874368433 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.140195835 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128772988 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.766397792 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.132342714 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2350805 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.812282726 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.105857569 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126548491 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230780023 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238372337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.950405099 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.286550582 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.669826234 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124435904 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115300198 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.148983682 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119784127 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136845359 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107576966 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.426441025 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.112071807 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090694182 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117918428 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.098541945 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158938949 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.109226437 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088011171 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194069705 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.243413969 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.176143047 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110088675 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087577967 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112217293 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.168863499 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267485415 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191327009 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.173940526 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.084802134 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113928282 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099451131 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130971865 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107256509 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157711969 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.16900732 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.165575159 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115046267 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.099542761 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121503168 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099412172 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.159305696 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.106935328 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319544205 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.287471794 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10797016 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116365052 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101992789 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268444989 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.089787018 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229521227 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136870768 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190363313 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.1093181 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.759269547 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.16011702 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112040556 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096042482 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119288582 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09393915 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124064233 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168648516 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.405384411 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101886223 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115793351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08826215 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231350593 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.089009251 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111470011 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162804439 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091933974 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120111314 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.10217237 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123219357 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169060511 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.232594589 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124419022 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117941031 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091743045 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123238233 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.0907988 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215442987 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221648565 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.158282535 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213480891 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125618385 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164973679 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.166854386 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124240529 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171093604 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118846687 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.104775138 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12477782 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216340884 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.117312844 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.115120135 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094389209 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120128737 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146191136 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.095252401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119647537 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168689359 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462819678 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167946903 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111280045 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.094847812 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121587269 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165196774 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096057897 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262403544 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117281348 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164662486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096515904 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111732855 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098280582 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.162013267 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12353662 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120797936 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.1008927 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12124765 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.239663046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223428092 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10303564 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246662534 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182823688 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.098539784 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171772969 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121468262 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169648036 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121123063 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098273116 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114302448 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754846459 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121510733 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.091465018 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11350421 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182339261 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08505914 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.110167926 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08631847 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084497385 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77925634 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.110511826 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085340548 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.089022021 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122686715 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.096663787 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121404093 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093394795 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.188224866 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.207965933 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119618146 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118342902 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087909429 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162817714 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115785025 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.092555993 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090961707 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.116853264 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.097543914 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.118504324 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091740383 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1937306 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.156745879 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.197333215 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.595357556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.085885859 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.113744234 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228206512 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086610724 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295279621 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094408455 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226461182 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163680842 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.111625734 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.289370028 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.191399061 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.164466475 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.11896922 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167232381 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08592539 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.12236911 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.170752136 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114878184 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098376216 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162178155 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.129293471 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100733128 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.995627192 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108038691 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227734086 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088075121 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17090653 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117566098 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099906583 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300117908 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109385737 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.105335784 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.160345991 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118881536 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.091445801 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.882507183 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.089084608 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123572918 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098821263 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.22441565 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162171559 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118816999 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.094184171 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12086783 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16253169 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213812775 seconds)
  done (took 43.253951301 seconds)
done (took 58.726417537 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.268350187 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.215885467 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.27090571 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166135993 seconds)
  done (took 1.970439132 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176265435 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.129850773 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.147644464 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083839414 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.156797052 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.109223553 seconds)
  done (took 1.754297695 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.368925842 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.274775908 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.217654785 seconds)
  done (took 1.809794436 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253430874 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274724084 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.329263117 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.40180346 seconds)
  done (took 2.310838706 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.209420523 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.102526519 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.128602952 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.117043433 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.173526249 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207817181 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143886903 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152773546 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.108217018 seconds)
  done (took 2.337459781 seconds)
done (took 11.133991847 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.269840392 seconds)
    (2/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.328940666 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133083956 seconds)
    (4/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.269700124 seconds)
    (5/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.130298521 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.229688426 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.151317899 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217136537 seconds)
    (9/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.134661759 seconds)
    (10/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.21545342 seconds)
    (11/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.247768397 seconds)
    (12/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.232977901 seconds)
    (13/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.19894337 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.094060168 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.101142089 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.127344504 seconds)
    (17/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.19287795 seconds)
    (18/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115296319 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120339346 seconds)
    (20/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.240401251 seconds)
    (21/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102314178 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.216248951 seconds)
    (23/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.088639195 seconds)
    (24/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126918902 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.210504594 seconds)
    (26/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.197799113 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.217361716 seconds)
    (28/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.126532037 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.238345314 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101257362 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.198643911 seconds)
    (32/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.089724894 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.179406314 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.13951199 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096290502 seconds)
    (36/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.124810378 seconds)
    (37/286) benchmarking ("sort", BigInt, true)...
    done (took 0.257645375 seconds)
    (38/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.106723066 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118155851 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.114175513 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.152339703 seconds)
    (42/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.218264215 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.117073406 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.196620876 seconds)
    (45/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096271255 seconds)
    (46/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.126434361 seconds)
    (47/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.077524777 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227463954 seconds)
    (49/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.121330319 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158950501 seconds)
    (51/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.122719932 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092895233 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.199951836 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093892303 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.112073924 seconds)
    (56/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.074259621 seconds)
    (57/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.099746597 seconds)
    (58/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.169109778 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.114394248 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102581984 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111237476 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.202113108 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.193311832 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.139194233 seconds)
    (65/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.090232201 seconds)
    (66/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.185219076 seconds)
    (67/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.137709936 seconds)
    (68/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104127166 seconds)
    (69/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.171229352 seconds)
    (70/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.085972881 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194717285 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.205856036 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.220618571 seconds)
    (74/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.124691451 seconds)
    (75/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086526957 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.112488299 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.116437821 seconds)
    (78/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.100946683 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089328601 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133079819 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.176423197 seconds)
    (82/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186098433 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141544596 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.089065414 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.073093755 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.115263039 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089896558 seconds)
    (88/286) benchmarking ("sort", Float32, false)...
    done (took 0.185503376 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.168725096 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.119452218 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123257283 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11474996 seconds)
    (93/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.185385495 seconds)
    (94/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.185036325 seconds)
    (95/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092632513 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.185949665 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095144441 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120376008 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.077425427 seconds)
    (100/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092423628 seconds)
    (101/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.168379725 seconds)
    (102/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.09750129 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.11402958 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102270219 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.104568839 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143757325 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.115327177 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.083614785 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 0.194018252 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.122105056 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103108329 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.119925836 seconds)
    (113/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.094316674 seconds)
    (114/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.135572003 seconds)
    (115/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.182996896 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.119448609 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.07770452 seconds)
    (118/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.101383497 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076774233 seconds)
    (120/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075125782 seconds)
    (121/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.159559342 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.190356829 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096306554 seconds)
    (124/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.171532394 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.11402701 seconds)
    (126/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.114721307 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091331911 seconds)
    (128/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085283854 seconds)
    (129/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.111147309 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086941942 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.120197546 seconds)
    (132/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.133273393 seconds)
    (133/286) benchmarking ("sort", Int8, true)...
    done (took 0.234021705 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119512317 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088398595 seconds)
    (136/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.186834253 seconds)
    (137/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.078166318 seconds)
    (138/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.193663674 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.097572355 seconds)
    (140/286) benchmarking ("sort", Float32, true)...
    done (took 0.243932535 seconds)
    (141/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094161439 seconds)
    (142/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.102230108 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.157546196 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.102316012 seconds)
    (145/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.087618693 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11356688 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.07607902 seconds)
    (148/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.074696148 seconds)
    (149/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.115474941 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194873089 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.097871103 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.076395527 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.116701637 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.09756198 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.113093582 seconds)
    (156/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.07581694 seconds)
    (157/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.178815992 seconds)
    (158/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157154969 seconds)
    (159/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.162520674 seconds)
    (160/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.169596798 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087486232 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.077469503 seconds)
    (163/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.10237851 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093489818 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.120119456 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.117735434 seconds)
    (167/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.119371402 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.099500474 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.099117977 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.121012323 seconds)
    (171/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098134471 seconds)
    (172/286) benchmarking ("sort", Float64, false)...
    done (took 0.18353704 seconds)
    (173/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075053778 seconds)
    (174/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.187205439 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.074773527 seconds)
    (176/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.113726119 seconds)
    (177/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093827436 seconds)
    (178/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.111966586 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.099910322 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089326481 seconds)
    (181/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.173806362 seconds)
    (182/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140387409 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.236409833 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113513781 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085360684 seconds)
    (186/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.11165378 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088555919 seconds)
    (188/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185377825 seconds)
    (189/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086377572 seconds)
    (190/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.101981743 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.116634143 seconds)
    (192/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.103988459 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078775729 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095967114 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125130805 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095176615 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 0.233077071 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.130751555 seconds)
    (199/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.075901621 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.13901147 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086886644 seconds)
    (202/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.159312216 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.086410097 seconds)
    (204/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083952455 seconds)
    (205/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.125331537 seconds)
    (206/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.210678907 seconds)
    (207/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.116173533 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.115690565 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087859262 seconds)
    (210/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.168798518 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086246134 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.139382263 seconds)
    (213/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.077120129 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.088001194 seconds)
    (215/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.123278107 seconds)
    (216/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.07515821 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.113212031 seconds)
    (218/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089814386 seconds)
    (219/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.083720781 seconds)
    (220/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.125128986 seconds)
    (221/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.078376811 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112981964 seconds)
    (223/286) benchmarking ("sort", Int8, false)...
    done (took 0.202969818 seconds)
    (224/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.086581775 seconds)
    (225/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093496768 seconds)
    (226/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.121145144 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0881196 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.107539738 seconds)
    (229/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.096466845 seconds)
    (230/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077220887 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.106753385 seconds)
    (232/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.089339184 seconds)
    (233/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.171876647 seconds)
    (234/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.075939414 seconds)
    (235/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.077455557 seconds)
    (236/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.103063159 seconds)
    (237/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.078260366 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.115787114 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113492516 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.114496025 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.090712554 seconds)
    (242/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.078521597 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.119827735 seconds)
    (244/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.076436558 seconds)
    (245/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.115244783 seconds)
    (246/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.078720622 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093211386 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.105587164 seconds)
    (249/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.089461762 seconds)
    (250/286) benchmarking ("sort", Float64, true)...
    done (took 0.244086272 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095501154 seconds)
    (252/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.114742246 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078701977 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.106166912 seconds)
    (255/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088682695 seconds)
    (256/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090935266 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.12068702 seconds)
    (258/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.076300373 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.103407584 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.087640478 seconds)
    (261/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.076177044 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.11638364 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.076846658 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094747144 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114536677 seconds)
    (266/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.075941534 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112591986 seconds)
    (268/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.076272074 seconds)
    (269/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087323272 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.112931557 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096043984 seconds)
    (272/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.116115214 seconds)
    (273/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.09061869 seconds)
    (274/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.076663643 seconds)
    (275/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.115316808 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.086156184 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113455024 seconds)
    (278/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.120851451 seconds)
    (279/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.084014018 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.195755791 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.132889922 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094347749 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.113268582 seconds)
    (284/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.090465577 seconds)
    (285/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.076752246 seconds)
    (286/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.102717427 seconds)
  done (took 37.418964626 seconds)
done (took 38.378047254 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096338856 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15794825 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098750162 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.143573972 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.102809491 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.128907959 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.097570996 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09883441 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12903247 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.102000006 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.12728197 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.078253957 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.125812862 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.099180587 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.126017962 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120622685 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127377446 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.095414595 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.116568256 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.088495459 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.090599991 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114672861 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.089794617 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.103738128 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10072117 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.095503359 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.121352246 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.099376655 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.11520732 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.088189467 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086177443 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.123009591 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086876995 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.128219549 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.097700596 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117293635 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.101229006 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.097159035 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11724032 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087979502 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.12293419 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088389293 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.120931175 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09702806 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.088642017 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.113613568 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.091577336 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128482172 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121580959 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.119862239 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.097187879 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.098185499 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126454204 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.094176496 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.115227638 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.091602902 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.113394082 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.122273281 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.117314932 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095506749 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.095247628 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.123159193 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.087272324 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.116912546 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.092311492 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.124539311 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.101043491 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.086951737 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.125059971 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093729363 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.113986085 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.092228249 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.086513019 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.115547484 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.0980186 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.125926785 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.087418408 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.088242292 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.123625874 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093394043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.114430628 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092299516 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.115259311 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.090727595 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091120301 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105397149 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.087753814 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093551709 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.114639853 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.091323592 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.120931079 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094733871 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114810819 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.101137534 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.087185513 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.114242724 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.088060409 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113635809 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.090929018 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.087541715 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.115448488 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092232266 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.123237367 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.091066375 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.089390846 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127435665 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088420081 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.121189631 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088330695 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086762475 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.131942822 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099158659 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.115038161 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094549877 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086771752 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118151991 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086808308 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.114354077 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.08835112 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087327761 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11789038 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.088229854 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117538669 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.090718922 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.101397535 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.11619515 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.087660134 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117117882 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089143065 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093676176 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116494653 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087615543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.116481374 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.087134989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091263345 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.116666831 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.090023492 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.117158005 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.092406482 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089036391 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120258393 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092138231 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116702994 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.088100747 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.086124189 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.110188627 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093915993 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.116698492 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.090716324 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087247137 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.117561991 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.088351715 seconds)
done (took 16.853541958 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.084257103 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190279132 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.152352936 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.124290351 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13709645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.09030649 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.126254456 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12123619 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.11926447 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.146943935 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.113040738 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135341197 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.12920673 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.114969445 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.08872513 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091480074 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.117457226 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.104044668 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.156060008 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135957756 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125551374 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.114598425 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.119466738 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.141892233 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.097631546 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135266018 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088885736 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120095105 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.092553174 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1414263 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110650632 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.119164058 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.090611026 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.137804374 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.107486787 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.124012464 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089885506 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095415553 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.115782278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.089046816 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140913672 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.111177272 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.122517698 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.094907496 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.120379616 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.091602103 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.116757266 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098889094 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12633469 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.094670766 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129669453 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.120550807 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119030432 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.099006523 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.133020832 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100671473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.12498475 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.092045399 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088302604 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118641685 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.087925922 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118102822 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.105296898 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141705014 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09249195 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127288138 seconds)
  done (took 8.656175563 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.100516004 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140432903 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107229491 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.134285788 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.089396121 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.089027556 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.117587772 seconds)
  done (took 1.795430625 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.084839219 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111930239 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.14404936 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.115299044 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.141412533 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143077185 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096533023 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089147036 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.137528379 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090896846 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.143948043 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.130993966 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.118172045 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.097658041 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.146879626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089338095 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145005642 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089653848 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120694343 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.11858234 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11883368 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.108750452 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11998626 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091173992 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108038281 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.118100813 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.166156709 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09690602 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087510201 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120745822 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088388328 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.159157864 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108822776 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126665922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089641017 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137654198 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.108103973 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114087951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.107967429 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122526062 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.109886037 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090030019 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119302944 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088599631 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.122272721 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.105654554 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.093195692 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.119384349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092383167 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.14285208 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.091102068 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.135532019 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.090899138 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094023061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.120774474 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093812188 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.127755948 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.092262017 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.144493427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088845391 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.14025771 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110946907 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.136823887 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11131861 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118370132 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110259174 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106933482 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.121148693 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091803332 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.120870546 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.111526118 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114758268 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.093929889 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.103648909 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120204154 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.117421211 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.144142424 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091572117 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129217715 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091138729 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.118378583 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091532618 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.116412822 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.123206321 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090366294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122585287 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093801695 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115278399 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090494826 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09541669 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116205036 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092405896 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.120570356 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.091744116 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.093175701 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.137823166 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.091103775 seconds)
  done (took 11.929532426 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.08829084 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.09314956 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.123536981 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.093416258 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.118803042 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.093871249 seconds)
  done (took 1.642506246 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114107141 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118579707 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.106110724 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.124709191 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.132688065 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.143348241 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.116665142 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128282491 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108786968 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130677009 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.116666971 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.144793183 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.148393728 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097912694 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.14208805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097126847 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.116104409 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126715918 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.101994871 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124594775 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.10826088 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.1246959 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096079969 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.138203766 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.100269697 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.12521288 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.097632507 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129405192 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.102091229 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.127947208 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09618414 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.128070026 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097678822 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128928496 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.117201118 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124751637 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096271513 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130668774 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099036085 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12828954 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.118428224 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123544889 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.102866309 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.128894565 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.101058869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.124708418 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.103041842 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.123170046 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.116743376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130900584 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.103307862 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121373184 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101182878 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.129702612 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.097957218 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.126267816 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.103746015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.142321459 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.096201107 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122651689 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.089480462 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120151132 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095219465 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12103682 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.095444503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122845235 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.093074878 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.117615707 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091513943 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.089077154 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.123339004 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.086577437 seconds)
  done (took 9.334013726 seconds)
done (took 34.372309909 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.693893156 seconds)
  done (took 1.718116387 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.906426289 seconds)
  done (took 1.933273746 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.424209886 seconds)
  done (took 18.479359843 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.468321494 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.562913657 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.951307504 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.161873105 seconds)
  done (took 3.173459402 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.059334568 seconds)
  done (took 2.109468645 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286828274 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.241823164 seconds)
  done (took 1.562250248 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.817935024 seconds)
  done (took 1.861304206 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.44672471 seconds)
  done (took 2.484179723 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326189021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.155431341 seconds)
  done (took 1.530916962 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.563437035 seconds)
  done (took 1.610462546 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.239463816 seconds)
  done (took 16.287168913 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.239761072 seconds)
  done (took 1.295977754 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.288813018 seconds)
  done (took 1.334278566 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.677114541 seconds)
  done (took 4.721736811 seconds)
done (took 61.139865346 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096024094 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.097512321 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124870034 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.094663835 seconds)
  done (took 1.453010822 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100905868 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.08996329 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.12629206 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.093627493 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.133163629 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.093695836 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.128213554 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.174170512 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.09871025 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.098373806 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.124065285 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093004312 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.123670962 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.096101916 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117691 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.098650132 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.129625429 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.095598369 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12423907 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097275776 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115565453 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094963672 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120631659 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091908282 seconds)
  done (took 3.713868776 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097332786 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089631032 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.120474926 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.095478216 seconds)
  done (took 1.457709232 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.097168918 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100926306 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.128272168 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.095064881 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130010569 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.100057762 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11520787 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.086609149 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116247303 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095406065 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.110579837 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110471872 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127807247 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.095722226 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.122483524 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.089973835 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.086048351 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.128191765 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.094460571 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122633248 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.088152112 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121844685 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08674351 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.12954691 seconds)
  done (took 3.636250739 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166778702 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.124964529 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.108192951 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.118123504 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129519968 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138662616 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083418919 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138501012 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083044036 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126637392 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.089848037 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.162126721 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.096814963 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.110672759 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084280635 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.082867395 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.123344905 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.099082604 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.115802881 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096444492 seconds)
  done (took 3.331423428 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.09502958 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087147991 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111108493 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088796988 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123200047 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.092191198 seconds)
  done (took 1.658708346 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093276342 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.084646366 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116174158 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.091458998 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.121808095 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085373417 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.086471734 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115206932 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090355325 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115049479 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088212069 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.084190519 seconds)
  done (took 2.233810029 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.54476145 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.123251759 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.114465924 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.085031783 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09440675 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.113313039 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.101183414 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113510188 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.113341954 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.112940384 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.085934648 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.086951468 seconds)
  done (took 2.75067764 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207004588 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098490554 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261160586 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.34866101 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160296984 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170600772 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275615526 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165958299 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.185356364 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135381683 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19632866 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128082478 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152365119 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178721097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139904518 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.127664285 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171113747 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223559455 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122187395 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206887311 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16248944 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164723175 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176628348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152243291 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133894788 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13014221 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.124632983 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098920203 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168803793 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166919706 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197192378 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120276436 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138281011 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19601631 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232077971 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17719609 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281135785 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10562886 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178706191 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166492777 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22187201 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140358832 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191090991 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15274654 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099789101 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204861411 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128271269 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17762722 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130556771 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137891029 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178973208 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173404534 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.178046388 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107184925 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323070448 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121231788 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.144631453 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180189079 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183546437 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187792549 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165332426 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.116333849 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18070027 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181418051 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176630808 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114673845 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.163401304 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123951028 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170892196 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.191353766 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178977841 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167572624 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.210412722 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106766633 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161310211 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166209741 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15016047 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175762576 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130287677 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.119596741 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145850835 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108317882 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126480934 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.162411832 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122320557 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200885239 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133908953 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141485009 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226809886 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126955495 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159023393 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161650476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16333366 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1445487 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08742443 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144298678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.149540584 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124532128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131428994 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154760288 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111805679 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.126412835 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149126565 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09296642 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157215841 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.126792333 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134007064 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162362185 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12342151 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160470861 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119539342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149457316 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166886707 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181987388 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130946939 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103143242 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190459442 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155605642 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.130954773 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170721966 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181335038 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.125703956 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136518557 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163962458 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19036962 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140902844 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185217271 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110078182 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13226518 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138794694 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156582882 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127163677 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156158579 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128582996 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123741603 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214091096 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.094548891 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133282183 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170815529 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105395806 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132625142 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112735621 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135112961 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.10477344 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139131088 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133669093 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151668967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129651508 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150733129 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152110737 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139538946 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187491506 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129524295 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.121021362 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147377967 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.089938383 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173826652 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180017609 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127985781 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193080726 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.166132007 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192925613 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161725964 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130141603 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174580128 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098385898 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.116599221 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162508073 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130871047 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158659207 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.178944674 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217310733 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.166366151 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.123588081 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145979382 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161727809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162012984 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153427215 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.10734891 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159007313 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156454638 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.091455171 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122546471 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.123704895 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113192056 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12929422 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103820549 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181203744 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162350095 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212369199 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13260687 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141711527 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179986619 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.125895669 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162433801 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.168105903 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109401344 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.180287896 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178896702 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164501023 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141369967 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170384071 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089611517 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12067463 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.103794587 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162673212 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130929011 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104551695 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142104275 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177789969 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169577864 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148075048 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199424846 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164960753 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190164989 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118850953 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.13818588 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165099513 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155713245 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.149855863 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131891751 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.147481874 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172407597 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112246644 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183989364 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160638091 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165454074 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2194424 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.120415099 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129038286 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118311186 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161992634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138672581 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163294169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142217498 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106965546 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149863322 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.095304706 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124184288 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170304806 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142811104 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175670778 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114831661 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192397172 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097161975 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140475917 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156068375 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116614412 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113603228 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164261151 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183358761 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111902093 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155665019 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168337102 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128897828 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.305506819 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187231068 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181330898 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133218798 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112348248 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160077128 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159673096 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161834983 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178516791 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120282243 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181122393 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156144658 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137072034 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108977738 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1474904 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146795699 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.112687409 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.132256922 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.150713659 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.106245957 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17499194 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140915494 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156224535 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163356612 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.117699311 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.141946411 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138993294 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196413406 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127137144 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174162366 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.147123179 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.162678403 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192562048 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122814179 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098524401 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.126545153 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175599428 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10298014 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157252128 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.180986461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195380249 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157885494 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163700354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136782396 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.087525511 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157503817 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146881814 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195559376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141599153 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104865126 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210923543 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113544164 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129360906 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133675947 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.306616709 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11658532 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169860104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.111454908 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.274041706 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096948912 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128189294 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128930991 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167297468 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136451071 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.146699472 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160076676 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143296427 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158001589 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106669449 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213586213 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202836512 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166966966 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169395024 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.100605101 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155831571 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161022734 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171850138 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142714904 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105630555 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161519137 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177992168 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.184416181 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.130466698 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159757856 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132991745 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158567826 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165776519 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133143034 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194357874 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127863206 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160524048 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110136058 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122044592 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153607256 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.181535649 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103994551 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169504142 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155589896 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130582996 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096452094 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148966415 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155848769 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11101995 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124679164 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169999043 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.092414976 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160162047 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17724529 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100876151 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151146469 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143929874 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135755197 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112430759 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144216207 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133941858 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.136396043 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180362137 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128869964 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171665835 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172954022 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158347718 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155222348 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113927218 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.665112304 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.097604221 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177688209 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14509275 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181299389 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14497859 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163262308 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128657213 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147661325 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164763401 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147448963 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.226761141 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133537353 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156115131 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130160694 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142680916 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111632881 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.130497575 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147905791 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130935424 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139503336 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.13469827 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154577101 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114401328 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131059305 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107300606 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181126143 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147464254 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174889404 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176935334 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105458123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164944326 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16572897 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128875054 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157325487 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169457544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109345301 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148783539 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.130034828 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103445724 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177584027 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12172277 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127054626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15911135 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161692299 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16236426 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.131021367 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128468829 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141088717 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158006249 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126262479 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.123250328 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155155156 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128775142 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.096474063 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153679805 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150529594 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.117941518 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125417464 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.135081847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178247432 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.120441581 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102499077 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.280331993 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155805703 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187301086 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.141820738 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102087278 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141525236 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145112754 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.14845499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129057206 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127547073 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100190219 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.129001147 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162234624 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112722728 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156022828 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182501324 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159500053 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19539729 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.103977206 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276317835 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137402376 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150517881 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09367376 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.127171133 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111422988 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132771611 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111927481 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215361087 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179173748 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.115451948 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132585444 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096850654 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122547814 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101861885 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160547043 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15222773 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153969113 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111809304 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.114053088 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112654022 seconds)
  done (took 73.832918293 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161497441 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132809941 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148057175 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202088115 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166331779 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252619737 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210471783 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236466516 seconds)
  done (took 2.660557299 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.089803447 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141832355 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.128152213 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133501346 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.114725377 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.088396729 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.327472226 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.136962124 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.086892745 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.145801855 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131114066 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115932517 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.482021257 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.123440143 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.086731362 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.112430541 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115437083 seconds)
  done (took 3.701227543 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.262886457 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.48835052 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.098666108 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195190966 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180820186 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.091841046 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.731516859 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.093827146 seconds)
  done (took 12.2948844 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.121383327 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.120229829 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.165080911 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.168767995 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.122751429 seconds)
  done (took 1.862064806 seconds)
done (took 115.627262817 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094617921 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.095275367 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.122875661 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.097843855 seconds)
  done (took 1.554390339 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101547893 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.08086094 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.111559819 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077347441 seconds)
  done (took 1.529976981 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.189869471 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.176910527 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404041679 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07425434 seconds)
  done (took 1.663962516 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110186432 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.127616741 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.101154355 seconds)
  done (took 1.501189193 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.101875924 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.097383096 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127217534 seconds)
  done (took 1.485355802 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.100902555 seconds)
  done (took 1.253854663 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107557318 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135043631 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109157399 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135455695 seconds)
  done (took 1.6459472 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.094809618 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094210202 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137380328 seconds)
  done (took 1.480803671 seconds)
done (took 13.642497374 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103375059 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420487081 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387939131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135855376 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.695312434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.411888499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.037407465 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144247917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165782736 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094616639 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132797311 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67162216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.017453999 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.346228815 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976614755 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.368274176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.669329601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.1175139 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087433435 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116624624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.022050477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086629076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117519571 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087002818 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.700143958 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.392254476 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118401997 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.344527402 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115479673 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096730244 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.37459407 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118269069 seconds)
  done (took 16.820923587 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095539511 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180064567 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.10431149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119262065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097677369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.090847005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121679347 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089066791 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181337232 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122640148 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106072072 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08712546 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.122686598 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.087512537 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138138949 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.087336581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117769856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089068367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115788277 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09041427 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.10640188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117986131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.087753417 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117011093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.088615731 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129563975 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.08949344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087201284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118275536 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.095571913 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.120048541 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.089191831 seconds)
  done (took 4.648885402 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140469677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18617756 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106154589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.153172078 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1750304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092951009 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197111221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145098703 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153542458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.120053921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104622332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118474113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.121463154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.125099417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.107783015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118777896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088853623 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116815903 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.088607493 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11615735 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108301082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087494037 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118239316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087519507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118761362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.10389054 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.118287576 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.088922462 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116207104 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097993799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091136183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.119397064 seconds)
  done (took 4.998435526 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.092937172 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.093339768 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.1337596 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.109679518 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.126496076 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.09198345 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.120982656 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091594285 seconds)
  done (took 2.024324715 seconds)
done (took 29.650753282 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107652454 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095818595 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.13871964 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.10407055 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.130291218 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.104983346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.120388935 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101293103 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.107814224 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.129279082 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.110800918 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.124493693 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.089501308 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117692016 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10380187 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09507605 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132648856 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.0973319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135258607 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.105418828 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.125260712 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.102773703 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100776173 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133146592 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103709239 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132200845 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104323067 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.131904813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090551802 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120510234 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.103630358 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.145732454 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.098704269 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.140057507 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.094216993 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094107821 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120556632 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094141218 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133213495 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.10232335 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.130436194 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101241785 seconds)
  done (took 5.911640045 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115211445 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.156344085 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.119374455 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.090878514 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.122091247 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08271944 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.144581755 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.089578391 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.120761985 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113047439 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.113412781 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080124194 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.080618689 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.10588597 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079772062 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077435856 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.113387058 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078145696 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.107550658 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.081030193 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081519633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.105280639 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082491087 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080058417 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.107378175 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083479769 seconds)
  done (took 3.790538053 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096513847 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102483184 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140192388 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.170048652 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.12282948 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.125424584 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098147802 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.103820547 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.135780666 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.087085641 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.120582641 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.116150215 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.135623693 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.097290224 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.119978517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.103437231 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.100475392 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.120535389 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.092831344 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.138760309 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.105327427 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.127951375 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.102623978 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.128743204 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.089284079 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089500117 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.125847713 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099112807 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.125431545 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.097434741 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12369534 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.092363741 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08913388 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130213103 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.094046316 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.119296928 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107082847 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.127981087 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.097796774 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.088199979 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126454772 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.090187223 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140377044 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133302197 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.122333012 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.09474374 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121528378 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.100604153 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.118021688 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107279831 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097194418 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122642948 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.091470531 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.118765798 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090638351 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102377275 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121273499 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.089368664 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132769971 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094219902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.130335767 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.094504072 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101765426 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122428628 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09475367 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120140307 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.08966766 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086457946 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.141547273 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101012364 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.158803407 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096740849 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.12700588 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.096727177 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.127759973 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096059912 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.118584905 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104416422 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.105446017 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.129538565 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.099171869 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.120602076 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094334307 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.135432929 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091309191 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.08916714 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.120679905 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.094378641 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.11959885 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090043845 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130644265 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.089335479 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.090380891 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.132326502 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.093365502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.119865481 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.095822974 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.091717668 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.118649743 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100332883 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124282386 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.08869085 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129433122 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.089136169 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119904944 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.099204648 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.091301832 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119599582 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.092914763 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124638264 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.088959936 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120625814 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092097384 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089530059 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128283948 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.095702975 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.121495787 seconds)
  done (took 14.06529643 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.226423054 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213835986 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.187595039 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264324363 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134222197 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115903749 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21446637 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156085667 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.091100269 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157581042 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.167208804 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1812351 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169306666 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.189540669 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16968398 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.089565329 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.106221285 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16495952 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.211888773 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.288671293 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.109852508 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.127494064 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.126768704 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157994069 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.132636908 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.097527018 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.135866092 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.100823626 seconds)
  done (took 5.674899941 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105959581 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152836386 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095115688 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14104967 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115369747 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119897172 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.09316011 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.120061845 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102575391 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.132171494 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.088565839 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.123845744 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097170444 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.097089444 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.120518225 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.098021802 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129014478 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.090183017 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12054641 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0937821 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.098581392 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137862848 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.093562549 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.119573785 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0976935 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119286418 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.089853142 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141234383 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.087984731 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14271473 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.087285735 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128463239 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.101779832 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.121645131 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.089196203 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.091499723 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122293105 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.090729937 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.120140914 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.087632907 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.087174763 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.111687159 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.088382746 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137425007 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.095069946 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.117577343 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.095472535 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12528905 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.090816926 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.08597122 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123337571 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09249016 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122130392 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098842325 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.090842404 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121003937 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.091923098 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120013418 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096702918 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.091018792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.120532658 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095732826 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.130677485 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.093745997 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129960945 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094205156 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.086937756 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.122578473 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.093219977 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.125606542 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.092304248 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.095647662 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.118058864 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.092111215 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.122726959 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.096829727 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.091790032 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.11936601 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088479331 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122567096 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.079509528 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.088445965 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.108228374 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.092167509 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.120435573 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.08916354 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090470435 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.126430632 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135082399 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.092201277 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.097371158 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121239391 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.08830066 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121986531 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088032677 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091817466 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136676944 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.139050609 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090529569 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.086578933 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.135087112 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.09089653 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.118292368 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080122098 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.09723548 seconds)
  done (took 12.424561812 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128399034 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150565436 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094575189 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137901439 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123680844 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.162137454 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.095555863 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.127939591 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09078947 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.138102145 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090855179 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.098055538 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.121181794 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.104255406 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156386867 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.099667484 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122259049 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.103821573 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124396526 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.136218893 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.13917115 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108344828 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138662714 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.089191536 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.126347125 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105858387 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163659935 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.104143688 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134507456 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.111336683 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.13433455 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.129956804 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143960497 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101111352 seconds)
  done (took 5.341579525 seconds)
done (took 48.378043126 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.262741738 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.512964867 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.254717611 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.201303071 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.290739403 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.278318685 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.264766487 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.268541346 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.75839485 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.257175223 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.518953776 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.998660618 seconds)
done (took 60.057530203 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.318432751 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.416825298 seconds)
    (2/2) benchmarking "String"...
    done (took 1.547966708 seconds)
  done (took 4.151199064 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.813453043 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.231569946 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.518012494 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.25527411 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.256789966 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.542064101 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.147991538 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.739083435 seconds)
  done (took 28.877707036 seconds)
done (took 43.348751718 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.290372249 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.307512015 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.29965273 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.245008953 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.373241902 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.283825644 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.660438996 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.317416707 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.2955595 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.248273599 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.256489832 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.271508017 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.261351878 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.647946685 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.26791248 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.257489774 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.287304139 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.76487189 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.679825598 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.26959385 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.27707312 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.311540216 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.27790447 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.259489644 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.325104077 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.257863232 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.263958875 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.25763697 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.038729144 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.263552728 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.282848795 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.746337617 seconds)
  done (took 193.035680643 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.258067806 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.196990648 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.298004607 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.28496277 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.694744486 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.461265703 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.394081655 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.778708701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.284144116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.286084983 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.440360506 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.263311124 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.517125109 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23624465 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.288469583 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.332876353 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.553948258 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.521586277 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.301611285 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.417121122 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.280052348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.354872216 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.290911689 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.403548835 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.304860412 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.363574104 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.269520429 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.290869118 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.453794875 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.481513398 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.286235835 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.277066783 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.921758157 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.113608462 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.2825213 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.29018162 seconds)
  done (took 151.663968493 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.259562804 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.259587429 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.260235773 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.294396561 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.260219178 seconds)
    (6/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.259920279 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.865262749 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855950435 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.79364646 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.455551874 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.744917852 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.547262486 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.260163915 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.357055897 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.274129684 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.266155691 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.276643989 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.288083655 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.26223337 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259974133 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873781123 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.27791621 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.425666162 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.442348342 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.280260278 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296193108 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.663586942 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.261785494 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295763608 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.599654222 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.315142287 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.261822988 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.683000154 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.258286433 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.382208981 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.263208768 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296718773 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.262718834 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.545824717 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.261627035 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.262320384 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.265085186 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979089508 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.266468633 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.870045081 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.268366314 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.23666869 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.262730378 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.262717819 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.511068335 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.003509077 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.268498707 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.263003619 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.265096452 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.264027963 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.262865593 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.263322492 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.29618638 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.442411001 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.366148074 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.264331604 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.267512557 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297949773 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265073953 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.298185742 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.269930653 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.443289277 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.323763965 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.368595951 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.876098751 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.270732073 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.365882325 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388377905 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.265689721 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.264900096 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.265466566 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.265440713 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.377864187 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.265459425 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.700226518 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.447226208 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.285444441 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.750296234 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.370174756 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.266694662 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.711939653 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.270593381 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.265406291 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.048760684 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.264897321 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36424239 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.265024126 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.265994364 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.265824829 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.702503753 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859212905 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.570458509 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.272533663 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.814286162 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.272683628 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.711226929 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.850636378 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.266223149 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.95654858 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.268591372 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.381175987 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.448287893 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.285686839 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.266095397 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.755528991 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.272283473 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.322351871 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.272275958 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.666742801 seconds)
  done (took 374.288015109 seconds)
done (took 720.174417579 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.893768228 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.885641819 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.000909905 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.87533277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.836751801 seconds)
  done (took 10.689582619 seconds)
done (took 11.886164326 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.472394748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.479890816 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.338867271 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.475131107 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307226238 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493064297 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.455745003 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293286067 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.376222085 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.362701642 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.378477233 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.33046587 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.304393802 seconds)
  done (took 19.265335796 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597986944 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.597795594 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.330615136 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.619998367 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.30690912 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.635492684 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.476268698 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.50088769 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.495068626 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.282498162 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.281520019 seconds)
  done (took 17.324358785 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.607018906 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.61340666 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335527418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.608129074 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309704671 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606411196 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479639628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.492900669 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.491170774 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28186457 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283105765 seconds)
  done (took 17.307916919 seconds)
done (took 55.094837253 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.294121325 seconds)
  done (took 2.49435384 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.315995872 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.484520733 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.302685917 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.283191709 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.278505842 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.278592988 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.284096813 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.279742159 seconds)
  done (took 11.706767807 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.277599084 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.27805464 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.274727991 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.274505795 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.278398064 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.275388494 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.277223535 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.277511273 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.276125868 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.276584224 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.277446265 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.277160982 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.27846187 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.274841927 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.275306202 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.275964075 seconds)
  done (took 21.625968744 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.278276046 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.275989512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.274992682 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.277099185 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.276392663 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.277271348 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.277488944 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.276311326 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.276556952 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27712218 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.277808266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.277118962 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.276620139 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.277413265 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.277912954 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.278474296 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.277081764 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.277519917 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.28126244 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.277597124 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.278398252 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.277121328 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.278413292 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.279296505 seconds)
  done (took 31.863035911 seconds)
done (took 68.890244425 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.734807144 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.221478181 seconds)
  done (took 8.158592746 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.338095148 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.34003951 seconds)
  done (took 3.88139019 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281605543 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.280418852 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.280517007 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.280434315 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.280147634 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.280682594 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.281788133 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.280836112 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.280717703 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.280316278 seconds)
  done (took 14.010565542 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.280292405 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.280876296 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.278680151 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.282001172 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.28084291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.278169558 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.281485486 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.280840245 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.281385788 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.278598275 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.280776594 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.278768599 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.282434157 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.280597728 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.281615796 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.277770328 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.279025313 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.278572327 seconds)
  done (took 24.246341353 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.294234117 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.30224136 seconds)
  done (took 3.799332374 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.408976707 seconds)
    (2/7) benchmarking "second"...
    done (took 1.320133322 seconds)
    (3/7) benchmarking "month"...
    done (took 1.388322443 seconds)
    (4/7) benchmarking "year"...
    done (took 1.845008245 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.320504372 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.299142308 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.320120297 seconds)
  done (took 11.108995561 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.281090255 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.46898159 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.582518723 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.852140081 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.281526547 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.285657396 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.121257641 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.283959906 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.286944313 seconds)
  done (took 14.648011812 seconds)
done (took 81.056500219 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.321268215 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.279016076 seconds)
  (3/8) benchmarking "parseint"...
  done (took 4.395603098 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.285166458 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.294155435 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.571016746 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.284459619 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.401706771 seconds)
done (took 39.03643823 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.284052334 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.271409839 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.077631444 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.275660417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.386628537 seconds)
  done (took 19.2131296 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.369277478 seconds)
    (2/2) benchmarking "read"...
    done (took 1.611644532 seconds)
  done (took 5.178055636 seconds)
done (took 31.875928383 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276617912 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.276909669 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.271771389 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.273077218 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.275982147 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.271886968 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.273011207 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.275616876 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.274255024 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.277727302 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.272463714 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.275251594 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.274800627 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275161915 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273274776 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272796952 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275013456 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.276761305 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.273397062 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272373839 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.272252191 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.275086027 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.272535683 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.273035185 seconds)
  done (took 31.780533728 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.279881307 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.27257209 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.275349598 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.274969679 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.272740835 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.276141009 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.275739602 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.27276757 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.274999624 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.275245653 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.272975844 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.27339206 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.274915093 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.273372485 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275410363 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.273329565 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.275065286 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273107023 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275453698 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.272839368 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.276262583 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273108102 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.272583941 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281161286 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.274080307 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273354842 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.275939149 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.274054024 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.276254217 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.273933778 seconds)
  done (took 39.440071643 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.282139705 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.283333888 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.275446685 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.276515457 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.276485211 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.276501717 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.276970912 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.276073126 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.277080885 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.277449021 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.277192223 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.27637127 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.277576905 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.276179032 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.278645408 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.276954075 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.277441478 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.277278682 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.277225346 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.276361855 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.277716849 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.277707661 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.27858491 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.277838495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.27747014 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.278433326 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.277845778 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.277904246 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.278737242 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.278548847 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.278362151 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.278332554 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.277809145 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.278335987 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.278418038 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.278299729 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.283069379 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.286628824 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.27819553 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.278544294 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.279216493 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.279678101 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.279182331 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.279181341 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.278810952 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.279447814 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.279034179 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.280095862 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.280361936 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.279383769 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.279633002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.279416534 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.279382576 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.280272806 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.28003297 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.279094566 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.279104377 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.279326677 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.279645533 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.279589295 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.280048047 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.279543131 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.279784676 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.279937435 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.28074989 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.279809926 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.279937986 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.280018028 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.279458398 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.280959124 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.280913308 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.280930095 seconds)
  done (took 93.279447735 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.2812653 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.279059355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278042766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.277342049 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2766151 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.280882777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278157013 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28072965 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27694349 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.28012801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279741826 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278459871 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278839972 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.281823079 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.280594023 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.279111207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.281975967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278578365 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.281203003 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281719842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281789344 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.279259323 seconds)
  done (took 29.354867758 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282080751 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28406317 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.279011317 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.283013412 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.280611234 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282967231 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.281424431 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.284003747 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282190271 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279142466 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281291416 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28297045 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281380197 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280495978 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279953135 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.282382928 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282782938 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280922802 seconds)
  done (took 24.274845509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.281612408 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.280990263 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.282952747 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.281307275 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.280820749 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.282465933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281179905 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.283548443 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.283602517 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.28070319 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.284557356 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283613033 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.28404545 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281476359 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283628993 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.280162481 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.283538887 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28132382 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283796878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281049484 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.281748846 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284437031 seconds)
  done (took 29.417912367 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284547905 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283653889 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282524489 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281181304 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282913678 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284993856 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.284893629 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.283045177 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.285941009 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.283579544 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282354998 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284491276 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.284119622 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.283458965 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.283192873 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.283040296 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285553751 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282980445 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286487692 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282721806 seconds)
  done (took 26.881736429 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287129682 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286573839 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287314013 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288033578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286122903 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287118393 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286411151 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.287976231 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287935899 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.287773423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287357311 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.28671419 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287555081 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.288075368 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287135225 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288328354 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28808269 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.287724171 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287150962 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287781768 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288209554 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.288371685 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.288533348 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287783351 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.287815118 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288257338 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288102779 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289251227 seconds)
  done (took 37.262682022 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290038721 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.287825677 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.285134604 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.285119494 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.28574005 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.285200545 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.284284076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.286338964 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.288040486 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.284980581 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.288484199 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.287886206 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28843751 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.288942263 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288742294 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.289676906 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.288257547 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.285386914 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286813746 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28583965 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.288926344 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289597068 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.288438967 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.287892872 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28569826 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.288312113 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.28611496 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.2857232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288439109 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.286363039 seconds)
  done (took 39.825643984 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.333906595 seconds)
    (2/2) benchmarking "in"...
    done (took 1.332401753 seconds)
  done (took 3.876166447 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.286078185 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28834458 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.287915835 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.286486864 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.286537096 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.289994484 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.288289726 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.285305927 seconds)
  done (took 11.508375722 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.288760603 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.28811491 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.28891476 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.290058787 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.28970067 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.287877443 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.296750955 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.307406317 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.289376072 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.289616309 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.296086254 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.296246594 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.293207952 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.288588207 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.288597805 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290299085 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.288652692 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.28941019 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.290225479 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.289522056 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289727132 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.291905345 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290921653 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.287697051 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.291730765 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.301866705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.294225704 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.290459936 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29002857 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.29525396 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.290725453 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.286819723 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.291011972 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.291370397 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.291401813 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.29142808 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300991804 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.313760674 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.298155626 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292174663 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.29296031 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.289719637 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.292303873 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.293338587 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.293273652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.291981365 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.292678417 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.289365769 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.291187406 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.296745348 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.298213979 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.292688271 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.290464983 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.294317042 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.293386914 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.298600584 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.312409123 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.296444934 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.30198461 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.304100631 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.305576177 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.301272696 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.293752024 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.293063021 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.303471802 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.316877555 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299716173 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.310506445 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.289004552 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.293848945 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.299734632 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.306801323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.319008566 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.293146744 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.293748017 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.29420235 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.294815762 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.293591135 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.301221912 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.314888552 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.293966731 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.294002001 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.303525194 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31827937 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.293877774 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.294048372 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.294345776 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.294867395 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.294632297 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.305164883 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.314196418 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.295040314 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.293692991 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.295273503 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.296277415 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.295354883 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.293925896 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.295711727 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.291841274 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.295129264 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.295035958 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.298893871 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.303628627 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.295022213 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.295351354 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.302864625 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.295359816 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.296122011 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.300785676 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.296161761 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297212521 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.297724148 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.303180015 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.29356203 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.298971992 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.304113822 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.295236195 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.295915287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.297194281 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.296041831 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305744987 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.323617605 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.296788972 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.299372474 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.302108963 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.307794093 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296844421 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.29993271 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.298034663 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.29442236 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.293729334 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.298296685 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.296665614 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.297511183 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.297723492 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.299783857 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.293690039 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.296999216 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.297093693 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.297960196 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.299510756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.297624536 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.298524875 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.299779485 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.297720487 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.29957159 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.305028024 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.296767993 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.29940441 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.298699016 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.295775692 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.298179698 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.299179174 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.298114492 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.298569938 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.299357006 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.29776656 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.298483657 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.299158202 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.29973662 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.300045698 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.300003371 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.303998688 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.299059931 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.303160969 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.299487943 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.29655794 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.299759642 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.301136022 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.298820906 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.300054803 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.298077524 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.303542608 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.308041242 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.300659796 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.30005259 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.303142289 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.300210757 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300413381 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.300274819 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.303969784 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.309596468 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.30045846 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.308047839 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.300953543 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.301326429 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.301398907 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.300971276 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.301933216 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.301154062 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.305128973 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.309628471 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.31458802 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.32703174 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.303164989 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.305137597 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.301440801 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.306794539 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.305221291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.301483864 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.302155883 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302390682 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.301393901 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.30167692 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.303933393 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.301395351 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.301100697 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.303158791 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.303446992 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.302703145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.302791355 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.303760758 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.302610448 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.300508395 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.301918024 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.302172008 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.303104283 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.299831057 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.302122174 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.30283194 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.303373322 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.303486253 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.308816409 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.299547235 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.304193438 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.303750913 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.303414751 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.302074992 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.303465916 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.305604909 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.304361426 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311447875 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.32316232 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.304406654 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310295062 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.32362686 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.302852262 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.305527327 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.304290688 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.301676381 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.307679146 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.313410865 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.304691547 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.305156207 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.304695127 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.303890424 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.305089693 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.311229023 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.301617934 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.303613292 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.30481703 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.305869044 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.30218074 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.305160373 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.305734943 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.305248684 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30613361 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306021796 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.305726567 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.304820036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.304300133 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.306698286 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.305961631 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30926566 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.314151183 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.311638994 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.306345938 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.308658423 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.308100783 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.310611903 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.30647561 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.306236138 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.306021407 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.319683159 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.331771891 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314247325 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.308868643 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.307601074 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.312610357 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.309260267 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.31028761 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.306825393 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.30719443 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.30738486 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.306586958 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.30507981 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308542103 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.307480158 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309221015 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.30877733 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.312559917 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.307729413 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.307225302 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.307231183 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.307914576 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.308751894 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.307173309 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.308208707 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.310384654 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.310073008 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.307054059 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.307915065 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.315734366 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.327600197 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.308918218 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.30966857 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.308852255 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.307856978 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.309445365 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.308530125 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.312609081 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.316434972 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.312971266 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.317653916 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.311534418 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.319181745 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.309858035 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.312879499 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.317049515 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.307220325 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.307722744 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.308263308 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.308818457 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.317175977 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.328923398 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.310647303 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.313411899 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.31020578 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.31144586 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.310280116 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.310282057 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.311083447 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.309753728 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.318150304 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.334464382 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.314322226 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.311724412 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.308455225 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.310513593 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.310951859 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.310681133 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.312856474 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.31009241 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.311484174 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.311091493 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.311333125 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.309893047 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.310663039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.310917497 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.307883049 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.310567218 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318648903 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.33333602 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.31585699 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.311517846 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.319822081 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.312029263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.319775941 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.33127452 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.31282265 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.312467953 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.312572226 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.314307707 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.311822044 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.312848841 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.312730196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.314388816 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.316361836 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.312158365 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.313902203 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.312597752 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.312809949 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.312359074 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323027906 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.336134988 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.315313523 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.318133546 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.310422441 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.314118103 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.316891156 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.312349216 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.311676879 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.315786474 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.324359936 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.322290702 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.313451059 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.312817407 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.313838617 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.313184334 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.313986039 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.31453387 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.314189842 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.314231229 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.315545162 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.314147974 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.316576428 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.313271999 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.314743165 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.316554069 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.315397087 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.324892471 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.314142337 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.314727778 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314234558 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.315734274 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.314869708 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.314778677 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.31545601 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315447188 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.315433409 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.316347495 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322758537 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.32225729 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.317857302 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.315303464 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.315724698 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.316026505 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.316042985 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.314926472 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.316557912 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.316426472 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.317626732 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.316078402 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.317624048 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.315738189 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.316602233 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.316743973 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.316427806 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319351074 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.324193165 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317253258 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.314897608 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.316702295 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316998335 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.315773179 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.317043984 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.324344708 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319870388 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.329377004 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.325704847 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.320827095 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.317634687 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.321723932 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.325847174 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.3166885 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.317125471 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.317287618 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.317481321 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.319182544 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.321608476 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317168207 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.325736563 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.31708479 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.317155876 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326684589 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.341220695 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.316677969 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.319996474 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.323343748 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.31755876 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.315769574 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.317939526 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.317174957 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325809456 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.339065035 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.318654865 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.319970429 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.318860557 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.320912565 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.323742354 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.319062743 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.319616932 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.316510793 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.319784423 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.318060793 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319379332 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.31761732 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.317820358 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.319147169 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.323009004 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.325885502 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.316064455 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.321450449 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.319132881 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.319214532 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319512508 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.320658033 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.317030887 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.317897935 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.319433988 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.319471314 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.31991583 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.321896517 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.318731873 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.32231431 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.323146139 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.32074377 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324247547 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.332238021 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.328626778 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.318389606 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.320794021 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.321694302 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.323073778 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.320618468 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.320170954 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321660577 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.322076938 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.320404821 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.321544681 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.322457552 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.325217135 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.339490187 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.343814866 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321324182 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.321123198 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.323908189 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.321545664 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.319116192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.320547922 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.323842885 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.325192059 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.329671488 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.322248105 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.328292458 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.342776261 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.322692252 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.326573857 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.325076174 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.330650061 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.324759908 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.322827409 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.323145309 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.32814524 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.341522997 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.323686969 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.333811052 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354260111 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.342899859 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.323423541 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.322995142 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.322259465 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.323170307 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.325911792 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.323085008 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.323485586 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324108096 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.324136688 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.325474507 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.32933603 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.324733616 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.326081727 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.323454545 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.323703913 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.325606748 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.321495808 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.324688468 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.324880127 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.324383973 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325813479 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.325517287 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.324901258 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.337739992 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.352320022 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.324637498 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.324040804 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.321755647 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.328469689 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.327284487 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336907439 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.332073768 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.324864559 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.325679245 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.32601595 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.323943682 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.324931234 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.326241491 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.325869886 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.326152148 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.322983337 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.34016882 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.334751873 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.331265125 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.325221606 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.325970914 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.325438401 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.326666664 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326033432 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326417436 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.326783531 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.329637702 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330291006 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.32635632 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.326693323 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.329622454 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.335082685 seconds)
  done (took 782.287654742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323750799 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.322976627 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323569239 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.324262455 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324064585 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.323903439 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.324135906 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324727342 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.325784483 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.325507871 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.325081166 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325336282 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325405035 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325190845 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325516294 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.325985246 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325185104 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.324421879 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.324634929 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.324442983 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326445993 seconds)
  done (took 29.066587399 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.327739376 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.326137004 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.326799828 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.328458703 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326782042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.328790518 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.326125638 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.327805558 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.328268361 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.32518959 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.330834436 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328550697 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.3261348 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.326417986 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325449618 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.327812069 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328910359 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.326307771 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.328893834 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.326420784 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.328154557 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.326394386 seconds)
  done (took 30.44970636 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.3294456 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.329372677 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.328341508 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.326383977 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.330626826 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.327162995 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.32886796 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.330043701 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.330484357 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.331067377 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.328302474 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.331994876 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.338034669 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.335429658 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.332564634 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.329674222 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.474192305 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.330835828 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.331030348 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.331066116 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.328854039 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.33547372 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.328202726 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.327836616 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.329529824 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.331339535 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.331827674 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.329846869 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.330806257 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.333104841 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.335698452 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.331288417 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.330975317 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.333896611 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.330329631 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.333263722 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.335854945 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.330986717 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.329363899 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.331889722 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.341922828 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.353436231 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.332815033 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.339841924 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.331467528 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.332425065 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.336183426 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.340046622 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.329476066 seconds)
  done (took 66.672284142 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.332246346 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.33182482 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.330792153 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.332740161 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.332292604 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.332928562 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.331638361 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.332746296 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.329865428 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.330771524 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.332670576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.330450954 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.330983661 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.334273645 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.332438809 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.331345695 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.331935989 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.330498685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.3311944 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.332289341 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.331366767 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.333986657 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.334115284 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.332038535 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.334965942 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.331720583 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.332098794 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.333096858 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.332364654 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.33023119 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.334150106 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.334691065 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.335228098 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.332703912 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.332961992 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.334878008 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.33495483 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.333169601 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.334602619 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.333420925 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.335600482 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.3348735 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.33653363 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.334930009 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.332049251 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.332766151 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.333044277 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.333031479 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.332302876 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.335147754 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.335279737 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.332985326 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.336348152 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.332751942 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.335045064 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.335202663 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.333146455 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.332970994 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.334442437 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.333853107 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.333012513 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.336413083 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.333426593 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.335830578 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.33633193 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.334509094 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.334568789 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.335463096 seconds)
  done (took 91.917359727 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.336586774 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.336970423 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.335768877 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337048085 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336467479 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.336730119 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.336197828 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.337495757 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.336952022 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337969206 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.337573125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.337525922 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.336359148 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.336972094 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.33707261 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.337629603 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.337608493 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338184324 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.337100354 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337083031 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.33800519 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.337812157 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.337851912 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338242618 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.338089034 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.337773129 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338404907 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.338621651 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.337925727 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.338577676 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.338386394 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.338806811 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.337786806 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.338570048 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.338446017 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.338121103 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.338561801 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.338877048 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.338650059 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.338071796 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.338562027 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.339425413 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.338633317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.339547899 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339315429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.338591753 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.340371813 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.340394354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.339743021 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33946525 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.340203882 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.339691088 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.339796759 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340641374 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.340549495 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.341331374 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340447325 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.340463748 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340093415 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.341145971 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.340999911 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.341457139 seconds)
  done (took 84.244481943 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340659363 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.340189842 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.338375035 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.337865029 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.340180758 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.339191418 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.340714874 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.34101209 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.341735514 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.341356776 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341678257 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.339563552 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341490851 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344261269 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.341111536 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342028828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34055403 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.339802422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341676737 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.339637951 seconds)
  done (took 28.071614183 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.339417477 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.341055942 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.338704577 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.339884597 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.342521888 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.339857105 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.341816358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342006435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339750745 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342899075 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.341365384 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.342330737 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.33860841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.340155335 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.342376196 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.338796711 seconds)
  done (took 22.711036224 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.340485755 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.342588125 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.341111774 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.342293088 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.339737669 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.340443435 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.343711499 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.339706691 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.340705817 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.344126506 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.34303023 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.343566062 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.342813546 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.343175736 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.341662281 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.343905078 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.341507391 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.341084013 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.343312616 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.343419275 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.34108572 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.341207975 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.344338752 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.343189111 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.342233488 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.342932316 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.342131642 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.342329156 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.340765603 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.343936495 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.342102153 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.342561235 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.341343763 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.342233163 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.344224922 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.342365088 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.344779436 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.344368334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.345535241 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.343936247 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.345210328 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.341795699 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.345244534 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.344775145 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.342539687 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.34558927 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.343855415 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.342702693 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.34220717 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.343279944 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.345086366 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.345444365 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.346202351 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.346531625 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.345404066 seconds)
  done (took 75.127380519 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.346024507 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.346064036 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.342234209 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.345528482 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.345402844 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.343594838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.345875746 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.345358025 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.343982037 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.346357021 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.344286046 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.347705146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.344145005 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.345916205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.345202085 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.346983462 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.344316973 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.343472589 seconds)
  done (took 25.475573124 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.344536459 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.34500964 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.348575062 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.344887325 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.344318995 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.347591065 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.344453188 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.346575705 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.347663402 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.344677547 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.345410161 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.348276772 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348505204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.348255214 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.345811329 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.345290007 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.349420695 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34841096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.345470533 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.345544621 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.348431915 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.348694645 seconds)
  done (took 30.889976133 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.348821002 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.347805682 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.348302924 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.363547767 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.367295118 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.37191241 seconds)
  done (took 9.412256668 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.355507088 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348384672 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.346343695 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349392899 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349534802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346789828 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346285304 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347597192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34873213 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346429722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347353609 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349712591 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350044094 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346751131 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348958309 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350572762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346675684 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.346428397 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348758679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349453856 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347458213 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349962255 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347057082 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348482008 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347615315 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346387065 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350606059 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347025595 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347695632 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350683698 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350614643 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347086825 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350767737 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348153518 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351579549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350569472 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348889424 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351084296 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35158888 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349240012 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.351453592 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351033695 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.350979818 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348867904 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352210503 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348385309 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348459461 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349447751 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349388896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352108505 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352556465 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34880463 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351661931 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35112209 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351921653 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352235695 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35113472 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349282075 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352415767 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350768827 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350989347 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352096903 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350458719 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351981094 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353459163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350717004 seconds)
  done (took 90.368078202 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350794786 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.349651611 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350904373 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352271535 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350526215 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351241437 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351877687 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351298769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351230589 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351752095 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354284804 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351013164 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352926223 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350409229 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350069186 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351444071 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352408849 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352958852 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350971279 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354144606 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351071385 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352203785 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351330424 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352025139 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351593285 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353341619 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351768548 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351591484 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.352099642 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35184571 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352156187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351981607 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352387003 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.352802607 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353612333 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353537702 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353100051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.352762979 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351868506 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.35529671 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.352822371 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355906078 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353601308 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353560682 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.352949206 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354068118 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352818578 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353303784 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354387911 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353668141 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353176807 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.354125778 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.353593666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353415485 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353729557 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353939899 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354793094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354878838 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353824732 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355623278 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353662603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355116127 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.358343957 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355282469 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35527476 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35532204 seconds)
  done (took 90.563409372 seconds)
done (took 1825.356915815 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.520546999 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.474139326 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.355978186 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.400684501 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.356788964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.368997499 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.350809849 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.356895038 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.356414897 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.355762721 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.357067246 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.54478724 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.409743911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.3565244 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.35582671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.450086217 seconds)
  done (took 43.645058306 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.384489359 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.36308894 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.485388394 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.381579783 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.385347931 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.563676494 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.425357848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.36182888 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.547024342 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.403404033 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.030822794 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.385489479 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.360463425 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.549988684 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.382583689 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.566182703 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.636303397 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.139506905 seconds)
  done (took 31.628048822 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.86293374 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.374943196 seconds)
  done (took 9.512992609 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.383786643 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.36253474 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.363646806 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.359449737 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.360183579 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.358223176 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.359594857 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.356730263 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.32962033 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.503011118 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.363603033 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.37099786 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.380735648 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.361080014 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.358005737 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.402074811 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.517646449 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.359154283 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.357287381 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.366111053 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.360264892 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.485748552 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.406240528 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.359449184 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.497398566 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.334405634 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.371170966 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.367657577 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.486550184 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.361167965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.361016469 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.361358498 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.363624476 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.272164387 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.831520412 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.359422849 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.386797602 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.369958063 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.358606034 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.555463135 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.363824712 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.367218997 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.354394916 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.812300061 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.511173355 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.483853217 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.735752005 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.370810575 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.364695802 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.424730342 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.363774147 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.365481752 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.406307888 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.180996512 seconds)
  done (took 114.214564004 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.399290035 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.744800832 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.525940543 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.379059592 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.216771271 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.199305357 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.382827087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.674138735 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.422376656 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.35820727 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.652880503 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.901679713 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.388349482 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.419830236 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.842234772 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.432584943 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.358137771 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.258742547 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.377956145 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.359796741 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868089014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.360197723 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.359069258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.524222759 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.397882805 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.833631964 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.91281694 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.941398874 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.378467575 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.358890163 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.861815641 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.390937036 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.384439299 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.358259602 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.630018352 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.758331146 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.737321995 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.364667974 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.389194347 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.360762394 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.386334598 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.845517506 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.747946687 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.366226899 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.359410179 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852812989 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.367357124 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.356931361 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.366752534 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.57028086 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.059170046 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.359384712 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.916362667 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.364033836 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.627241931 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.427390248 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.383073752 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.862482397 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.359044379 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.569816909 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.41284894 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.359453407 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.364226009 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.36416728 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.361475605 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.727836164 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.477554891 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.359424343 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.726271105 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.847161501 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.387168975 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92369034 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.162119191 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.378530471 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.467865877 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.360149403 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.065597509 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.895077358 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.36725842 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.361400685 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.730543228 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.36621979 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.655273824 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.378639577 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.382511893 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.881860983 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.365058214 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.393723523 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.361677269 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.366763233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.135665131 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.363668366 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.663703359 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.392543196 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.361060741 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.360994986 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.364215318 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.36210969 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.361624368 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.364833597 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.92474325 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.395368995 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.491454596 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.382865299 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.362561895 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.370758419 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.361652182 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.362958655 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590639947 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.848444855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.36750509 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.363296544 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.362199712 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.376768278 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.518174077 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.363123161 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.691144655 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.36368839 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.362779576 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.366781973 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.208778822 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388041789 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.363668676 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.368858532 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.270145025 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.567290837 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.383599245 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.371957497 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.364816464 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.387082485 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.674441206 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.384620475 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.363441257 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.366023446 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.098056708 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.416850368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.37689805 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.716060754 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.370509843 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329015385 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.386922388 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.36393962 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659414303 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.643800309 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.424678527 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.380589545 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.365187678 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.071906228 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.388159159 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.504992865 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.386799064 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.345601082 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563562573 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.541777472 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.365046428 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.953217398 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.3644054 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.591443259 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.3657151 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.690707009 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.886009536 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.387556993 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367718082 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.109729052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.117226281 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.004736259 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.371324891 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.653934368 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.345260459 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.848048239 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.367358943 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.366637338 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.965100511 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.367337349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.374779461 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.365976123 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.366803278 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.508679147 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.541511516 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.555901611 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.369655087 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.839976239 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.434996364 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.368017588 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.369596097 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.366334383 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.716322343 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.428709035 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.368923247 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.398283628 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.368136762 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.374013649 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.858218881 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.191377285 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.373528409 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.520374958 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.030937035 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.385665743 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.368673353 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.013661706 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.920724811 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.903344902 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.368637441 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.69983507 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.370483156 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.409706409 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.115911371 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.455173567 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.864977136 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.37298167 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.369184018 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.994213214 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.385881903 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725170693 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.369139547 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.382637652 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.945125292 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.393919111 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.372668631 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.682336657 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.390184289 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.629539857 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.369122562 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.414879511 seconds)
  done (took 1120.15895059 seconds)
done (took 1320.432759921 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.370145366 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.36851948 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.365151041 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.376542508 seconds)
  done (took 26.769846313 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.379036924 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.376692662 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.377159667 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.376137136 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.378192267 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.376115102 seconds)
  done (took 9.554469739 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.465393525 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.369558176 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.376762062 seconds)
  done (took 19.503018898 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.59676822 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.735022511 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.7340565 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.721114356 seconds)
  done (took 11.078505042 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.377142285 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.377770384 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.376155109 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.377878993 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.382052664 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.382916573 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.379169725 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.377481195 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.380579036 seconds)
  done (took 13.700401184 seconds)
done (took 81.896086139 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.752560599 seconds)
    (2/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.358599379 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.798890492 seconds)
    (4/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.029329702 seconds)
    (5/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.387018429 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.39563971 seconds)
    (7/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.397785617 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.262035009 seconds)
    (9/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.661498322 seconds)
    (10/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.375466198 seconds)
    (11/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.35815094 seconds)
    (12/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.194604461 seconds)
    (13/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.381146535 seconds)
    (14/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.660060825 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.475692726 seconds)
    (16/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.413446039 seconds)
    (17/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.193424452 seconds)
    (18/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.420428453 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.397809651 seconds)
    (20/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257554273 seconds)
    (21/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.517946513 seconds)
    (22/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.621139361 seconds)
    (23/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.905350387 seconds)
    (24/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.372020864 seconds)
    (25/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.379516589 seconds)
    (26/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.360159238 seconds)
    (27/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.378748284 seconds)
    (28/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.425373423 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.371796583 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.790882232 seconds)
    (31/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.480558476 seconds)
    (32/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.028566336 seconds)
    (33/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.368799909 seconds)
    (34/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.748993404 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.500649515 seconds)
    (36/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.384187686 seconds)
    (37/286) benchmarking ("sort", BigInt, true)...
    done (took 6.376450296 seconds)
    (38/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.360372254 seconds)
    (39/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.400183215 seconds)
    (40/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.042902411 seconds)
    (41/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.016722702 seconds)
    (42/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.782357172 seconds)
    (43/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.386214945 seconds)
    (44/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.36295095 seconds)
    (45/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.375158117 seconds)
    (46/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.496961932 seconds)
    (47/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.360794088 seconds)
    (48/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.988899429 seconds)
    (49/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.485011546 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.280876325 seconds)
    (51/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.456338886 seconds)
    (52/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.482551435 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.479044306 seconds)
    (54/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.632558998 seconds)
    (55/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.985303456 seconds)
    (56/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.665431626 seconds)
    (57/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.28833347 seconds)
    (58/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.78768394 seconds)
    (59/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.40011616 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.111542611 seconds)
    (61/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.451770802 seconds)
    (62/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.404169893 seconds)
    (63/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.640675688 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.400217018 seconds)
    (65/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.125857643 seconds)
    (66/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.370002004 seconds)
    (67/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.410355271 seconds)
    (68/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.401313575 seconds)
    (69/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.877732581 seconds)
    (70/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.498872613 seconds)
    (71/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.36369792 seconds)
    (72/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.376762866 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.378013215 seconds)
    (74/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.468765659 seconds)
    (75/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.379342244 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.666819009 seconds)
    (77/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.903868189 seconds)
    (78/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.165510852 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.375620245 seconds)
    (80/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.972456453 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.364364206 seconds)
    (82/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.133258961 seconds)
    (83/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.379395068 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.405817139 seconds)
    (85/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.600789115 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.057032865 seconds)
    (87/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.440401542 seconds)
    (88/286) benchmarking ("sort", Float32, false)...
    done (took 5.395795032 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.377988783 seconds)
    (90/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.968590483 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.382327673 seconds)
    (92/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.090491472 seconds)
    (93/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.439138438 seconds)
    (94/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.677382554 seconds)
    (95/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.384656854 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.420975666 seconds)
    (97/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.458993966 seconds)
    (98/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.581122252 seconds)
    (99/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.364255231 seconds)
    (100/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.190952068 seconds)
    (101/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.024218334 seconds)
    (102/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.484519146 seconds)
    (103/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.302493446 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.959743615 seconds)
    (105/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.381553495 seconds)
    (106/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.412094504 seconds)
    (107/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.83140453 seconds)
    (108/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.383974734 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 1.913649935 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.401316097 seconds)
    (111/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.118004514 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.66367192 seconds)
    (113/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.192378321 seconds)
    (114/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.639419277 seconds)
    (115/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.459912095 seconds)
    (116/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.886418686 seconds)
    (117/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.540058122 seconds)
    (118/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.394875432 seconds)
    (119/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.661165721 seconds)
    (120/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.887228581 seconds)
    (121/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.266750879 seconds)
    (122/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.374023665 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.487376607 seconds)
    (124/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.81880205 seconds)
    (125/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.353546851 seconds)
    (126/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.404322278 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.441776929 seconds)
    (128/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.19917987 seconds)
    (129/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.241030705 seconds)
    (130/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.20080226 seconds)
    (131/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.4057756 seconds)
    (132/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.575086606 seconds)
    (133/286) benchmarking ("sort", Int8, true)...
    done (took 6.380018763 seconds)
    (134/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.307258957 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.302815523 seconds)
    (136/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.366616023 seconds)
    (137/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.368472949 seconds)
    (138/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.423913804 seconds)
    (139/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.401876291 seconds)
    (140/286) benchmarking ("sort", Float32, true)...
    done (took 6.379753435 seconds)
    (141/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.406794027 seconds)
    (142/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.832031514 seconds)
    (143/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.638303593 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.044635052 seconds)
    (145/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.38007505 seconds)
    (146/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.919960492 seconds)
    (147/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.380719037 seconds)
    (148/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.277893912 seconds)
    (149/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.532075919 seconds)
    (150/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.629730939 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.400483957 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.922212696 seconds)
    (153/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.923407538 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.800655303 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.390677154 seconds)
    (156/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.05887622 seconds)
    (157/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.40991868 seconds)
    (158/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.359738732 seconds)
    (159/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.788066875 seconds)
    (160/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.779657118 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.366785511 seconds)
    (162/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.368445885 seconds)
    (163/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.428731023 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.905146018 seconds)
    (165/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.408394895 seconds)
    (166/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.390583081 seconds)
    (167/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.407250782 seconds)
    (168/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.42406082 seconds)
    (169/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.39022973 seconds)
    (170/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.277230603 seconds)
    (171/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.406928707 seconds)
    (172/286) benchmarking ("sort", Float64, false)...
    done (took 5.693981053 seconds)
    (173/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.401300909 seconds)
    (174/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.702999914 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.076423281 seconds)
    (176/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.209970213 seconds)
    (177/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.40847452 seconds)
    (178/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.390490529 seconds)
    (179/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.448492514 seconds)
    (180/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.446821764 seconds)
    (181/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.382275788 seconds)
    (182/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.943450057 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 5.412325744 seconds)
    (184/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.399775795 seconds)
    (185/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.468392352 seconds)
    (186/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.802158691 seconds)
    (187/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.506679371 seconds)
    (188/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.155085478 seconds)
    (189/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.607568952 seconds)
    (190/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.086944864 seconds)
    (191/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.280138407 seconds)
    (192/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.395590853 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.421861782 seconds)
    (194/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.48841233 seconds)
    (195/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.382263287 seconds)
    (196/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.58578147 seconds)
    (197/286) benchmarking ("sort", BigInt, false)...
    done (took 6.384410601 seconds)
    (198/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.889201729 seconds)
    (199/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.37821527 seconds)
    (200/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.137895519 seconds)
    (201/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.349320011 seconds)
    (202/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.581327765 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.407390535 seconds)
    (204/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.940858618 seconds)
    (205/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.407429906 seconds)
    (206/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.478464092 seconds)
    (207/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.470037015 seconds)
    (208/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.495672933 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.165481431 seconds)
    (210/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.489576473 seconds)
    (211/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.424308914 seconds)
    (212/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.271321555 seconds)
    (213/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.397109923 seconds)
    (214/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.384890436 seconds)
    (215/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.474588985 seconds)
    (216/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.580407212 seconds)
    (217/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.81367773 seconds)
    (218/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.402139917 seconds)
    (219/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.276637393 seconds)
    (220/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.484116929 seconds)
    (221/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.372306022 seconds)
    (222/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.184612046 seconds)
    (223/286) benchmarking ("sort", Int8, false)...
    done (took 4.417454003 seconds)
    (224/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.411831263 seconds)
    (225/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.411062779 seconds)
    (226/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.411770995 seconds)
    (227/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.402597455 seconds)
    (228/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.373982789 seconds)
    (229/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.506742897 seconds)
    (230/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.373756485 seconds)
    (231/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.869514899 seconds)
    (232/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.444908733 seconds)
    (233/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.826852677 seconds)
    (234/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.728607864 seconds)
    (235/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.374254236 seconds)
    (236/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.069496711 seconds)
    (237/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.381054209 seconds)
    (238/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.38542431 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.422910087 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.611018122 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.513095112 seconds)
    (242/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.374655826 seconds)
    (243/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.422162354 seconds)
    (244/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.387350831 seconds)
    (245/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.495228404 seconds)
    (246/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.473444101 seconds)
    (247/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.441089 seconds)
    (248/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.375220015 seconds)
    (249/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.397793255 seconds)
    (250/286) benchmarking ("sort", Float64, true)...
    done (took 6.38764983 seconds)
    (251/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.789145292 seconds)
    (252/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.51087507 seconds)
    (253/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.385858369 seconds)
    (254/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.376921789 seconds)
    (255/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.912232723 seconds)
    (256/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.488266604 seconds)
    (257/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.38962352 seconds)
    (258/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.022008625 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.375307098 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.491394219 seconds)
    (261/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.375291158 seconds)
    (262/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.497029407 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.374843167 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.472363446 seconds)
    (265/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.808674421 seconds)
    (266/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.948006078 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.472328815 seconds)
    (268/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.09358757 seconds)
    (269/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.39955851 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.510065887 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.20120467 seconds)
    (272/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.451856159 seconds)
    (273/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.517818117 seconds)
    (274/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.390242554 seconds)
    (275/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.472712136 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.430138588 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.756770243 seconds)
    (278/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.037284364 seconds)
    (279/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.781386268 seconds)
    (280/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.499606498 seconds)
    (281/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.767059611 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.422236072 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.411603049 seconds)
    (284/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.398840804 seconds)
    (285/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.375546174 seconds)
    (286/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.480805177 seconds)
  done (took 963.280314239 seconds)
done (took 964.571923136 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.421052972 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.418335025 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.399602497 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.421881612 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.51162288 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.577086727 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.411062531 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.400975686 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.44738605 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.448558081 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.398095577 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.574570839 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.401316802 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.400996113 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.399863429 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.415140955 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.573233545 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.408114852 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.417411709 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.410306544 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.416145621 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.39863326 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.449932015 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.577564459 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.404369749 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.403137836 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.402712122 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.420203121 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.512487024 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.403648352 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.402610583 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.413165992 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.577466801 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.407631948 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.394518466 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.420593107 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.41364658 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.411920146 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.405383042 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.434075684 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.955994179 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.402275729 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.401115611 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.402874742 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.402163874 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.405917026 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.404082873 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.408126847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.4183868 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417359143 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.94688965 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.418922382 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.405373203 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.403259475 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.413907272 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.402816827 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.407032063 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422008046 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.422316219 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.421897189 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.57021627 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.417223623 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.405120236 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.419492112 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.411994944 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.987784481 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.399899788 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.408696117 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.963405577 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.409618705 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.98801346 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.412856044 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.405405482 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.418975264 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.436890194 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.584523309 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.406709176 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.402944522 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.412010687 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.402606298 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.414351901 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.419249535 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.407861146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.404654942 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419754193 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.581135381 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.414879849 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.405827215 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.413715423 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.423856542 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.413550672 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.417449787 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.408104138 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.401198126 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.415345874 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.409701283 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.408722989 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.408852723 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.410660179 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.416787627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.021545533 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.431207168 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.403473663 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.402424378 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.405403708 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.42002534 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.968424226 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.40876046 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.428109658 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.453803332 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.408390939 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.576047133 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.417245272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.425729566 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.417675534 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.410203843 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.400735097 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.575831321 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.965418579 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.423570977 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.409619722 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.40576517 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425197651 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.408960027 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.404901963 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.588630337 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.415535464 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.423150856 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.528096984 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.419094468 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.439764285 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.406423918 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.410698554 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.440207103 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.428315849 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.439965239 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.41180761 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.425405255 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.423688953 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.40520695 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.419387445 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.41871416 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.408770865 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.414518146 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.402332742 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.439357816 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422957565 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.423980412 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.429109868 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.529414665 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.406139117 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.567809144 seconds)
done (took 239.113122665 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.469156795 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.405957249 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.500116747 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.405721768 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.508998527 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.514880182 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.404702904 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.403086039 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.403567583 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.786333685 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.404554379 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.4050962 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.399624282 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.404968622 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.489546336 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.408702251 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.405426729 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.749993865 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.408834773 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.478112327 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.405620353 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.405061325 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.407585636 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.793987763 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.402266464 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.402886496 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.485119306 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.408251501 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.759833302 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.40262995 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.401011899 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.760164263 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.504995625 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.425909052 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.417383532 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.415628506 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.516027474 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.427840173 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.498160436 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.49148123 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.51077451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.448176514 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.404214714 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.403604241 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.41171021 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.412165357 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.406850942 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.436276885 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.408179442 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.407829138 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.752155047 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.418960145 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.417061568 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.408307453 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.408617512 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.429988023 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.408857398 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.410603505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.500488405 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.410554756 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.477788119 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.795863741 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.789000882 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.410539441 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.411033718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.409295173 seconds)
  done (took 153.518450299 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.477134841 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.482613953 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.528974241 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.420894072 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.461333897 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.536276921 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.420217066 seconds)
  done (took 11.648926974 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.416002417 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.411332444 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.461778565 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.4611273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.411351297 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.590340302 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.412418991 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.422137845 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.409638643 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.463834625 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.411906703 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.413208953 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.418639452 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.413806661 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.460251022 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.423567066 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.526422267 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.412989785 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.413399331 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.569707768 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.410749354 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.419309134 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.463394628 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.423720376 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412911083 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.41808659 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.230731966 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414769212 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.411405639 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.413265348 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.411280051 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.488160914 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414686901 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.410272404 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.410576601 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.528403053 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.41308821 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.41061844 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.413268304 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.408499759 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.413965807 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.414082503 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.413089254 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.411219175 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.413956729 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.436393063 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.414374333 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.41358046 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.413892376 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.414946706 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.464405944 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.414238353 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.41218381 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.412756936 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.468263878 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.421786543 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.415007054 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.411379554 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.415076717 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.412634663 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.5714106 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.462792521 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.415030799 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.462324037 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.415741091 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415492641 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.414023326 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.41436644 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.469074752 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.416618843 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.463633223 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.412608126 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.59560339 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.438604865 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.417165466 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.418029685 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.41953783 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.415711871 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.41120784 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.421537368 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.413536943 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.416979918 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.420749196 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.413285893 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.413760782 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.581442418 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.521912857 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.414191832 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.430819172 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.422900969 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.414454326 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.470563983 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.417002831 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.413740326 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.469161486 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.531805626 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.470199164 seconds)
  done (took 161.490573827 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.422892589 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.425877703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.420808897 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.440974957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.418193577 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.416720328 seconds)
  done (took 9.874439414 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.42021614 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.419073777 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.418582977 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.418947729 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.417402238 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.417852407 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.417807344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419376141 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.42211164 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.418211437 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.417929787 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.419871962 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.418699236 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.418506042 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.418279163 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.417836388 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.419198499 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.41596376 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.41914628 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.418192416 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.522731078 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.419618034 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419561099 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.421187832 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.423305323 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.419817012 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.42882836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.420137331 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.419147203 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.427063079 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.423345479 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.418802616 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.421835996 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.426916324 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.425368102 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.423349072 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423219614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.42109863 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.417299005 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.422018679 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.420948783 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419568533 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.420910452 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.420823393 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.423867064 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.426429023 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.426520417 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.429168373 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.421042874 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.422173052 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.422629298 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.420495153 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.420471421 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.422742095 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.423833535 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.443733224 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.425387191 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.422144633 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.421713605 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.423762201 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.422964439 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.421572612 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.423111786 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.426496615 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.420001219 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.42319856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.423307071 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.425171986 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.422181441 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.42223514 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.422927548 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.419617405 seconds)
  done (took 104.801094441 seconds)
done (took 442.650636915 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.570291852 seconds)
  done (took 7.900528147 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.64283413 seconds)
  done (took 7.975828206 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.660398318 seconds)
  done (took 25.0025736 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.478587958 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.517118068 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.454635755 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.426360232 seconds)
  done (took 27.211121762 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.612634918 seconds)
  done (took 7.944881289 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.41443987 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.414666343 seconds)
  done (took 14.162884792 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.665530261 seconds)
  done (took 7.997244947 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.521982002 seconds)
  done (took 7.860814802 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.438517282 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.453537031 seconds)
  done (took 14.237154964 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.40486626 seconds)
  done (took 7.737205486 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.515486902 seconds)
  done (took 17.849688944 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.417349793 seconds)
  done (took 7.752978047 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.489498753 seconds)
  done (took 7.823095077 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.313512014 seconds)
  done (took 10.64830145 seconds)
done (took 173.43589226 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.416835131 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.424675269 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.425373115 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.424744001 seconds)
  done (took 27.025501152 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.458097675 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.457451753 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.457876723 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.467209006 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.460181455 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.456367268 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.449869978 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.449927413 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.467519786 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.460541066 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.459464679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.460586013 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.45694011 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.450410582 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.459507782 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.459816772 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.468687893 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.460052198 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.450180724 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.461461445 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.425515864 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.468874159 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.461658675 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.424759066 seconds)
  done (took 36.288117545 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.947115678 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.500150734 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.579771722 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.477503255 seconds)
  done (took 7.83862093 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.477324618 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.478181258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.494525753 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.533415888 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.555915989 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.487723632 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.452142818 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.447234881 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.433622121 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.479268641 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.554886684 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.494405182 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.571152851 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.425715472 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.611148095 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.425271387 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.426039385 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.477919009 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.530497143 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.551692912 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.427444206 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.477694533 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.483070471 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.496163544 seconds)
  done (took 37.127714375 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.426945064 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.445366489 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.426384682 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.425868861 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.434916023 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.425613338 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.426260685 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.427510137 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.426916361 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.432179985 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.425857042 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.439630828 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.426142854 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.426138633 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.433843109 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.427167345 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.431896325 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.426418847 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.426244988 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.432405223 seconds)
  done (took 29.932065318 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.421090407 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.27488982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.773127897 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.67880241 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.4215454 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.42917376 seconds)
  done (took 28.336618636 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.507462999 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.65723378 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.427625129 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.824287282 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.905465292 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.431173609 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.429691566 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.692517075 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.050768568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.048646818 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.49970153 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.504624894 seconds)
  done (took 21.318728556 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.427993613 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.431406617 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.446741073 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.447794447 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.487736929 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.433327086 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.436178148 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.422931955 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.496896676 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.495486634 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.432564549 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.492731278 seconds)
  done (took 38.792061184 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510836625 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473409308 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.46021993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.520476557 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.149980855 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636320343 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.458595264 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.243773727 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.436933522 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698791829 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427108397 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516601212 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.682485662 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430527914 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.434142372 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.546248224 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660162037 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966445043 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427097437 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.801658483 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45200461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426560058 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.896542279 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.696749447 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646398124 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410158334 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.687853321 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.204736004 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.744544369 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442566391 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437695343 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427793485 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.702428488 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143170421 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55086659 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.675530331 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457644616 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.975937841 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.425238304 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.797952717 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.444801447 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430194493 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438018374 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428360214 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.362420096 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.427428066 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.189547415 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.432795428 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.139164163 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428524683 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.727210085 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.525063386 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.431288556 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.002052969 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.42752067 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435289947 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.432259614 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526251934 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999184675 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.245156319 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.44818728 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.371291725 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436373131 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.804223417 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106324131 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.43611788 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.432922069 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.433005022 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363545789 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.806876615 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44676141 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569309573 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.454595149 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09387509 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207010534 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.43197918 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.360688896 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024252333 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430585315 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.372671117 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657938637 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.208636767 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370223361 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.382627201 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.364290011 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19495891 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436613618 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.073521744 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45046454 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.231158289 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.709249744 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454816131 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453959099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.65537761 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.316263895 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430432658 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.44737741 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552085517 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454557071 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190128351 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390910966 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.434482337 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690154105 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.642797341 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431810332 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.553110183 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003173516 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.476124418 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.455021991 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.44631238 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.690589713 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.074968098 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.44903725 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.098592967 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449148814 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.211479249 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241937794 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447233143 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.445283324 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.447881291 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.72638476 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.280586974 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.316326792 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500379707 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439151226 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.432888065 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.962780959 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284007911 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.315625066 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.673672624 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.469530799 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.451007704 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.433180756 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393040064 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.440513405 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439255635 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.219334503 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.658882485 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440847116 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715928613 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366880938 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592616826 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455167654 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.658301871 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.746861008 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.438981606 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69527546 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450329644 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441210894 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453885773 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453089098 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534201836 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456934792 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.439499584 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.699223573 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.43822339 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.438791964 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.830153544 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.212850764 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436274475 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.440411746 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441600501 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077359686 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409925878 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444276974 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.380861109 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.449914918 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503375462 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44149023 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.685608923 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.856543492 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44224461 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.447956151 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.433420178 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68056013 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.446127271 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.826061404 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.51646674 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.997907588 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11802962 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.457984517 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.370052836 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.147385672 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.129177927 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.437046803 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627092181 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.436960768 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.685086612 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.458944131 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439562213 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.086793693 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438394046 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.834484395 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.44352493 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.450675419 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.441712369 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438550473 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.869157174 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.143370671 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455842029 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.456203679 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581136686 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.451672078 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.372600492 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.955102697 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443669227 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.438713738 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.213256888 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471921805 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.838142121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31129021 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.699239531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4573405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.731988122 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.931301626 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.474393801 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.443612831 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450162883 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454705184 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.450289932 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468223049 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.450498841 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.839160537 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89470275 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008415853 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.237944473 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.024923659 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.780979979 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.451314457 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.330392793 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.244831917 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.401882884 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.099544991 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697266981 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.250869852 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423542557 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009713652 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.759753703 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.28220161 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.735607007 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670775645 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.773473718 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.441167609 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.763146836 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6537105 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475373627 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440643741 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.379152181 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.730009102 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089611736 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478812681 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522182153 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253331445 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470060503 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.220021171 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.471080204 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.206884013 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898708441 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.016276589 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.836526057 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.456554192 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456104062 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.347142704 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457692789 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.972831567 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122974462 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.444392226 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.010956736 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.410912692 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.693770015 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.461654138 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.447911924 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.192670216 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.448285164 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.69922851 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.739300895 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379744702 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449666024 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.042315677 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.29943009 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.448592856 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442851429 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247564509 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460848689 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.77118553 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.459495664 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.884215593 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451055383 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.377479357 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377436312 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.137377553 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453829427 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418072563 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977344908 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.464222393 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452119043 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457750416 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302084988 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.701816527 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.458401269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101148385 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681211464 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449009337 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468015741 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.448476231 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445332529 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.43288723 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.326801117 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.681628721 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519420833 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.691261421 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.483820143 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.352480507 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.502192479 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.658395707 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.34262544 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455510491 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726594372 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.163394746 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.452513747 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240890167 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473233549 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.459866577 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.468763036 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.464355609 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466799657 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515959949 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.699196669 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.464899265 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.458427496 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90678138 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.482504099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449620335 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.460871078 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546708345 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.148502177 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.885931307 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.220709296 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.110794384 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.263953339 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.109110735 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.759848012 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.450456942 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451006782 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382156611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597616062 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.97657931 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721489524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.572882874 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.461710569 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470885158 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462337017 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459504868 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669876379 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723067645 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322981221 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451087962 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.120128637 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.608762586 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460083258 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.660845571 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988834499 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056172741 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562512412 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448795628 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.252549518 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.731058487 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.540215092 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449005989 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047460411 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.459304281 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.233842916 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.455575859 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46529744 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.597820889 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746352194 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.174284353 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.488337753 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.605912087 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.224384527 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.004590407 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.716587573 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.043943894 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.71335278 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124521152 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.236355528 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715851093 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520725979 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.703836299 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.573912804 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598055603 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.450619611 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.359119872 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452320479 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.29995069 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.160787013 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.460928666 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111532158 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.717063792 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.454739175 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.44835591 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.482794351 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.461557894 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.676076892 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.231293332 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.676435927 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.462326508 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.459995858 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.025837133 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127964072 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.766310652 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.387908927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.456503858 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731364763 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.696204432 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.477685951 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.905243446 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.164046711 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056921355 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.428100122 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475866569 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452917349 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.262201678 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125269385 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.954751315 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005056389 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.114268643 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461621512 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.736212185 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.459646046 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.453517281 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.737835481 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.457511636 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.461658613 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.717199057 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.125869092 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316023379 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.472028405 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.039999305 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.391708522 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.681928537 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458312894 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389767616 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454911202 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.928882311 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.482108481 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575916647 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466716069 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.467703388 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.47994815 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.215144154 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7475617 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.460969325 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.451482488 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.454881096 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.468078108 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.560811519 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074909896 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481051122 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.131697015 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.80770656 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.713414984 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.459812081 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.449845973 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.459123868 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.45552115 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181434564 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434914272 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.458741467 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065298422 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.460486859 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.474488134 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.460246984 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.673628591 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668629902 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.468153182 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713400187 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472191489 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479288361 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.363844304 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.234600311 seconds)
  done (took 1723.558406008 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479960452 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.484381703 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.473419325 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.54513286 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.513007825 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483151034 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.48889679 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.482272683 seconds)
  done (took 53.320398665 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.459002613 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.614635064 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.491648475 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.474751758 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.466799494 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.465185885 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.968171134 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.48133414 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.468425844 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.468706734 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.472459198 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.457778265 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.161785901 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.468023493 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.459131221 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.455756704 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.467636087 seconds)
  done (took 67.678366989 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.97275757 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.492056592 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.931572531 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.470851401 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.505545729 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.46993715 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.975343383 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.490033809 seconds)
  done (took 55.680780512 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.470659169 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.469857849 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.470705158 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.470280721 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.471055133 seconds)
  done (took 8.725102467 seconds)
done (took 2136.957746092 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.463775739 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.465541145 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.463893717 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.466073779 seconds)
  done (took 7.23164855 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.445703429 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.187093279 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.447880819 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.463364174 seconds)
  done (took 18.916879914 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.465970986 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.486142872 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.288199582 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.179563051 seconds)
  done (took 5.840780156 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.217672527 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.223861046 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.207104321 seconds)
  done (took 8.021869647 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.459792458 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.468439782 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.46804789 seconds)
  done (took 20.769454374 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.770346774 seconds)
  done (took 3.144669877 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.609378259 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.657093488 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.776774962 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.798592121 seconds)
  done (took 8.21569644 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.870278707 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.83113743 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.64884898 seconds)
  done (took 6.724343619 seconds)
done (took 93.18936664 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.666913571 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.46390108 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.66941506 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.638173777 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.696888174 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.668459732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.883526884 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.598825714 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.145319584 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.136014488 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.642035078 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.697566811 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.61787832 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.462562749 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.621058158 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.708707737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.699704805 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.721615562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.369172867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.466582847 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.88586541 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.2777164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.472462755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.298000983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.699839257 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.613797512 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.861093824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.709038977 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.474698607 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.888432898 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.617371682 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.463097246 seconds)
  done (took 202.211399079 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.462207272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.463274138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.463288833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.463837462 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.469382032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.462637238 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.464184593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.464288932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.475563655 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.474504784 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.462301386 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.463045071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.466111285 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.4629191 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.484191268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.479811232 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.478508524 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.48091631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.463942969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.465888982 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.464332448 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.464351071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.482804849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.48305752 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.463996715 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.466572461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.486574424 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.465576216 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.473175633 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.480267697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.464672374 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.484477961 seconds)
  done (took 208.427545384 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.46595425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.47584559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.46748708 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.483240956 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.467887726 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.471570564 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.483384377 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.474336497 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.465242951 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.495653499 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.465064335 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.475988761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.467595107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.46622059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.488443057 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.467830714 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.484151711 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.47519709 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.467262335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.46752052 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.469039081 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.467353639 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.473594383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.467719373 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.475350919 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.469356585 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.47344789 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468902139 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.483085899 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.467986167 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.488420778 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.476974009 seconds)
  done (took 208.536255099 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.670854222 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.475396617 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.475713701 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.409794729 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.476165756 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.476495589 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.470520717 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.673774249 seconds)
  done (took 15.510763117 seconds)
done (took 636.059744667 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.894044608 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.590975311 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.683599777 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.496054985 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.355513208 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.518255641 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.497234649 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.683285256 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.449112939 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.691220629 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.840896677 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.494584221 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.991580416 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.494779994 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.774206834 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.60515617 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.439119878 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546749722 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.838893608 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.136778186 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.774404057 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.058902448 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.687702931 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.451504431 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.008348885 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.049500203 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.261974237 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.425461166 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.497340837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.847282038 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.323348263 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.564902597 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.545117861 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.548230695 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.604762789 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.60449107 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.522305473 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.564130161 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.687835319 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.823315367 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.122756568 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.257691971 seconds)
  done (took 99.636445516 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.467950133 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.467397785 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.46638547 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.467862319 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.468619002 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.468056569 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.46752095 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.467196534 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.467899222 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.467401356 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.467294045 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.470736166 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.46842541 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.469507345 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.468571369 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.468848033 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.469634751 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.470033778 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.467867902 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.468443429 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.468671978 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.467540223 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.46823867 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.466495495 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.4689455 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.469078281 seconds)
  done (took 39.559175806 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.480900576 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.743097427 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.925499528 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.487818249 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.480431187 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.485048502 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.571351897 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.490306608 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.483395945 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.484257029 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.642814413 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.482956795 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.5164736 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.950061947 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.483709492 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.482046843 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.482171921 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.481826196 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.749408912 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.490079796 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.591857783 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.487595386 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.572602166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.495407654 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.505785423 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.482391221 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.486669356 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.058786276 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.485677945 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.644129725 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.401043652 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.574316227 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.034476192 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.935538626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.402788018 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.491117347 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.483203508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.64826953 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.485212623 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.483041567 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.570698779 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.485467113 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.93511969 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.182476088 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.512797706 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.483724214 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.08193555 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.647667391 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.760520279 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.493628758 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.976173275 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.495698143 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.48512854 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.486350269 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.760273405 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.491093915 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4827829 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.120628763 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.517596896 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.571413714 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.487004657 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.484734482 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.759413737 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.485276191 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.748323272 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.488256955 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.491823017 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.506552477 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.948610742 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.495861016 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.210017402 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.515694199 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.486628442 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.646170745 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.751823519 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.1182275 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.491031509 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.765811854 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.049595243 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.573073964 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.498410875 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.052250182 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.579440755 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.498803647 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.487849235 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.487341919 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.486522773 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.533247241 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.572397003 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.144434796 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.203753339 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.161478354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.606585959 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.502596236 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.486835179 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.126474613 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.516482758 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.48604917 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.947046274 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.219770075 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.516676955 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.49354222 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.216151821 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.518160411 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.577336213 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.500541116 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.958081255 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.496479385 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.533291583 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.4874927 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.493793561 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.51277807 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.576732265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.50082869 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.488528679 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.180130945 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.684628073 seconds)
  done (took 195.912787979 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.483207242 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.481641253 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.482008254 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.483166416 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.481884606 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.489960061 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.481598779 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.481500456 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.487854642 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.481021723 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.482399946 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.481053072 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.4833565 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.485233246 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.492811757 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.48964787 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.09377518 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.481825205 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.484020948 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.482632618 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.315933948 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.492813628 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.483696897 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.483739964 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.485230008 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.483503668 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.486089889 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.485431308 seconds)
  done (took 156.401065263 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.491555128 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.119235327 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.49093311 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.641063441 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.519533906 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.487895501 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.633637277 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.553778703 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.4917587 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.488500269 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.488117876 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.828950702 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.492544734 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.067270831 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.713750801 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.646120793 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.065017342 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.511403604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.488636637 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.487832319 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.642302231 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.507675472 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.829378887 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.123292063 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.493444336 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.124146327 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.482539779 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.491488229 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.490554106 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.124073732 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.490377745 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.833411686 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.57939955 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.565959531 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.125509773 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.069206727 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.089197062 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.663109142 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.501031979 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.490037947 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.490833355 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.482654875 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.126366647 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.495341299 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.493797386 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.124539293 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.513529438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.49354649 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.498938502 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.490681879 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.558792661 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.560688939 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.836409586 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.133900209 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.578809387 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.505079333 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.642775334 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.909562814 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.495050651 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.070060313 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.48196568 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.131756611 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.515136993 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.484060202 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.492261769 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.497581262 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.660697596 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.643163062 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.0749582 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.514734894 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.070676375 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.682072199 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.492540307 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.492403846 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.496195009 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.130865469 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.073018137 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.681005141 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.644587769 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.715886787 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.484977775 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.493463003 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.485580333 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.582612828 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.49788587 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.1336116 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.093205089 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.515704113 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.49568922 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.496274934 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.495099527 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.694297106 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.133217522 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.582075553 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070708576 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.85847265 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.839622339 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.497767788 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.560374721 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.514651526 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.841027797 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.498632352 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.560194643 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.973853521 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.840153759 seconds)
  done (took 178.540140052 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.770473612 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.775952984 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.5916989 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.658835735 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.133225077 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.079497069 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.863685809 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.659438954 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.618038223 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.778347094 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.747703091 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.585490712 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.724406742 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.578665279 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.251400277 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.569484727 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.592990408 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.663085682 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.644321016 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.580825801 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.17752888 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.797688706 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.708900438 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.566608339 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.596821769 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.317199449 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.092205587 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.032308913 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.68308764 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.893421849 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.066382799 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.681935006 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.545207667 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.228684362 seconds)
  done (took 71.659089337 seconds)
done (took 743.090793039 seconds)
SAVING RESULT...
DONE!
