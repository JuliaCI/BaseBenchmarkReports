cset: moving following pidspec: 27461
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340942035 seconds)
loading group "string"... done (took 0.480621972 seconds)
loading group "linalg"... done (took 7.871901976 seconds)
loading group "parallel"... done (took 0.177227868 seconds)
loading group "find"... done (took 1.285669237 seconds)
loading group "tuple"... done (took 2.028662921 seconds)
loading group "dates"... done (took 1.43589766 seconds)
loading group "micro"... done (took 0.252817754 seconds)
loading group "io"... done (took 0.690091179 seconds)
loading group "scalar"... done (took 42.357763689 seconds)
loading group "sparse"... done (took 13.390907934 seconds)
loading group "broadcast"... done (took 1.236479173 seconds)
loading group "union"... done (took 15.092112841 seconds)
loading group "simd"... done (took 4.938528291 seconds)
loading group "random"... done (took 10.13335382 seconds)
loading group "problem"... done (took 2.039541223 seconds)
loading group "array"... done (took 22.963524637 seconds)
loading group "misc"... done (took 1.464592503 seconds)
loading group "sort"... done (took 3.647077638 seconds)
loading group "collection"... done (took 19.797880271 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.467025459 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143053987 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14613031 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152450752 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188173665 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1414827 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.16122367 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.112468408 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.91586049 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.179100218 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143082231 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.509232473 seconds)
done (took 4.99434861 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.221523071 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081816456 seconds)
    (2/2) benchmarking "String"...
    done (took 0.094478735 seconds)
  done (took 0.853923986 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090544781 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145247108 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.090461375 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075282122 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091753241 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076097608 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075876753 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092344831 seconds)
  done (took 1.328431262 seconds)
done (took 3.179350309 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733286904 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.280236998 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203155017 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.506417056 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.176317171 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209145686 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.664869548 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348142562 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.24787865 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101056299 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.129654628 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397609213 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.116995485 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677658433 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.085651511 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12628498 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.169473865 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448662198 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090543143 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091357652 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.113869028 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15153584 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.114509328 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.087183196 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.18099087 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.079053286 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.186708052 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.105630309 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.076605255 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.283700511 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.19867639 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.677174021 seconds)
  done (took 10.775342774 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11431578 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136728381 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.093337945 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136240169 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137660658 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080609034 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098460486 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.076281442 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121183507 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177198169 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.131154854 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139079919 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075559792 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077439409 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114861209 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244465757 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101347198 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118475212 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.095521237 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.089388144 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.133231182 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093792352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.105775163 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08860562 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166591555 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.216542461 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110076446 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123947743 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094039276 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095689196 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141272978 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.155556852 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074916082 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.091675669 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175297196 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.104762611 seconds)
  done (took 5.025234653 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188848089 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10054388 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.185314667 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.143138686 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.141330147 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165975556 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095229691 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259768579 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.116552818 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176029902 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129265749 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.112575621 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077316959 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.09717779 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074991556 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741552156 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163539087 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111577014 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113309652 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09507301 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083811914 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368298429 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082158376 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090657215 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078739912 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08517118 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.155058303 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078885979 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.190616353 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102612645 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.096056992 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112274666 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.202840675 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126231076 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116757579 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094252492 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073166713 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174396076 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098723863 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.076956555 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119807709 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114726351 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13161512 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.090207992 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.15598575 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209662685 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094156401 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073956103 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.107540984 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076476759 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.99329794 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177303508 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090413877 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.074765463 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.335879622 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.113365309 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075540407 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.092155796 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.273838996 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113207832 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096231449 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077099784 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097059055 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079430234 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.38993475 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095205443 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.696769332 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.080635763 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086460326 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095574022 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09484906 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074740079 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084679803 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102784135 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096217382 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096411359 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079407429 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.095914173 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.075921414 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.096486315 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.097913812 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097844442 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07534197 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160880277 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075755756 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113160892 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122128783 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.078500231 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.074147877 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128027271 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094492432 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.076483517 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132854267 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076359284 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111541225 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.092812333 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.124018283 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094066111 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.07357487 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.173549759 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076154855 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122650183 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.082845143 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127492246 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111086646 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079317106 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.099258209 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.073860365 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.092955353 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145734132 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092329662 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07873426 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.09564338 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.091520276 seconds)
  done (took 22.265594994 seconds)
done (took 38.74527091 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.353083344 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109325713 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10948155 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10855182 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.105344944 seconds)
  done (took 1.53607704 seconds)
done (took 2.26331119 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.27513509 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173534175 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072563292 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.185998618 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074056318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174965022 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159556331 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.108926321 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.183607279 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090934089 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163882656 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072710202 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089783816 seconds)
  done (took 2.573878802 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09274415 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112293934 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079387434 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090422423 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0905052 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.091835346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107294965 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099164087 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109102217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082975519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091625374 seconds)
  done (took 1.771362036 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.090932361 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110494665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.079101114 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09020921 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089073847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090045346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10608929 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096679825 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.106500118 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081946865 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089901953 seconds)
  done (took 1.753781883 seconds)
done (took 6.812852782 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091186161 seconds)
  done (took 0.807607905 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.024754272 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.533386978 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11665905 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.16249373 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.327230184 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.208009475 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.567805768 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129630837 seconds)
  done (took 14.988097424 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.112022665 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.097609413 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.095430783 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10007297 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.079242818 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099057055 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.080922329 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.096401348 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07925848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099602422 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082363549 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.100126759 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082320768 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.096163866 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.082402386 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.081408295 seconds)
  done (took 2.247702512 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.117706414 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11700525 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104262162 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.088596171 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.102324781 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.084593492 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.104085363 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.103204176 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.082985363 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.101535379 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.088961519 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104871635 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.087602957 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.099085017 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.086775077 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106192615 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083442782 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.103554412 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.087623145 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.104378057 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105803478 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084787449 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.103063456 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.08851705 seconds)
  done (took 3.176901339 seconds)
done (took 21.941331297 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150835885 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084175341 seconds)
  done (took 0.96326174 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098358281 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.118550808 seconds)
  done (took 0.951748776 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105477775 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095193259 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137166731 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.098295899 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.097948861 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.080897575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.131526426 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.098012265 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.080657142 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098307185 seconds)
  done (took 1.759203422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082854015 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099550985 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088304908 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.117375572 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091554678 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.100761704 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086607889 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100874553 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.087146819 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.096153046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.088856649 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116104098 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.104420662 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.100334166 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102872316 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105040613 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.091367 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.101568675 seconds)
  done (took 2.498103469 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078488486 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.080987602 seconds)
  done (took 0.896088182 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081594194 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095234576 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083335018 seconds)
    (4/7) benchmarking "year"...
    done (took 0.100132243 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079102824 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.095394024 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079086174 seconds)
  done (took 1.35208549 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.496540037 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.143293224 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.274028546 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084269542 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123205906 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.317944589 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095412004 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08437643 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102994522 seconds)
  done (took 2.519805292 seconds)
done (took 11.676207223 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.088880571 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116168823 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113670828 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.475134311 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.116033307 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.079128243 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159267252 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.265566729 seconds)
done (took 2.157359087 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146673652 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338663661 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.123097587 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087521593 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078931209 seconds)
  done (took 1.373119626 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076308857 seconds)
    (2/2) benchmarking "read"...
    done (took 0.081898824 seconds)
  done (took 0.905392863 seconds)
done (took 3.1698402 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07698358 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.078126146 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.092524192 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.078427632 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.093028555 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.075614383 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078210313 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095815725 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.078586185 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131011472 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.078098469 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097456504 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.075957262 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095096669 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076784819 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097146945 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075196224 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075308502 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093123295 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075736462 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094487074 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075933267 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.075713386 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095460451 seconds)
  done (took 2.839504169 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.107672395 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096308398 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.085173975 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.10143989 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08348044 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.101264049 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.085374666 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096841722 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085347349 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098097839 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099858896 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083601168 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09881431 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083767585 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097797592 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083644621 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.101747135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079832165 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097909387 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.083636822 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101431476 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079946803 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100117617 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085089415 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099841263 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083146487 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.097903926 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.079419673 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101838085 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.100233589 seconds)
  done (took 3.530156043 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.082529379 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074731567 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.094040474 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.084656935 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.093934067 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.081766111 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.093350178 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.077144342 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.077424082 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094032405 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.07820815 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093777067 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076462171 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096029027 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078826767 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.080044099 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107594316 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.076624708 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094273736 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077933835 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096818137 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076689343 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.078571287 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094042861 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076254545 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.093663782 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.077306941 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.09332149 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077598305 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075727443 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097251112 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080055405 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094246091 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083409406 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.0974322 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076540569 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.19122625 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.090853727 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.075792049 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091451893 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076101693 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.075915171 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093961057 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083407391 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.098365081 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.079260595 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094116892 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078782457 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.094527213 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.081207853 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076002646 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093560594 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079311611 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09558714 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081458573 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09346243 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.078025575 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076036601 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095631099 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.076808466 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093876218 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076388216 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096012794 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077483653 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.092796554 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.101407308 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.077061802 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096064104 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081240733 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096616796 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079510143 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108490914 seconds)
  done (took 7.059369255 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080340985 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103292451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078833824 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.078366585 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092753529 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.078698125 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098507304 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077675974 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096402697 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.096389907 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094772607 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078746591 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096877009 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081521284 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094876946 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07945569 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105998964 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074989173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09440892 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081221922 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09486174 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081589497 seconds)
  done (took 2.691897332 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.215655812 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101926922 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141273861 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095039434 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117496558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112262028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.084679648 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103454145 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08464151 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104833778 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087665928 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101812524 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115464095 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087992449 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104817374 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089498279 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101394809 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.106751408 seconds)
  done (took 2.715306844 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092249257 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.094913882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101649125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095300376 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.078009084 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.09839726 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084579365 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110889957 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08030332 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096920698 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090399288 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099272376 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.08142595 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096256106 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082822859 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.097815684 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.082953407 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098057425 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091739217 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10430194 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104420183 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091660044 seconds)
  done (took 2.810406838 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095736141 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098140288 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101078808 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.1009507 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079523523 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.098337378 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088216259 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.097353013 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.089412453 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.098876929 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079950976 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098851942 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087679269 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098497508 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.086743663 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097787617 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082570997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098058818 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083098288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096068129 seconds)
  done (took 2.619089548 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119144811 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112799152 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095170417 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124619848 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095181912 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115046274 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.124103217 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.095036979 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113074395 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109514263 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11393006 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.11352742 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106222296 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119477139 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095950312 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123579894 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124307269 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106530432 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11256561 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094527064 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127043565 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112625459 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105462892 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113365362 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095380116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.114352145 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094909741 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120155449 seconds)
  done (took 3.85438929 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077131714 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078463401 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.094903953 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.077529351 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.095206935 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0770069 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076694756 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095006664 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079669651 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094902595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079509451 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096352152 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08008029 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.079559987 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.09712762 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.079497881 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097066737 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077376232 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079203167 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094903896 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080090099 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096639823 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07999335 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094788023 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076992143 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07923283 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092778933 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075105645 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094739354 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075712938 seconds)
  done (took 3.314556504 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088490231 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103123407 seconds)
  done (took 0.955544141 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.075452831 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112289499 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075495734 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081151079 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102296242 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07827841 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105844626 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101311155 seconds)
  done (took 1.494798861 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096136844 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.114355391 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085106116 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107042255 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.096987223 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.113311085 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.158778411 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085812286 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.083779997 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.093772304 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095450575 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095155537 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.083555576 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096664614 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.084278582 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101123968 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.080180795 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.104966898 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086083768 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098304789 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084248809 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107576287 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081918891 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.092475073 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07996202 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107250301 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087843026 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097998857 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081868226 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.1065185 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084912932 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.071996383 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100889968 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.083696225 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.097721945 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.095783235 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110699593 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082400328 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.104698923 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084040247 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105257721 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.076803366 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.101881362 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.084212639 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106179862 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084403374 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101705603 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077909451 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.092929594 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.081702404 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095202565 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.079788676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.074496838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103673201 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.083323253 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110234019 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.082021357 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.097446055 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082350952 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.099098335 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088935969 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.09844308 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.081647191 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099655767 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086755489 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.100184043 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086594572 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094335181 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.073158646 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079645029 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105367096 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119256091 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087461227 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101189991 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085733668 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097054405 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.082511893 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103439076 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086795866 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104910288 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083740334 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103365728 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087220067 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096482535 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.081948947 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.084934281 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098729748 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081565955 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093994413 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095207489 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09878396 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079476227 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.093771552 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088644025 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099639929 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.083141451 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.093246852 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.085893587 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.072348366 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.10158752 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084779647 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096874518 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088377254 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102011139 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084980067 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.103838468 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08923723 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.095655142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.082229441 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.092949361 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084250556 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098145509 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.086354452 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089800933 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081846591 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.080474781 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101891724 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104150687 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08064037 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082726932 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104604022 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086164145 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099022537 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.076034733 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098948702 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083695259 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105978578 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08589687 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0984743 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077807752 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094440011 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.083846409 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100634322 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.084265616 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101645666 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083023349 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.072934255 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098716269 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084764406 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10544369 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081006638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099596313 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086867558 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099976244 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084148384 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105399876 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084239301 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.098726444 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087385478 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.100985211 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080298576 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108066078 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084766532 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083080857 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102947272 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089623382 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.099220786 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.084249608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099292205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.084056137 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102097634 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078221829 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096154775 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081554831 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.106598993 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081640071 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076900202 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.094395225 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.085657813 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.094667695 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08333832 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095670871 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081206177 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101193169 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080037407 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099258586 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080265069 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112707028 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.091850264 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102392197 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.084901696 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.106521557 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083032851 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.097921192 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083678462 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084014015 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.102778991 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.086345269 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10257776 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084185208 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099863936 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07544078 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10259855 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087195227 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.096659122 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.080514953 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.095290147 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.083710157 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.103594959 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.083572324 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101519022 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081210056 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07934782 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106247186 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.082480695 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100100598 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.078411633 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.101171635 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.078837204 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.103094222 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085709714 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.107078051 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.082716572 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.095099571 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088738628 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099296149 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.086754857 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095224725 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.077171106 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.077590432 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103705294 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082776701 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.100711942 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0737729 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104863277 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087955997 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096812092 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.079317605 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102604986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088386683 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.098774111 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083232675 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.081716932 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.104791437 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111230184 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.078396874 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082545096 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.107177758 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.083140549 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09123803 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.085108281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099380418 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.07918248 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100204976 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.08179247 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100000567 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087092499 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.102769669 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.073838009 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.100105664 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082085739 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.077827864 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097751479 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.088577895 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102209054 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083654968 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109770053 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088940498 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.10659198 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085548884 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102428084 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.087775819 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106562877 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085719604 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106131974 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085481965 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098333027 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.0829138 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.078656309 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098374638 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.081636102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102073318 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.080266357 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102839942 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084146833 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098257604 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087229931 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.10498944 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08353661 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100219577 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081442674 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085695132 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101575778 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081260112 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102680746 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080537809 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108230278 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086676488 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109189734 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08244887 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097375883 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087818187 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.10308164 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088285404 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086589854 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.107017184 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.082323576 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.1020993 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082486526 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107257618 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077138983 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.107084135 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085492728 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098092456 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083575307 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.096838512 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.081282859 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096421362 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082226855 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102668857 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.080065845 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.08257057 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103956574 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.081906025 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098251174 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081508836 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103385408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079924047 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10329235 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.073945776 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.096737162 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079230292 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08368237 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.105606829 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08370729 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.101289939 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082270142 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103932866 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082826039 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094100962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.087705905 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104629107 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085047974 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106771507 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079621687 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.098626302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090397884 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091698474 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082217971 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.07974368 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096448711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087938237 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103589213 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097318206 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097356479 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079949165 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094578732 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085603402 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100246853 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.074823799 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079540308 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100961075 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.08179598 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100725355 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08517116 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100527366 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085716562 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10563383 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083565504 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.099579848 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085630105 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094334869 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.078280029 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078520226 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.1009715 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085220953 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095458301 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.077669268 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101095096 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082564557 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097998351 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083834138 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.080902535 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106162555 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082969865 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10092855 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089599895 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093284428 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082775758 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101481322 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08431349 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.097195601 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084205577 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.100935709 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085578238 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105619734 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084276086 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099083815 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084570989 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099101523 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084413327 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083245156 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.10339756 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078854852 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103760022 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088483063 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099395019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082498087 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097748956 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080248634 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.103399262 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.085767663 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100697756 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.088378368 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.101071552 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08211841 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086618423 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104066152 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083669596 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104788794 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081643024 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.105481643 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078871543 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107882158 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.080291704 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103915184 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.082414546 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.096122507 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08415361 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101667034 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083100373 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.084198382 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104925401 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078823483 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097877881 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08118704 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.101240881 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089338011 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106952979 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084250349 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102057058 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079780927 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095477381 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.08581894 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.076175665 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.100211155 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082064781 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10521558 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.081979264 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.09925983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08257824 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.10582057 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086677194 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103234463 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077448244 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103856746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085511619 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100640859 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.081811197 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.098376848 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085974131 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.103467086 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.081968497 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078716422 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107688123 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.083698199 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105074219 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.081832563 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.099790021 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080203678 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096159587 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085891985 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.100116967 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087142117 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100947711 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084705259 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108534038 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08021966 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.098603374 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0907695 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101664752 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087455223 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.077881283 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.100272617 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085563076 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104453246 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078473614 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.097727121 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.077851479 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.100668849 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079626384 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09651102 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091358091 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.105965355 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.084109733 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101645214 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083644367 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077584474 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097521395 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079917241 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105045426 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082110895 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108814343 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07980768 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097162975 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079452696 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102168307 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083525689 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.083471482 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096267033 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078277273 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.096963139 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.083307949 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106664897 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083179078 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.103122323 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084255177 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100998656 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082553053 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10747071 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07732319 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08368346 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111057968 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084494451 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100190193 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.085835411 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108716827 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.085137798 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097914687 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085825394 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.101890423 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08053744 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.104640035 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087492167 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114748205 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085425999 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101088662 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.087129064 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105409204 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083039049 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110050621 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089636681 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.107666191 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089334891 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103584098 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090897163 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085834474 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110488913 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.084566297 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106066628 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085483639 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101847972 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.085748539 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100405434 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090139613 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106991928 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085542533 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.10694972 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.081815743 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111736305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.08958654 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103288805 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077810781 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079224388 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.098469969 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.080890824 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105185112 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07884871 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.100249628 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082833303 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082121817 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.100076655 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.086178078 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102300531 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086421096 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103554749 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074725873 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.100013192 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.084431869 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099266775 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078407687 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084157188 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10536078 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086606555 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109400877 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.080115402 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103258781 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.08249098 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099814843 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080333569 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.105597967 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084466446 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.101211562 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08062488 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084040032 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106233764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083797954 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105515461 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086777233 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102839259 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.089986003 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10698406 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077826239 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096085188 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086531546 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099940091 seconds)
  done (took 55.63743678 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147347775 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.087269199 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076578477 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099157009 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.125352028 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083281092 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09565536 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082291331 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099190538 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091025289 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094575305 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078567534 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117808349 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124776723 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120554235 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091258049 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094143606 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080363719 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094268929 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081333821 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116267046 seconds)
  done (took 2.894026458 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103625972 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.114238063 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112639654 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098757001 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106499086 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.112431792 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.093584602 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113411785 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.116786862 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08888088 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117391216 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113188312 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089240898 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.106685396 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088847075 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110835429 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.116645676 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087545541 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114487742 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.112099529 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091992196 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111836207 seconds)
  done (took 3.133492109 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088610328 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082864978 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103204003 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.075129747 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103246486 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.075748545 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.107767337 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07799681 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107283077 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.078917175 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.07790228 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.098103776 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083940229 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096184189 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080938015 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.096819383 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154138613 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.08862614 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.103212548 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085569432 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.096909923 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.082892352 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077503492 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.098717728 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.078759691 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.11219846 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08570693 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.103369292 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084317026 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.097854119 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084397109 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.077494616 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101233402 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.080738327 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.098354816 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079188104 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102439204 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085400017 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077750498 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100114026 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.08036106 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098895165 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085029998 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.101067927 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082734878 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.096656438 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082146054 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083599283 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.095236482 seconds)
  done (took 5.29256577 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114282727 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.136430107 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.106001771 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143911199 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119776212 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095502129 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104807948 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142762134 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.080860181 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.102964526 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.100629337 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.118752793 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105286627 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.08963877 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107012604 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08460062 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106866665 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.079401913 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108657956 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099927704 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090311216 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106678569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.098485026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.116295577 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107951485 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083300318 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100332062 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090820711 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115671106 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108810178 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091152685 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110724622 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119264184 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0875279 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099296603 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087221982 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120423358 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084351779 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106873312 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.077829161 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106875831 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107965893 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088188497 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120735597 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085079101 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10711174 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.10250567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.078764488 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11540277 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087040134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114867778 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117634108 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090184398 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103820136 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089595894 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119747701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103851513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.082630667 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.106950777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096761458 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.097676718 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089615227 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117030322 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104952509 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094221695 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116680856 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105746669 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089939588 seconds)
  done (took 7.95201304 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113841589 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108598304 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101473464 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120944316 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109277172 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090481055 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108056401 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088631596 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108964174 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.114497049 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08995006 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.155246043 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.105406921 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095995739 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.108509207 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089245725 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108743818 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089083446 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.109509796 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088434787 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.109323891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120380226 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.088821588 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120335812 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12202937 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086478772 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109586783 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.088178289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120737846 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108954458 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123866387 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.089684007 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108314903 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100622422 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124117001 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108000526 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085040801 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.108749157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091093122 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108963496 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086534115 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120098793 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110800868 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.090306634 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111804204 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.093605256 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.124620777 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.127444735 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098870351 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120164176 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113098903 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103910061 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114185969 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.112718893 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104086516 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.133039632 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123420591 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124054448 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093723184 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.125039301 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124175518 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.110693203 seconds)
  done (took 7.522500781 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113654328 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116724885 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122237002 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077001456 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100027534 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090166073 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098651058 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079704673 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11532751 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097105185 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11920511 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109511819 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093892572 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118848664 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109048577 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093740234 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110179204 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109484007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096065556 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109752021 seconds)
  done (took 2.913905669 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090845901 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122152423 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.082931478 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109700956 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.084613514 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.109510533 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.083707965 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104669596 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082442621 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105119181 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094150417 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115138608 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101453729 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090486178 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114064004 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088678936 seconds)
  done (took 2.408950392 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095708507 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123644819 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123606032 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085653331 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104731498 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08224671 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.087455781 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102122823 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081174531 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124217314 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084684918 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.113526431 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087185927 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.105388061 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.079965559 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108303628 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077864275 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.101232811 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087746157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125272036 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095476515 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.109292226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.087594381 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109554809 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10575125 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.092010623 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106531189 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.083517875 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102513657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.087337799 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.101184894 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090548953 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09785517 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.080851058 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.099240713 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080641529 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084906795 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.11021722 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110217592 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.086042121 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.081070077 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105700704 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086957823 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106699769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080933227 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107741849 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.08100216 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.112125677 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.083399158 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.106075786 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.088069902 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.109795568 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.087089767 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118358095 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089953684 seconds)
  done (took 6.18248585 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097972009 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106253603 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077749201 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078047432 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106289148 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.083083398 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107488321 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.085097771 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104154352 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079022339 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104982564 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086538705 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103794268 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086320646 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105105887 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088375814 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.099166525 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.087235123 seconds)
  done (took 2.526855288 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.088263313 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080899345 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.110911853 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081515909 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.103089951 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083812361 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099166827 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081735901 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101523279 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08349782 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102152828 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085738444 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101221036 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085133321 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082360631 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104191579 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.084216742 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101558091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081450107 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097661094 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086766109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.099975568 seconds)
  done (took 2.867841414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119509049 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.121655595 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093642122 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.213161118 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121902723 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.108496444 seconds)
  done (took 1.615446578 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107469714 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139127088 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.082919018 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105330027 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095031002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107583408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086357098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108141807 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118783243 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121740694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087849742 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11880839 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099147592 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118438084 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11496208 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094284957 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107280541 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106699343 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084229285 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12741707 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086325615 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120092785 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105670973 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087627902 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106656335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097914083 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119060477 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120950146 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086381535 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120536308 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115129279 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086703128 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120010578 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121064774 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085239366 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119630789 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106648428 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108841514 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116410845 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117565818 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084833752 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115591701 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099116512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1148214 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119150924 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08680358 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114566963 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106949084 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087256172 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136086365 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115122571 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101125988 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116279005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119066091 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099346515 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136054372 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122095664 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117929552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113704601 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10133948 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119365185 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114903385 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099960602 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121824756 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116319332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119359244 seconds)
  done (took 8.021763003 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120588913 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105245049 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088010747 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122414673 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11818477 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086665344 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108776768 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106798099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088114386 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104282081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153511213 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087548259 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118549083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118105319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087833932 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106754286 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087907895 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119077778 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083681806 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135820579 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108061463 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118830231 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099070011 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120079422 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12177686 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114982927 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087838684 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106756024 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088082193 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107761976 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096085972 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108302723 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118903802 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084337573 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119095825 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087163211 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10798109 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114000458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088252157 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114553724 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117997266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108214656 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108743794 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087271497 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123034121 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108567901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087258452 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105270863 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088199331 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105567513 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121904657 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101617168 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121541012 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119476208 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106661841 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088311241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107144978 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087586747 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107569997 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094880311 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119644778 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107469797 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136225758 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088473757 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107897536 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097193963 seconds)
  done (took 7.856531123 seconds)
done (took 151.457683824 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099448673 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136227272 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.10087224 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.17048624 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083952504 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.135960783 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115248941 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117121575 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083005021 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081712908 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.103990896 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.084386351 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168157844 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.082977853 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.102422077 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085250875 seconds)
  done (took 2.592884452 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.180220863 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.29298121 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.100305353 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101165933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.087000755 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103440714 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081215998 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089578114 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.10591649 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081595678 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.103196423 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083071263 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.102412099 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08394164 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103927313 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.082965679 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080989442 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103831408 seconds)
  done (took 2.818350699 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112163872 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141412351 seconds)
  done (took 1.103864503 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119155807 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1751126 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273232442 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152417863 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133465518 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09742878 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154597167 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.123889582 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.2043705 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.12743639 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.127105205 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.089796067 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136950049 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09145793 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.112605182 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088903124 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.138837039 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.109893328 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091239791 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.111384002 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115778884 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103089851 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.092202128 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111238516 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18729567 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.124971132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.082899676 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.080474641 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112483645 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111406953 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.089865666 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.117215538 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104019013 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169325749 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.095680157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.150546462 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.11057165 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088387974 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112464519 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088329168 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114821672 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113465437 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.097455009 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.109034026 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082550597 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110395219 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084820585 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081387176 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112044176 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.090588401 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112497294 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.109240486 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150642401 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.091742208 seconds)
  done (took 7.214545575 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.817276153 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151626544 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087323368 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.918163499 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136155834 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100048804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.808090314 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13287777 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.231877065 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.79772078 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12752144 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119083294 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205823648 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.247519496 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.900574398 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310008969 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.69064535 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124183303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.354707119 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.146099511 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.093603664 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134168894 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.125212344 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.404142427 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.111047479 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085942951 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114453311 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.116926625 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157310955 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.088209641 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.111366515 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174250938 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240146124 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.20258683 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088561012 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107229157 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087122589 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.161479998 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268926736 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213996002 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.151192613 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104785281 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085717731 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.11858785 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12595887 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084212034 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.158549432 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.166813562 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187598732 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.090191351 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117467566 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094449069 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.117233759 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15917387 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083073004 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314706755 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310217598 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.106591198 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094685508 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123517889 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240439522 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108090798 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221690364 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113008011 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211728778 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.084494024 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.781478057 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160777891 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.10707242 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.093205394 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.113534269 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090473728 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117837862 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161666329 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.385322412 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098658225 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111227643 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085325243 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230263731 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086860512 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106228415 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158742953 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.087628365 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115325814 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097289748 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117980815 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.162862868 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.21639088 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120205914 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115489646 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.089906812 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118794411 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.087577187 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20719423 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217910549 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.153755283 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.204588473 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118121748 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.158632512 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.15949388 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117230955 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164220091 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114494728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098814023 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1197851 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212856212 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.136306458 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086908136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.111183978 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.093200037 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.14067606 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087942062 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.114896063 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162999528 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.476279484 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.162438593 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.082508561 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110530229 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094779396 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.157211136 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114007942 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233571471 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117520588 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160606139 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115110435 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.082967888 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115073014 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.159758247 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117507413 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09437752 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118574614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.092549063 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245133078 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.195302861 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119740964 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.215406766 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.176549681 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114659907 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167365473 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.113989543 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.164947652 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094076658 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117776078 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.086094156 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772486844 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119060762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.092488185 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111755299 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179895076 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.086949932 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085109483 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108566862 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082491744 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772873935 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.087338945 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.106139812 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086879417 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114981054 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.092252728 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114127678 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.08875745 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179574442 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205649269 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118447384 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113324254 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087153029 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156384206 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109629418 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087005023 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108184799 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088435433 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115363906 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090971574 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107656949 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167114545 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.155788119 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218378458 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.57576515 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108188841 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088527941 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.225260371 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0862314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.284536837 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114537914 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.202705123 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182474242 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085528891 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.305483571 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164721335 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.181987029 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089546987 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.165404246 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106696379 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0914658 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179115805 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087863072 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113314284 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.157314272 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099467254 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121655762 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925300327 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086804064 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222629794 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.105743476 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165253577 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087280864 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119316054 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289753726 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086784596 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125525547 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16034264 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110483965 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088437293 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.729648127 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.110339869 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095837733 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116290758 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220380069 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162403014 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11421598 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093882227 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117697958 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.157739343 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.205605129 seconds)
  done (took 42.474080898 seconds)
done (took 57.053702983 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.283698929 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213538268 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265629956 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166758833 seconds)
  done (took 1.878157504 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.178930965 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123844793 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.144433855 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10253949 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.131282441 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.104765057 seconds)
  done (took 1.65794753 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.383698253 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.284279942 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241336455 seconds)
  done (took 1.78456838 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248369468 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.267267333 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326992256 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.398282146 seconds)
  done (took 2.219188582 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206035345 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.126376843 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.097861 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.13679352 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16668019 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.18528767 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140339052 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.152025331 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127248822 seconds)
  done (took 2.263174364 seconds)
done (took 10.681402294 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.167708388 seconds)
    (2/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.26851208 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.217015072 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.172747887 seconds)
    (5/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.210282724 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.278336311 seconds)
    (7/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.231987348 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.229975545 seconds)
    (9/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.17524793 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088000693 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.161791014 seconds)
    (12/286) benchmarking ("sort", BigInt, true)...
    done (took 0.246606421 seconds)
    (13/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.141125635 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097938272 seconds)
    (15/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.115987583 seconds)
    (16/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.177576149 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128967512 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.214295929 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.08967249 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.205184792 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110616344 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13433959 seconds)
    (23/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.095987296 seconds)
    (24/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.118150454 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.089191422 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147832624 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.15238455 seconds)
    (28/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.174069617 seconds)
    (29/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.194109644 seconds)
    (30/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112782539 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.111527624 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.083148038 seconds)
    (33/286) benchmarking ("sort", Float32, false)...
    done (took 0.178389854 seconds)
    (34/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.219726584 seconds)
    (35/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.165862519 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 0.230310312 seconds)
    (37/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.19640808 seconds)
    (38/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.197510501 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178697362 seconds)
    (40/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094214366 seconds)
    (41/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.189784575 seconds)
    (42/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10679249 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230828346 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094727072 seconds)
    (45/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.185897182 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.147703982 seconds)
    (47/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.181499392 seconds)
    (48/286) benchmarking ("sort", BigInt, false)...
    done (took 0.223899377 seconds)
    (49/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.196796939 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.235261977 seconds)
    (51/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.117817446 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.090338005 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.132712056 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109509765 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096466929 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.165965124 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.12483789 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.08912563 seconds)
    (59/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12094873 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186431108 seconds)
    (61/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.091301736 seconds)
    (62/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.259699106 seconds)
    (63/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.10476808 seconds)
    (64/286) benchmarking ("sort", Float64, true)...
    done (took 0.237405983 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.081616623 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09290529 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.118286076 seconds)
    (68/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.10752072 seconds)
    (69/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239282138 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.196069159 seconds)
    (71/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.098335743 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.090049219 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.17368558 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.211284439 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.108182583 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.11685434 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.108963092 seconds)
    (78/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157001083 seconds)
    (79/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.094019451 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135555817 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.176542397 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.083546423 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.209291247 seconds)
    (84/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176421419 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088057178 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175658314 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.083813512 seconds)
    (88/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.136245337 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072485552 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 0.106478823 seconds)
    (91/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.095385177 seconds)
    (92/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.108873125 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.089967954 seconds)
    (94/286) benchmarking ("sort", Int8, true)...
    done (took 0.22979624 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118207162 seconds)
    (96/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.084304479 seconds)
    (97/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069652108 seconds)
    (98/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093002908 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110294853 seconds)
    (100/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.175394661 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.090625007 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.135707932 seconds)
    (103/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.158019038 seconds)
    (104/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.070285775 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.130898497 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09255971 seconds)
    (107/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.101889434 seconds)
    (108/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.158729634 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106045824 seconds)
    (110/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081554407 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081387069 seconds)
    (112/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.11646989 seconds)
    (113/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.083763901 seconds)
    (114/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.161481316 seconds)
    (115/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.131704731 seconds)
    (116/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.07401539 seconds)
    (117/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.161937598 seconds)
    (118/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.071010442 seconds)
    (119/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091261848 seconds)
    (120/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183440028 seconds)
    (121/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.083220603 seconds)
    (122/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.113212262 seconds)
    (123/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.151791847 seconds)
    (124/286) benchmarking ("sort", Float32, true)...
    done (took 0.238232027 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.153762796 seconds)
    (126/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.113626527 seconds)
    (127/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.083169521 seconds)
    (128/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.069476692 seconds)
    (129/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.11064395 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096593328 seconds)
    (131/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.20717247 seconds)
    (132/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.092492077 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.108334808 seconds)
    (134/286) benchmarking ("sort", Bool, false)...
    done (took 0.187639018 seconds)
    (135/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.11681965 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091692504 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073225106 seconds)
    (138/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.119728857 seconds)
    (139/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082611274 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.112468815 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089207247 seconds)
    (142/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.136401519 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.090964409 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.093304145 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.073743182 seconds)
    (146/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.086924469 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.116145166 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.096024839 seconds)
    (149/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107967793 seconds)
    (150/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.111541127 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.151230333 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.072684277 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107845898 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.090886421 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.113584417 seconds)
    (156/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151175717 seconds)
    (157/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.109021159 seconds)
    (158/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.085742793 seconds)
    (159/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.161635026 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.082563035 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116900927 seconds)
    (162/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.07327123 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.095295306 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.092619013 seconds)
    (165/286) benchmarking ("sort", Int8, false)...
    done (took 0.195270835 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.116330043 seconds)
    (167/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.154296953 seconds)
    (168/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.117569706 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08288447 seconds)
    (170/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.112204445 seconds)
    (171/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072853902 seconds)
    (172/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.079376016 seconds)
    (173/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.108809379 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.083390518 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.092517649 seconds)
    (176/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.071889811 seconds)
    (177/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.071699588 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.093758825 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.089754979 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10474934 seconds)
    (181/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071480488 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093204792 seconds)
    (183/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.118434979 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.085195458 seconds)
    (185/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.119745104 seconds)
    (186/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.097342372 seconds)
    (187/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149431796 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.09604335 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.109835227 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.070670016 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.111320916 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.230828477 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.082268863 seconds)
    (194/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176528284 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094128355 seconds)
    (196/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.104614911 seconds)
    (197/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.087394028 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09018023 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117553029 seconds)
    (200/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.070615858 seconds)
    (201/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.108459371 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076510164 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.116337851 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.083014837 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.090116835 seconds)
    (206/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.153243178 seconds)
    (207/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.120872799 seconds)
    (208/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.074372631 seconds)
    (209/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.088903697 seconds)
    (210/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11004986 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.081725184 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.106259694 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072217902 seconds)
    (214/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08089214 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.099019515 seconds)
    (216/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.071011227 seconds)
    (217/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105798097 seconds)
    (218/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074210014 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081310805 seconds)
    (220/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.16271572 seconds)
    (221/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.070163399 seconds)
    (222/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106551998 seconds)
    (223/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.079067265 seconds)
    (224/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.093474753 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.073691843 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.081073694 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10667404 seconds)
    (228/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.074118184 seconds)
    (229/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119284992 seconds)
    (230/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.125444 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.105990353 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072579787 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.081961713 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107930678 seconds)
    (235/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.071071557 seconds)
    (236/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.094220778 seconds)
    (237/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096144788 seconds)
    (238/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.084473158 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.113123436 seconds)
    (240/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079895063 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.10556132 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.083461553 seconds)
    (243/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.096640445 seconds)
    (244/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.085829482 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.091574536 seconds)
    (246/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.109606411 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.083908952 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.097068499 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084238385 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.082494799 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.107078484 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.15141129 seconds)
    (253/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.072569899 seconds)
    (254/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.081371767 seconds)
    (255/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.108781659 seconds)
    (256/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.13569472 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.108880328 seconds)
    (258/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.07052886 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.097868276 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.091847497 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.176877917 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.081380003 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.10573753 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.0822906 seconds)
    (265/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.070069377 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.115926367 seconds)
    (267/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070648842 seconds)
    (268/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.105904416 seconds)
    (269/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084569422 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108158527 seconds)
    (271/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072057051 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131037758 seconds)
    (273/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.071917102 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.081488013 seconds)
    (275/286) benchmarking ("sort", Float64, false)...
    done (took 0.177993198 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.088668702 seconds)
    (277/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.104714931 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.084315469 seconds)
    (279/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.096169209 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.08586011 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.105605517 seconds)
    (282/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.164645044 seconds)
    (283/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.186726226 seconds)
    (284/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.078789025 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.094790053 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.089998942 seconds)
  done (took 35.720370968 seconds)
done (took 36.602982352 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.097164707 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148273988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094756724 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134948898 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.096923363 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121880323 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.091746998 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119911751 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.096652161 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.120867218 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.095662716 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096864031 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095294458 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.117643763 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095055441 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138353349 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.100946605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089877894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.112096391 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081533295 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.111402541 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.083758124 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108073995 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074858374 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.093932973 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.115703329 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089221442 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119449908 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.082899273 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.107361105 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.083013194 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.114856911 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.083753709 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.096038777 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.114753009 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.087041087 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.119732596 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.093136254 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.108556534 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.083774296 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114793542 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.085899592 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089712361 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.115433079 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.084703553 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105397951 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.087672943 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121490127 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115563405 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112198775 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092196589 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117696754 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.093862226 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.11312325 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.082995209 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085852585 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.106977141 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.1150783 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.111047647 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088402274 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115869396 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.09157994 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.105371161 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088142936 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110071595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.094902642 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.093226464 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.106575417 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.093263598 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.112521095 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083448498 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.110429604 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083488927 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.082560864 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.117837205 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.093800887 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.106578409 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085698544 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114652098 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.089791466 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105677765 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087319393 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.0844734 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.108764872 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086461227 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096278522 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.082894362 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089120438 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106253304 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.086978593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113017909 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.090942991 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.107466106 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096299536 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081742258 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.107306247 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.083311091 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.106949585 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086422723 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.082322624 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10784657 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086225196 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.115903786 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08553152 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.107354627 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.096478413 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.106157974 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.09138981 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.081769444 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.106945883 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.098813136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117493973 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.0837909 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111614597 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.083370844 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083987686 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.106831338 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.083292306 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106379424 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.084355537 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.083802986 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.107552792 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086369304 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.108506498 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.097807748 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106966019 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.083750478 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085186981 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.107469638 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0890536 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108163056 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.085099012 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.10793597 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.082334223 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085579148 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.108486069 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085769262 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.109889276 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08806174 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107929732 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.088916598 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.087392835 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109319139 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.083022021 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105397993 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.078749281 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088054527 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111377521 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.084588748 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.107924145 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.085675875 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.106207124 seconds)
done (took 15.973231241 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085178163 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183576678 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144302173 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.119276168 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.13078332 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.083629579 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119832037 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13981646 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.085893155 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140921161 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107167846 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.128701131 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.14699308 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084226387 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083766351 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112451067 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085921875 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125105579 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144703883 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106323779 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.142863499 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08277943 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.138661398 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.131953814 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095017491 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134732168 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.085812976 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.08684189 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112866484 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100404531 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.129524502 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087886567 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108596472 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.106805442 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.125836492 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091825304 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108359852 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.09149401 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107182314 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.084826047 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.130733501 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106791668 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114402689 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.089941721 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.111813105 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.093985683 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.108636093 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094146221 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.118727022 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089645055 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.123269005 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.114774685 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.111886363 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.100640111 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.107553473 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.094767771 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.1255064 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091900085 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.1088973 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092702849 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.107169166 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.088812724 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124164746 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.10892201 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.113412502 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.100134204 seconds)
  done (took 8.216655988 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102994471 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138032427 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103251433 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.127543878 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.084738403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108461502 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.085683495 seconds)
  done (took 1.697734864 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.085571788 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.127017228 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136451889 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.13483435 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109343545 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.136516739 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091383398 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.109453108 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.105833504 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110220728 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110150048 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150581511 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.087085092 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117971571 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.113827969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110016096 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.112936881 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109212461 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089532521 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136417938 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.088769562 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.128219106 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.088327339 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.108939712 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10417772 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.084060532 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159976358 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114818555 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.084382899 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.112730019 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084316787 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150197097 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104258267 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.11884263 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085695834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129611273 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.104300628 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107118789 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.102767183 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.1161699 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.103782644 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084917423 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1115331 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.083290749 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.114809141 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099352977 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113265198 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.08659619 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.111753154 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.110250084 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.085627229 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129111544 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.085604384 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.114600079 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.08727915 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113658608 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.095496969 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.110506977 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.110577805 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.107055204 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107131695 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.129358876 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.103530538 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129788312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088746963 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127797292 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.104085013 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.112181364 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088033438 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.088789848 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131245513 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.082662137 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113883054 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100446897 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112154785 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.11369161 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136732152 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087411125 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.120608734 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.08643974 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.110638338 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.086615963 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112094902 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11474435 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.08549761 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115033241 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089075971 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108389421 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.085286125 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088655917 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109049806 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.087073058 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.113479095 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.086812489 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.112955873 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106851995 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110413031 seconds)
  done (took 11.359167236 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087693393 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086231256 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.11446076 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.08755383 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111316786 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.087475322 seconds)
  done (took 1.528021264 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116648713 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112074905 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100155832 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115228245 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128478631 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137496 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110978765 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120357582 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.127813632 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.09899256 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.139064861 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.112959623 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.143773285 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.090821222 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.13757488 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.089807147 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.136427258 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09110439 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.121877282 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091162526 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.128896523 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09105511 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117156186 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.105729897 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.121560318 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.090068972 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117377808 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.097753835 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.123028933 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.094803928 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117205154 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.095187844 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.117322504 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.119341596 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112376352 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.116006383 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.091304045 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121482792 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.093163863 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12077949 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113559014 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115903259 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.09736593 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121921282 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.096644558 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.117053511 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.098268604 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.116561986 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.111331483 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122221307 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.098417824 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.11538213 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.096263502 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122944115 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.092533832 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1207747 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097616498 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137438731 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09100149 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.118926858 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.088048647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.121307387 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.095732459 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121406013 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.094977478 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.123079771 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.116755176 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.092911433 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.092030214 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.116897206 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096409549 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.113117797 seconds)
  done (took 8.950327233 seconds)
done (took 32.687618116 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.679077501 seconds)
  done (took 1.632860572 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.813071746 seconds)
  done (took 1.769619793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.894099851 seconds)
  done (took 17.877976241 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.464613194 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.545399014 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.976354681 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.164119935 seconds)
  done (took 3.108135244 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.969779994 seconds)
  done (took 1.941370836 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283846238 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.2322482 seconds)
  done (took 1.474784242 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755093741 seconds)
  done (took 1.726568285 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.429615543 seconds)
  done (took 2.395592001 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.328094166 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157540788 seconds)
  done (took 1.463372694 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.569577704 seconds)
  done (took 1.546016322 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.153296526 seconds)
  done (took 11.128701877 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.244236975 seconds)
  done (took 1.22934326 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.290770632 seconds)
  done (took 1.267249719 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.509987841 seconds)
  done (took 4.484506981 seconds)
done (took 54.008467381 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.096759435 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09878616 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124581465 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095714456 seconds)
  done (took 1.385474443 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101794073 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.117134456 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102419493 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.116070588 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102559559 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116807683 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.095462978 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.128767532 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.092555602 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118642918 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.093364164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.091301705 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122314689 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.119389165 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090248447 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095530361 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126057586 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.09235869 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12390798 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.092198871 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115490781 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094812382 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.122753504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091222451 seconds)
  done (took 3.546067618 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097811679 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.090541649 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118385598 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.090281844 seconds)
  done (took 1.383074936 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096643704 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.127839992 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.102847267 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.121785447 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.104600949 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.127820681 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.088836084 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087685367 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.116924753 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.096325007 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112278249 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.110121612 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128649979 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096697481 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.123723306 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085763744 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.112734994 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.103915229 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12215984 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.097986633 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.114316332 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.097193866 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087102347 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13063234 seconds)
  done (took 3.581583134 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170082038 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.12520871 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.110699127 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117740712 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.131814934 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139427563 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.083172936 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138312582 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.083757741 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126576568 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088702322 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158097916 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124093809 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085152917 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.084225772 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110153641 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097428388 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124245378 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.087460757 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125291147 seconds)
  done (took 3.300207651 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095638359 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.08923057 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.110964812 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088131363 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.121702767 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093199988 seconds)
  done (took 1.585643916 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094060126 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.085805645 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116046753 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.087999296 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117248807 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.085485489 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110098137 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.08705251 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086750086 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.110628543 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088173443 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.109918093 seconds)
  done (took 2.170179583 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.514751887 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115762966 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088013209 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111107006 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.09646667 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.112098898 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.103374983 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.113135746 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.114729328 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.111025493 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.086876347 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.088472959 seconds)
  done (took 2.641487133 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200645206 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096538112 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25683492 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.342654634 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153171672 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160558482 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271595172 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162085661 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.176195537 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138593442 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192790076 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154126966 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124854556 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173128012 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136676047 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.151286193 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169226045 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187428756 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120272025 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222169916 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13050409 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162848868 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17673948 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149788818 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135706436 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156445939 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.091869725 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126035043 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166871873 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164028153 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170564588 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119777668 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138012068 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.455835905 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203334946 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172029949 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279193623 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132848352 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.174376624 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139977917 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247642607 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11075345 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213180734 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125109083 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129556189 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175174465 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.315497625 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173057149 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130332227 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140288243 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176996682 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175432031 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173660446 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110537303 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320006081 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120337611 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142256288 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180925779 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177590395 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186834001 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162089749 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.117311991 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182200772 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181609537 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174821149 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114140766 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.161221216 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123356497 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168343477 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1902 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171141644 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160565348 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180637792 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137046522 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159800903 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16869394 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152232828 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145204978 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155744849 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118716182 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121794243 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135642804 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128659177 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.166544548 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122496169 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194965121 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131633996 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.143134309 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225411469 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129270196 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156821119 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158613577 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158447417 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145072324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08815742 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143644807 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.148753357 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127402763 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12888572 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154868357 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138753174 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.099099122 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150011436 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.09365614 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154588479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.125659931 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.329032984 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159291249 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.123614355 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133947565 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14586632 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.14643912 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164956999 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181769298 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104854802 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131949704 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190349218 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154983765 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105622505 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172199156 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179063606 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.152530206 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136540575 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16311544 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184779362 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110687292 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210050429 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113700662 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132809248 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.137766481 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129214409 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155857535 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.156263517 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129526549 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123033729 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214856367 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.09571533 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134253918 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168879154 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099352533 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127042324 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113180487 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134567991 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.131660073 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.11206701 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135019128 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151386067 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127482039 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153001897 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149886684 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139548436 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185202496 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104819028 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.146582088 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145004968 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09068787 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.168769075 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180537072 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129258119 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190720729 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160243323 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195125075 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160109861 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128879459 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174331196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100582562 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11767543 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159279924 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128410269 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157665824 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176814915 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219266453 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.160910777 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11966166 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146580684 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161656194 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.162192479 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148810781 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107316235 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158979722 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154200341 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092798068 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122721765 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097775632 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138109169 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129164475 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105695537 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174033599 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161069587 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.211287086 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131010409 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139140502 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179724395 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.122377038 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13258708 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.395280029 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138421501 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179450716 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17840079 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162834698 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138269241 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140749953 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.117995962 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09474153 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13156454 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160285547 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105578661 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133690415 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139310524 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179046361 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.32619934 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147010171 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225452215 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135089647 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214139229 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092817211 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167392174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165426533 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127974772 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.172930765 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10501321 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.145427589 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176537888 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143490566 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180156539 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158964966 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161557493 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186949092 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.145376863 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101569612 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14604207 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16120212 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108893586 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163851468 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144045132 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134465242 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311284068 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.096520501 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124040022 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169792454 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142305838 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170713184 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117100792 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161478356 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12465283 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138854917 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127632061 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144552805 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112987339 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328564018 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178298548 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14225188 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.312190913 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16978094 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128932168 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.303590867 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184668023 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.35918263 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107589114 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141118962 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157292061 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156958953 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31721567 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175735637 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143744817 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174458226 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127882988 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.133248807 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134567054 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118976451 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149439173 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.137864367 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103243937 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149302575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.132815729 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171702113 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112005211 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155094055 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162162431 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148333645 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114882204 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142082539 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196724986 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155142154 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173397664 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.117412054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161106641 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191791483 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123585068 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098037667 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.125762446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175686902 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130553695 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12795119 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.183163234 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221203897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156727225 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16049478 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108843568 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116496925 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128904571 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146059208 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195070194 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137413407 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133595437 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183488738 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112786687 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13000173 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157163563 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282891764 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139829364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170773373 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083758952 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.276300186 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122497748 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102856147 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159110557 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16814272 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134513634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.142941765 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160317645 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140293845 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130954398 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136348956 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186235201 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199007492 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16348988 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166612013 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131405258 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155827524 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315706199 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17213307 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143195208 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.104629293 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159927112 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179955231 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183235318 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131023228 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159572537 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13152807 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15698217 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163345157 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13490678 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193199543 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128138703 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134279822 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137490467 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121913993 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127692387 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.210699344 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103363778 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169242988 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155242158 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130169275 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097502968 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148468397 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156079092 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113357074 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.124473347 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170744989 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.093440478 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158814918 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17466496 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103314537 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153933239 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144302244 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133662094 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112698028 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143045222 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134569004 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135324641 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176398662 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.127936977 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173869562 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16879918 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133375413 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.341058976 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139201267 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637026027 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126825687 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179710562 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116530895 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176663248 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146449758 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163123256 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159263824 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147669296 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133296771 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147722917 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229600671 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161808742 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.154921372 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101933595 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141553784 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13928394 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.102069345 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15037798 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159292711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109913722 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135167268 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153911242 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14114373 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.103057075 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136903389 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180894807 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116720649 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170060008 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176144608 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137469683 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163856817 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163796407 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099916509 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157852864 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168109709 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140524133 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145892593 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.103543732 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132932586 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176545788 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094811001 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157259784 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157198161 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129640333 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159233889 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132771547 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156304299 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111688864 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16072473 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129102378 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14995805 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127659374 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131809611 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124983565 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125455951 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150624026 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148140328 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095831839 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163284595 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178684488 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092480231 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130759112 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.278531562 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15531373 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184439409 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.111791309 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1343271 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111497231 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144506503 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151358524 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157408645 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.098695171 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132263382 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.099180497 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.16382571 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141646322 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152553166 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156529165 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.346223597 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193540388 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135359909 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250073399 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138576084 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153328299 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092583901 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.128536991 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110736721 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132892328 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142562434 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18844999 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176245492 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.115729299 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.131747214 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12463875 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095730975 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129873616 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131607128 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150745178 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157269465 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139750438 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.084801425 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142186528 seconds)
  done (took 75.850277368 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144123208 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130043837 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145764666 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199269643 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165147975 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250244454 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207282805 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.234186897 seconds)
  done (took 2.550426873 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090208793 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.140883831 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.125942584 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133008859 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.112801592 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.112618099 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.302059563 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130776184 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.112619913 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.117156244 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.131195459 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115042291 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.525814158 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.115472374 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089168334 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108666943 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.113315382 seconds)
  done (took 3.644975154 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.160733362 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.47037695 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.989177338 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.18957037 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.174411625 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090904809 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.701607217 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091008376 seconds)
  done (took 11.940725158 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.117253026 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137119361 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.128639052 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.156121654 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.113823546 seconds)
  done (took 1.740820891 seconds)
done (took 116.291908847 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.094872888 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123356544 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.095612873 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126227573 seconds)
  done (took 1.507143004 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.101600183 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.073680464 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106509564 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.077730413 seconds)
  done (took 1.433705521 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.191412135 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167969276 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40539537 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.074906143 seconds)
  done (took 1.588770089 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.110840355 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.128519472 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102178324 seconds)
  done (took 1.427301556 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.103284519 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098427388 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127556085 seconds)
  done (took 1.411614347 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101265962 seconds)
  done (took 1.178923773 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108297189 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13678886 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109278206 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.1350713 seconds)
  done (took 1.572090538 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095004978 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.095992376 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137339022 seconds)
  done (took 1.409307779 seconds)
done (took 12.972355773 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103656145 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.420915272 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.386594945 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.135549421 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.694494963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.405627413 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.007029803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144070418 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166472998 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088109885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135480816 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.667886733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.025653036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340471499 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.012464897 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.339069323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699653288 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.088721423 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115526892 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089642389 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018525146 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089269133 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088833705 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.117103751 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.669341711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.421736789 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089201702 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.366627097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.088675789 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.123964865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376532675 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.115478139 seconds)
  done (took 16.703315342 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095242165 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175754784 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.100942145 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119180929 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.096930903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119091562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093925151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089964571 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180171608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.117708185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.106040107 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117526185 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.092238345 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.118221041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109552569 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117411313 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.089798144 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.116443765 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.089846756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.088995469 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.136597997 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.088724624 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.117686497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.089188639 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.118008044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102482592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.117127764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.089328925 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.116768653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.09795488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090797075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117922421 seconds)
  done (took 4.597311081 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.142439327 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.185868446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128379344 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124490488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172048208 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091069889 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198383335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144888749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183134231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.089465793 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.134347206 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.089274833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152330184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090636302 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.137304583 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089283037 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117040871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089111976 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115836727 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089817438 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108244675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117438564 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.088419935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11770399 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.089410123 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131865029 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089692262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.11721774 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.090123275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.1246768 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092773275 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117382039 seconds)
  done (took 4.937749411 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.093256333 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094304153 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.133412647 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105967807 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118871535 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.092999073 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.121463877 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091310655 seconds)
  done (took 1.936098976 seconds)
done (took 29.256792567 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.107910472 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.094960188 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.131848925 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102429087 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.127898666 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.101739012 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.116874245 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102250333 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131148335 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098201824 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.133888084 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.08835105 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.090684088 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.117464918 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103161914 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123400208 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103426648 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.127678969 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.103555389 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131805849 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090650635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128971552 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100027512 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131888731 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104699836 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131115159 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.106051048 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.123215152 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090740944 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.090206491 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131183788 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109502392 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.120287913 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.103891482 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123341577 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094308876 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119168074 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09391567 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131118613 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102100196 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.124309177 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.101757531 seconds)
  done (took 5.771298284 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.115038727 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147424827 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111392133 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.112952052 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09171194 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.111772683 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.115477279 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.082267674 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113299363 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.113934149 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.106542859 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.080299154 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.110828225 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076326945 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.079430456 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.107870064 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.082543368 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.106904919 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080324753 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080675796 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.111610959 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076376556 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08243014 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.110846098 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.077995166 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.112882407 seconds)
  done (took 3.699547611 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.096218747 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.103948418 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.139087077 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.172322514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123361115 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127496443 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098049308 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.137506295 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.105628345 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117397371 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.091341626 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146666574 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107027891 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125690905 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092179238 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104029175 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.132155984 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090717435 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124145966 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109517941 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134725706 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.09921313 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138192113 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100024583 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117934405 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091899428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122742717 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.099933411 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096123108 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127020023 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095100246 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121986555 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091339725 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.130254342 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.095378582 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118905846 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109133038 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128322642 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.098781962 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119101153 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097450111 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.093516316 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.140727711 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.157936711 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.089582726 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125720426 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.093187611 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.098568823 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.119942586 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107369223 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128708989 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089804577 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12176625 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091170336 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.089919762 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134649832 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.090990675 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.120480494 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.101620441 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124209591 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.102639168 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123020451 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.103918615 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.118815467 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.095777053 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090567173 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119336182 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088129178 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142851308 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095612113 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161704254 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.089972947 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.119570282 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.097772709 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.125336821 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096060276 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119236446 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104073532 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12729691 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093706677 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129370523 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092368678 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.091395977 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.137407721 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.090722064 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.119860262 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090081584 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124727654 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.092516322 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090416024 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133288559 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.08850452 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121458612 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.103184768 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.119008459 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.090696174 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12478448 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.093748531 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117483533 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.104163501 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123453587 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090449683 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.128585561 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.090554224 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.091910895 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.128271639 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.093361398 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118636531 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094041507 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124929074 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.089863273 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.121693949 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.092826906 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.091428792 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129015044 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097085498 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.123226967 seconds)
  done (took 14.098288548 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230693308 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215975357 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188750793 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.296677027 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.101948034 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145809117 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212467333 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125005932 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120150908 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.158243403 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.169792366 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.15200868 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169403747 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180354996 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170150369 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.118586244 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110033178 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165793552 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216081774 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.261566635 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141342461 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.09797902 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159925415 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159500568 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.133067818 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.098947511 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.137798054 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102354338 seconds)
  done (took 5.647129816 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.106438302 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.152955801 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.095750852 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.142427753 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.115927625 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.120324428 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.093878428 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.121875183 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.102978289 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135488316 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.08972849 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126613043 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097252681 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129380238 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090380061 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129168158 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100360412 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.120260293 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.093738541 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.093537237 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129846728 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.136745605 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.094782246 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.088432001 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130252872 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.088628743 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.120641701 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141194289 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.090453602 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142370319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088323216 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.097633613 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134688339 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.090448234 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120484052 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092070628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122270074 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.092447797 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.091368076 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117939805 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.088833134 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.110800253 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.089169353 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135344646 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096624662 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.113767849 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.096629722 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125789469 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.091891201 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.086804445 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.122639505 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.092810256 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.122560536 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.098290128 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121232809 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.091155097 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.093207036 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.119839412 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.096625254 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122738632 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.087621761 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.11797006 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.095942017 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.122353446 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.099558742 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.093844111 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.117867045 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.091332225 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125225682 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097489255 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.12128882 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096964415 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.087473508 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.122228753 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.092973028 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126103836 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.092762153 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.118739999 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090298168 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.090611164 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.109547781 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.090454122 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107041422 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.093974073 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.088383625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.11841009 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092065264 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127130627 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.105993913 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.121799357 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.098557123 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.121142754 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089151736 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.121889111 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087321128 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.092796201 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137017511 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140124423 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.090023042 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118662505 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.105291501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.091849526 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119406704 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.079681342 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129281599 seconds)
  done (took 12.47238308 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.129217487 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151296973 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.091521882 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.13859859 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.123346487 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.155968119 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.096819537 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128942178 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.091587721 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139836754 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.089891105 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130413201 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.090706556 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134778311 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.125398313 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.13096614 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092868337 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.135715828 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.09481781 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.167904203 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.108010433 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140052247 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107923607 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121886612 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.096152925 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.138128354 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.129199215 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135621102 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103712249 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139933784 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104270776 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158868152 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.139911917 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.095185045 seconds)
  done (took 5.281864038 seconds)
done (took 48.06261362 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.183320982 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.403850986 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184268142 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.090490166 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.210230681 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.230428117 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.193985511 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.181776618 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.196631308 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.177691655 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.412487648 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.771925356 seconds)
done (took 58.350927583 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.217609745 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.340950911 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474815658 seconds)
  done (took 3.926097729 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.777637328 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.119378925 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.439666875 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.180787011 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.196764754 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.469193716 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.83390951 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.547767374 seconds)
  done (took 27.898060034 seconds)
done (took 41.931727725 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.193056345 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.210687945 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.210803325 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.1829441 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.294423973 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.224713992 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.521920054 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.206291727 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.210970931 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.169376378 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.201286949 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.187634221 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.181918263 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.488398684 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.186769232 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.198109292 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.237857884 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.70382707 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.597849437 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.192614907 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.18772518 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.230991895 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.212043798 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.202157873 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212320061 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.181724355 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.189265227 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.192475059 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.75207187 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190942884 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.193569651 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.744127716 seconds)
  done (took 190.20215268 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.181634619 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.179718454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.319462407 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232001843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.735932008 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.385391118 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332083948 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.814484988 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.206101443 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.192654893 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.296725009 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.182579973 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.35836808 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195294828 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.214047498 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.267935923 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.460507617 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.37950684 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.226878542 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.343456915 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.207380338 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.225209699 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.16468609 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.27908943 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.187935948 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.232996419 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.200053138 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.189908571 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.3781877 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.394583281 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.241970164 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.2221363 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.804071865 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.040992706 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.19541737 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.201690423 seconds)
  done (took 148.783827971 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.183633295 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.183746126 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.184616179 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.216355349 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184295842 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.762380362 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.766316344 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.710578272 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.402270631 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.566598406 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.444871813 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.184664162 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278941223 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200768496 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.186234373 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.200203627 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.209060968 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.190595698 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.185804486 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744941342 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.197103962 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.322735226 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.361507692 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.200999855 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218174987 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.582523896 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185433248 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217701961 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.517295568 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235245076 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.185199036 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568361674 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.665199344 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303863194 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188489253 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21820173 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.189179036 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467203996 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184482339 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.186633945 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189155713 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871506102 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.193279078 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.765349032 seconds)
    (45/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.193572306 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.128022194 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187177955 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.186774538 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187578584 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.186562465 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.158099003 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.861632012 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.20890647 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.186563304 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.190811124 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.186382906 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188777992 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.218839716 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.177905153 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286639348 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.191804767 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.19017929 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.220715853 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.18841466 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.316635636 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.193414705 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.334327295 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.238388345 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.295826166 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.74948661 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.188403853 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.186512215 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286134045 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308465252 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.188539281 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.189015848 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.189592152 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.189113065 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.300028593 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.188631909 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.60535873 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365800211 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206720787 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.572078156 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.292259873 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189321782 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.606191602 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.195476682 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.190363517 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938536029 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.286446612 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.190488993 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.190556943 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.190600349 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.605927086 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.770649436 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.449572103 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.1966417 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.190047881 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.447062675 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.194756939 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.616783758 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742813352 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.873681946 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.197023562 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.303954118 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.366360271 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.207930655 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189996266 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.575549393 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.195860671 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.251027965 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.191991232 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.589804233 seconds)
  done (took 365.368484651 seconds)
done (took 705.466461642 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.786779941 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.781134903 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.891168418 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.769739317 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.733656957 seconds)
  done (took 10.083305502 seconds)
done (took 11.204138335 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381618542 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.383536967 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257247823 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.387627251 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.229031066 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.403391698 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362942253 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.216140251 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.295265643 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.278402654 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295938411 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250772799 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.232570068 seconds)
  done (took 18.096310814 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.529049258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522599119 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.260427013 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.532398896 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235912845 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518285899 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403691295 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.427998971 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418772178 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.211271613 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.205312951 seconds)
  done (took 16.388989632 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51734122 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.519922414 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.26384466 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526237112 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23826043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.521182181 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413910702 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.423184604 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416796606 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.213330397 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.206851399 seconds)
  done (took 16.383801488 seconds)
done (took 51.990971847 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.204473862 seconds)
  done (took 2.328388646 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.245122533 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.407595362 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229031124 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.212060854 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.204077798 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.213678715 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.212913747 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.2072734 seconds)
  done (took 11.057740077 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.198318949 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.200003306 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.202173256 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.201689868 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.199442975 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.199441422 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.199654391 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.200032989 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.199358083 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.2018734 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.203776157 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.203042038 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.200605176 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.199405312 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.204980069 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.203595089 seconds)
  done (took 20.340972361 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.202174472 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.200515761 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.198613962 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.20129306 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.200270496 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.200238905 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.200255841 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.199702061 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.201386717 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.20132693 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.201070363 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.200358294 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.20046177 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.200929779 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.200638333 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200961287 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.19871522 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.200586402 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.205588278 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201286718 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.201970174 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.201329879 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.202301364 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.202212258 seconds)
  done (took 29.952096012 seconds)
done (took 64.803786063 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.840362412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.843556068 seconds)
  done (took 6.810507886 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.261354139 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.264641067 seconds)
  done (took 3.652436327 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.204008332 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.20439117 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.205587802 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204133493 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.204598273 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.203338927 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.204941244 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.205486912 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.204907331 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.204646943 seconds)
  done (took 13.17248348 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.204271903 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.205981162 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.202536064 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.205539303 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.20405267 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.202660874 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.203134864 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.204496378 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.204792438 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.201236845 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.204973148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.201406664 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.20390765 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.203198232 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.204820328 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.203311771 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.203062294 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202219735 seconds)
  done (took 22.79337468 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218013353 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.226308516 seconds)
  done (took 3.571050713 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.333352013 seconds)
    (2/7) benchmarking "second"...
    done (took 1.242761509 seconds)
    (3/7) benchmarking "month"...
    done (took 1.311580874 seconds)
    (4/7) benchmarking "year"...
    done (took 1.300878377 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.24372864 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.223876391 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243689163 seconds)
  done (took 10.028590082 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.206140082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407001137 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.511835498 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.798791946 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207908789 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.209086639 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.02681194 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.209961399 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.21043684 seconds)
  done (took 13.916674733 seconds)
done (took 75.071304858 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.205137332 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.197772138 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.480977081 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.204348751 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.214720249 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.542371936 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.257449774 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.341041416 seconds)
done (took 37.571493526 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.21610306 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.197921426 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.965688094 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.207366957 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.28216092 seconds)
  done (took 18.782376361 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.243546493 seconds)
    (2/2) benchmarking "read"...
    done (took 1.535617876 seconds)
  done (took 4.907305144 seconds)
done (took 31.034881607 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207843873 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.20790311 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.204922125 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.207759776 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.204245638 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.204744396 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207155967 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.208149089 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.20800441 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207513201 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.20837859 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20814485 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.205893235 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205904976 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206537456 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207448417 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.205156765 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205819567 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205500064 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206403631 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.208219086 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.204928398 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.206705269 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.208451124 seconds)
  done (took 30.090431214 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.208160579 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.205980736 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.208607223 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.208231639 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.207300623 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.209539483 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.208819468 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.20748677 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.209291453 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.208544076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207432771 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.207734234 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.210738727 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.20762787 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209032677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206004389 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.210879795 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206922955 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209094324 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.207806196 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.208363872 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20696298 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.206323638 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.210524892 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.205850078 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207100386 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210646884 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.207036185 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209659424 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20877715 seconds)
  done (took 37.378394055 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.216610194 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.21754867 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.210206849 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.210813715 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.211284648 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.210024632 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.210501468 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210554987 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.210519425 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.210637908 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.210908292 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.211756524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209890389 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.211487648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.210721356 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.209519955 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210445963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210662085 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.21089459 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.211087395 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.211751818 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.210909113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.211349221 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.211109619 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.212074934 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.211937147 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.213089118 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.211208768 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.212317848 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.211015871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.212243359 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211385844 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.212378119 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.212440125 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212733205 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.212642767 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216987262 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.219380118 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.212966058 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.213218733 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.214179555 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211875099 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.21243292 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21288888 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.212105643 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.2130437 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.213729196 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.214161134 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.212577366 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.213696957 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.213089612 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.212688488 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.212611547 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.21230936 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.213291084 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213154533 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.213164278 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213093458 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.212830702 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.213824705 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.212861417 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.213813728 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.213826617 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.213249991 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21341891 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212819233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.212598273 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.212695118 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.21456065 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21398842 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.214703892 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213150355 seconds)
  done (took 88.436830556 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.215033836 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211563466 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.21202191 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.211178641 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211939783 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214174993 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.21139245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21457149 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211728851 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214417691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214327821 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.211796821 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.212091427 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214853787 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.215896698 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.213051474 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.21594115 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212937941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.215829717 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.216238841 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215237683 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.213628165 seconds)
  done (took 27.836115124 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.216105607 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.217494105 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212127539 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216015073 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216389157 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.216602973 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.216504176 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.217562726 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22178301 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.213146405 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213451744 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216711813 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.214365589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213769406 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213975243 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.215940664 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216204366 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.215243474 seconds)
  done (took 23.0216784 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215145993 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.214154446 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216339377 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.21419189 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.214497288 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.217179303 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.214555251 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217611778 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217148023 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.213785327 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.217902332 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217043048 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.217514637 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215248341 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217400551 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215461716 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.216741437 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214997214 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216293418 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214357772 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214276801 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218851197 seconds)
  done (took 27.889059946 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.217116739 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.21657284 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.216156985 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216217974 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214380789 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216983955 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218495816 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.215492887 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.218975689 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217060457 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216149648 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218635219 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217809545 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216986282 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.216095987 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216135909 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219489492 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216596582 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218648476 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.21629253 seconds)
  done (took 25.479669179 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22246098 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220834239 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.221959695 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220419934 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221880703 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.221958838 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223614492 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.223425955 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.222778672 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.223045617 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.222070259 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.221844875 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.223651181 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.222632602 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22132771 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221422305 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.223636948 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.222459756 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.222786923 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.22201641 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.223554159 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.222747682 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.223740265 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.22389033 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22153315 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.223055043 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.223470019 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.222862661 seconds)
  done (took 35.373249826 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.220957487 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22139534 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217465651 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218733751 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219241531 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.218005601 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.219523416 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.218795714 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.675398319 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.219720318 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.22206233 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.221827128 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221790731 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221790673 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.222379971 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.223007132 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221890603 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220105275 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221461708 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221265974 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221300388 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223334581 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.223772257 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.219520656 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220164824 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222792237 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220360955 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221265757 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222290992 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221623294 seconds)
  done (took 38.226757606 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24190628 seconds)
    (2/2) benchmarking "in"...
    done (took 1.242679589 seconds)
  done (took 3.629042702 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.221927996 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222810623 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223318641 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.221977607 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221393089 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223811244 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.225299204 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220671906 seconds)
  done (took 10.925311682 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.22444465 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.224372475 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.224651838 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224267771 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.226558433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.224401713 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23106141 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.243332573 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.22555341 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.22631625 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231974922 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.233304128 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.228781559 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.225370724 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.225047408 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.22742918 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.226166731 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.226997107 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.226418613 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.22753686 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.228206769 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.229205179 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228131127 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224304476 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227638092 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.235739436 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.231138291 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.226865268 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225530909 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230474643 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.227124462 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.224593921 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.228081552 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.227601252 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227492899 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.228436417 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.234883615 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.248653748 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.233128988 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.228933845 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.228813652 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.225376104 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.228304703 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.228301695 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.229025334 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.228707108 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.228819674 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.225274498 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.227590544 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.231866212 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.233958443 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226289248 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.226031912 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.230472844 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.229265896 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232548706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.248866994 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.231857724 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.237033706 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.237622541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239983013 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.253388533 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.230016245 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.230040222 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239623647 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.252976956 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236014387 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.245669073 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.226436163 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.229640766 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.235783351 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.241724903 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.255621561 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.230206365 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.232456757 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.230213705 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.229951239 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23008721 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.236213052 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.249790015 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.232769586 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230901044 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24105014 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252765322 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.230609186 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.232122822 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.23313365 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.232562032 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232027415 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241168488 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.251243963 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.231897989 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.23021222 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.230889761 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.231090557 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.23335039 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.231682441 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.232628451 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.230273559 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.231912457 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23300258 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236952114 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.241776893 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.23322679 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.232712936 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.238984069 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.231999038 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231987314 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.237854817 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.233052939 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.233578584 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.234621287 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.237827518 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.228867125 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.235147411 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.240986996 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.233581968 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.233399021 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.234172711 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.233512663 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242976302 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.258764913 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.235344984 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.232596016 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.237598841 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246430849 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234915641 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.235076848 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.234126247 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.230801967 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.231757214 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.232770806 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.233122766 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.234404331 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234744886 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234959405 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.231301873 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.234199969 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.235931311 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.235214023 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.235537495 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.233976936 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.234413496 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.236356177 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.234507339 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.237240945 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.240213179 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.234348523 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.236051646 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.234821885 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.231094393 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.234936621 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.234503752 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.236376074 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.234752649 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.235722361 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.235128009 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.235853465 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.234844263 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23542352 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235529719 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.237028749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239761872 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.236986739 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.238928709 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.236595531 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.233715628 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.235321009 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.236578933 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.235343311 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.235788569 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.235365776 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.240178246 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.246699051 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24072831 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.237861807 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.240778976 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236676331 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237532923 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237982725 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.239388452 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.243409314 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.237414985 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.243450915 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.23776753 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.238972867 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.23731535 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.236726294 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.235709985 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238624098 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.240401913 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24422643 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.248515057 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262279121 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236298839 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.241342749 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.237531768 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.241505977 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.240975222 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.239141601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.237798892 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238715198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237719605 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239469947 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.242316078 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.238805492 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.238216106 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.239547225 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237527141 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.239355948 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.237316394 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.237702113 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.237462849 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.234942603 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.239079214 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.238572344 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.237867256 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.234740103 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.23709332 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.237455551 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.238373279 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.239475099 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.243976323 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.236277509 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23929331 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23899772 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.237016156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.236351231 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.238773453 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.240648863 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.238921001 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.245361238 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.257217896 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.239128904 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243988937 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.259242208 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.238292583 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.241765489 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.241058422 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.23710991 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243073349 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.247972278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.239555756 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.241526492 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.240408064 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.239432804 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.241077993 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245115865 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237408018 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.240327377 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240464235 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.242284835 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.237146704 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.2413579 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240509339 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.241190821 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243603995 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241789624 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.241564825 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241880522 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.242907419 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.244934415 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.244058803 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245327845 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.249698469 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.24998509 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.242536165 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.243661601 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.243630118 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.246810632 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.243670209 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.243357798 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245497679 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253926822 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.269934587 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248780794 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.242955331 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.243828952 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248072945 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.244790343 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.246695799 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.242756238 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.242091487 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.243720063 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.242471087 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.241025595 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.243600761 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.24270822 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.244500239 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.244533853 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247581594 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.244069605 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.244793659 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.246076267 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.24563479 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.244816241 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.243814533 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.244706977 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246354779 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245790183 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.24348192 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.243814924 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250395457 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262089392 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.245194873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.244966217 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.243801834 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.243823781 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.244522736 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.246125197 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.250317833 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.25374402 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.24870195 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.251964433 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247001769 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25519749 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.24599028 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247331229 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.254192946 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.242788174 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.242822681 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.24364027 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.245456714 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251235724 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264584826 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.245865581 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.25013444 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247890906 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.247787413 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.245700198 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.24688295 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.246125995 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.247507898 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253059968 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268095511 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.249933921 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2477157 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.242878771 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.24696148 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.245960568 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.246692725 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247992519 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246737448 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.246346103 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245174877 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.246212923 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.248213506 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.248739546 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246437358 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.24417804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.247466069 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254003309 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.268479016 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253043756 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.247276525 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.254101362 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.248512581 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.253557281 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.267093341 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247640754 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.248717127 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247182151 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248012858 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.246861269 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247918683 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.24928621 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.248523346 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.251909512 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248100482 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.248383051 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.248927886 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.249756602 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.246885688 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258006237 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273356328 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249460096 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254277802 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.246002811 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249254448 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.255187415 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.250177831 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.248227385 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.251552375 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259882581 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256504344 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.248986388 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.250335052 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249660018 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250782548 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.249244169 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.250326706 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.250084404 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.249746531 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249664284 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.251214034 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252073374 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.249570678 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.251961322 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250175636 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250863193 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.259618661 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.252418306 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.250069946 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25224246 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251609493 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.248820895 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.249523369 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.252388706 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249862026 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251007629 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.252865193 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258717605 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.257442865 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.253779839 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.25095593 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.25295955 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.25162504 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.251959038 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253253957 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.252823648 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.253244324 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.253657468 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.252852511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25404635 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.250322441 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.251407033 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.25239658 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25184205 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.254512869 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.260009046 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250914665 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.249475388 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.252127124 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253281525 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.251810183 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252726404 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.260062607 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256242821 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.264077234 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.261846153 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.257860143 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.252164047 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.256410904 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.26090153 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.250388968 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253678086 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.253629034 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.25284568 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.253816331 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.255612996 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256310701 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258210267 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252722668 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.253220269 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261693187 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.274886834 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254805783 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254824563 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.256728212 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.253064228 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.251531472 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.252349649 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.254147418 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.258931451 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.272290333 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.254546165 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254149145 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.253655979 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25517597 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258622967 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255035507 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.25525931 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.251968866 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253368651 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255403209 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254652106 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250523394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.25386695 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.253920117 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.257382157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.261009487 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.25129201 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.255790393 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254479611 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254352515 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256330086 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254662212 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251658073 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252227388 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254861441 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256594735 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.255349412 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.25626909 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.254716225 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.257837345 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.256731393 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256945134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25808291 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266156685 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264042865 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.255035479 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255288332 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.255952198 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.25705684 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255977983 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.257421631 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256541477 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.256659149 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256156725 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256985051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.255732482 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259212489 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270485199 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.278001908 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254588941 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.257462593 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259412516 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255890377 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.253641507 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.257103702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.257431852 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.259614837 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265691456 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.259607438 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262878448 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.276535305 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.256772576 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.262760112 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.259795236 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.264053785 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.25901535 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.258251994 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.258389729 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.261371113 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274133355 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258067755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.266863162 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287987711 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276191236 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.257887452 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.259786612 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.256801028 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260392421 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.258953551 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.260099879 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258691978 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25859843 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259702657 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.259255322 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263000095 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.259260511 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.260389422 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.259722497 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.258983878 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.260398621 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.257444695 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.260834159 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.25888442 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.261993299 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.26129242 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.260962361 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260268084 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270934679 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.286688671 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.260232878 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.261961004 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256686251 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.261681559 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.263530277 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.269947047 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.267110122 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.261334248 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.260681205 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.261031658 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260544062 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.25869886 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.260632946 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26018053 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260536158 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.257558229 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.27272188 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.286922043 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.264785951 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260235715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.262353643 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.260691484 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.260181601 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26210214 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263111366 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.262069655 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.262203273 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.267034584 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.26090293 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.260113676 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.263902038 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.268692522 seconds)
  done (took 743.969659179 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.258484825 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258864953 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.258939278 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.258735021 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25844896 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.258663949 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258559583 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.25834701 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258916073 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.258437338 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.258657158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259098749 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.258971225 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.258701912 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259360479 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.259330135 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258951074 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260132708 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259625259 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260023731 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260373494 seconds)
  done (took 27.618267961 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262330826 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.260909314 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261195507 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.262580545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258822436 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.261892836 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.259173661 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.262041972 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26300111 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.260456633 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.262283316 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262521059 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.259743634 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260423991 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261384288 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262772589 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26321971 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260066573 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262970034 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25911314 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263105465 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261367523 seconds)
  done (took 28.931543438 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.264921781 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.265062272 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.26355855 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260745832 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.263917466 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.259885093 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.265601962 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.264079022 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264374049 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.263976471 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.263201716 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.265182278 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.270947357 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.269537389 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.265251447 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.264053392 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408737269 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265562609 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.266594724 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265888301 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.262310594 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.269231184 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.2626486 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262858409 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.264632524 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.266815364 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.265775416 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.265536225 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.265993866 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.265535209 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.271852933 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.26473454 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.26586386 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.267218047 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.264329453 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.266989456 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.270189285 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267352754 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.263187037 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.265623844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.275040142 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.286914097 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.268614171 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.272083364 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.265471238 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.266444618 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.269563565 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.275272057 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.264710949 seconds)
  done (took 63.386438007 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267263275 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.267731993 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.263935318 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268402812 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.267894623 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.267425073 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.268852859 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.26801547 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.264827685 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.264813865 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.269490536 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.26446216 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265219704 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.267706215 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.267885251 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265792417 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266237069 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.26543935 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.265958726 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.266661319 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.26626588 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.269781729 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.270437358 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.266737801 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.26880238 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.267364489 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26443522 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.268247052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.266379641 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266649459 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.268700616 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268731916 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269026977 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.26701445 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.265935509 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.269542755 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.269817682 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.266831226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268547907 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.265672544 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269551176 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.270119511 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.269992958 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.270169423 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267445668 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267135891 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267875968 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.266636924 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.26732983 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.270178074 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.270611112 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.26825434 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.269716545 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.267547342 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.270583613 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.269988773 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.268374007 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.268807978 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.271209376 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.270339962 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.268221582 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.271375302 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.26912307 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.271127197 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.271329554 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.270214825 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.269993875 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.272441595 seconds)
  done (took 87.421949766 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274764308 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.272518752 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273208823 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273689627 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274235495 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.273826005 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273934144 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276430707 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273793548 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273542843 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273948574 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273036778 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275470339 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273783017 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.274797812 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.272747041 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274132323 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.274406479 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276489962 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274235148 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.27740324 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274917721 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.275921445 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.273545356 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274103872 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274026788 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274770789 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276199832 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274539045 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274515955 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275428606 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.274986009 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274713388 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.275907673 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275510582 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.275344092 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275687651 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276113404 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276310575 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276058262 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275954632 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275995669 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275875967 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275762832 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277357217 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.276633764 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280246875 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277346922 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275788175 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276614731 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.276089914 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.277291326 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277107387 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276288786 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276260492 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277283234 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276997553 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277423607 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276957845 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277823028 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278288677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.276924068 seconds)
  done (took 80.272989197 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276553361 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.27654015 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275427518 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.273025362 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.276695969 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.275129222 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276814712 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.275830119 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.27651665 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.275090135 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279520304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275287127 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276451699 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277252746 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.274636775 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276357735 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275434874 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274225471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276041478 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275395915 seconds)
  done (took 26.712452944 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.274555824 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277168212 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.274444787 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.274685845 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.277514872 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275868663 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278077972 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277233228 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.274624646 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278677454 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27851419 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278378491 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.276051381 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.27530688 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278353801 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.275674635 seconds)
  done (took 21.619159498 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.275299113 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27721759 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.280117202 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.279491492 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.276778954 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.274914152 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.278361055 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.275955197 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276187981 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.27887875 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278820028 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.279727453 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.278677457 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279715352 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.27679533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.278861533 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.275880698 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276131972 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279320511 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280330827 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277852241 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.277088725 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279523965 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.280558302 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.276366022 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.277972295 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277026606 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278107392 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.27717268 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280910613 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.276324544 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278974068 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279215047 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.278050607 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.282553648 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.277388621 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279893621 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.280115584 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.280148247 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.280082487 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.280112274 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.278047534 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.279851385 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.280931367 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.27893827 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282133579 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.279226422 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.278388382 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.278678988 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.278501976 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.281526165 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282617571 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.283178809 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281484717 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.281002258 seconds)
  done (took 71.533718505 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282413391 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280431533 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.278969424 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.281276947 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281682843 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279082913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282075151 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281598886 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.279162422 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.281687839 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280516823 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283472317 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280806987 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.282275594 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.280984229 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282246219 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.2801271 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280346436 seconds)
  done (took 24.257189775 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.280433482 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.281419814 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.283104589 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.280811994 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280177468 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.283981711 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282081515 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.283805172 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285308114 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.279897577 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281242307 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284431316 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284334047 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.283054403 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280991703 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282007907 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.284596466 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.283962037 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281237284 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.280688071 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284234376 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284263377 seconds)
  done (took 29.414966577 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.282313461 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.281466239 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.281715413 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.299466795 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.302440143 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.306593272 seconds)
  done (took 8.954474959 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290584577 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284046782 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283223212 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285244856 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284324155 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281436057 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282624498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28288283 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284781019 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283986488 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281560342 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283799784 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285719196 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28395528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284548975 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287104705 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28305443 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282643756 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283453995 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286199521 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283063344 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28602617 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282966101 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282490612 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283040027 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283318645 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285308312 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283102407 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28374128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285055146 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286803013 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283455965 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285458313 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283564059 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285365886 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285984906 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283988404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285744869 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285969551 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284080149 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.285569051 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285530395 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286218704 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284809592 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286262067 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283819247 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283990722 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284666237 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283296955 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289671776 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287146554 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28512902 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288182689 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286728327 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288421028 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287083885 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284706919 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285190221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287255138 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28677285 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286589275 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288854154 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287103101 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28627787 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287863004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286286667 seconds)
  done (took 86.041532665 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285470066 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284610431 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286873506 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286502183 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285868761 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286048 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287323157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287069484 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28675832 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286595011 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289238493 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286320325 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287505977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28728187 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287827485 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286821431 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288185698 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288389948 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287293678 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290405287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287508571 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288014992 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287648263 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287785209 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287873168 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289975771 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288760292 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287874916 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28774929 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287305415 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288858624 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288109668 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288352101 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28845103 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289696426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287249407 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289423752 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288136365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288878367 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29010744 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288829773 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291248136 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288792515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288404787 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289292462 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288770329 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28937782 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288334627 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289249839 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290154317 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290316147 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289139268 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28919043 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290165126 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288732865 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289081625 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290767232 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29228123 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289182469 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292540148 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289532635 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290342758 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292243852 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289930081 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29077201 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291186652 seconds)
  done (took 86.254562801 seconds)
done (took 1735.804927765 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.457725056 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.409947889 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.292010481 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.335144964 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.291688404 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.306533914 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.288462063 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.291192713 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.291280617 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.291325105 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.29131742 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.482269176 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.286213066 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.290910668 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.292352967 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.388607033 seconds)
  done (took 42.495888715 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318998695 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.296428189 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.418756379 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.31978385 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.320360985 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.489149476 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.35838848 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.30408046 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483601095 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.346961845 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.956049549 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.319730004 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.295970888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.475616926 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.315019255 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.496762241 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.55917654 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.963415952 seconds)
  done (took 30.247074065 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.785529875 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.329041767 seconds)
  done (took 9.324031519 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.316979873 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.299532437 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.2981735 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.296698936 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.287710825 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.295792012 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.295401999 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.289154132 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.254835915 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.438392817 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.305554897 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.30754467 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.318021122 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.297962402 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.294456554 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.3360938 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.4612456 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.295702425 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.294677735 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.303578534 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.297438515 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.404118076 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.346530058 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302600076 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.432198374 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.263585947 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307438979 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.306262908 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.433759967 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.295866738 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.297333516 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.298241363 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.299728013 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.220996452 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.851038935 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.315965585 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.323621656 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31053925 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.295682286 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.460549716 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.300189745 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.305020086 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.292113904 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.842638284 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.458249131 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.42994099 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.675830859 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.307511045 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.300589149 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.361653944 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306640267 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.300704042 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.343449018 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.146801251 seconds)
  done (took 110.935686257 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.311465276 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.684121686 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.461685144 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.319104792 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014048256 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.04962019 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316786575 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.609653333 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362182301 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.295317655 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.586877136 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.832703348 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320373608 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.332097695 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.502327559 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.346602792 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.293728054 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.068594715 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317477869 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.29817339 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.815849014 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.302323463 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.300938673 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.464971388 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.333592379 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.775329117 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.813381337 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.686220352 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319151992 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.294159515 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78474218 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324175677 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.296629665 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.290454814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.56937779 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.677205661 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.646095596 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.296868062 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32908342 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.292594432 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.288292096 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754992589 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640433789 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.288547676 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.286281879 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.751188933 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.286487942 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.288997926 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.285496759 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.492188287 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.922354107 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298705927 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.708538896 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.288032528 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.564143267 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.372150687 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.317706183 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.800033599 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29422017 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.334988168 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.350813974 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288219509 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.287229292 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29123879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291494222 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.667356119 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499788403 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297725034 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.664003869 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77577446 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.313234754 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.834902542 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.091204998 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.295675592 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.340296195 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.287139637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.838470016 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.807966727 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30691123 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.291098042 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650436644 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294501615 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.58688693 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320779662 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292638301 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.812677321 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.301081251 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.323170571 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.291700479 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.310076504 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.93593155 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298791071 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566754019 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.31991307 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.28710303 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.287154525 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.31579032 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.289834447 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.289146169 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.289523139 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.838355873 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.312348198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.414441674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.317052596 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296743602 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297520478 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.288630242 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286048011 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.505426954 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.869468416 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.319905784 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.292566291 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.291523509 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.315232033 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.463387238 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.295121085 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.618574689 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.298876182 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288920186 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.294560275 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.916120916 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320127308 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.291702669 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.293511237 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.210272701 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.498863446 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.317581543 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.297803189 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.2921421 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298039546 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.565251154 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.314141514 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.367742966 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.291437263 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004876376 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338207076 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.321066851 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.572837843 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.299850085 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.274406936 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318691305 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.289095404 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.589734065 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576393447 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460372372 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.293313904 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.305315219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.998598669 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.345690634 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.441587717 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315738881 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.330766967 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490053297 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.430322867 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294972674 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.884268562 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.291631435 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505674505 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.300153608 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.602205274 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.807636745 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318836545 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293700159 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014583271 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.033607392 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.967698022 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.293712726 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.582349479 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.277170462 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.771367274 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.294822119 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.290766682 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.740132126 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.299242564 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.296283168 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.2952408 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.293941668 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.452152927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.464506018 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.456712947 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.296581673 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.750895313 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31828013 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301440582 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.305687783 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.292303458 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.64066336 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.307641015 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.296048353 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.300346979 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.295267266 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300581764 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772091082 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.109749337 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.299726031 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.449264268 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94688326 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.312435318 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.296407789 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.02219299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.000767819 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.816091603 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345021648 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.610591604 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.296493424 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.336064808 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.910134048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391073067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776187613 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29631166 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.302448115 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906727555 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.312824771 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.368625414 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.296213336 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.297136696 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850030749 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314959253 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.300356061 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.649133163 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.323830032 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.543373787 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.30448144 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.318189466 seconds)
  done (took 1102.088173476 seconds)
done (took 1296.29799788 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.295938433 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.296185752 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.287760107 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.299841567 seconds)
  done (took 26.396677562 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.305784384 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.303261467 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.304180543 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.300508265 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.310222677 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.300451341 seconds)
  done (took 9.039517497 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.352009289 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29976523 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.302945242 seconds)
  done (took 19.172129063 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.513635672 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.613022535 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.642038757 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.518535698 seconds)
  done (took 10.503364358 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.310009227 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.312067954 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.310552731 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314883185 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.317367484 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.314779167 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316426548 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.313853844 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.315730542 seconds)
  done (took 13.051229913 seconds)
done (took 79.379385533 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.793069344 seconds)
    (2/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.298136404 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.330744287 seconds)
    (4/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.295184003 seconds)
    (5/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.945551771 seconds)
    (6/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.288606201 seconds)
    (7/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.914808214 seconds)
    (8/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.300263794 seconds)
    (9/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.286210407 seconds)
    (10/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.339756923 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.563490543 seconds)
    (12/286) benchmarking ("sort", BigInt, true)...
    done (took 6.323977476 seconds)
    (13/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.434869101 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.338128751 seconds)
    (15/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.307352663 seconds)
    (16/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.196072306 seconds)
    (17/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.842729494 seconds)
    (18/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.797483383 seconds)
    (19/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.331377423 seconds)
    (20/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.297917703 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.026701336 seconds)
    (22/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.389779856 seconds)
    (23/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.301729166 seconds)
    (24/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.312629216 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.333415606 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.16504427 seconds)
    (27/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.327672428 seconds)
    (28/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.330191778 seconds)
    (29/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.449914462 seconds)
    (30/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.350546165 seconds)
    (31/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.319698871 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.01688357 seconds)
    (33/286) benchmarking ("sort", Float32, false)...
    done (took 5.331298855 seconds)
    (34/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.285601468 seconds)
    (35/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.707500743 seconds)
    (36/286) benchmarking ("sort", Int64, true)...
    done (took 6.306325668 seconds)
    (37/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.318919775 seconds)
    (38/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.291607371 seconds)
    (39/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.32245749 seconds)
    (40/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.439922639 seconds)
    (41/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.285336623 seconds)
    (42/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.411371454 seconds)
    (43/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.852872381 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.420006798 seconds)
    (45/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.288629349 seconds)
    (46/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.967750435 seconds)
    (47/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.295094139 seconds)
    (48/286) benchmarking ("sort", BigInt, false)...
    done (took 6.307850727 seconds)
    (49/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.831708575 seconds)
    (50/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.919669135 seconds)
    (51/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.322199934 seconds)
    (52/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.750073843 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.300731277 seconds)
    (54/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.755862035 seconds)
    (55/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.05161213 seconds)
    (56/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.329203235 seconds)
    (57/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.746535246 seconds)
    (58/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.415268209 seconds)
    (59/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.407837253 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.323985813 seconds)
    (61/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.571042317 seconds)
    (62/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.99845092 seconds)
    (63/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.310590011 seconds)
    (64/286) benchmarking ("sort", Float64, true)...
    done (took 6.306826339 seconds)
    (65/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.379196606 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390934357 seconds)
    (67/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.547232758 seconds)
    (68/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.32478956 seconds)
    (69/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.30246248 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.332801777 seconds)
    (71/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.2960995 seconds)
    (72/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.104159981 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.287329255 seconds)
    (74/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.295948269 seconds)
    (75/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.311141718 seconds)
    (76/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.139045003 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.68964524 seconds)
    (78/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.701329092 seconds)
    (79/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.366067565 seconds)
    (80/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.335591502 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.292046776 seconds)
    (82/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.320899014 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.297672446 seconds)
    (84/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.293113885 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.794487911 seconds)
    (86/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.295763127 seconds)
    (87/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.337352163 seconds)
    (88/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.583635495 seconds)
    (89/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.289132709 seconds)
    (90/286) benchmarking ("sort", Int64, false)...
    done (took 5.546443004 seconds)
    (91/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.458670573 seconds)
    (92/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.295263153 seconds)
    (93/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.179290492 seconds)
    (94/286) benchmarking ("sort", Int8, true)...
    done (took 6.304612254 seconds)
    (95/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.351806184 seconds)
    (96/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.463444014 seconds)
    (97/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.603749757 seconds)
    (98/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.843461917 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.248459281 seconds)
    (100/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.295073919 seconds)
    (101/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.444038768 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.193202368 seconds)
    (103/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.67839109 seconds)
    (104/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.504515952 seconds)
    (105/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.328516208 seconds)
    (106/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.442189546 seconds)
    (107/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.737296104 seconds)
    (108/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.54262878 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.921953615 seconds)
    (110/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.875813287 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.222669697 seconds)
    (112/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.41297498 seconds)
    (113/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.315443565 seconds)
    (114/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.73933189 seconds)
    (115/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.874309625 seconds)
    (116/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.31009265 seconds)
    (117/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.312253496 seconds)
    (118/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.531477627 seconds)
    (119/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523466518 seconds)
    (120/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.141944456 seconds)
    (121/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.357274904 seconds)
    (122/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127119515 seconds)
    (123/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.954148368 seconds)
    (124/286) benchmarking ("sort", Float32, true)...
    done (took 6.313657503 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.820241849 seconds)
    (126/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337864552 seconds)
    (127/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.763435263 seconds)
    (128/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.50134729 seconds)
    (129/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.410849647 seconds)
    (130/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.041125369 seconds)
    (131/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.270917414 seconds)
    (132/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.113672488 seconds)
    (133/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.885594697 seconds)
    (134/286) benchmarking ("sort", Bool, false)...
    done (took 1.826363274 seconds)
    (135/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.336247608 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.586352146 seconds)
    (137/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.305976048 seconds)
    (138/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.394207611 seconds)
    (139/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.309585606 seconds)
    (140/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.122915687 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.579422355 seconds)
    (142/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.860411027 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.565246808 seconds)
    (144/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.026559483 seconds)
    (145/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.545289983 seconds)
    (146/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.385767626 seconds)
    (147/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.410127616 seconds)
    (148/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.670057359 seconds)
    (149/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396858055 seconds)
    (150/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.180261683 seconds)
    (151/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.314819349 seconds)
    (152/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.339122388 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097390796 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332716634 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.334877886 seconds)
    (156/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.298673182 seconds)
    (157/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.448772567 seconds)
    (158/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.298266967 seconds)
    (159/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.653588369 seconds)
    (160/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.10174016 seconds)
    (161/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333210206 seconds)
    (162/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.392974068 seconds)
    (163/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.31601944 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.411423302 seconds)
    (165/286) benchmarking ("sort", Int8, false)...
    done (took 4.375665071 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.318621175 seconds)
    (167/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.674713084 seconds)
    (168/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.313634157 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.235556227 seconds)
    (170/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.337798167 seconds)
    (171/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.298686598 seconds)
    (172/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.651766398 seconds)
    (173/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.378749526 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.032117576 seconds)
    (175/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.954193798 seconds)
    (176/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.611434232 seconds)
    (177/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.301620913 seconds)
    (178/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.330351378 seconds)
    (179/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.347224187 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722806757 seconds)
    (181/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.00371302 seconds)
    (182/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.350366102 seconds)
    (183/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.31158161 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.489831855 seconds)
    (185/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.396677525 seconds)
    (186/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.039483167 seconds)
    (187/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.154108271 seconds)
    (188/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.641946466 seconds)
    (189/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.412685325 seconds)
    (190/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.270823034 seconds)
    (191/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.385928945 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.331242674 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.38600018 seconds)
    (194/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.303096679 seconds)
    (195/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.351717892 seconds)
    (196/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.340986214 seconds)
    (197/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.402581049 seconds)
    (198/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.371984839 seconds)
    (199/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.338599204 seconds)
    (200/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.769167436 seconds)
    (201/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.436953627 seconds)
    (202/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.296954235 seconds)
    (203/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.320925823 seconds)
    (204/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.390942429 seconds)
    (205/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.514316114 seconds)
    (206/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.702465436 seconds)
    (207/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.871074072 seconds)
    (208/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.345375183 seconds)
    (209/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.36560316 seconds)
    (210/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.395562057 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.335575919 seconds)
    (212/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.380075181 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.297587566 seconds)
    (214/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.337004626 seconds)
    (215/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.298760419 seconds)
    (216/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.579185618 seconds)
    (217/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.401372425 seconds)
    (218/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.327819409 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.353825515 seconds)
    (220/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.10294352 seconds)
    (221/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229134401 seconds)
    (222/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.531492818 seconds)
    (223/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.954575711 seconds)
    (224/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.165755993 seconds)
    (225/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.866100081 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.401150969 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.305146263 seconds)
    (228/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.308061794 seconds)
    (229/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.324041238 seconds)
    (230/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.503076951 seconds)
    (231/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.530373536 seconds)
    (232/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.313945755 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.297287972 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.728373624 seconds)
    (235/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.580427071 seconds)
    (236/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.308281535 seconds)
    (237/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.406558862 seconds)
    (238/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.445901494 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.340223044 seconds)
    (240/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.69143144 seconds)
    (241/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.319311697 seconds)
    (242/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.735034836 seconds)
    (243/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.31606793 seconds)
    (244/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.440735101 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.694629628 seconds)
    (246/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.376782038 seconds)
    (247/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.313315006 seconds)
    (248/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.299250734 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.317523815 seconds)
    (250/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.978725329 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.249312211 seconds)
    (252/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306361897 seconds)
    (253/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.703186601 seconds)
    (254/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.314703273 seconds)
    (255/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.323406318 seconds)
    (256/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.425210492 seconds)
    (257/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.313515045 seconds)
    (258/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.846320741 seconds)
    (259/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.300360575 seconds)
    (260/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.394226513 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.233539464 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.403281468 seconds)
    (263/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.676159928 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.446166943 seconds)
    (265/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.984910974 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.143431883 seconds)
    (267/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.271209747 seconds)
    (268/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.831001711 seconds)
    (269/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.323340273 seconds)
    (270/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.318260582 seconds)
    (271/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.107372562 seconds)
    (272/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.945772231 seconds)
    (273/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.595392468 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.362699841 seconds)
    (275/286) benchmarking ("sort", Float64, false)...
    done (took 5.677467934 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.345980559 seconds)
    (277/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.113056903 seconds)
    (278/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.315239217 seconds)
    (279/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263482971 seconds)
    (280/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.362241971 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.339509879 seconds)
    (282/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.436262305 seconds)
    (283/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.412596558 seconds)
    (284/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.87525985 seconds)
    (285/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.412722678 seconds)
    (286/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.340159399 seconds)
  done (took 939.714701484 seconds)
done (took 940.937932286 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.350937327 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.349345668 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.332230718 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.354599384 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.446015271 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.508427983 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.338545064 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.334770479 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.378291529 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.381599262 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.330349634 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.50545477 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.330911736 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.329653341 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.330920548 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.343391173 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.454268069 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.336027053 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.344704972 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.339501666 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.347683089 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.328378635 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.381672763 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.50561225 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331728194 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.334842064 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.334068323 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.350605319 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.442852312 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.334898942 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.334736239 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.341266092 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.45624845 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.335159422 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.325286714 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.350820293 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.343599353 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.341432943 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.336202251 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.362884141 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.82438986 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.32938458 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.332599685 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.33245505 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.331340373 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.33506179 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331023159 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.337003441 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344258354 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343293614 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.814557244 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343973362 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.339344967 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.33179349 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.339629087 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.330857509 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333505003 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347800463 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.351809117 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.350977703 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.445202401 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.341746422 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.335318364 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.348011048 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.339467516 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.855183423 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.326035694 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.335535374 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.831798607 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.337230532 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.851328352 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.34069474 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.339317125 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.347709037 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.364878293 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.407830215 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.327881685 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.332929878 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.339783565 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.331180225 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.346331222 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346829349 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.33861343 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.337694874 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.34820299 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.507543562 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.343119244 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.334243158 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.344802237 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.352889489 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.341710334 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.348037451 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.337724584 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.329464354 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.343898059 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.338516883 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.33838643 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.338144459 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.340790927 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.345627498 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.832463785 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352241732 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.331779193 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.332946758 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.332668009 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.347857356 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.831472093 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.334032496 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35609142 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.381867141 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.3356668 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.396065033 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.337972558 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.355281791 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.345233322 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.338002331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.330538661 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.399175856 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.821314729 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.348864956 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.338551024 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332169733 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.353448875 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.337442016 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.334035126 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.417275163 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.337293491 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350458384 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.45452844 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.348089887 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.367502263 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.333658398 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.340152996 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.365341012 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.353383916 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.367736612 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.341524752 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354664288 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.352484145 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.334106224 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.346560166 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.348945593 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.33840826 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.342668159 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.330072504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.366808937 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351350419 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35064467 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.358685607 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.457821686 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.334394121 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.40312631 seconds)
done (took 226.975117632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.395543268 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.329661654 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.425742201 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.334676473 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434633736 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.450772126 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.331427707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.332350394 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.33110695 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.706708631 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331877872 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331385821 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.334764078 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.330836365 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.414846487 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.334590742 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.332365541 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.6753788 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.335306435 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.404244817 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.334196416 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.333058756 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.334346505 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.716255991 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332278786 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.330311304 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.416498568 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.33541371 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.735623071 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.331194053 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.33253101 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.680612867 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.439524365 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351188856 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.344249272 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341775866 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.447560896 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.359386013 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.427818168 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.416996317 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.434896738 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.376486036 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.328028547 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.329883497 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.343803357 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.338191606 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.334799077 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.363134589 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.330895968 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.333918735 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.677501855 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.346628488 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.335065774 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.335840675 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.334626467 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.365968586 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.334854122 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.339128122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.425409935 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.339402048 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408254256 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.719681602 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.715081382 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.339068535 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.338039797 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.335680777 seconds)
  done (took 148.689762517 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.403344931 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.409142322 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4552392 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.345317412 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.390121043 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.458294969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345500941 seconds)
  done (took 11.053431761 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342296855 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.338390995 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.387523767 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.388037406 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338240764 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.516087462 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.340956021 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.350105739 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.336474619 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389974005 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.34336746 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.34034494 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.345694634 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.333884267 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.386651914 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.349755579 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.454146339 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.339138732 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.341360255 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489260929 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337411456 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.346551152 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.39057324 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.349820035 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.344770661 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.345058177 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.159272012 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341751622 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338279707 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.341408336 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338003078 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.414209213 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.342816449 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.3366533 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338859169 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.455503721 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.342568733 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337979964 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.342940688 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.340533665 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.341856298 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.341399265 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340228319 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.338725186 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.341830208 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.36229683 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.340982031 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.341369994 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.338461104 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.34296641 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.390327681 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.344189411 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.339487381 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.338690825 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.39473768 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.350051567 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.342856087 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.338474739 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.342479864 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339471599 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.492172577 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387906948 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.341660062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388612507 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342608409 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.342029861 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.341969416 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.342853035 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396134785 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.340894001 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.390567101 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.340477774 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.521003444 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.365140923 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.345281567 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.345167914 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.344775448 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.342801882 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.340440605 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.347488076 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339048465 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.342931097 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.348750954 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342261163 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3400678 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.508982944 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448399733 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.341180838 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353847455 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348327234 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.342045689 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.39610977 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.344594567 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339721764 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.396730985 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.458030278 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.396737175 seconds)
  done (took 154.329329797 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.348965796 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35424995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.34832855 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.368204186 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.344965512 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.34434303 seconds)
  done (took 9.362918009 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.347878101 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.346523667 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.344578129 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.343223685 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.345996888 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.349593465 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3475716 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347928129 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.350446208 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.347308439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349299231 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.347135244 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.353627627 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.346641259 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.347613192 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.345942657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.347479111 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.34436155 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.34565472 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347860732 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.447126538 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.347162681 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.348142158 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.348234391 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355324673 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.347156626 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354876189 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.347692139 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.347459434 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.3536913 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.368521834 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.351694508 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348844403 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.35276236 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.353340848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.347976926 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351869516 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349759389 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345602122 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.352780685 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.350488295 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.349945178 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.348905588 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.349742975 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.350600014 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.354507457 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.354538267 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355350173 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.348937562 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350602168 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.351671978 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.348736808 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.352190217 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.350884709 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350819896 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.370796732 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355489232 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.352259792 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.350354206 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.35266311 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.350297602 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.351642077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.35220055 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.354751184 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.356104968 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.352918051 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.351013427 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.355631473 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351184954 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.350634411 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.350991814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.348723491 seconds)
  done (took 99.599616082 seconds)
done (took 424.279362768 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.361850005 seconds)
  done (took 7.62062122 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.773645322 seconds)
  done (took 8.034708397 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.779531308 seconds)
  done (took 23.046198813 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.428457687 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.431575459 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.386641031 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.343905235 seconds)
  done (took 26.851074581 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.557325441 seconds)
  done (took 7.818268784 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.350117506 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.341700186 seconds)
  done (took 13.956612783 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.565029688 seconds)
  done (took 7.825478142 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.438614996 seconds)
  done (took 7.708355175 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.36125272 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.379297967 seconds)
  done (took 14.017943209 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.329964345 seconds)
  done (took 7.591982838 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.771851122 seconds)
  done (took 12.034706833 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.340707783 seconds)
  done (took 7.604149776 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.353300933 seconds)
  done (took 7.613709537 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.72849102 seconds)
  done (took 9.990488362 seconds)
done (took 162.972218076 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.344057266 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.34629106 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.342676824 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.343767693 seconds)
  done (took 26.635424271 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.385457831 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.384900504 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.387419656 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.397047678 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.390167149 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.385062919 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.379170082 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.379359508 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.397776676 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.388589708 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.388275042 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.389398659 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.387094327 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.379904871 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.389718022 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.387379958 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.397879378 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.387284916 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.380330543 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.389160615 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.35414344 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.397752155 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.3893255 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.354296606 seconds)
  done (took 34.505959151 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.876231214 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.426651995 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.510067752 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.408424182 seconds)
  done (took 7.48459255 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405882214 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.407675879 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.42290873 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.465059059 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.487990082 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.417285515 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.382115127 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.375644598 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.360996259 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408715061 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.483896955 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.423875721 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.521500631 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351828936 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.535977542 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.353192639 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.352787381 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40698238 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.459712609 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.478552892 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.356544074 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.40685346 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.415183324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.423777568 seconds)
  done (took 35.370381578 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.353974578 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.374006474 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.354545816 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.353924768 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.362323818 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.35400789 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.356265441 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.356602595 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.354980356 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.35975579 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.354667775 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.368502001 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.354767119 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.355537127 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.362854554 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.357824946 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.36198976 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.35447189 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.355937193 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.36183225 seconds)
  done (took 28.433208838 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.348626471 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.251231743 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.701183711 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612486134 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.351105236 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.3507402 seconds)
  done (took 28.882903785 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.429694953 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.585187098 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.36233098 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.749871533 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.818496896 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.35850005 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.358906674 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.619216167 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.956538887 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.943384231 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.424899966 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435998352 seconds)
  done (took 20.310684609 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.355137534 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.358003017 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.360654059 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.374073889 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.416731182 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.362085098 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.36567528 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.351587909 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.424008513 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.428568167 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.367969855 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.419383083 seconds)
  done (took 37.853642127 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439744232 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401023651 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.388922446 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379062488 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.085144529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.56450012 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385221421 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128787594 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.380140026 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.626688843 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353351095 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4663166 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6094869 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361662577 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.360357896 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.43779899 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587644936 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855450183 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361590167 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.672970107 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383911134 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386328462 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.773187111 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610227848 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572963689 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.337615222 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.613624258 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.131998794 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.66453743 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376071005 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365175737 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355263705 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.629192784 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.47439312 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.458203816 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58503352 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364948722 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.91060185 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.364511456 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.692827691 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363127355 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36545225 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366269388 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356067959 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.289782117 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360264263 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.572846584 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.369501208 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.068004162 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.356819635 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637590706 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459019603 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.359132822 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.349447803 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433460029 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.369506445 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.361087733 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453201249 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93192116 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.985727736 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371314482 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.298942237 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369108486 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.704077761 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.030544888 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.370315376 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.361932059 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360896223 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292588398 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.704309791 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380173761 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497330375 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.383854717 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.021618012 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142721875 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.366281485 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296803772 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932468992 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371893181 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.299391268 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.587062539 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.136695502 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298733756 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.305479263 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292965169 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066299366 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368759259 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.841194388 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385498259 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107270422 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.60966227 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384861239 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382748943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.584824307 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.242475822 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360220009 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.360056803 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498845855 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380990932 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133999281 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317941588 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.363940703 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618663733 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.57076924 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36113502 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.451745036 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.297948169 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365205492 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.381450753 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361848502 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.616831076 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.984821488 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.384375942 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.001351369 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383770381 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.139090778 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106203255 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380122982 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.373396477 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.361506071 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647644421 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.179476018 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245525209 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431042869 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3708205 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.360974417 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.750136345 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211731573 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.25653279 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.583752186 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395220708 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.378789306 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.364084682 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322324309 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.3668884 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3620425 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.146541883 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.589695912 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359852425 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646045818 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295482526 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498880207 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38050608 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.586363495 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.677533105 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.374841525 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624250572 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363026642 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368528115 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380402815 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381946047 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.461980534 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383872954 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.370150185 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.627815613 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.367038777 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.368407484 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.873994445 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149406016 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366626909 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.368593337 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384977922 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993682523 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.3403251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366081332 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.258053286 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.376600797 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430969721 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.371985476 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.595518162 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.764513817 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382678327 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.374314978 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.361111691 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59713407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373318737 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.719617158 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450362773 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.864779152 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.005351149 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386286259 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.300186204 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.078667424 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.05893985 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366980735 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.557472584 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365603057 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.601179036 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.386232715 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374769299 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.991962255 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374874279 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.73525769 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.378237381 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378794606 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.671806299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366413328 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.761123764 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.017263795 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.376348972 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.38417882 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511552941 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.383100498 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301496308 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.884245198 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.37354463 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36962941 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.145252198 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402012105 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.734973151 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790503032 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.658229433 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381165321 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.656433638 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.828690471 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405280576 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.36473906 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369114865 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374322203 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.390437964 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383721441 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378471304 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.724666366 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.824710518 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934056545 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.182073973 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934489673 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.787390562 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.371502715 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.256883338 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.113371329 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323877169 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.027285159 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617805072 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.105032589 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34359608 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240839056 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.685881937 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203405317 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660942929 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605953759 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.700428358 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.372086054 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662241564 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.587273075 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401174856 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.374735224 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.3049138 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.670099651 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544345164 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385676717 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458669948 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.632470761 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384442095 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.15362713 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.432180888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.18191765 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.167026514 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.926922607 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765331179 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368559131 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382068758 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.746240419 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40283561 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900212844 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039573779 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384971652 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.894181902 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332567104 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.603855354 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387224332 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.372369172 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.116017423 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.379697598 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.631804163 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651704925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311257654 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.372320674 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938651446 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.236419296 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.375276678 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371226266 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144526383 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382811011 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.688098304 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.380143449 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.772799276 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382321757 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.304656665 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305151047 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.062844292 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.379051849 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342518319 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873854657 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.397402114 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391253936 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38852624 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230214157 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.628950069 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.38357031 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.991417995 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.606441984 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380321978 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400887908 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.375011033 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382659185 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.365045636 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.268578166 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606936338 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.424627758 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603491866 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.448219727 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.28861801 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371216103 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.589720207 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.272264246 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382367255 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.623837249 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.091090742 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.395188884 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169508917 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40374076 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383653669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396354497 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375177992 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400159729 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443739523 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6057515 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.393898952 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.38683534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.181966995 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389307857 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381393041 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.387808686 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467305264 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.061932429 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.780335914 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.155738421 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010133388 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197860298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010427414 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66419584 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380091307 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377997453 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309253364 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521749775 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904755496 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649215466 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494900256 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.378765833 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405989669 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375274493 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41284962 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.595040837 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64797411 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.25244708 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374939319 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.044712964 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.256584386 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.387046274 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589692873 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.884159711 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963700691 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50268652 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390830917 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.164869088 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674736981 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.468626691 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378846468 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974940714 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.382711413 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.183149903 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.387640198 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395214508 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533252744 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.658149524 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.490716479 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.392586705 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538137633 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.149509252 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.765032385 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.640493244 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.902098239 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.621472502 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.012791034 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.139523152 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.647373818 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448406821 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.610417454 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.502104169 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.524706565 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.388844731 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.284737347 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380907117 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22845843 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.087932945 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.387802513 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.01446009 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.651404908 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.384155025 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.377338604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424730305 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389899554 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.603276722 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.128009844 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610869951 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393047496 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.384673237 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.950799407 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.014505661 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.671796616 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321859756 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.387247359 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.627991159 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.622213139 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405482967 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.835082611 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.090564462 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964466629 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.362634285 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400870928 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381691575 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.146818398 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01986701 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.79672283 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891817967 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.046708587 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398528037 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659006399 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.388278433 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380564321 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680065122 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.382455615 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.387951348 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624889373 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.014998247 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224734142 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.407234702 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.779604148 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.325613965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.609459408 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453556334 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319791631 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391377379 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.846851649 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410285453 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50238834 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395519364 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.392011499 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388443967 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.145900647 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671057974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.386268092 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.378827346 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.386894453 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390523983 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50257784 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.544825401 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393329052 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.057901392 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.734798838 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.640914302 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393007774 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.375913018 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.386050701 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384829317 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109557295 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361134424 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401675843 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974736139 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.397153389 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.400183846 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.386664096 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.601986284 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593536825 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.382571772 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.628216937 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39980222 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404216649 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.291552646 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.157244943 seconds)
  done (took 1703.529537196 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.434415232 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.437097793 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.437564306 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.472881485 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.410257425 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.518687272 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.483037854 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.489691492 seconds)
  done (took 52.978420653 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.388390613 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.551571091 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.41961253 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.388696028 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.395132773 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.389645724 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.886309998 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.399287658 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.393084213 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.394488159 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.397537485 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.400907392 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.070334381 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.400128583 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.387966829 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387902798 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.400089187 seconds)
  done (took 66.356881966 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.896538419 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.655918484 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.784071524 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.393870685 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.390332766 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.388406126 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.729953685 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.40371942 seconds)
  done (took 54.94200963 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.403932815 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.402964629 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.4107837 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.404901697 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.405642136 seconds)
  done (took 8.327093565 seconds)
done (took 2106.874285991 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.392143602 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.393850304 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.392140692 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.394302132 seconds)
  done (took 6.871731359 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.371785424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.108863766 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.374206983 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.388809174 seconds)
  done (took 18.541890634 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.402715054 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.415358384 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.158043212 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098849997 seconds)
  done (took 5.560642407 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.139676794 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.154632604 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.13638827 seconds)
  done (took 7.731590549 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.385199715 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.394978 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.392476927 seconds)
  done (took 20.473132413 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.687752515 seconds)
  done (took 2.990978123 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.537541845 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.585237491 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.75507901 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.74139358 seconds)
  done (took 7.919580895 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.775320472 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.780014002 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.57587038 seconds)
  done (took 6.431195891 seconds)
done (took 90.638326757 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.435328399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.411528485 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.591070573 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.411996023 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.617973729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.592501577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.709470152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.376907447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.955244074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.908885425 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.411757042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.617767763 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.661971664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.413399451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.660272631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.418723772 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.638376621 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.485509736 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.104682489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.30482541 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.707226271 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.049307006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.242296605 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.29531805 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.637092136 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.549208417 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.632782236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.41402829 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.281337387 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.884251876 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.551421235 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.389073224 seconds)
  done (took 195.660191037 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391967611 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.391267253 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.410733631 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.389871994 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.405520378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.398480707 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.390483857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.410979997 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.407356034 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.41448206 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.393001081 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.392118844 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.393535028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.395321453 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.390544938 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400647439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.389734955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.410437499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.391968512 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.403392081 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.39385265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.410129717 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.391309909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.392541061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.425088914 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.39029739 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.393418296 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412063873 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.393061745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.396285757 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.419452361 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399112585 seconds)
  done (took 206.091573395 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.401458522 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.397726662 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.401437032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.417266601 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.411090632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40037724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.41665825 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.396384247 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419853916 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.399466325 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.416634011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398942526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.397379973 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.391471609 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402378702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.390169008 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.401515631 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.40052638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.396928138 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.418645853 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.392766105 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.396565177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.405830652 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399615638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.419322581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.402244336 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.398636741 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.39656062 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408097339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.401441659 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400600546 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.406729207 seconds)
  done (took 206.20992507 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.593744123 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.400551362 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.403393839 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.338803979 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404401225 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.401510127 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.398347256 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.593256832 seconds)
  done (took 14.842408529 seconds)
done (took 624.105031004 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.820948824 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.535572591 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.614742149 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.424963692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.335754817 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448753844 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424924474 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.609657267 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.37481911 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.621805812 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.72157666 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.419381563 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.865479606 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.421536555 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.691608902 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.531662775 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.337472451 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.420279998 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.759788417 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.091747928 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.706773575 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.944301691 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.615268676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.379650699 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.890075969 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.938936725 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.217070086 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.293760103 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.440531716 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.75661584 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.178573962 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.520210346 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.478247583 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.478126728 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.53322052 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.526523222 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.474168181 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489182513 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.617616314 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.710421894 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.087194229 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.18457007 seconds)
  done (took 96.241743878 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.393096454 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.394608937 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.390857689 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.391328284 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.394728611 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.393496552 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394026358 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.392306312 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.394360977 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.393036542 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395145387 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.394486329 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.390907961 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.394368069 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.395549191 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.395074193 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.394357982 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.395499611 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.395310892 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.393271756 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.395162737 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.393373339 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.395045438 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.394203108 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.392973531 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.394507994 seconds)
  done (took 37.556301483 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.407412238 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.665263869 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.84488557 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.418581351 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408772846 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.411494726 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.491378955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.415497214 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.411078171 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.412452456 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.587025795 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.413396092 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.44518118 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.878495721 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.413436317 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.407633774 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.405887751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.408851355 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.67920715 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.421134376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.513474734 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417234993 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.494415592 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.424771681 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.431164002 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.409473069 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.412191201 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.983908322 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.41478714 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.590353597 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.27902154 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.498615155 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.940470165 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.876096046 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.273260307 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.416430711 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.409333267 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.594799438 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414157048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.409566074 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.495072525 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.419670547 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.870496467 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.099993726 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.430545928 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.410279293 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.001024564 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.588326298 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.681469932 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.423470698 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89647941 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.42052745 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.413802026 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.412751679 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682284127 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.426018113 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.410765991 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.001485373 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.439749264 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.498904704 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41865395 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.412178075 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.682936632 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.4116207 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.669566275 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414203837 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.4211086 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.431359022 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.848427272 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.415709904 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.111786077 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.432088037 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.412568528 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.585623437 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.670528907 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.040985217 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.420129925 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.685705389 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950163396 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.501707253 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.423443144 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.975376722 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.50822529 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.423195905 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.416129692 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.412179652 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.41213339 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.461525753 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.497062518 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.047684211 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.100896535 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.029614539 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.526807961 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.428592758 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415147244 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.015118628 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.439470394 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415878924 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.863762466 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115902773 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.43134054 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.42117629 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.126401665 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.441298086 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501956164 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428253143 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.861588052 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.416071757 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.460546919 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.415904746 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422140179 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.438686355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.500935622 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426961241 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.414413175 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.09443297 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.617319816 seconds)
  done (took 186.772545806 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.426683063 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.408407816 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.418172544 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.408972824 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.40976849 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.419121207 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.406266615 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.406615814 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.415447541 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.407272764 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.412333835 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.41103558 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.408095493 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.421899599 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.426262365 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.414210454 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.067869209 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.41068496 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.410015341 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.411406119 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.231374052 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.418343006 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.411654554 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.409768738 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.408650413 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.407669106 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.415154937 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.411195094 seconds)
  done (took 154.357130821 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417423349 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.051518999 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.424717327 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.55559799 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.440483517 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415016564 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.555060007 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.4774758 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.416517864 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.416772034 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.416934327 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.740872161 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.419023808 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.999170891 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.633695192 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.55484411 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.999147147 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.442428616 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.418325108 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.417644926 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.559989979 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.430110935 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.739888071 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.022013753 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.419394355 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.023431149 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.41037119 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.419625365 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.42079193 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025130082 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.413739661 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.744694529 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.50165333 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.48417543 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.026771985 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.00174932 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027759638 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.583937476 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.420010326 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.418619815 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.418581435 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.410265383 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.058631304 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.427092203 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420071508 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.053497457 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.443937444 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.421002712 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.426317602 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.418427543 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.484520069 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.482997257 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.76492764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.06863161 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.507718703 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.44083394 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.561071477 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.81637712 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.429180199 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.0016356 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.415848702 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.06194195 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.446679154 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.411140412 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.420940196 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.428598797 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.578983687 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.559977571 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.003783146 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.445242187 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.006494868 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.609460776 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.421660911 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.420329256 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423546161 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.059517611 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.012963309 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.608825712 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.567736196 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.631830156 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.411933807 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.423535245 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.412501051 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508018721 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.428802523 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.066405239 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.033612672 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.44893669 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.424472311 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.423351973 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.423150913 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.613970784 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066676127 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.516405049 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.010876464 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.791308015 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.77380737 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.431512053 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.48677898 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.440504825 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.771203207 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.431076866 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.483403074 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.883062561 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.775722227 seconds)
  done (took 170.706128177 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.679465743 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.656234091 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.519340108 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.581953501 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.072681784 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.005390359 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.761104779 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.582765723 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.539502053 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.694452051 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.640730347 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.512919733 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.647429496 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.502284455 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.172921391 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.494363611 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.519980391 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.579094145 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.568698049 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.470503441 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.142289821 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.731836333 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.620323124 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.331671188 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.524643447 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.250973648 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.008221989 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.982350551 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.606457534 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.777069266 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.979056651 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.567988908 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.485253792 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.167861079 seconds)
  done (took 68.710842052 seconds)
done (took 715.652992589 seconds)
SAVING RESULT...
DONE!
