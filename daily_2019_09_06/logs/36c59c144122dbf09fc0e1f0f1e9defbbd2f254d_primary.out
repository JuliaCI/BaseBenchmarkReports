cset: moving following pidspec: 17901
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.372943228 seconds)
loading group "string"... done (took 0.568243039 seconds)
loading group "linalg"... done (took 7.150135433 seconds)
loading group "parallel"... done (took 0.158093642 seconds)
loading group "find"... done (took 1.11357568 seconds)
loading group "tuple"... done (took 1.722668245 seconds)
loading group "dates"... done (took 1.227174873 seconds)
loading group "micro"... done (took 0.228443482 seconds)
loading group "io"... done (took 0.989533765 seconds)
loading group "scalar"... done (took 36.372683704 seconds)
loading group "sparse"... done (took 11.079523303 seconds)
loading group "broadcast"... done (took 0.909724926 seconds)
loading group "union"... done (took 11.837889222 seconds)
loading group "simd"... done (took 4.135365111 seconds)
loading group "random"... done (took 8.525016864 seconds)
loading group "problem"... done (took 1.862016451 seconds)
loading group "array"... done (took 19.784067258 seconds)
loading group "misc"... done (took 1.659746646 seconds)
loading group "sort"... done (took 3.080718631 seconds)
loading group "collection"... done (took 16.647510276 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.486388959 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123621149 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114429553 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119255673 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.13451578 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115020482 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123081902 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083716642 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.779860841 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147644891 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119025359 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414882299 seconds)
done (took 5.074282682 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170280667 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082478173 seconds)
    (2/2) benchmarking "String"...
    done (took 0.082218058 seconds)
  done (took 1.291418811 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064923969 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122085424 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065818243 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067050384 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066859777 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066280449 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065795852 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065820591 seconds)
  done (took 1.64762984 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073257666 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068620011 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068899758 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067836031 seconds)
  done (took 1.406101864 seconds)
done (took 5.716676796 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.76327373 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201997634 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182359282 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.399935687 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131866631 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157044097 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.638393119 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321832918 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183080781 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081007683 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107595139 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318392496 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107071908 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.656214327 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076713227 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091326266 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136014512 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436063018 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066807973 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082394715 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088748269 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130031464 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086144472 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074440639 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143886987 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068006546 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.1305115 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080269168 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06620696 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208095013 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173209335 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673898708 seconds)
  done (took 10.228892019 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095839906 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097022691 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068000019 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136272937 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099266071 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071923388 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072677327 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069020186 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089592251 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131258537 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091703271 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.10412584 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067537801 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070122282 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08635084 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207283552 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08243448 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083404346 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071836248 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.0770373 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11913002 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080764792 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080305807 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079530766 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131047642 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182010006 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099286168 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099494625 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069104973 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082485438 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116291888 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128705202 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067379112 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067707784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126738648 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096311034 seconds)
  done (took 4.662626563 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.933654638 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.110241692 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140029074 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089967518 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13119923 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064787183 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106790767 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066021672 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082394857 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200575041 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.309450446 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066410793 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.577288979 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111200001 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.105050885 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069779211 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069991252 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068381878 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.367139894 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106965101 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103844661 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081735382 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069772037 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069085956 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.354266694 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.0678012 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064231877 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068467946 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058478699 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123413064 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068112885 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.019612768 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.065929642 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.070641667 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127747988 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068430484 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102165494 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.21796545 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145883826 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068087588 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064637529 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150352956 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07312098 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065822093 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083337534 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103655665 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116136047 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067049895 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068775213 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.16209455 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065158934 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078618766 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.986947545 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154311993 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078731384 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066200942 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.252128926 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085984722 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069242904 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064970153 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.184753901 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13753171 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067919957 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066059333 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06773234 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069047641 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384485402 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065742799 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.769189578 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069635115 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076481361 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071054226 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069154265 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072760768 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072246609 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085097642 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06686489 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077189873 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067829511 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067361362 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068174177 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064948986 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086970315 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.361059014 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066258031 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0679946 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064485754 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08561436 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096731647 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068860952 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.066969138 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101805216 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073080043 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065825868 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106564194 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067794514 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08611497 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068473915 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114763718 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067649027 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09256292 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066092985 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098194011 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070744801 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098554107 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080766812 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06643891 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.384564203 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.06384671 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063975758 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066743488 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063827913 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066462906 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065187762 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078156158 seconds)
  done (took 20.897964166 seconds)
done (took 37.850073866 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274771036 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080010562 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078953101 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075984608 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075512944 seconds)
  done (took 1.808981278 seconds)
done (took 3.036867848 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120353182 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09868979 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.06416389 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095674391 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06452313 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099524975 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098706502 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081569067 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09953019 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064587542 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095912901 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064563386 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063862575 seconds)
  done (took 2.3351905 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082910569 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082762101 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069506602 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082014569 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065106124 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083854735 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081729969 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088956322 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080775142 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072940629 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065152723 seconds)
  done (took 2.052939017 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081166114 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083520649 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069409098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081332412 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064218027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081421558 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080977955 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084912387 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081251547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073037729 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063654172 seconds)
  done (took 2.037631177 seconds)
done (took 7.617737743 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077018347 seconds)
  done (took 1.262569201 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592908423 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.103227319 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081306925 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.113639431 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183682908 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120189219 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283148762 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087009748 seconds)
  done (took 8.933017572 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104250332 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072576267 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.071567249 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071091606 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073955261 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071534422 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071375189 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07026577 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073756848 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073160479 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070540535 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071785693 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068213815 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068324507 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071747106 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070680698 seconds)
  done (took 2.428904957 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092127848 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090799597 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073938298 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075204175 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072071072 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071984535 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074813544 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073353527 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070869918 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071887288 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074951747 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073435438 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071357477 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064827928 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074231652 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075786561 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07069647 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074212765 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074744562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07522713 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074420273 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064594703 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07139897 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07401819 seconds)
  done (took 3.07027069 seconds)
done (took 16.88841449 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113589647 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071563243 seconds)
  done (took 1.376103016 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080650949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082951009 seconds)
  done (took 1.362223713 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082966048 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065793718 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089748657 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077789599 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066213357 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065740144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087891848 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066429979 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065737097 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06695771 seconds)
  done (took 1.934125908 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06872515 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079095573 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070785416 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081107903 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073866813 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064547619 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072598757 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067619641 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078276092 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063172206 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070908799 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082466764 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070900085 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084089534 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07253134 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068621325 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070871905 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067624629 seconds)
  done (took 2.508510226 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066354557 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06670487 seconds)
  done (took 1.337173778 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066764936 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06386526 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066733609 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067677263 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064559971 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06428695 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06546287 seconds)
  done (took 1.660041278 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.386324724 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111357178 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301392496 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071965828 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082320542 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250512197 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065279544 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070356404 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070430737 seconds)
  done (took 2.654939614 seconds)
done (took 14.037517378 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079051598 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08591336 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094798104 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36767677 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09175326 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06628721 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113380959 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.195044605 seconds)
done (took 2.308983876 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210995079 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612591306 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.382847056 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195167063 seconds)
  done (took 2.399491429 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325520601 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086735822 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060672726 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068764591 seconds)
  done (took 1.756882319 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065567589 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068174479 seconds)
  done (took 1.348016709 seconds)
done (took 6.930287281 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066622256 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066089583 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.084154089 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065507582 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063657345 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065522933 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063554417 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063371157 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066141275 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065635675 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065835497 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065329575 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.06546718 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065545706 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063343296 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063366052 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063372717 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065262617 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064999792 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063212416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063269871 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065917798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063449613 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063333758 seconds)
  done (took 2.820234576 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083475751 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066037611 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072208668 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070689258 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070549576 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071408081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071705574 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067042062 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072925224 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070206648 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071658438 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071438176 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068058383 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071283581 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06955398 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071964074 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07318252 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068076347 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069349536 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071785413 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072863495 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06772121 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071923004 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072826481 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071501454 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071639734 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069570778 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068052151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071970304 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069314001 seconds)
  done (took 3.352211453 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069452982 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063168025 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064116307 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072306603 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065938807 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066795488 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065180788 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065462331 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065969797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064902898 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066233933 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06479509 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064970309 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066064223 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065733237 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.070434551 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080509909 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065209187 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064886868 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066070259 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067982246 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064936755 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064998417 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064791537 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064798472 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064473343 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066056654 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064579205 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065572476 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065022318 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068323973 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068330002 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064761941 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071650504 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068336037 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064618777 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.06729239 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062744887 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063803517 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062730891 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062549865 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063282948 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.17210792 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070280459 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063170261 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065048276 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06334345 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06474942 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.064731595 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067531343 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064557848 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064496198 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066905436 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066143187 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068614534 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064317118 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065691468 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065787217 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066028258 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064401747 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064472833 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064260841 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067116383 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064917882 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079207636 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.07183401 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065349859 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066871526 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065997625 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067576318 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.067001557 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078289529 seconds)
  done (took 6.115066894 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091350561 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088163664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065122065 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066890672 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063743592 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066051175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069769691 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065805141 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067099761 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071931801 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065782656 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067003578 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067033687 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078180973 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065963838 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067035172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071936243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063752359 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06602756 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068571469 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065759234 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069737287 seconds)
  done (took 2.768339841 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156288153 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07065015 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105311119 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073036175 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067459792 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072873387 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069413349 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069580834 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069578062 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068270815 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067976931 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069968796 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067356865 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068039032 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068074278 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067772371 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070281875 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068081652 seconds)
  done (took 2.60041898 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07771631 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065833847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085354925 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06577404 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067082289 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069817132 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071109132 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073948038 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067860505 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06610437 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074284735 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068514184 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069884135 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067975019 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069775372 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068020663 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06975977 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067358519 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075894325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072675309 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072281487 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075790537 seconds)
  done (took 2.794241407 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079387145 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067961653 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083892672 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070330869 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063280313 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066261193 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071989769 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067455221 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071844739 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069206381 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067640471 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.0660666 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071256351 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067575624 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07112454 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067591898 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069167138 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067239474 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0690803 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063206196 seconds)
  done (took 2.626039367 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086716717 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068192601 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069167839 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078061266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069584593 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069903564 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077580101 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06915038 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069091443 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089532853 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069295004 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069192106 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07707951 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074243403 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068691047 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077547811 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077202485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077162718 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06908539 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069698726 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089498023 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069712927 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077209615 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069586191 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06901715 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069647704 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069289706 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07469068 seconds)
  done (took 3.300495741 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066625956 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065843599 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064444647 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065604549 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065548889 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065613759 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.065422302 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065602111 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067768896 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06564022 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068023736 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067829937 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067446683 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067794846 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067892899 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068069464 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068133363 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065617799 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065310156 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064988631 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067539278 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067691603 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067740049 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065437399 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065414035 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.067763773 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065046657 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064982109 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067550857 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064943529 seconds)
  done (took 3.232318685 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076093373 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073259595 seconds)
  done (took 1.388910606 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063482907 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080320694 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063810721 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071833395 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071748097 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068507079 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075893107 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07219956 seconds)
  done (took 1.802943248 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081921329 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080014464 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.069955922 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.083532929 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078758552 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084879288 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135794203 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.069554872 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075152698 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06610425 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082367712 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067072926 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074062159 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068382279 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07367455 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07421714 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066115718 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075030499 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071194625 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.066631987 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069485724 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07753669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070785521 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063591098 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069343674 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090906294 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080288884 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068208495 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071354002 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075705459 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073700193 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062353315 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.067640482 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06834331 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065508286 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0775939 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083629494 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070721538 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076299759 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069107662 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079343533 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063175998 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072609529 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074275996 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078359106 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068212819 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068334703 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062722626 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065488864 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069983712 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063113939 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068184809 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062530195 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077085672 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.07125603 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078520992 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.067124475 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069118948 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070415302 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071097792 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074752871 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06999084 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072641421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068238571 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074714569 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072388104 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077550818 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0628885 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062063941 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065521286 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078075919 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090772157 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074480919 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068185119 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068797188 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065392403 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071361194 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069019927 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073917328 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074233312 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068492102 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073941955 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075421995 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06800235 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07086644 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076811391 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066254288 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071033756 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06594548 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085017444 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066925138 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065846302 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065533235 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078832968 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071260604 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067337736 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065614416 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074600364 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061932855 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068837149 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069525561 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068611003 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077665208 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072030942 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072513552 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07631566 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074627324 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067752247 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070371923 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064248909 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067730509 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066210886 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074169524 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061122462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070036105 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067546738 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067266013 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202261775 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067445139 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069185321 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076719262 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074244117 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067040876 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065076346 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07151233 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06886985 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071731974 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07770511 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067024981 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063045364 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063534069 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070449152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066359661 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070944997 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07271153 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069920989 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062005046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066863599 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074526859 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078045896 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069254668 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07000191 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.075269467 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07015443 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.068287948 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075636094 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071060551 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068050111 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075063387 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068857719 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063388076 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072090973 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071525072 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067215979 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072927185 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072332666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071191755 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069536765 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067799448 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077094482 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069839743 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067234233 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068099643 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066915045 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079074447 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070748156 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063555852 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064948664 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077734336 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066387579 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.068121557 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067341733 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070261964 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.069434842 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066581429 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068331535 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070623874 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079590204 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072732196 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06873791 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07361979 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.0797111 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068307235 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070875001 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068377665 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069248876 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069498511 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077250341 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073997073 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073018709 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071062227 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064874426 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073957466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07559676 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067737975 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065730941 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067654158 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072744199 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073817407 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072684756 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069142212 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066359337 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068510615 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071163734 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07110605 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067882111 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066819731 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075157108 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06609648 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075510619 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068934211 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078468664 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071636716 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063013353 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071305108 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066122442 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074266055 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063128594 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065713906 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066791458 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069096867 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06667029 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070208382 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062386294 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074544791 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074832443 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067300866 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066531746 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066810616 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074025772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069207951 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070854433 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070367077 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073414564 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077382922 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066498549 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070355969 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077775089 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067507443 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.192864795 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075005443 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067412865 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067390713 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067783464 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066413636 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071761867 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07846259 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076016285 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062322329 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071060266 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06773587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.068212001 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064042432 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073538438 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071598857 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069437598 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07568169 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070291774 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069854577 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072695835 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069018395 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069584331 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070550107 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072398312 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069347627 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070116418 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067851049 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071989397 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067620751 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066529155 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070177755 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068790136 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068753419 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074163919 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068810822 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068959625 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070796298 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068918734 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069159011 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068598166 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067110732 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072012535 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069371335 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069565677 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071148659 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064278519 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076154818 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068193358 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07623717 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069248538 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065110474 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076628626 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070977543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07498442 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06965057 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.07026981 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069502937 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068356221 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07124522 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0758389 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066198277 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079069979 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076842769 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069299899 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071677389 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068630478 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069664788 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067218167 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069741581 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069645663 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069105125 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067956136 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073279798 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070820728 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068726691 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069626024 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068895511 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067672597 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068920907 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062561941 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06727164 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067253857 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067767395 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078340772 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068723741 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067679853 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066822993 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068921121 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066809783 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064823301 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077069037 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078109119 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069227421 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076319207 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068007526 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069908953 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079025886 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062362862 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066018137 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065885891 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06609618 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07541379 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068447054 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077727106 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068516013 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067176908 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06482648 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068677799 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066202086 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061926964 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065391731 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070902558 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066548645 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066014195 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067007961 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069764288 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068214624 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076821325 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065299835 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068100382 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066984156 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064044008 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066275301 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066544456 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.203784738 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.070323674 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066131965 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.065952357 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.068022638 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069557591 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069540627 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068618551 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069598011 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078382548 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068017412 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071865009 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072889454 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06331432 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071816605 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067841603 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069349386 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067593175 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0727613 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071655418 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069250095 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077827428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068271121 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070236847 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069014771 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067263142 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067892584 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067965456 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069070249 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067580891 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069220189 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07646125 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066190617 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071805771 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068838553 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069103088 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076137422 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069292113 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072142962 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076313712 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068911991 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070382997 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076759287 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.073465324 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072274731 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069977835 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070324002 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074929031 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068370637 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074748517 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068970589 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069053617 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070509979 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066234434 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068415425 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068024227 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066947135 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074521579 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070118886 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067581075 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06692131 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06638828 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069176548 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071780545 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076222158 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.07156328 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071926249 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06366477 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064971188 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070146934 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066567464 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070309477 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070646329 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073785699 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070239113 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.06762116 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066472629 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077019209 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074104392 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071981237 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065918478 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071758637 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068642465 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.07049 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069053202 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068146083 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069484791 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071779278 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069793319 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06734393 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075124689 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071425542 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069014889 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069899177 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.069380391 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068705137 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064004193 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069197282 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069917536 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073644141 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070723007 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068485154 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079360547 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066101754 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068644975 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072052992 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067762271 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073389494 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063329267 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.0694621 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068842904 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068668787 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063009395 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067057582 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.065146833 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069303624 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.066468187 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062718611 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078254735 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076589261 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069965961 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066248085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065887591 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062454298 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062111608 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.19954367 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070838098 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071104636 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079431969 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067611901 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067152248 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063955996 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068221949 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07166366 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071653514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065971129 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063991692 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067900541 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071477021 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074755641 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066854485 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068570312 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072049909 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070503319 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06645183 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072396236 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065154195 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072776652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082121113 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069417265 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06985436 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075521839 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077134197 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069749397 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063696541 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069366258 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071451384 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069414399 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070682045 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070328254 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084092521 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071755699 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06837241 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067615518 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072043707 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067974688 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07665093 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069787152 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069416199 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073359405 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071310825 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076870679 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069116202 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074723696 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070144945 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069510804 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066131904 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06791751 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066108777 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067520963 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070058512 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070094667 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074094822 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07722697 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067843751 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080082752 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.078029711 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070594393 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06494578 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.068056744 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068134534 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063874534 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069105373 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066665701 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06652106 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066308593 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067054102 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068926925 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073565669 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069220893 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068893336 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067888808 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062355296 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070253467 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070258404 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068887113 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064699665 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067897318 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068752338 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072511228 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071473789 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065475445 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069587855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069657997 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068449144 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063400069 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074746297 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067185979 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070096134 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067665221 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068296305 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06910325 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071835058 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073418081 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068865491 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070395182 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072005569 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070284712 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065354678 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065769202 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073786901 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06606743 seconds)
  done (took 43.696288481 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099728831 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063639335 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061915532 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061749383 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074327703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062710562 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06159933 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063157823 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063028257 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065177205 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061693002 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061846585 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07084022 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078373548 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074362431 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068574005 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063972308 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064718903 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063727085 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064937789 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07320369 seconds)
  done (took 2.750096542 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073418431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070815771 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074832205 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078373129 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069577091 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07299363 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074774361 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07299923 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078462041 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06914739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079708726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070953869 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067315265 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067370493 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066998478 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071192505 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075868002 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067457173 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.078498003 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.072539268 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070714498 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07256635 seconds)
  done (took 2.901629637 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066669797 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065665441 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069354506 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063018002 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067829201 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063093317 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071727109 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065904509 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071656041 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066738461 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066501888 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066784023 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.069622046 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063023419 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06777861 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06587187 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111789587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071441727 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067601594 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.068556139 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063134243 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069477858 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063495578 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063641845 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066658317 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071060783 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068351878 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065890889 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067032689 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066350714 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067245243 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065027304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068755663 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068187719 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066641276 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066699107 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06720603 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067350531 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06280609 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065605622 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068066872 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063203559 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068394276 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068802043 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065597522 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064957229 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068789019 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067459437 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062678965 seconds)
  done (took 4.623716592 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080215506 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108263085 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067659129 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088081433 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081711864 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076941264 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.071004217 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091433974 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065439585 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065539832 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081304167 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079458548 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066031599 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070067814 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068990799 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065629875 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066816114 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064298685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069503183 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065238123 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069800294 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072214182 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080517015 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08086274 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071353278 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067043812 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065903515 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069796538 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078465978 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069970657 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06984206 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071005213 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080762468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070855063 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064747369 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06793866 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082050542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066127659 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067475558 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063156137 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067846185 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069444029 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072646527 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081423424 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065758647 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070623221 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065702349 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062372757 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078663686 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.0682012 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073185535 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080169473 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069235277 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065638689 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070367781 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080784477 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065405311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063830243 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068191616 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07775097 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063220782 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069217773 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079138925 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067305495 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072699619 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079731179 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070954912 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069209344 seconds)
  done (took 6.357795546 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.07494292 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072531548 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081772502 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079793004 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072175076 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072341073 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07220945 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072279154 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071876579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07715296 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072211206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093364722 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067116612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074743139 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072236996 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072399118 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071916159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072388363 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072042246 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072067143 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072211789 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07988661 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072277094 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080105552 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097906564 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067634975 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071977624 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072283855 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080522169 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072170264 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079408875 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072502162 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07213516 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080539049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079269766 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072465664 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064862731 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071739976 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072553435 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072102357 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067282524 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080041966 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071953124 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067179779 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072342802 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071973906 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080582393 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079206709 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074709464 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077079771 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072062481 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080177245 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071707756 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072267592 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080159921 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104833089 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079934233 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0802243 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072025079 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080231356 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080179665 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086020819 seconds)
  done (took 6.019290367 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083953459 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075023988 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076883879 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061177893 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063762069 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069911609 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063775425 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064228994 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074290525 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074954529 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076785394 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070868272 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072692918 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076970537 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070057038 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073012344 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069748064 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069959619 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074185864 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0698261 seconds)
  done (took 2.758199952 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07421394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082848538 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066442085 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072313516 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068497617 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071539386 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068015048 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068850599 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066813837 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069171337 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076037517 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075663386 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067356001 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07168306 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075675123 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071582701 seconds)
  done (took 2.466568897 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.07517637 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072789991 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079642279 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067800636 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065513385 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064128669 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.067312708 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063324869 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.064588002 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.080143968 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067724944 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070026874 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067341206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.066346029 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064931291 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07020925 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06388894 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064919939 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067541465 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080467422 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078095527 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066281074 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068045396 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067576853 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067725189 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073001006 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067125103 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065197314 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064810399 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06757809 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068382441 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071175124 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064793954 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065471256 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065860785 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064838086 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066384537 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066162452 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068873996 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066539314 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065302558 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066658365 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067153198 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068221986 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063416694 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067696202 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06420485 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069379508 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065238785 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06814025 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067270813 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069396097 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.068158595 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073941019 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068931871 seconds)
  done (took 5.071036117 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079077356 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069220055 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061808125 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064009189 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068707974 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068765213 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071135905 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069717231 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069491346 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065516685 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06968189 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070130221 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069507134 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070833208 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067560167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070806912 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062146978 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067666685 seconds)
  done (took 2.567855219 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070331865 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066165133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0728955 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066426614 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067485225 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069623141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063628626 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066377682 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066180058 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067467926 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067714958 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069577558 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066158334 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070003507 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067353989 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06745955 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069784325 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066194493 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067465554 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063946553 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069227802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066130384 seconds)
  done (took 2.812883778 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071502468 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093173729 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141861336 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.086277556 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083151316 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080245822 seconds)
  done (took 1.885653251 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090746369 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078915476 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067761929 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090661213 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075383966 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070074263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069423925 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069360594 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078085043 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078271832 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069415399 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078234509 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07679355 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075831975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073305527 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073298832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067774695 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067356594 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065911422 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084022965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067076186 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075842328 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067897074 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068366118 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069245867 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077470375 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078183754 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077736702 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068821062 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077742424 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074701741 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069401831 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077211217 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077477683 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070749159 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078031876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069557981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086477417 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074836441 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077299951 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070472935 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0751762 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078292792 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076095573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078748676 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069681173 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074362749 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069483971 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069551878 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088322312 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075125727 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077670586 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075864247 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078329631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078220004 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088526331 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078372457 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077907882 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075501123 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080226965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077685742 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075196322 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077955861 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078559518 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075768282 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077586898 seconds)
  done (took 6.317060442 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08238516 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086288936 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068145132 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076644215 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075770902 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067581905 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067518526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067415304 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067716866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067375513 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107383562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068021582 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075731915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075764497 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067874449 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067693044 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067659248 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075488986 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067115561 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086204021 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067303178 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075570645 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075538965 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077122747 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077937508 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073858119 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067561902 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068889669 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0700744 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069316487 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074805606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069555775 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07770144 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068691602 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077505142 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069683758 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069448772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074271353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069700751 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075192792 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077675148 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08659667 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069760883 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069305261 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078699034 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069778295 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069614923 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069130104 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069589195 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069087762 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078487473 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078245821 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078118028 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077692579 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069829629 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069414655 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069584867 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069387079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069866984 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075539513 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077603265 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069201086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088694157 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069822463 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06959207 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077871276 seconds)
  done (took 6.201650601 seconds)
done (took 130.44167489 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184103133 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168468104 seconds)
  done (took 1.679575579 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06908649 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097094517 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078041144 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128078288 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066528944 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100017985 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099172521 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078239269 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066055925 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066269452 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066270883 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068463913 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131340984 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066606036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065831021 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06860693 seconds)
  done (took 2.65412386 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096859567 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157007551 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09923069 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06513241 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096188515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073006065 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064785772 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075376165 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070997794 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065145233 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072640578 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070479905 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064999726 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070750778 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071325451 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072493433 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064825081 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0728611 seconds)
  done (took 2.765765423 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101321877 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091385864 seconds)
  done (took 1.535806684 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156474794 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106021433 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149564856 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.345606194 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.169568602 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229042278 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127084496 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128180826 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.11739876 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124053474 seconds)
  done (took 2.993570144 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098206613 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152709614 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255563542 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115503115 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072516972 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095210982 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116212581 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077894961 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081131905 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080552773 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080576994 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076572194 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099132563 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073592778 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073167181 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076013439 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102745479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072277117 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074288527 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076922655 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099902447 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06595159 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073651133 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072193904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077470315 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077604676 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065508246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065423716 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077061285 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074504671 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076996722 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094005728 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077698998 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108103222 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069966287 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108551125 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076449141 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073994124 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074068097 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074058454 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079169287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078995494 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072409241 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076156054 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065633325 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076424388 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.0651238 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065170203 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077774635 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066640289 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078146971 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077380975 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107922971 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066760527 seconds)
  done (took 5.957313362 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101481255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104954384 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070986208 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10957228 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097257297 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071381651 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101469283 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091372172 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102777773 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093169755 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.08925061 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070729728 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082399302 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083552697 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109644757 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102273654 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095345386 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070965757 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102157643 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102829568 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068498375 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095041382 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090958354 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101753843 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067523716 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070682065 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067955312 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070644595 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077642016 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.07817585 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070224562 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.102154939 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084210003 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078923755 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067442871 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068144012 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068614744 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079613563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.097662111 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079129964 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077573875 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067717692 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067804489 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06984518 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091238439 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067317928 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078784063 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080335163 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.08037154 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070070704 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070393098 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068097521 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069476883 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080089225 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078149104 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081074638 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080513242 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068229676 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068339071 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071845481 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08086738 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079485177 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079540454 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093117025 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079679809 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068805654 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080437379 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084459464 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068650324 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070032161 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068813762 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069470043 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069246269 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078509692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078400681 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070275921 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070144077 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069682547 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083052606 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079896942 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06821403 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077361209 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067549982 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069868299 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072244249 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070170211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078799242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.07999721 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076203812 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068171104 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069590027 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068985242 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06690552 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076572118 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079106397 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077876648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078181697 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068582189 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078199283 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077444663 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068988989 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.207533133 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071508997 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071747528 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071440438 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078893215 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078745918 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080359471 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069876445 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069181201 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078931486 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080794913 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068768344 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078856958 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081543535 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080357535 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068300612 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081563678 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068923358 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079901229 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069812376 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080645651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068347297 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079744753 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069366669 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068127534 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068777337 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079967889 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069953519 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069301663 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07056441 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071045471 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079425202 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082965654 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070875865 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081192719 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079516693 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071942272 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080323541 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068661518 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079745878 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069446151 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069790102 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067556633 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082152643 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069746001 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06928593 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069610324 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081208131 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069265261 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080929478 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079247926 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067586168 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081727202 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080697217 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077665528 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080391959 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070860115 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069455364 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068975367 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06969496 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077919179 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081765349 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070866663 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068898337 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078596607 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079647575 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067043136 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07834261 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078701006 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078525421 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068725276 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069695239 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080462955 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081648358 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078544822 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078697163 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078795959 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068591064 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077541679 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078786026 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068211265 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084550201 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068594282 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082851105 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079520004 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076845811 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07912309 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081125204 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08075339 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080656903 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08279417 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068066703 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068105423 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080319301 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068121902 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069363081 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077775812 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069173548 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069271085 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082235992 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067697555 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078626012 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06656872 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077788946 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066765587 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068787048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.216125294 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071462658 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.0707538 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080727137 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070333409 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078955988 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081656348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079404187 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069326852 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071296054 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080857043 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079787947 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06851382 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069048957 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070708383 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079488051 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077879928 seconds)
  done (took 18.839150035 seconds)
done (took 37.776071349 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211542816 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.151494118 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.180848471 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118824033 seconds)
  done (took 2.10874122 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122857741 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10164062 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095874429 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065193607 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103803441 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065912562 seconds)
  done (took 1.934292358 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.318073497 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213774291 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184710094 seconds)
  done (took 2.09322194 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200295697 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188923898 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.39903369 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255941985 seconds)
  done (took 2.530816897 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144626846 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089703045 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067788044 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08337755 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136192689 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163527708 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102765789 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127097945 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078496796 seconds)
  done (took 2.425072721 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148945609 seconds)
done (took 12.631470625 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098243744 seconds)
    (2/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110137051 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.210231209 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073564492 seconds)
    (5/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.168002921 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088203547 seconds)
    (7/309) benchmarking ("sort", Float32, false)...
    done (took 0.128172509 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.089684338 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.168198143 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07418368 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.08220088 seconds)
    (12/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.163159652 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.1913999 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119720982 seconds)
    (15/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195963788 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.128321421 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077766778 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.175654602 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.106426622 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.216126652 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.111448858 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072399517 seconds)
    (23/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.155162693 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169789165 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.12113596 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076819353 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090940092 seconds)
    (28/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.13052571 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.108971759 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194630018 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.171618278 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.14809826 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141889982 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.097464193 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.217717308 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.112112422 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07369187 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08229389 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080054925 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071529996 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077677622 seconds)
    (42/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07132987 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134099781 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070302166 seconds)
    (45/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.075249032 seconds)
    (46/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088449193 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.149982903 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050946372 seconds)
    (49/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.072519387 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079572399 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066127128 seconds)
    (52/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.118021683 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.07369599 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06961195 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.176401788 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102284196 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074513949 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18259991 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073939219 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054187196 seconds)
    (61/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.079122548 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094671432 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140141465 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076383263 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06969463 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074380881 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.125622446 seconds)
    (68/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102817558 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07372831 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.1024893 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055624499 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.160064797 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070518726 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.200102564 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.15370592 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.067191449 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100819944 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.062294586 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157206675 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.15793823 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077319254 seconds)
    (82/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.075744106 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050845591 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.326603226 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066573836 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096851128 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055611413 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07706418 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055028043 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089987085 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096448256 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.09751684 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 0.067133085 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.181476138 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.112786496 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.113911347 seconds)
    (97/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.111215672 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052694784 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.176595253 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079319479 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052493418 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.166148121 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055352218 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068935598 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.09616048 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151493927 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.174418442 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065000692 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084083945 seconds)
    (110/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099944586 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.39984807 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07585662 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.159648378 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.096329749 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072066277 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.072670523 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090479114 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05220265 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072313422 seconds)
    (120/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.102023085 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06235581 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.13936753 seconds)
    (123/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052628268 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086229156 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075341553 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205115398 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065093674 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141621643 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068046919 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.187407005 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073318447 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 0.13357903 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073178581 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067755803 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091819548 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072871258 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.051794239 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069688151 seconds)
    (139/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.062620344 seconds)
    (140/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051471427 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070376333 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053802562 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075220971 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071642596 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074561594 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.109575888 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064822488 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090789789 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072906991 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071760804 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065679312 seconds)
    (152/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.061777499 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053051996 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053218861 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066715276 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.186300945 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073076857 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063987014 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065313303 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072524095 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071493478 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.062039503 seconds)
    (163/309) benchmarking ("sort", Int8, false)...
    done (took 0.139636918 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051299453 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193658863 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051375314 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073359247 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073809831 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.104774059 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066559459 seconds)
    (171/309) benchmarking ("sort", Float64, false)...
    done (took 0.125827416 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138188168 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066158475 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132116045 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053303304 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.152732931 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088149406 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065105792 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051887321 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070851644 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170445917 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065539608 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065141936 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.106927336 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.167474863 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087328333 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182497779 seconds)
    (188/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066815464 seconds)
    (189/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.097134835 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071135847 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051007134 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.228459729 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068921731 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069074722 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077292386 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.056942622 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053679529 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068779395 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075115883 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061909092 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076540706 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.066977673 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068157395 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.0696762 seconds)
    (205/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.054243608 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06644528 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067760204 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09380687 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079979823 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051666028 seconds)
    (211/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100146422 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.07265039 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079626209 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180408485 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051639778 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066927743 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074818475 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07322322 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090189683 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.18021935 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052735208 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099241656 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065471962 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070728098 seconds)
    (225/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077561051 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052762674 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073695209 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089752474 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064367664 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071845851 seconds)
    (231/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051982464 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05119811 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086035784 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051996336 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138516491 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.103149753 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071676266 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113646904 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052064934 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092497706 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067582692 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.054312387 seconds)
    (243/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076136146 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068513719 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068859768 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.068643414 seconds)
    (247/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090352943 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083646921 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.054947257 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067304373 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152377077 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071480799 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05111534 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069828154 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09196146 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.13168525 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06180235 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068668192 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062696207 seconds)
    (260/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071065008 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073705891 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051096609 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.05095396 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05110147 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066073185 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.071499856 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051104016 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05124429 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052113133 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.051676858 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141140767 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054073889 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065471064 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071661869 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.16786843 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051519403 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185913865 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065265172 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06827684 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071845966 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072441885 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064002281 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06667403 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052613569 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064020218 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141560238 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060816345 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064960025 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072654874 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068540338 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065278007 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052741271 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087491153 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065258111 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086530973 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070449308 seconds)
    (297/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061555953 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.175120751 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08687065 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.067227678 seconds)
    (301/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060708047 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052808009 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051823876 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072134644 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.07821742 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136690192 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071329065 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063001651 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.077852415 seconds)
  done (took 30.743815054 seconds)
done (took 32.13384731 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084817224 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092238815 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074158203 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091772964 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080392908 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076504801 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072203379 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077949369 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079822485 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081591295 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078341208 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054764373 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073836575 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073862385 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074001249 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091060087 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07773846 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072202823 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072874081 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064521759 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073004353 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065295199 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067269099 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054400959 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076869284 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071238523 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072145394 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07400118 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065606733 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065512394 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069076471 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072827378 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065244296 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077167479 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071532972 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072556912 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074322875 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075876854 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067148594 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065771187 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073478954 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06607056 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072542866 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072919955 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07167709 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07084072 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072967428 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077765558 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091042238 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067905042 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073962367 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075754666 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075774686 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072034737 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069242868 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072672089 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070235863 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090840443 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073324505 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067449296 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073774747 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073672422 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070393282 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072975977 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072444526 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.07492351 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074891705 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070553862 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074645386 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070613747 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065413981 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072306563 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068280251 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065893555 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075218364 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076551994 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064143613 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070900531 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072186395 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071179467 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064377853 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067842615 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066730367 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07110811 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067133253 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054605374 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068711081 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071323637 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064477823 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072909195 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070996137 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071469081 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066497283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07506542 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064842665 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069908271 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065334569 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065200014 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.0670447 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068659835 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065457599 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067931988 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073824313 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067061756 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071238245 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078667154 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065061014 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071483326 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064149322 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06450214 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079389737 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075733007 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065037601 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068106921 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064646452 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072535178 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063908916 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064882759 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064879593 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06509992 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070571592 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065022789 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06664931 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071613473 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077048066 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064871577 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067662428 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06671169 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064807081 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.06948108 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064588808 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064207034 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.20111703 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064633574 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071656944 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067741722 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074808402 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070769232 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075090235 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068615873 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075785252 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072655481 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.073467445 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073184314 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066640938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061226347 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069718369 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069496387 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067540956 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067645516 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068767488 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06725628 seconds)
done (took 12.435447468 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066384289 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143535061 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.100547444 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094936606 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088445584 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068505626 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077320784 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102036447 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067713947 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102607619 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087023699 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084476775 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112065246 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064113992 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06559405 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068966356 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066564651 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081241656 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100319528 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08603938 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115504183 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065417726 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094242476 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08977434 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086977447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.101899911 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066620814 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070087258 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069141264 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091354111 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08602704 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069646653 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066453697 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099877121 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092252686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083178538 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066319334 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.08207246 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066393379 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065717691 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06744996 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098144579 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.07988412 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080495187 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069474931 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068463241 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.06710233 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083044676 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088819291 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078383141 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087124037 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10312782 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068637145 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06506236 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064320456 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085466891 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065339092 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068314324 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066468352 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068094198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066074245 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068928047 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081201769 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.08172568 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069572205 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080123669 seconds)
  done (took 6.781178177 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083667931 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.090209536 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083301022 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084123348 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065442238 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066458785 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066345951 seconds)
  done (took 2.022631146 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066624901 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.0873868 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089596656 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088356568 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084494864 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087323228 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075134565 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06661077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080197394 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067188733 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087224463 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101769843 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066705151 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07303448 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090946809 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066474056 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089650172 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066456955 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069475631 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089654097 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068187577 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081652288 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069620977 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066795986 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080225403 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066228333 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113067824 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070322993 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068225859 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068949265 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064434618 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106752623 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079860763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075368141 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066336153 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080705694 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080872899 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065050847 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083123296 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071543989 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080064029 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067404909 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067488516 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064474726 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071228916 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077763644 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069480149 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069415504 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071381641 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088805836 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06922916 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082787353 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073691495 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.071868634 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07008969 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073329399 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078837761 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069544526 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088787811 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069191715 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083284587 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08300403 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080012847 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083273594 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069220601 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08007011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080413677 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06893876 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069814784 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071125155 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086176863 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064699727 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068301358 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077072083 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068124581 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08911249 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088880871 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068044732 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075867153 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066880062 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066546001 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066568452 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08932837 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068684293 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066374367 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070742924 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069685157 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065001978 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065796962 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070130702 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064892438 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06908912 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070520422 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070561241 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069739687 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08323586 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069105112 seconds)
  done (took 8.788983423 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068737819 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068332494 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069720821 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068191071 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068065085 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06826384 seconds)
  done (took 1.918766681 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093995832 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069566073 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080257607 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072519757 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104560617 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086886554 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087031891 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079093525 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083636094 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078883809 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086738192 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088427966 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092945852 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073177861 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086755219 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072085705 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087322509 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075938761 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078543817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07343112 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087093747 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072742031 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073600174 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081721648 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076081663 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072623201 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067571287 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079336531 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078988209 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079499009 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072299903 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076102787 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070632277 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079605567 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087232977 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070531399 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071887827 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07771145 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072640519 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075789698 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088545809 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073078181 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07481376 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077414565 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078961125 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070534178 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077584261 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076646589 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086588195 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077324945 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077010547 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071565899 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075540496 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077365145 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070344002 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078662291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077286042 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086699087 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072204069 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074069257 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.0688861 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075345706 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077845104 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075053328 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079162072 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076970088 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070052468 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073080332 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072930016 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07153821 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076650732 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06861312 seconds)
  done (took 7.090720427 seconds)
done (took 28.075916001 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.544865811 seconds)
  done (took 2.020202681 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602448938 seconds)
  done (took 2.100747205 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.63466056 seconds)
  done (took 8.128552704 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.394665038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476446187 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689017412 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131160166 seconds)
  done (took 3.222461203 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.67879267 seconds)
  done (took 2.182549527 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209130474 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196317266 seconds)
  done (took 1.921778968 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.377674866 seconds)
  done (took 1.874184701 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099283606 seconds)
  done (took 2.593662242 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26315941 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163161673 seconds)
  done (took 1.925477726 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460430684 seconds)
  done (took 1.956680719 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.86186609 seconds)
  done (took 6.358756442 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206028987 seconds)
  done (took 1.747743552 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241116648 seconds)
  done (took 1.737850175 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.687417503 seconds)
  done (took 3.185807794 seconds)
done (took 42.458497978 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.0806428 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081451502 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081513063 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078765263 seconds)
  done (took 1.808675109 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077570244 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072952877 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076645217 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072773813 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076513075 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072635194 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074355973 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076726893 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072585359 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072888138 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07314663 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072888453 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075082562 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074333449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071070478 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075196127 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075925818 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072514357 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075793816 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072393907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071268879 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074912003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074837599 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073175856 seconds)
  done (took 3.279400518 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078138729 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073212118 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074992166 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071592764 seconds)
  done (took 1.805646588 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078399413 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091749277 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.0895453 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078413923 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091927708 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086672668 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.06908387 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069144113 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072807292 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076871575 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068185186 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096232815 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088258347 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077132834 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079474514 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066401544 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068409645 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087589408 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077681601 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078039224 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069968744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077038355 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068368388 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088460282 seconds)
  done (took 3.400042853 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077628462 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10348342 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07793213 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08834843 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090342196 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065332378 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074597297 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089462112 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123733753 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06565742 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070088342 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065342028 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072289481 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065551847 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076455589 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104672902 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108397773 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068648547 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096209022 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065452866 seconds)
  done (took 3.163212044 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073479086 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070460982 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066022324 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069474289 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077849619 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073553377 seconds)
  done (took 1.945719193 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068564814 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066952146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067727957 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066657843 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071615468 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067605812 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066150307 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067395912 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067050083 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066934283 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066841843 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065666822 seconds)
  done (took 2.320287936 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.424154755 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068281361 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069427089 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065853354 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070606975 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066708824 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080065516 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068218267 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090559824 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066781292 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066677857 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.06865183 seconds)
  done (took 2.718647732 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208688969 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076729997 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239107813 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137355729 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112238684 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116431291 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104557047 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113672638 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14467723 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102596623 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168980337 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167100919 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107883096 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13815075 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089440439 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098348862 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156697497 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163049858 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104008142 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166234834 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145065342 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124901662 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148628555 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101713322 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10649256 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122842193 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071453632 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080590825 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172721631 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133168703 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148372525 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112241146 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094203598 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179113064 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173420638 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145364321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135253281 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084450092 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102946065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134181724 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20147006 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088868574 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165232609 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.247544789 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083837154 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134853451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122987745 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121459958 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107781414 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090678767 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147880854 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185677107 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140275468 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088221316 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113242287 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116926706 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116684219 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104710031 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182478039 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162698386 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129610754 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070745398 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099423674 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155632356 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133657309 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110551035 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129321902 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095580383 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135350534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155797705 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119635192 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145372542 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130297568 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089123559 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120374445 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141387006 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12941386 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171815975 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12583639 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073654426 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12716886 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104713783 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081725057 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.142590888 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076000308 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177306884 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099247618 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.107016102 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114419819 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109695909 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110159732 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163087004 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144009549 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246627724 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066966091 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104628955 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12112901 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150560383 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088090242 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109353182 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117741988 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078274728 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141039433 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074917904 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124940113 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075953219 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126324882 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133266866 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076100211 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122624364 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101409318 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101591831 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134753694 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160412181 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089796739 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082566544 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168302319 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122726542 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105455463 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144448009 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157171691 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099816285 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103375374 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151029058 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181667929 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089870707 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164151174 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108107433 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084148949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088188059 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124964221 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113263815 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.1234553 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083147214 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119932429 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170880667 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075506736 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09625444 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135634749 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080028343 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081458514 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104398512 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100869813 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09527668 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.10056941 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104944826 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138472259 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12419359 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104789272 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272204898 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103058514 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174383169 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090135272 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100833865 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104421185 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070063495 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138565674 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158909468 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080193374 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166123354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124423057 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106349829 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120326175 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084301646 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141373243 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078970243 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069972572 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146449488 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112173675 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111296401 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152100605 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104891911 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128225944 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120684666 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13634 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134640411 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129545042 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106167138 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08863946 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113250521 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126682541 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072885071 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091473319 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080709912 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104739229 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096496601 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083849961 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143643333 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12801503 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101094127 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112477157 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097264902 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148645897 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077303554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131206543 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120496792 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094259519 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152861929 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153128141 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132575245 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099834112 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145524494 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070018538 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073543974 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.232780108 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12897535 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084553619 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083963003 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119369308 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147830228 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131958014 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140263914 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112137666 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122208409 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155922092 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070177722 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116038408 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148914954 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122366557 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105139186 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090391461 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09903773 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143843156 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108601015 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183986779 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114741392 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127058288 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154329886 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099576948 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082879145 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103646795 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136622258 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105409597 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14517373 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100525583 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088275339 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110491292 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074301151 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100599338 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128333725 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12071219 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137288863 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115496757 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134586687 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077353245 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117879592 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121232792 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123664405 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064443253 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121199029 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16255213 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094115845 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119650397 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153810665 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079127868 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.1241633 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32455566 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152921075 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086042726 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110362655 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119066473 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129558668 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122415229 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141937243 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109673906 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136266439 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110715107 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085780349 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0888213 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098027509 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106025935 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09610588 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108673959 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116203619 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096096841 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13386733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104651807 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109918505 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117951507 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097062259 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089191317 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09717361 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175914099 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120780068 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173366434 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.099576858 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.14696013 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165212927 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075016686 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079313765 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078701514 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140503296 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084472615 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132026813 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098634026 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106632361 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125326814 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146499482 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095825834 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068575434 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109332451 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136262657 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113301303 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099076128 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105133089 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163911843 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100428052 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079474131 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114149291 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105084854 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102893683 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.316986354 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064846268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100421214 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076125204 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081781835 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1291904 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15523111 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080591502 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1030048 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119914768 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111815694 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128939936 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102385199 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100186995 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115217991 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151505013 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129711439 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090820806 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113239918 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130754601 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157474645 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106775159 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095939756 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17381459 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152943417 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162472272 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089317978 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1306956 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114649371 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10832977 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140259321 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084088026 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164824818 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082320745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137113256 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1044691 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090762017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13088512 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098741629 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088506567 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149610529 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118443861 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082888291 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078060391 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118475989 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121229188 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109238654 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075826627 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140022354 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072831179 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132691424 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169637191 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08135623 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106490784 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244598933 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083057797 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111464885 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103951799 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08905626 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099231522 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174692377 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089522007 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150623619 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144159969 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11407082 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138405537 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100312503 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636830531 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078311316 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152824779 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117850814 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175249717 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098585257 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118840994 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10915765 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125334025 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146248855 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10599227 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177213148 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134331852 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117280837 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07953599 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103018094 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10320226 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089526432 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105427756 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114351833 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116902031 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094576863 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116920256 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124595409 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082274288 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095664726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157607763 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117951764 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146140411 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141339805 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085103722 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119141592 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139714642 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079926578 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123052035 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153221611 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106582293 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098496969 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079957175 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.248664544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17874401 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073734629 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165154862 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120977118 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110437667 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115140236 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115496849 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132476964 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108990387 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122112895 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094059696 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111980759 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11285029 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082118238 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078127764 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105780446 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112825169 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097679214 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099461535 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097989769 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152928146 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071967845 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096417954 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104247355 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146931151 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176397895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088183708 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08295283 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12039731 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113586597 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11405743 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121763622 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079714791 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082671204 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081981659 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077429217 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.1088101 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113065842 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105143419 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112480879 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165378377 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082732426 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226346575 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096321689 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105418395 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070443807 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079507319 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096204161 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097809708 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108969031 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10152178 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170140501 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094202227 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089986294 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092800251 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073123154 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083710623 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.275000256 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116786728 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124151058 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098934476 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063295858 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11038406 seconds)
  done (took 59.372192589 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108001992 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083037492 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097167275 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149855197 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122948682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213368874 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157483785 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200781234 seconds)
  done (took 2.754117157 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06882817 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095339971 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100888593 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084253876 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067397038 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068882869 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226367055 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080732659 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066298027 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089322684 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080152037 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069259055 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424570541 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066427852 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069649328 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063369019 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067379646 seconds)
  done (took 3.403747908 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.367889596 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361209094 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374302719 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073296079 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.802886994 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089515032 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.064618069 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096851431 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072321767 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.27793104 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703415226 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092541591 seconds)
  done (took 13.999858367 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076634911 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070756069 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084675294 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086658271 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07545749 seconds)
  done (took 2.014011727 seconds)
done (took 103.541706215 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080616058 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394097056 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054165437 seconds)
  done (took 2.097551957 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082995401 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085087959 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084216758 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08292622 seconds)
  done (took 1.964986738 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074801679 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07684527 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084393578 seconds)
  done (took 1.859150934 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225440388 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138772649 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087015184 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082857883 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078240335 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078409092 seconds)
  done (took 1.866448659 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072709131 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074853468 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072742338 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076779379 seconds)
  done (took 1.919148034 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07630665 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05256847 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055132141 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056418899 seconds)
  done (took 1.863874162 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086039568 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07960098 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078227385 seconds)
  done (took 1.866546913 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107552472 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.085842768 seconds)
  done (took 1.815912682 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081973444 seconds)
  done (took 1.705056761 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099193149 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113874126 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131692432 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110443489 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.137411569 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109391093 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085842589 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087501246 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077838991 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087630517 seconds)
  done (took 2.664554453 seconds)
done (took 21.775909422 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07921663 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.359729996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36036392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090874188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668773049 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35644443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.96650378 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09206736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113447893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067914469 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083918239 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648752839 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.991710954 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.316147811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978954118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.410494638 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650652763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06836356 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067765518 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068195345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952532303 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067996039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06824521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068710328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649395255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371347576 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068685138 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.409813103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067519973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069907782 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355465721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068129693 seconds)
  done (took 16.268650517 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071272481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118524051 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07401019 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083913744 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071448708 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069690558 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07146562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068890659 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119989613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067970733 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084391269 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06828197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07204276 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068749291 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087144789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068444996 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.06885566 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068871902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068378791 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069083182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086489397 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06828006 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070432208 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068874827 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.06790408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079751114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068605456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068313685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068190264 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070473403 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071141063 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068702771 seconds)
  done (took 4.036821432 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115657217 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125589087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074248623 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103050839 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112498307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07014172 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143378017 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092628693 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127668378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0682042 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084476321 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068257197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101280763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068950042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088388287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068687161 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069256429 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069097102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068661016 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06874463 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087408024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06837178 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068740073 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068866569 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068687395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082386524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068905521 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069174865 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068426757 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070691596 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07162401 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069114645 seconds)
  done (took 4.290355307 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072666424 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074945892 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082851481 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084355182 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069740925 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072034138 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073381977 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069973145 seconds)
  done (took 2.241925027 seconds)
done (took 28.469734646 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078773213 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07025191 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073058089 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081067609 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073247268 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078432781 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067584262 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074377659 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072201003 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072707738 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074699916 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067795995 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07104947 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068070002 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07375204 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068087284 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.08015115 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072172132 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079220637 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079659083 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069764226 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073766016 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074273547 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079217705 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079060193 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07891735 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077682597 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072947851 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069516391 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070775814 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07643725 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083737478 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068619442 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07944629 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068070593 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067940548 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071595943 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068754427 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079694758 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076951621 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069697247 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076192591 seconds)
  done (took 4.729503161 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087952361 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09090488 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084618934 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061724687 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066738262 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064915206 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088883875 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059855975 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059752095 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088050968 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056023018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059450265 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062408445 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053992423 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059164756 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056888282 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061499111 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055959427 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059391121 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059881085 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058160244 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054244233 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060020943 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064772419 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056411192 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062174071 seconds)
  done (took 3.343069185 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075227284 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084462472 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087950596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127319944 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104531779 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077161334 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077859031 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092450699 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085113963 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067197009 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071330572 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093986612 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08787232 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073997605 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067825627 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084594623 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082142329 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070407123 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073710441 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090864505 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084633906 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083952742 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093281794 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080800827 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067167477 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069824447 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071569869 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081481613 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072617455 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076959751 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071535908 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071226085 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069327325 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079094582 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071584407 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069407599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090827333 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077134253 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078070842 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068070484 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071363658 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068380647 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089753977 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122631119 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069509435 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075525587 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075337347 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.087924031 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067663253 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086378271 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078554452 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067252331 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070735731 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067124387 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067815443 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080475749 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069778814 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069746918 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077195522 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07051388 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085969647 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071411476 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082918657 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067344387 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075469621 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066943274 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068536996 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066520978 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092875066 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069277115 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108221762 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068512273 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068257888 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076599018 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074986771 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073709174 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067787358 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082332596 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077621892 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070945088 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.07590588 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070909994 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07048818 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087733358 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069675743 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069257081 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068563327 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073916433 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070131291 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.068899491 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08033504 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067530794 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070322576 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083889048 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067094718 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069108923 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073960351 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072330766 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067247799 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078676882 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072372298 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068701791 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076775092 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.06805211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070775594 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077874872 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073704922 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066858145 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072300704 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073849598 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068719249 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069277501 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070423431 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069264546 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07566841 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074258763 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072258448 seconds)
  done (took 10.585401113 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160675319 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153693456 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070174318 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14608606 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076336338 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079170044 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147364553 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095653568 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067874085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068611977 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068970979 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110101636 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.10639439 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.115537286 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079031199 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067594373 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083515454 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113710599 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15010991 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14261339 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083595402 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07700805 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069582881 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068987838 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070545507 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078793164 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086156433 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076943476 seconds)
  done (took 4.392139905 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081663193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100962611 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074068783 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089312185 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091669741 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068343449 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069853945 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069803212 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080250559 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079489568 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067585609 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073527661 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074667284 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071565361 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069231947 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074864046 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075420527 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069981787 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070958647 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073268755 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077687301 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081269381 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071716937 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067530298 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074508162 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067272473 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064997371 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085042471 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068452174 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090300654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065680809 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075265362 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081507522 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068410523 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067694873 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067705773 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067283845 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067627928 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06942399 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066817807 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066601722 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057632286 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066918465 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079986799 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07397518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056448374 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07262232 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073129229 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073098613 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065562627 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07079241 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070650794 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070775787 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075073002 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072650975 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072717708 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069013017 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066312389 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075214831 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067560432 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064624814 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066158395 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071875284 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.06643592 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075385292 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072337903 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06624205 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067219801 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069191165 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073918967 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06756776 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070872949 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065312648 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069439169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071919455 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069543325 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068724635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065847238 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067355108 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067784515 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055506951 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067827466 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053476908 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070752118 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065706367 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065979005 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067179496 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072335338 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08062012 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068764564 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074765947 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06879722 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06665951 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070481656 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060317538 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070206856 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082778665 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083108199 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067737918 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065731697 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082144012 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07256385 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066737471 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056229192 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075253845 seconds)
  done (took 9.151662845 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094055815 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089115991 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070649036 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083729238 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091057357 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086245732 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074667194 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077252419 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069499106 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082435934 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073464317 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076528413 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068201453 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077009238 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.09335989 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076373775 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069957953 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076916373 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072178798 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100658826 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082705483 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081641904 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075021873 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068248609 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075845603 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080296644 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089800401 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.080100422 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078645218 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.07563109 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.08006182 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08922042 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074364222 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072243605 seconds)
  done (took 4.396452687 seconds)
done (took 38.233072703 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.733179354 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.897119853 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.71888917 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073009812 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.940233338 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.734065025 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.87735311 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.712520153 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.842747952 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.756279598 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.956304637 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.756493216 seconds)
done (took 64.655448879 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.739413177 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.855668947 seconds)
    (2/2) benchmarking "String"...
    done (took 1.988395696 seconds)
  done (took 5.501001055 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017283217 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.244973522 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.961604558 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.713408236 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.720679428 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.065316475 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.50563854 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.235789557 seconds)
  done (took 30.104266909 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.852552765 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.913217793 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.344705779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.375687681 seconds)
  done (took 15.187859351 seconds)
done (took 62.291854394 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.730479089 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.730011239 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.742643426 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.69784601 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.771406339 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.719721112 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.989862751 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.977716864 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.712373457 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.70512633 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.713543626 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.133690762 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.721659951 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.16268946 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.718639098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.722166125 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.759303667 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.203853905 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.871805996 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.722069906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.714855407 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.756660133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.719657966 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.722952582 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.770728448 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.71354505 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.144412528 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.722231676 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.326946023 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.719971085 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.745197773 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.22811132 seconds)
  done (took 203.448543713 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.713917121 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.505529697 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.602684024 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.754399643 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.025762082 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.91670322 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.832957841 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.108758948 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.718987035 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.738518856 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.910680028 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.714694899 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.92335329 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.665376832 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.730088558 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.804432361 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.889057333 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.945323598 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.726537107 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.988138865 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.718258652 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.771866274 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.707752356 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.914845691 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.738450865 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.817437684 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.866384228 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.720619784 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.909974115 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.849232806 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.721532988 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.726267909 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.9383714 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.588786208 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.744939919 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.727724246 seconds)
  done (took 167.336046592 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.862676743 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.717730331 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.71736656 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.71616015 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.717030848 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.728957751 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.717678465 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.841150777 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.843711626 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.178627972 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.092377978 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.722935744 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766938119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559190713 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.72032745 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.785226459 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.732792612 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.717584646 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.732505842 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.745590319 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.720409508 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.718388122 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.846956392 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.729161383 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.896161091 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.727898336 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.71817832 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.725013604 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.087673796 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.717623457 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.723658367 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.556908157 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.72632795 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.977244941 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.72000224 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.71785541 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.612024577 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.805822411 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720681031 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.724905223 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.719966329 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.938646489 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.720622665 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.721092686 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.72312979 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.890874221 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.72204193 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.844140219 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.719279871 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.225500457 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.721927349 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719783743 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.596657632 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.406764212 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.722169281 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.71876245 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.72152603 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.720807319 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.721626477 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.726713159 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.353991629 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.793468574 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.722275435 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.722977981 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.72556288 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.720643719 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.86927139 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.722761069 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.007800358 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.773394778 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.838603353 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.847884662 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.720318763 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.788361139 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.81388806 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.721352807 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.720043838 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.720490014 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.720920359 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.801523312 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.720962262 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.720057892 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.85014123 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.728688078 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.72070937 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.771781666 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.789866007 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.720976597 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.616364146 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.723913819 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.721050148 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.05538786 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.791443465 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.721986058 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.720619939 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.721328731 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.848502747 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.844996406 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.500767663 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.724968078 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.423368204 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.724582595 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.863717844 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722274795 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.911873719 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.725952493 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804461373 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726936395 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.724008662 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.722666494 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.753242317 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.722040203 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.779872218 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.725100694 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.09214211 seconds)
  done (took 396.142981713 seconds)
done (took 770.500842627 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.38224958 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.343866722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.458060279 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.370685833 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.348368716 seconds)
  done (took 13.566819594 seconds)
done (took 15.231153233 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.808129187 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.814838725 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747966321 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.812366382 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.74326029 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.812345097 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.793560103 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.748438282 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.779509501 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.748493753 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.780310459 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.747982239 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.735424417 seconds)
  done (took 24.737693487 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.952438545 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.959901097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.793416716 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.959476808 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.769708555 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.950435421 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.884361782 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.875157339 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.876444495 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.73899998 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.736899007 seconds)
  done (took 22.161945086 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.956192908 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.961364706 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797233478 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.968457834 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.77191455 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.966828147 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.888968156 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.876501605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.878339859 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.739440588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.736555717 seconds)
  done (took 22.207578288 seconds)
done (took 70.7738601 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.732426084 seconds)
  done (took 3.398416869 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.753944882 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.891369583 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.738013122 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.735196251 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.732006033 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.733916884 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.737097213 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.734218533 seconds)
  done (took 15.722982101 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.733583386 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.733098486 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.728303893 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.728449912 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.733350493 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.729258622 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.730037729 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.729647235 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.732612714 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.733767904 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.730600392 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.732626932 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.729068219 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.729993074 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.733441418 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.733982518 seconds)
  done (took 29.368770652 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.732155029 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.730770964 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.730305733 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.731567743 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.731792448 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.730615369 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.731583286 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.730052814 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.730491854 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.730094427 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.731914836 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.730451755 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.731592026 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.729730662 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.729990727 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.732045822 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.730202561 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.730849585 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.735407359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.730535764 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.731080499 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.731151708 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.732004973 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.731205658 seconds)
  done (took 43.217371842 seconds)
done (took 93.37467938 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.48652698 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.164739418 seconds)
  done (took 8.318875148 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.735092618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.733649099 seconds)
  done (took 5.175222824 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.733673989 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.733869683 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.734583902 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.735238128 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.734974646 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.734850383 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.734450642 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.73423105 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.734255379 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.734905611 seconds)
  done (took 19.015249421 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.735332453 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.73379334 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.732581935 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.734510425 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.735730623 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.733680662 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.735367974 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.734648388 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.734792151 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.733424193 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.734623788 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.733415355 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.734342002 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.732877456 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.735265624 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.732570258 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.733140134 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.733260978 seconds)
  done (took 32.882963211 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.735729887 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.735904819 seconds)
  done (took 5.142264987 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.732586296 seconds)
    (2/7) benchmarking "second"...
    done (took 1.733060631 seconds)
    (3/7) benchmarking "month"...
    done (took 1.73203074 seconds)
    (4/7) benchmarking "year"...
    done (took 1.733050971 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.733507503 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.732454697 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.733390009 seconds)
  done (took 13.8007818 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.736356537 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.899102522 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.967334613 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.39521447 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.740024234 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.739279252 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.675179441 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.740042145 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.740958863 seconds)
  done (took 19.30535245 seconds)
done (took 105.310016658 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.542223006 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.734683286 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.155120745 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.783328931 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.751824156 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.030929158 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.76508155 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.961635957 seconds)
done (took 42.397545389 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.798374858 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.189970062 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.218357159 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.069430131 seconds)
  done (took 12.150067255 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.716127376 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.24802431 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.771945787 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333698986 seconds)
  done (took 19.751222945 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.102218471 seconds)
    (2/2) benchmarking "read"...
    done (took 2.093376376 seconds)
  done (took 5.871516037 seconds)
done (took 46.245308335 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.737944701 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.736539435 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.737517409 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.73753509 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.735768728 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.739341316 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.73553139 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.735264927 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.738269795 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.738106124 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.736517378 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.737864907 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.738546317 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.73850541 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.735863373 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.73621424 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.736051658 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.738815021 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.735539807 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.735764999 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.736255955 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.739109292 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.736396029 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.736219676 seconds)
  done (took 43.363599098 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.738673406 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.736964346 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.739092657 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.739839246 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.736825665 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.739174134 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.739788103 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.736405225 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.739561572 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.739373673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.737653808 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.737315173 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.739471693 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.738059021 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.740005921 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.736784642 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.740556465 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.737465977 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.739860038 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.738525997 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.740871726 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.736767847 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.738236498 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.740019945 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.737206631 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.737850532 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.7409233 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.738445041 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.740438569 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.737634742 seconds)
  done (took 53.834623483 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.745119436 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.747673865 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.739894516 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.741052588 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.740522732 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.740167455 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.740814435 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.740459911 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.741562541 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.740791352 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.740829868 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.741407474 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.741897883 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.740703804 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.741536545 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.741816983 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.741414419 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.741908414 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.741994217 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.741568378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.741277991 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.741233891 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.74127284 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.742613856 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.74263099 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.740699035 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.74133492 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.74255774 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.741780944 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.743895957 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.742870257 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.742493124 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.742037927 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.743252964 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.742361499 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.743343245 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.746838406 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.749246836 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.742684041 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.741821422 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.742376646 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.744486616 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.742887425 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.743024143 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.742799432 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.743784823 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.7429622 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.743610371 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.743386591 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.743413745 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.742390523 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.742695626 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.744176309 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.74385966 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.743555382 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.743871337 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.74514266 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.745215153 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.74325515 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.743869714 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.743646944 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.743585248 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.744139696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.744021679 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.744215613 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.744009439 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.743422169 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.743799508 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.74470033 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.745918892 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.744350775 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.744245451 seconds)
  done (took 127.16722243 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.74381079 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.741257972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.742482516 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743124216 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.742807647 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.745792551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.743200275 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.745670019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743792729 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.745816168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745069919 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.743047443 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.742749567 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746506861 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.746613135 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.742171383 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.745389873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.742741027 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.744679626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.745909382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.745411811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.74261466 seconds)
  done (took 40.049596391 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.745562552 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.745942969 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.743793002 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.745100573 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.742565999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.745459507 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.746497127 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.745788397 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.746534057 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.742675883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743457551 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.745808957 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.743817399 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.743598884 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.743091635 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.743657139 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.745331734 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.743467973 seconds)
  done (took 33.081818639 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.743564422 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.744011928 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.746848566 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.743420758 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.743702679 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.746243113 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7439189 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.747056191 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.746452646 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.74367286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.746607142 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747282818 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.747689366 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.743367313 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746025189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.745549754 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.746810274 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.745197461 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.747028991 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744480554 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.745027604 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.746651333 seconds)
  done (took 40.0823082 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.747949325 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.747908009 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.745694794 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.7455256 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.744884755 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.747940572 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.748551355 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.744814099 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.747538891 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.747571601 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.745717077 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.748202788 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.746806885 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.745873602 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.746009266 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.745684651 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.748966245 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.748246885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.748371648 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.745771228 seconds)
  done (took 36.620303795 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749073605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.74890036 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.750479335 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.749219546 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.748942424 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.748926942 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.749540708 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.74925492 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.750183334 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749495448 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.749613481 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.749395937 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.749571067 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.749375489 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.750566863 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75108694 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.749125214 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.749261588 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.750246529 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.750768932 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.749899921 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.749717432 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.751007087 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.750432379 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.750839754 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.751530543 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.750203206 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.749933118 seconds)
  done (took 50.680853815 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.749560859 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.750372834 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.747470608 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.747686102 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.748195403 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.747378159 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.74784726 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.748542042 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.750038511 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.748272893 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.75049123 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.750611517 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.75116942 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.751166293 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.750164544 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.74973693 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.750532213 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.747831579 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.748571382 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748270537 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.751445508 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.750564252 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.750762122 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.749091646 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748353287 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.751432671 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.748318885 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.748655762 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.751496662 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.748645208 seconds)
  done (took 54.168117284 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.769933176 seconds)
    (2/2) benchmarking "in"...
    done (took 1.770054821 seconds)
  done (took 5.227149519 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.749008479 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.751579358 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.753713219 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.748702962 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.75096182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.75086159 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.751684321 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.749076675 seconds)
  done (took 15.691814878 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.752636795 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.751594433 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.752249848 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.752369672 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.753249446 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.755411099 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.760159481 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.751452865 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.755952133 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.754040677 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.761106122 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.761665877 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.757961084 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.754032166 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.754053412 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.755222909 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.753377278 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.753007649 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.753746121 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.752134314 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.753318651 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.757309237 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.756167353 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.750345246 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.75600652 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.765896104 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.760588192 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.753937714 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.755783961 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.761110767 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.756180882 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.750603309 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.75377358 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.754812168 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.753195047 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.754569295 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.764945984 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.75592527 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.763403083 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.755231898 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.754747977 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.751169554 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.757105886 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.75885177 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.757026563 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.755745593 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.753933479 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.751933649 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.755569356 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.759664345 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.758802688 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.754469636 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.752131276 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765879758 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.75780544 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.764347783 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.757078372 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.758822636 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.765048271 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.766586707 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.77089923 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.763738386 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.75945761 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.755487211 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.765610189 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.779558429 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.764518212 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.753064899 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.752684562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.75500906 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.766805791 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.771562413 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.766306246 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.75675096 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.755729419 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.755413231 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.758261699 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.755962819 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.765804259 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.760648008 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.757320217 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.757072211 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.767613804 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.778412898 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.75778652 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.758482363 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.757633327 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.757227035 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.758724802 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.76864417 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.758718787 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.757564783 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.757704665 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.757850983 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.762657395 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.757584489 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.758122926 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.75987778 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.754909731 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.756879081 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758311959 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.762697078 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.767460602 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.758892627 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.757847415 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.767023056 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.758098408 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.759856632 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.768893693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.757253392 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.758039486 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.759807915 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.767418387 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.755790634 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.762956998 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.767336189 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.758659892 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.761313639 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.759562999 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.758790498 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.768660175 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.784706716 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.759284397 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.757437612 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.765204606 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.769129165 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.758858057 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.763615835 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.758982942 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.754973365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.756490951 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.761837386 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.758469861 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.762361551 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.759197736 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.763985884 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.757202245 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.75973663 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.759317883 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.761791737 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.76325591 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.763188633 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.762492609 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.764872726 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.760520507 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.76318401 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.769154144 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.761468086 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.763805012 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.762625937 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.756885309 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763239367 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.76402882 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.760731886 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.763857574 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.760558379 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.761309236 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.761677503 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.76109463 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.760597332 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.76083894 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.762705247 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.765847384 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.761247476 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.76765533 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.761257114 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.758637283 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.760390411 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.761142773 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.761838375 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.761702816 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.760876369 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.766580045 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.768681171 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.760321628 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.762797442 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.766462868 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.763072493 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.762058203 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.762159622 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.766630876 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.770582205 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.761797483 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.770998975 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.761560039 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.763395964 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.76175408 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.764503894 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.762869048 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.761934175 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.764865677 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.769060332 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.778336809 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.771898897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.764490284 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.76570108 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.764385904 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.766129232 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.770571416 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.763589558 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.763277233 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.763222517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.763791531 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.764154939 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.767668989 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.763861724 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.76339626 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.763367857 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.763221767 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.764700522 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.763709724 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.765394797 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.767201211 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.761516451 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.763623207 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.765024868 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.764938164 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.760877978 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.762990192 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.765128246 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.764965955 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.765212461 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.774694149 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.760831125 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.765972795 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.766157647 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.766385956 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.7640099 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.764199182 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.767323641 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.766801276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.773538038 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.767461981 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.767118914 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.772654206 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.765587952 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.766407191 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.768432967 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.765165455 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.762066931 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.767459571 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.771301151 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.764250102 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.765875717 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.764681779 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.766345814 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.765341996 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.77319653 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.762328455 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.764798654 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.766639783 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.771037496 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.76371843 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.767390424 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.769110879 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.767275831 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.769785261 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766789981 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.764836222 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.76879528 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.766909954 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.765896096 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.765080572 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.769310525 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.77307225 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.773627716 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.768744508 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.771927905 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.767421066 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.769600866 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.768932234 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.767097265 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.768528518 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783401865 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.774301934 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.77513449 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.770923962 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.767333574 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.773806852 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.768902801 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.77231779 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.769577869 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.768510116 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.768952603 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.76753004 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.764126673 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.769937236 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.766499529 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.770234427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.769856111 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.770900014 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.767642593 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.76875445 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.768382232 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.769012374 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.767974678 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.769607173 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.767689995 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.772831559 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.771773159 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.769928621 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.769375657 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777851983 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.770709995 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.771203393 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.769088224 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.76948916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.769165532 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.770819771 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.769590566 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.772359194 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.776466932 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.773231316 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.780869798 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.771454969 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.780531046 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.771270761 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.774009065 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.777500545 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.767048541 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.769155497 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.771180312 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.770793303 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.778014546 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.770182615 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.77070409 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.773765321 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.770865887 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.770776439 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.7689208 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.770066139 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.770020845 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.770745621 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779856083 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.771607757 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.774622498 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.773763705 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.767428507 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.770462391 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.770135347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.770448586 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777395227 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.770411029 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.773336911 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.771188948 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.772710295 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.770319913 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.771565066 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.76980535 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.767785981 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.770498758 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779695399 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.77287091 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.774397166 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.770561077 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.782847821 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771221222 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.779840749 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.772039075 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.773232192 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.77228091 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.77182616 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.775583991 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.772458181 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.774346955 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.77189688 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.773660601 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.775496066 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.772505235 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.777386864 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.773693499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.772210989 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.774092958 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.783834423 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794427414 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.774311959 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774719304 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.769654902 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.775374656 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.776600773 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.773047779 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.772664456 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.775755471 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.783761852 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780095279 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.774558645 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.772954107 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774318403 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.772584595 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.771876624 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.772532237 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.772336773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.773522742 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.776660616 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.772539117 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.780824712 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.773271252 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.775861877 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.77665758 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.775018922 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.785811305 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.773979059 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.775681613 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.773084536 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.77186148 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.775107263 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.775402666 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.77422789 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.77636903 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774199102 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.776350355 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.780692958 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.781014707 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.778174313 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.774172158 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.774260559 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.777634109 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.777150977 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.775305996 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.775272517 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.77501657 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.777152595 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.775134449 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.778002916 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.774438722 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.774528791 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.776327826 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.774390534 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.779820562 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.783272695 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776912672 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.772912376 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.774781481 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775812831 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.775313416 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.778283377 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.787545585 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779943675 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.786960644 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.784793999 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.779415263 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.778056951 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.779524519 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.784832722 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.775837017 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.778674774 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.776394755 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.780097402 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.77690165 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.78170802 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.776934058 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.785145698 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.777659238 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.777875353 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.786321087 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.778170206 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.775866706 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.7787655 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.78261814 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.777846584 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.773793389 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.776681786 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.777942116 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.785657306 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.779923603 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.777940158 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.779577064 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.775447752 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.77902353 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780942299 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.776501555 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.779086694 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.774379501 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.778697526 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.777907159 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.775999885 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.774944393 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.778519706 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.778499539 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.7809994 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.786207234 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.775229008 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.782458537 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.779141619 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.779676222 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.778296255 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.777855958 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.775241937 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.775304045 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.779022374 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778735382 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.780326465 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.782842866 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.778951763 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.781549425 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.779313313 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.779041615 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782507381 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.789444021 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.78547186 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.775820449 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.779499733 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.7805521 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.783391868 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.778568078 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.779692808 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.780638925 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.783221634 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.778768911 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.778887856 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.778103975 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.783179187 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.796770096 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.779130076 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.78163195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.781878892 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786215682 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.779129445 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.776872327 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.779496597 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.784387209 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.783281038 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.786744849 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.779996957 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.787781726 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.781494052 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.782093701 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.783470163 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.783322673 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.78931676 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.784556095 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780311153 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.781081404 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.786304302 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.797662304 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.780799308 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.791771002 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.810411033 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.782602844 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.783068932 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.781653256 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.780841608 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.781338952 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.785183418 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.780530996 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.781292996 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780397622 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.781184343 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.783854875 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.787547066 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.784311709 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.780863256 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.780803185 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.783157524 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.785758109 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.778826454 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.781851045 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.782325332 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.781931569 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.781605058 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.781997687 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.78474301 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.79746775 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.793927505 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.781705238 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.782863926 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.778941778 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.788406308 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.785521337 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793965414 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.789489912 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.781796922 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.782885747 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.785716695 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.782686606 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.779111475 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.785113983 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.784606055 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.78322198 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.780216981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.798982872 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.791272354 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.790265586 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.785076639 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783195112 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.783376933 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786362476 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78331456 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.783614531 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.787273406 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.785038614 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.786604351 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.7831748 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.783791353 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.787620012 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.790285997 seconds)
  done (took 1057.056375415 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781435816 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781291426 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.781116733 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.780697183 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.780560662 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781346473 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781236977 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781208993 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.780946331 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781560394 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.781629163 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781682884 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.781295449 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.781483927 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782273153 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.781295929 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782711369 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.781540145 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.78139878 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.781626635 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.781847108 seconds)
  done (took 39.127532921 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.784263613 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.78192457 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.78182925 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.784877047 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.782251322 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.784360906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781660791 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.784839706 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.784770631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782837329 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.784315621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785140208 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.782667941 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.782431501 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781969739 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.78485267 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.784554378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781941029 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.785612603 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.782124242 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.785413287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.783311793 seconds)
  done (took 40.955887361 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.786769362 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.785573006 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.786422215 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.783420539 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.785812294 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.783156008 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.78711363 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.786572002 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.78610333 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.788820419 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.787787736 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.788915788 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.7939279 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.790711952 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.791956076 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.786851798 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.93134918 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.788136922 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.787387467 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.788317107 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.784309993 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.794910734 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.785881897 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.784810185 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.788249027 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.787003347 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.787549712 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.787278217 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.787736858 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.789143932 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.79171175 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.78719152 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.787085195 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.790528613 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.789035623 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.789380007 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.791855317 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.7875243 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.784655397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.787416618 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.799013873 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.806864541 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.788300409 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.798042169 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.788565631 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.787723798 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.793148653 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.795140927 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.785312821 seconds)
  done (took 89.520541392 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.787770757 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.788556756 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.786205814 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.788634512 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.787661931 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.787998105 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.787923246 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.78888192 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.785948456 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.787195637 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.788932157 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.786019649 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.786852514 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.787961245 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.789354219 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.785976178 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.787026408 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.78730464 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.787000384 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.786997692 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.786197384 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.789027075 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.790099026 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.78761498 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.790726003 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.787639619 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.787165081 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.788967219 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.787473729 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.78761341 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.789772006 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.789440298 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.790181339 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.787999096 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.787009327 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.789765253 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.790440752 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.786748965 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.790512423 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.787052758 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.790701176 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.790729518 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.790450708 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.790796936 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.788080332 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.787772021 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.788495864 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.788260322 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.788508144 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.790730297 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.790465835 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.787895454 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.789968338 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.788833872 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.790815413 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.791361463 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.789086001 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.788484015 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.791327275 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.788927247 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.787945758 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.79095539 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.788951449 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.7908462 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.79159255 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.788463249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.788936202 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.792113542 seconds)
  done (took 123.357113118 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792385189 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.793165455 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.792248288 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792233874 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793560881 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.792286944 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.793591864 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.791258577 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.792056059 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793058153 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.793050541 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.792158343 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.792871913 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.792602066 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.79243656 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.793032035 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.793079331 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.793415799 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.793658807 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793930805 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.794158396 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.793539556 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.793544694 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.79418027 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79427471 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.793410737 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.794062431 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.793267303 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79337156 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.794372025 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.79391437 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.793843114 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79408113 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.793985426 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.794907989 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.793428667 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.793586634 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793978895 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.793523502 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793689174 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.793964689 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794419866 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.794579958 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.794472235 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79382391 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.79421552 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.795426697 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.795383667 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.794332212 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794526033 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.795064465 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795224439 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795320907 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.795678255 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.79514477 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.79456725 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.795630352 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.79514028 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.794777915 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.796144443 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.79572457 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.795448785 seconds)
  done (took 112.949649539 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795216554 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795113617 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.792501393 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.792755035 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.794595049 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.793097855 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.7952206 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.796272059 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795526803 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.795293688 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795472994 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792706942 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793199658 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796436384 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793072092 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793289609 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793544323 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.793350574 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795621864 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.793319916 seconds)
  done (took 37.614492974 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.793698593 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.79577319 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.79312323 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.79400082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.796886752 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.794070149 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.796629376 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796483968 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793163108 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796491149 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797217504 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.796998009 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794012294 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.794622946 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.79691006 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.794590911 seconds)
  done (took 30.454049925 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.793853503 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.796783717 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.79754871 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.797888799 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.795137276 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.794020192 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.797672047 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.794607562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.794879862 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.798889386 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.797225151 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.797119047 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.797832352 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.79758493 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.795560531 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.798381366 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.795623425 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.795919156 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.797645607 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.798419265 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.796439746 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.795213174 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.798454284 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.798695859 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.7960347 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.796696277 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.796764501 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.796043151 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.796827354 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.798618289 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.796643255 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.797075245 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.797722703 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.796544259 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.799423376 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.795653605 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.799764477 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.799158828 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.799270923 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.798439834 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.799417574 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.796261883 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.799430195 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.799584562 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.796656763 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.798878633 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.796477132 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.797477297 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.796912514 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.79683186 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.799612742 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.799913717 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.799473217 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.799478929 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.800260696 seconds)
  done (took 100.590608931 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79987364 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.800028425 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796007575 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.800603323 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.800276056 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.797544946 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79945135 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.79792597 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798129743 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.799808088 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798324706 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.800318735 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.79828742 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.801463639 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.799747231 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80093747 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.799374911 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.798387385 seconds)
  done (took 34.119549731 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.799494722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.799097859 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.800765077 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798929495 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.799165445 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.801395807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798205661 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.800968263 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.800872139 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.798998548 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799135808 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.802190475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801260804 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.801345535 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799350132 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79846964 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.802420631 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.800844025 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.799298115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799806147 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801816498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.801242062 seconds)
  done (took 41.339399293 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.802537801 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.8020477 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.821693259 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.848294649 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.833570953 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.803007559 seconds)
  done (took 12.646715523 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800663356 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80249003 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.799996476 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803718193 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802236121 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.800431023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.799760956 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800410911 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80254413 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.801022327 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.800729295 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.802512281 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.802963515 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.800331232 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.801792272 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803319301 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801461945 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800575646 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801336401 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803867311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801364557 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.804506463 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80021758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.800813682 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801071839 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80087918 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803641041 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.801485365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.801360354 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803527093 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.803399525 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801876212 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804249937 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.801774849 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806651964 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.803996166 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802279809 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804403748 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805034063 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.801594038 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804479974 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804052153 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803609298 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802431298 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804958784 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802601006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802466284 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.802116206 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.802202492 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806781239 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803930746 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803414512 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805169338 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804756929 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805362854 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805795371 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803013278 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.80315927 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.805377856 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802861476 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.802841426 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805671212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.802124688 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.803462584 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805648716 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80295037 seconds)
  done (took 120.726287453 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.802575619 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802437622 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80323319 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804523391 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803814083 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803390359 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803773101 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803516558 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.803221085 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804055758 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807489281 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.803898787 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804409875 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804450647 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804307144 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804634368 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.804916791 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804518659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805251384 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807542169 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804859494 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805071789 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805243756 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805199981 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805312133 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.806817575 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805259972 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.804506154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805586825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805143664 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80402975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.804204997 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804736091 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804611 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.805230789 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804945832 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804677808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805580621 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80461741 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.80835902 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805667111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808167515 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806651651 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807071713 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806382735 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.80525964 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806688037 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80646918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805981891 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.805806068 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806231592 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805934249 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805833168 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805533049 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806669792 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805462065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80581382 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806889932 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806622017 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808378911 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806265194 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.806417147 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809373505 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807496284 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806199165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806574314 seconds)
  done (took 120.901310391 seconds)
done (took 2463.000841806 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.89164044 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.959133101 seconds)
  done (took 15.593063817 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.97553556 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.925176768 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.810387797 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.857101088 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.811993639 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.805516876 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.82566715 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.811318384 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.810908081 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.810579315 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.811181337 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.997046624 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.813255579 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.811453751 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.811579877 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.906561686 seconds)
  done (took 51.34207094 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.814023568 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.815724598 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.82596879 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.81717124 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.8149315 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.833923931 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.849646229 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.81886906 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.874891154 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.828848218 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.936311265 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.826133046 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.814936165 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874653248 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.827353763 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.829570339 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.903067103 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.892442607 seconds)
  done (took 34.94365704 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.89454592 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.822496015 seconds)
  done (took 10.470589845 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.812009095 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.839535611 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.823258811 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.823564445 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.837429047 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.867368187 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.813639629 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.818650057 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.817522823 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.830678187 seconds)
  done (took 70.031382929 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.820020927 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.816579387 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.816423884 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.814462003 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.808294243 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.813257086 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.815401682 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.813729283 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.51547389 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.851804507 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.822539835 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.822281001 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.815683246 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.816609164 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.812685442 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.839374175 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.931112967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.813320192 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.812095303 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.821170477 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.815720263 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.913520353 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.830769735 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.815968191 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.84577082 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.510303448 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.824341494 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.822112353 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.95164291 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.812583653 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.816326883 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.816450962 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.818497231 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.23155494 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.146796331 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.817554727 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.82410188 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.824333063 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.812859646 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.996751054 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.817326525 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.822158232 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.810593279 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.135991539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.899679545 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.860281378 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.188029403 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.821455097 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.819018612 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.848354026 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.820198092 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.81811458 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.831766808 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.330438988 seconds)
  done (took 130.014103753 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.813117078 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.389336056 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.976811609 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.815447855 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096980075 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057133966 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.814999653 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.862965345 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.816672588 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.064094532 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.992342212 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.934403809 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814796872 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.813191446 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.811555932 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.812306238 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.966840161 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.885452277 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.815572057 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.812842552 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.849241723 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.081753292 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.94262792 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.816558909 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.838512793 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.042926 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.941637358 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.932181579 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.476557268 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.812986725 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.883279338 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.816398912 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.813904295 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.813740542 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.980609313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924264363 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915744713 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.81589681 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.812980003 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.812849599 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.477523374 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03800705 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927065972 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.953835844 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064492226 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.045650751 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.463604642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.812905437 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.452787689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.013096758 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.024600307 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.069794414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.945928564 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.816994086 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.06604346 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.813824485 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.814327539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078233484 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043959505 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.930582045 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817516343 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.814556821 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.814517927 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.130820715 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.818427704 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.926377536 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818082307 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.814316771 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.928470727 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93359625 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.048038179 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061563516 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.848261469 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.72070391 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.324221053 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.100849647 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.890273311 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082566597 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.81826318 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.815905276 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911933133 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.568991978 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.991864284 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.13416488 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.083395823 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859756592 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.420161897 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.815680961 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.068996796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067645228 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.047449719 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.063573197 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.984977528 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.138955322 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.816366446 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.815538214 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.0251196 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.950459087 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.820251454 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.181554424 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.066393996 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.544497022 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.847683768 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123812728 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958042004 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.820958481 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.444975193 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.818053565 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.020307676 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.861228834 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.818373025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.819236465 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.064177172 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.689019436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.817810766 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.604941134 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.885289443 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.823181583 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083521646 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.818930358 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.062168967 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.821017704 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.130401452 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322422655 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.862719272 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.011928671 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.064264527 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.609661457 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087006171 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134060091 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945513583 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.080804303 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.642397776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.820750854 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102811909 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821961814 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.817985078 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.989258052 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.819160919 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.975310732 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.821624222 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.079674489 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.847049411 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990035578 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.820774183 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.092046259 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.861182792 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.869370637 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.816829899 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.931190309 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.815415975 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.853466021 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.994067145 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.811069668 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.809119526 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.389883401 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.804905563 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952536738 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.104857487 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.830958955 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.877203968 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335188877 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.802128974 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898173522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831297164 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.397624089 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.799889703 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.97167061 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.801674097 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.759693314 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.797176991 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.107514488 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.021332481 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.800561781 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.795219283 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.590296654 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.497768174 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.795298667 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.971041135 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.025778876 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.445787478 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.016435973 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799245016 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929444559 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798284617 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.868567101 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.1460471 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.794882974 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.795508393 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.79479273 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.794220079 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.794792793 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.023467056 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.82827313 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.484555642 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.932812665 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041475746 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.109269154 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.059347375 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.847261036 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.798544905 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.065603828 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.799889101 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.864671434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.799362176 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.821494379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046708592 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799085839 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.027463678 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085535341 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.846071227 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.848380978 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.800033563 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.796605458 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.796617271 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.941772029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.899034724 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.799166151 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.796205036 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.915269405 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.924708316 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986093018 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.384783052 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.968584894 seconds)
  done (took 891.14139463 seconds)
done (took 1205.278701508 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.792457892 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.788805717 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.775183441 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.789530919 seconds)
  done (took 28.877316035 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.793300727 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.787003162 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.787545454 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.786664615 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.788713923 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.787537292 seconds)
  done (took 12.45461816 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.844348273 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.778824729 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.777464396 seconds)
  done (took 21.123103731 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.849849603 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.192657482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.884712751 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.227396413 seconds)
  done (took 9.866502586 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.776604579 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.77577843 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.77576855 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.777923334 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.778186613 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.776496357 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.774562276 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.775376177 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.776125842 seconds)
  done (took 17.697720779 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.847597359 seconds)
done (took 95.598866252 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.918096714 seconds)
    (2/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.849070028 seconds)
    (3/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.92578996 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.84891406 seconds)
    (5/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.922427081 seconds)
    (6/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.840983615 seconds)
    (7/309) benchmarking ("sort", Float32, false)...
    done (took 5.577862649 seconds)
    (8/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.832667921 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.090638138 seconds)
    (10/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.964687964 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.053680852 seconds)
    (12/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.030260918 seconds)
    (13/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.162902982 seconds)
    (14/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.816709675 seconds)
    (15/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.817304099 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.798029683 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878318552 seconds)
    (18/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.990499789 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.052663464 seconds)
    (20/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.400751047 seconds)
    (21/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.604360561 seconds)
    (22/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.843425614 seconds)
    (23/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.976169843 seconds)
    (24/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.908323607 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.888048661 seconds)
    (26/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.809154088 seconds)
    (27/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 9.123540541 seconds)
    (28/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 5.826142386 seconds)
    (29/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969112671 seconds)
    (30/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.812336493 seconds)
    (31/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.164015867 seconds)
    (32/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.219113613 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.829603632 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.116981414 seconds)
    (35/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.808962342 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.904871006 seconds)
    (37/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.939135298 seconds)
    (38/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.328947465 seconds)
    (39/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.822978298 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.973850118 seconds)
    (41/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.840590247 seconds)
    (42/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.941188475 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.838052191 seconds)
    (44/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.946760369 seconds)
    (45/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.819276176 seconds)
    (46/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.922907199 seconds)
    (47/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.873826826 seconds)
    (48/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.070844238 seconds)
    (49/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.900177212 seconds)
    (50/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.933765564 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.81298037 seconds)
    (52/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.978054265 seconds)
    (53/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.21552759 seconds)
    (54/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.956740527 seconds)
    (55/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.06207422 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.380681385 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.935360237 seconds)
    (58/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.010040354 seconds)
    (59/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.06453884 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.391671464 seconds)
    (61/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.210625925 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.465839978 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.815048181 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.830729135 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.859176784 seconds)
    (66/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.884853752 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.224755296 seconds)
    (68/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.075864282 seconds)
    (69/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.158646151 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.805855015 seconds)
    (71/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 9.068190038 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.40223514 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.873054044 seconds)
    (74/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.000331554 seconds)
    (75/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.789172563 seconds)
    (76/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.226435126 seconds)
    (77/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.932145716 seconds)
    (78/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.941175921 seconds)
    (79/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.377100243 seconds)
    (80/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.032067035 seconds)
    (81/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895987042 seconds)
    (82/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.811736455 seconds)
    (83/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.956289246 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.1793253 seconds)
    (85/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.903915599 seconds)
    (86/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.851575726 seconds)
    (87/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.167353934 seconds)
    (88/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.875134315 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.422624306 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.712574791 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.842735971 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.189125989 seconds)
    (93/309) benchmarking ("sort", Int64, false)...
    done (took 5.525808543 seconds)
    (94/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.806417767 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.879705814 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.907385751 seconds)
    (97/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.135135034 seconds)
    (98/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.162857449 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.975174681 seconds)
    (100/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.325206125 seconds)
    (101/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.185654422 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.24203799 seconds)
    (103/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.789274869 seconds)
    (104/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 3.023667789 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.458946034 seconds)
    (106/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.114347628 seconds)
    (107/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.117810756 seconds)
    (108/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.935166557 seconds)
    (109/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.643623021 seconds)
    (110/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.949302803 seconds)
    (111/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.097318724 seconds)
    (112/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.895130238 seconds)
    (113/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.001918848 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.181563514 seconds)
    (115/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.1523652 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.019300866 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.95242847 seconds)
    (118/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.113770395 seconds)
    (119/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.839198496 seconds)
    (120/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.788486795 seconds)
    (121/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.569410369 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.806743777 seconds)
    (123/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.176546837 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.744342839 seconds)
    (125/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.874424304 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.789577471 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.285523697 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.831188682 seconds)
    (129/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.869246026 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.162467264 seconds)
    (131/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.83412159 seconds)
    (132/309) benchmarking ("sort", Bool, false)...
    done (took 2.246086718 seconds)
    (133/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.83109426 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.805443527 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 3.711544193 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.093854022 seconds)
    (137/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.415288704 seconds)
    (138/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.82805817 seconds)
    (139/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.215651249 seconds)
    (140/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.890162703 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.094308284 seconds)
    (142/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.811881227 seconds)
    (143/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.895322627 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.061825055 seconds)
    (145/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.807127071 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.818958779 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211333591 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.1933647 seconds)
    (149/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.83403899 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.908239989 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.469299414 seconds)
    (152/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.114528269 seconds)
    (153/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.405230535 seconds)
    (154/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.99500856 seconds)
    (155/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.082994102 seconds)
    (156/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.411141184 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.832748216 seconds)
    (158/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.888092414 seconds)
    (159/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.030890069 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.836286162 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.025638965 seconds)
    (162/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.440521199 seconds)
    (163/309) benchmarking ("sort", Int8, false)...
    done (took 4.768946443 seconds)
    (164/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.693207812 seconds)
    (165/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.792539033 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.710768878 seconds)
    (167/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.830355458 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.971159598 seconds)
    (169/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.891797959 seconds)
    (170/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.973849591 seconds)
    (171/309) benchmarking ("sort", Float64, false)...
    done (took 5.621070735 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.90832273 seconds)
    (173/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.031766389 seconds)
    (174/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.917812445 seconds)
    (175/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.813017061 seconds)
    (176/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.890489757 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.074643264 seconds)
    (178/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.111015881 seconds)
    (179/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.114452181 seconds)
    (180/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.844970257 seconds)
    (181/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.809259152 seconds)
    (182/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.81383361 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.144731866 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.092644709 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.745920355 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.797694453 seconds)
    (187/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.358154525 seconds)
    (188/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.996504315 seconds)
    (189/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.958897877 seconds)
    (190/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.834347821 seconds)
    (191/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.093790319 seconds)
    (192/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.841042626 seconds)
    (193/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.803992912 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.155964801 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.8492778 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.785822068 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.604422137 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.100358579 seconds)
    (199/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.811279944 seconds)
    (200/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.313397323 seconds)
    (201/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.884316821 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.744699856 seconds)
    (203/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.418482698 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.007232047 seconds)
    (205/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.777283785 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.210022322 seconds)
    (207/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.404302956 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.932699598 seconds)
    (209/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.310119231 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.171596514 seconds)
    (211/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.936234446 seconds)
    (212/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.815739873 seconds)
    (213/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.7237732 seconds)
    (214/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.790762829 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.1376081 seconds)
    (216/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.916146164 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.506074478 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.991398303 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.063882136 seconds)
    (220/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.307780433 seconds)
    (221/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.236483743 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.860284829 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.026334039 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.806830331 seconds)
    (225/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.781872832 seconds)
    (226/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.072164171 seconds)
    (227/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.789785359 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.582723217 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.828867316 seconds)
    (230/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.794682569 seconds)
    (231/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.904572015 seconds)
    (232/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.838347826 seconds)
    (233/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.798312279 seconds)
    (234/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.845886981 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.719007229 seconds)
    (236/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.78001479 seconds)
    (237/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.919805151 seconds)
    (238/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.321333241 seconds)
    (239/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.955117453 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.47225801 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.048694734 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.994941384 seconds)
    (243/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.877949208 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.77091055 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.254495251 seconds)
    (246/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.41072441 seconds)
    (247/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.870275244 seconds)
    (248/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.63952857 seconds)
    (249/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.827635077 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.871762985 seconds)
    (251/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.871063242 seconds)
    (252/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.799061668 seconds)
    (253/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.870210399 seconds)
    (254/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.638232951 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.819341339 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.869118523 seconds)
    (257/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.098396709 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.869135778 seconds)
    (259/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.002391135 seconds)
    (260/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.881776715 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.157992861 seconds)
    (262/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.078630655 seconds)
    (263/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.968121548 seconds)
    (264/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.063712582 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.771338706 seconds)
    (266/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.844864746 seconds)
    (267/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.060192288 seconds)
    (268/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.94591603 seconds)
    (269/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.182465428 seconds)
    (270/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.91924573 seconds)
    (271/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.773844923 seconds)
    (272/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.758721634 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.444709403 seconds)
    (274/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.890332262 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.770865998 seconds)
    (276/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.96050002 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 6.77637226 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.934773449 seconds)
    (279/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.729101126 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 2.015441804 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.91919053 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.918752597 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.895017696 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.0856853 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.088538938 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.838399671 seconds)
    (287/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.015888358 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.184699947 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.995987132 seconds)
    (290/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.901492634 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.225645514 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.722503402 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.85044992 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.180430182 seconds)
    (295/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.77128747 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.89169416 seconds)
    (297/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.04595492 seconds)
    (298/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.846538135 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.772680287 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.847387077 seconds)
    (301/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.012439389 seconds)
    (302/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.829441572 seconds)
    (303/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.160469454 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.862866926 seconds)
    (305/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.532476416 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.850887981 seconds)
    (307/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.949916071 seconds)
    (308/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.823838535 seconds)
    (309/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.597356416 seconds)
  done (took 1004.684487748 seconds)
done (took 1006.462746796 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.876229745 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866697629 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.849862407 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.871378237 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.962393355 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.879240564 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.860138035 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.851661729 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.899458557 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.899356343 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.849953781 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.879139583 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.851566962 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.850813558 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.849739577 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86405193 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.161904567 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.87975846 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.867257309 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.859847633 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.868023624 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.850222395 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.90026388 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.877970416 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.854023403 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.854191563 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.85356092 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.870152184 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.96225621 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.853972128 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.853107615 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.862342422 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.160946973 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.878496777 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.846372663 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.87022809 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.862555948 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.860897132 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.854770425 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.884258179 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.308943046 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.859376876 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.8531534 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.851895445 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.852476855 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.856475394 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.852765195 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.859846949 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864892796 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.865473269 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.300239226 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.874860091 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.855963415 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.852533169 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.863799881 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.852261619 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.855543615 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.868340094 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.872203102 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868824475 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.150983128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.887713943 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.855482042 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.869553847 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.861270952 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.337753509 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.856492802 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.858249826 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.306165052 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.867482427 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.339204096 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.869109874 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.854793118 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.867612755 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.886660102 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.161968266 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.876172514 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.852667551 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.862061715 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.851873412 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.863806376 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866190521 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.857970345 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.854475632 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868047719 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.883873658 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.864079487 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.85480404 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.863373339 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.873469561 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.86153548 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.86540507 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.857289888 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.849747332 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.86484474 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.858737865 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.856643731 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.857446327 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.860288034 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.865812032 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.306561742 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.878719368 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.851492134 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.851238156 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.854238678 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.86840153 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.307067266 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.862902337 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.877693075 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.903430317 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.857803857 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.153762803 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.887647018 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.872086899 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.864352088 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.860342169 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.851130342 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.154679263 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.333141045 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.878473304 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.857957805 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.854549133 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.872099767 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.857949516 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.853515164 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.16611721 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.885671841 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869913792 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.977023184 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.867360162 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.891214846 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.853173196 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.857958775 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.883847576 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871188406 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.88658679 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.859346611 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864824971 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.866853214 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.846014079 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.861129651 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.860920736 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.848052149 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.852806803 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.840641822 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.878305028 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.860433712 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.859668825 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.864940945 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.964858855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.841314255 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.141794457 seconds)
done (took 291.503751295 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.910707502 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.830436603 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.935898496 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.835296976 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.921032294 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.922500952 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.832057837 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.830992301 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.830727742 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.238371529 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.831619064 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.832129713 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.830926318 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.829095767 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.9146919 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.832454756 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.829134264 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.253401519 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.833175308 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.904992981 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.831018154 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.82800946 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.831588593 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.303483531 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.829160263 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.832105569 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.904447902 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.832061841 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.181745637 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.826255919 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.829055285 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.255806675 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.923145068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.849668175 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.841457426 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.839345487 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.917551732 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.836267696 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.917705611 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.916203644 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.933443493 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.872235772 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.826711813 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.829344275 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.835867624 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.834144287 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.829974154 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.860589039 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.827162445 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.83047988 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.175898068 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.839108843 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.827429033 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.827384338 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.826736136 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.861355104 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.828661698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.827652095 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.917607759 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.827149645 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.891647688 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.21444206 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.293352634 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.825029228 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.820939405 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.819775439 seconds)
  done (took 182.179658627 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.889681458 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.897949318 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.891399467 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.828040511 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.87349599 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.896437969 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.828199724 seconds)
  done (took 14.858528658 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.830022688 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.82249776 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874047534 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.874088227 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.822587675 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.974055421 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.823424618 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.834602489 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.820411377 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.877067863 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.825065283 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822979929 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.829680329 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.823014794 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.873483783 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.836336154 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.93994131 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.826277082 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.823740141 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.98091329 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821429007 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.829862401 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.87970232 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.836267221 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.825241133 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.831124524 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.408112385 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824487025 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821539365 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.823620393 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.821645112 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.867189029 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.824449618 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.822415776 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821283103 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.94148904 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.823664379 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.820789203 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.824480636 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.823848405 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.825293652 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.823590922 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.823720839 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.821438043 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.823294837 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.849925843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.820029744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.820237418 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.820088446 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.821613218 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.872581123 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.821102589 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.815561599 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.816150914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.875204434 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82543702 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.820368149 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.813090728 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.816259637 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812803557 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.973694036 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.866246876 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.816336896 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.865355003 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815655585 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815940889 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.815248999 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.816745656 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.871397392 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.815630212 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.865935026 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.813241399 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.977773251 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.841722813 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.818110165 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.820293838 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.819708911 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.817515413 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.810355114 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.823980365 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.813819094 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.819017847 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.824495467 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.814179098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.259116099 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.930650237 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.926304297 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.813416068 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.830627571 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.825065837 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.814799413 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.871054377 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.817245459 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.814270941 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.87057228 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.933261442 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.874563394 seconds)
  done (took 201.454907343 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.823427511 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.826773069 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.818842692 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.833983349 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.819637125 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.818377452 seconds)
  done (took 12.688597707 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.821604302 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.819026109 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.817940101 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.817449556 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.818437124 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.819978432 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.819437105 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.821703365 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.8228863 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.818412558 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.820201902 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.820228975 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.820555795 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.81810951 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.819756448 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.817825657 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.819471842 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.815709684 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.8177257 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81880928 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.963406172 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.818923864 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819386848 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.820861215 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.824490333 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.819112289 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.827626561 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.818738068 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.818918147 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.828769174 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.823423153 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.820650823 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.821589408 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.826379303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.823596087 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.823091206 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823287608 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.820809113 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.816436898 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.822073616 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.820580245 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.819621571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.819212673 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.821109157 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.82283527 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.826785601 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.825739831 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829415507 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.8204573 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.821718428 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.821884157 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.820350435 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.822096925 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.821939183 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.826613519 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827672789 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.825853693 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.821170654 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.821173611 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.82457401 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.822623938 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.822247928 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.824644077 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.826088685 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.828509678 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.822535804 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.824659226 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.825389413 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.821771183 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.821434325 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.823776888 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.818458321 seconds)
  done (took 134.061116805 seconds)
done (took 547.033145258 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.108740935 seconds)
  done (took 8.861280864 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.888032738 seconds)
  done (took 8.74213439 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.524996262 seconds)
  done (took 10.276598422 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.82732737 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.8331033 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.828938496 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.817448721 seconds)
  done (took 29.070547994 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.899964196 seconds)
  done (took 8.652733701 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.830085786 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8139092 seconds)
  done (took 15.432917755 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.887966734 seconds)
  done (took 8.641849875 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.871398264 seconds)
  done (took 8.628026459 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.837928124 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.821417516 seconds)
  done (took 15.427635719 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.802673722 seconds)
  done (took 8.555255498 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.636242459 seconds)
  done (took 11.398003054 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.823679402 seconds)
  done (took 8.590931712 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.850651715 seconds)
  done (took 8.602931833 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.116775172 seconds)
  done (took 9.868592683 seconds)
done (took 162.501348184 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.820204906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.816271817 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.815825901 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.818763027 seconds)
  done (took 29.023162667 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.855373661 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.855395319 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.857270619 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.867375534 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.859535407 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.855324481 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.848227604 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.850313881 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.86705322 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.858823144 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.85773221 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.85945686 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.856971138 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.849675782 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.85855307 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.858060526 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.867271802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.857402325 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.848938337 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.859838371 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.823594771 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.866796248 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.860091621 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.823581983 seconds)
  done (took 46.276727746 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.020748082 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.894766172 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.978155489 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.876552927 seconds)
  done (took 9.524287655 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.875443451 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.87702079 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.888740528 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.927738115 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.963580908 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.88603004 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.850003695 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.844986664 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.831348783 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.877668391 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.952339277 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.893159591 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.960492324 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.824148892 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.010922102 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.824477749 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.824445766 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.876758269 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.927763712 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.941990922 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.824129996 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.877217691 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.882212202 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.8945511 seconds)
  done (took 47.092461337 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.823003447 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.832555725 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.82982733 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.82388443 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.825185397 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.825300383 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.830528198 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.827003576 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.845194572 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.825598013 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.823942769 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.824274836 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.823228957 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.824489745 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.823945402 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.836607902 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.838992133 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.824718468 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.827845919 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.830314943 seconds)
  done (took 38.322949126 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.819366588 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.674403969 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.17223963 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.07590143 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.820801207 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.822928403 seconds)
  done (took 31.142404649 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.84028126 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.891059447 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.835914807 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.883577063 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.967471398 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.83580652 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.828109793 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.895631388 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.941166043 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.902601683 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.84849666 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.855128897 seconds)
  done (took 24.281192286 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.824581824 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.8258005 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.824287796 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.839827294 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.838027267 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.835644359 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.833897876 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.820721184 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.842265866 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.846469091 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.836133531 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.840528842 seconds)
  done (took 43.769066113 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909199187 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.867720854 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.855653515 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.515676644 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203640019 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033047856 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.42654448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.154474572 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.827519231 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.095968981 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972371457 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928818953 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077773803 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405033418 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.858372311 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.286907045 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125117548 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031886238 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852851856 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551885757 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890705326 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.089237102 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.67917551 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.884492868 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033852008 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.951274307 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.08329835 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.822282682 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958183817 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861886641 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832923738 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.822265965 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.097038206 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204361296 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928534207 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833123077 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.448203516 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.539455927 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.807989952 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.633131899 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.625200599 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.96327521 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834282056 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824200078 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.758280815 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.059751831 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20311261 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.832692954 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.536139633 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.824551841 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.83576237 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.919932418 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.828164713 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.641137634 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.75106614 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.830700355 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.82317405 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832526026 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40132101 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.007839329 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.095843035 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.80320367 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.917375274 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62997885 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239045162 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.979151456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.829272736 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.829210003 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.760258705 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.560442706 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887258071 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.153937699 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.846580978 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.475020445 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145171193 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.044995149 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773746025 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103455986 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.448286491 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.804512613 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0531411 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82750997 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.761678844 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.772678864 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.760998487 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100816865 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868830701 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.594504199 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873451074 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153615285 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841364134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84680895 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849994999 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050414329 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.711397868 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.826919907 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.740807005 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971528874 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84926643 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157311153 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765035903 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.830906432 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084089053 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.038865903 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.982728823 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.332774104 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992741577 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.472346555 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.885141002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.068912645 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.880639875 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.100145363 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892297403 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.008855015 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888885101 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829023826 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133529266 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.499731516 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.970294119 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.977448225 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.960371723 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.146882435 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861611711 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910852753 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836414518 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.828088394 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639295427 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387709256 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.82891312 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.830767318 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.98137931 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.884705201 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.829117019 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7740354 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.452386126 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.977910159 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.84726453 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.052620617 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478721901 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.149250496 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.763759119 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.156884298 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884011796 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.051824208 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.477393538 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.913277897 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.094424242 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.985360744 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.035147758 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.88528972 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.849144284 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928537843 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85273099 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.065519122 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.131670056 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.834658436 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.834190968 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.657276466 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.869098253 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831358123 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.83562172 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.580788253 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113153721 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.859754699 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.836195632 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.720903171 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.845238339 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895863434 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.837375652 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.841457295 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.372979682 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.545525968 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.841501143 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.41683558 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056466084 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.841860363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.647368073 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949288792 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.914534424 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106660371 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894672646 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.765190316 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.543360051 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.525400875 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831389681 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.767230037 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.832602619 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842270012 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.843306155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.031215132 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.110344599 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881316115 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.558550608 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.877281779 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842849726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.83846818 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833611609 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.345687388 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.016306651 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.108895074 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.88775073 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97676479 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.846982051 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.767328559 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.83685025 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.838239646 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.832569072 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.833202987 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866442657 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.571106828 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20972095 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097066324 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.44517264 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853242376 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.608953113 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.894992572 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.83505565 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.766580707 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088341045 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.923808537 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845583265 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.84529142 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.643174038 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.548544626 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405290574 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150877344 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155479524 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.277618415 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.137913888 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.871057219 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.17666442 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772339871 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.392135998 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895104543 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.176313883 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782523921 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920506088 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.487167368 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18866163 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849711643 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.062913897 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224369985 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.843835176 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86341043 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.046585382 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870487083 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.066746223 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.801550434 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.360244743 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977946748 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.617998135 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.055637208 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167087363 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622181553 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.013165471 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.836699834 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540050974 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9242937 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.54934517 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.008404344 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.101732624 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893338313 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318746209 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.845969863 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06238023 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.19375406 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.09340531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.965199257 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.774966421 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.847250811 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.847891445 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.838610429 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.83618724 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.721630302 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.090829328 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.848665931 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771754691 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.029880222 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137635607 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.742205292 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.843731736 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837566189 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146997413 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.466601938 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014644836 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.014605775 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.364457382 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846109921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.772674491 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.773162435 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.530851267 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.843946874 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.812813573 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.060280941 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.944327188 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.756100476 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.003414327 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.09168036 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094564326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.852982245 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.108116383 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116364323 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.538600423 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867818022 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.940247653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612975907 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.960042357 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.839544582 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075648714 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591637283 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.071264364 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.875772155 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.798525985 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.840659261 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05686292 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.840515958 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.852244407 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085737079 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.563409554 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.961860501 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166202595 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917296349 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.83985848 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.902141871 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.932514275 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851685926 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920231454 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850893072 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.851561286 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.851664735 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886191958 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.852159774 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.980601788 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.856140965 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935331137 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.022757389 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.372507419 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.847169689 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.113332016 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216650356 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173456036 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.90567645 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.841161871 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841663223 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775368787 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990374704 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.06717409 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.115390347 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.970622259 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.956080727 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867995135 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625910872 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.152626606 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088453866 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117118447 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.737382465 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430423134 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.887390088 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.842700401 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852531676 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.053251306 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066775862 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165580023 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993732485 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.003574382 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.208340732 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119885543 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.842930496 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.842853003 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435559703 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.845052063 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.652526755 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.889271077 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.848163856 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131575671 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.852849286 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223805497 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.866696657 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.003604797 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.61736911 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.5768268 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.134561839 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.833818174 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.91294139 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.117852643 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.230036784 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162669917 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911020193 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854509011 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.954208 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991024024 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.729594334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845304419 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845099865 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.892371467 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.555484351 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.854671431 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122486831 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16237052 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.843476734 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.73550832 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869532016 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.854052357 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06883197 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116534497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100622302 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855100152 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.850511437 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.661019627 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120314524 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910517873 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779882421 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.849787265 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946216629 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.094260755 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865235175 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.298768361 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.55698218 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115977646 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.852737978 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868214279 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.093222119 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.215802491 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174718543 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.390222765 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.055257532 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.437130287 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.530104687 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.153037503 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.852388043 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.081588696 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15501474 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.84998944 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.001949871 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890484551 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.113726509 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.163340836 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.86125101 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701962779 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.819544689 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.189125683 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.407619489 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788934652 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.856626841 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.907050018 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851373528 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.977246042 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859284378 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.751969588 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.083740163 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.63500693 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.120564571 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.853137855 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.84125912 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.672796256 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.231101255 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887776977 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990731317 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853065449 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.524030237 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.200414049 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104412751 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.010016992 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.860051118 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.852420163 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849393834 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.835354341 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.044874865 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.047610116 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143311187 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.033990367 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.890448586 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.852613364 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.065226732 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061045876 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.8402724 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004093152 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004930242 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.896921432 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.754475102 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.357339552 seconds)
  done (took 1665.270052091 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.854882437 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.854445352 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.855490879 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.851336755 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.862062541 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.900272053 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.917707209 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.951077591 seconds)
  done (took 56.833596492 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.851171018 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.071646369 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.860856735 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.852354832 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.860845864 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.852760977 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.02637605 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.863837613 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.865011762 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.862503284 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.865291129 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.854274192 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.164251553 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.881122673 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.853389215 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.845433189 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.862170268 seconds)
  done (took 74.082847713 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.851941351 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.868809452 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.875806367 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.874859781 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.871563995 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.864849367 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.660409532 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.868648456 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.855871731 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.992920612 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.486730325 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.856061777 seconds)
  done (took 86.717062868 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.86111785 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.860454263 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.860525961 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.859244767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.859112562 seconds)
  done (took 11.091302107 seconds)
done (took 2165.210126874 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.107058877 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.071191711 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.092260166 seconds)
  done (took 5.952333296 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.998422755 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.045357023 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.164145464 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.171377282 seconds)
  done (took 10.166982571 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.133372476 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.236740796 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.056413342 seconds)
  done (took 8.210330331 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.259647351 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.862250893 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.96527698 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.844934221 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.851565952 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.849774124 seconds)
  done (took 22.331260128 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.852325051 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.855901822 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.852261752 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.855224065 seconds)
  done (took 9.199055899 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.833036481 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.679763076 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.838789988 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.849708829 seconds)
  done (took 20.986778477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.600501066 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.611971458 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.595896423 seconds)
  done (took 9.593668275 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.509030547 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.068244946 seconds)
  done (took 9.361921317 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.116864119 seconds)
  done (took 3.902316947 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.983699984 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.118579294 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.335565119 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.39179966 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.47341997 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.025010012 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.211277504 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.115506424 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.249794279 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.318839772 seconds)
  done (took 25.009309141 seconds)
done (took 139.697400005 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.380178345 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859044502 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.058972772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.257227051 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.081780825 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.059755073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.053624655 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.253640177 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.717460836 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.834209912 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.199100782 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.083216983 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.211582187 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85468059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.212879976 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.232822318 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.078651581 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.259274812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.893384756 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.14385248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.057577933 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.834814071 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.036908083 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.850295778 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.08267883 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.009420262 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.426958272 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.235739365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.044430851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.435665763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.012822071 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.289084096 seconds)
  done (took 168.828741184 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.62447916 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.853805414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.852620512 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.85476614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.349623483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.854484733 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.8554778 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.854625205 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.045528873 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.021871232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.855478193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.297453376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.856883462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85476562 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.857717293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.855705774 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.16448079 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.661661367 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.855652382 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.854756646 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.856251585 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.179805951 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.85558277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.212968136 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.129491655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.856159524 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.805441029 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.856383227 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.855605752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.816203305 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.857011462 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.855431726 seconds)
  done (took 207.208658755 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.855522898 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.857345674 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.854392451 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.856210551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.857440882 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.855419237 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857501564 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.856863152 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.611329413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.604069984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.855341715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.857124294 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.858163028 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856609248 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.860786888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.855996535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.862865734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.864576581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.862995232 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.864908845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.867758892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.70012892 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.867882306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.706385102 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.865571888 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.864273401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.858408626 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.864744348 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.865576959 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.867434406 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.867365088 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.857976908 seconds)
  done (took 220.511369878 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.051341808 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.862030569 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.863132177 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.794861478 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.864402099 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.862990322 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.859722372 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.052026064 seconds)
  done (took 19.016011932 seconds)
done (took 617.367447718 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.31009756 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.156614452 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.045167257 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.887812832 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.11601468 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.924285547 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.882919025 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.948640775 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.60701814 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.959061528 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.531395368 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.909754482 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.621164214 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.910043844 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.012020547 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.941881046 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.456254841 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.547076309 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.06735394 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.941215205 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.057008398 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.854433367 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.961948504 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.640955857 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.644119445 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.896729025 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.072052771 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.463567306 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.897426044 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.051989183 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.620427377 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.286275434 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.899194494 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.882363081 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.935406372 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.918622597 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.241508432 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.897220421 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.009556325 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.657602425 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.968772042 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.496528426 seconds)
  done (took 102.922922571 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.854679239 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.853556167 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.852797475 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.854066312 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.853771452 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.854026014 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.852734862 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.852800295 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.853695894 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.852323447 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.851712872 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.854776013 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.852809125 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.855167299 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.853676939 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.853065987 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.853880033 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.855688795 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.853945419 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.853368255 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.854734995 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.854222728 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.854451357 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.853670921 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.854663165 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.854179565 seconds)
  done (took 50.00560654 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.865921019 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.011701992 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.094752538 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887506153 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.867579727 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.871733853 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.88813187 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.872202646 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.870878482 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.870278291 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.960532377 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.873833699 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.887529753 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.094292993 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.884904138 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.867448653 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.868090196 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.868070685 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.018202029 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.8854775 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.890054857 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.872623886 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.888941191 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.883037654 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.871129066 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.870225203 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.872151023 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.304905028 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.878130096 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.960161713 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.929936514 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.894428483 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.25886353 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.103208741 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.925127732 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.876914164 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.868454168 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.964359897 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.875792809 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.870791645 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.888776991 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.874963673 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.091455924 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.371246836 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.884440267 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.869960344 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.318159738 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.985154426 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.911332749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.88177335 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.097263732 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.88768368 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.870897538 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.871160737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.90767166 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.885042458 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.870039633 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.173730511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.88247795 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.889048591 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.875083301 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.871804475 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.025454504 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.880630578 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.014564596 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.882834529 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.878039468 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.872665742 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.096766995 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.888327083 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.375827122 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.885120105 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.870611811 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.961017367 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.01851024 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.346480394 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.886693741 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.029639815 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.280492957 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.895669914 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.879178891 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.293276682 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.900487457 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.880316967 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.873135463 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.872744976 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.872067843 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.916075834 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.889539011 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.309858425 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.377346227 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.189968032 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.899816117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.887791023 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.872928989 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.178624037 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.880292104 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.87187899 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.090482689 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.391649017 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.888202866 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.881638336 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.357497429 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.888449438 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.892139006 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.882872863 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.103382328 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.893686284 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.916425799 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.873217499 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.880183322 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.876268911 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.892684159 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.881522638 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.872921207 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.348289642 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.982335086 seconds)
  done (took 231.856494122 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.870562927 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.869251666 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.867715988 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.868597103 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.867779651 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.874542861 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.868119346 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.86796147 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.873924203 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.867283604 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.868900221 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.870914563 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.871011486 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.869563884 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.904875266 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.876196769 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.478266927 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.870499242 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.868084624 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.869388061 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.516392483 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.874848608 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.869011406 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.869877336 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.871725967 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.868320061 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.870031331 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.896708892 seconds)
  done (took 167.486476875 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.875380363 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.991931223 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.894475002 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.903752717 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.882606657 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.872936098 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.900392126 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.896483995 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.881676285 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.872076894 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.873102957 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.937755253 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.886151164 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.97624114 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.908885795 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.906655408 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.987227398 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.884077138 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.87353281 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.872821432 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.905083187 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.872076873 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.938232321 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.003205899 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.896562189 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.992377045 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.881404869 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.875728489 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.876222385 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.996197204 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.893326616 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.935847799 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.909450842 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.895127734 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.999898969 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.996939444 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.984600399 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.90568653 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.881542168 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.874222222 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.874389942 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.865214534 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.994198556 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.897127719 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.87825576 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.984316576 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.89527425 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.878264378 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.884892989 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.874608491 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.891965109 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.895206892 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.945389106 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.008444334 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.910583087 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.900992849 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.903134177 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.20572938 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.885038637 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.980758514 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.871226756 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.998221686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.895933445 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.865779705 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.876398004 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.880648793 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.90524407 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.90869161 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.989795804 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.886594051 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.980503689 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.911631618 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.882541633 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.875578343 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.87935231 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.994558612 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.000692587 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.911962391 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.915778738 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.909310856 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.87314465 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.878668425 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.866584208 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.896650905 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.881427038 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.996911273 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.001744889 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.886387291 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.879570549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.879603594 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.880472595 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.905069603 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.006087166 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.916230953 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.979062833 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.948861921 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.957466973 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.894422473 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.891696427 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.882317768 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.94522861 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.891517205 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.890171513 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.258280155 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.950734232 seconds)
  done (took 203.53251314 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.972148828 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.351277454 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.934388989 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.93565666 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.175445402 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.301110711 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.672560031 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.927160033 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.928800809 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.954541937 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.091790477 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.988123331 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.940383224 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.916905205 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.344995494 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.918051663 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.926451221 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.949248194 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.931205699 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.4596768 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.225159858 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.051418071 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.925081873 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.053420839 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.913082092 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.212758826 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.249192035 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.319263314 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.962816579 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.272908778 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.252219299 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.608804926 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.13480454 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.171314214 seconds)
  done (took 74.787780948 seconds)
done (took 832.384188771 seconds)
SAVING RESULT...
DONE!
