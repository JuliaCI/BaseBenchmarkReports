cset: moving following pidspec: 9326
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.567802967 seconds)
loading group "shootout"... done (took 1.083622556 seconds)
loading group "string"... done (took 0.404779542 seconds)
loading group "linalg"... done (took 7.641307914 seconds)
loading group "parallel"... done (took 0.152959303 seconds)
loading group "find"... done (took 1.237224091 seconds)
loading group "tuple"... done (took 1.906622401 seconds)
loading group "union"... done (took 12.011325303 seconds)
loading group "dates"... done (took 1.267090727 seconds)
loading group "micro"... done (took 0.191613655 seconds)
loading group "simd"... done (took 4.118726936 seconds)
loading group "io"... done (took 0.988028782 seconds)
loading group "random"... done (took 8.289996533 seconds)
loading group "problem"... done (took 1.571144388 seconds)
loading group "array"... done (took 18.449174223 seconds)
loading group "misc"... done (took 1.441223723 seconds)
loading group "scalar"... done (took 37.574849549 seconds)
loading group "sort"... done (took 2.876493651 seconds)
loading group "sparse"... done (took 11.351665304 seconds)
loading group "collection"... done (took 16.70114099 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.484400703 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12246714 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125978852 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115058654 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.144636119 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118295511 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122139015 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083467752 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.892164703 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138413491 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.111176399 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.421437399 seconds)
done (took 5.258131552 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.16640297 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083559535 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076124281 seconds)
  done (took 1.326439412 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061682221 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127873411 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0626527 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.06326432 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063142384 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062689485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062784785 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062771549 seconds)
  done (took 1.672894471 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069448188 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.064493178 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062184799 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064206678 seconds)
  done (took 1.434405495 seconds)
done (took 5.853465434 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.23204206 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099701546 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.282336901 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.386588502 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.446795012 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.087849309 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.070938991 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066513787 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127002922 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317632972 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.09868785 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.17895301 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088160689 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.175857722 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.9590045 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.115388247 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08177466 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.11958092 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.090017688 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126941174 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.399462366 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.074823154 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.07093277 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.066516371 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063856961 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646146496 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.652922233 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.123377357 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079824854 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097020807 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11266641 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.635284032 seconds)
  done (took 10.375302823 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.088906308 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087979041 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065343659 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120999675 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090121899 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066312695 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071252901 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063670493 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088121113 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121133919 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.086917278 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096327803 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063016745 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065509125 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072121227 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19424834 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.074173416 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.076394444 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.06428727 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076737569 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103874226 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075131066 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075582859 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.075529846 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12513946 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16670117 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093996435 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094448113 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063155898 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.076958009 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111352445 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123563068 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062062614 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06246671 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117058868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091936559 seconds)
  done (took 4.473805114 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.920180612 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086921065 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099365672 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.599430594 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061051156 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.145918331 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235595244 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068842704 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.363181714 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.138432131 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135811589 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.139925332 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110946998 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066074731 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.202970422 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.111189661 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.356228844 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064575919 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063133391 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.061776598 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.064890536 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063945476 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059600706 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066160908 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088107511 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083379732 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.161759745 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.908476973 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.243342555 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.063610813 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161166671 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.080587543 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.363049026 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066138111 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078874638 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.394426449 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.118445135 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.062495762 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16254732 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.112014786 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061366048 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.117793824 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07439472 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065695717 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064910104 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064588098 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067716149 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077333044 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098038081 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064627709 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.061128532 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.158445108 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.061522824 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062720682 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063924518 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145330415 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061603962 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.137158221 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.060490791 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064354395 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.095029963 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064474024 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086616471 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.098604513 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.32961285 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.045714453 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062331474 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.177029936 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.07412149 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.062610606 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067144587 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06246362 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.063679804 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081495703 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.060721886 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.060319416 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.063724693 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070527485 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066099071 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064465464 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.104677766 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063507164 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066255747 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063327126 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067619065 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097070648 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.061075618 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.453841382 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.093854173 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.061044481 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062461001 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.073524704 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101336833 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062046631 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069032087 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.063823715 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063522685 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062153033 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063106861 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.18192482 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090110048 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065292832 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109347245 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.010673912 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.063202102 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062696938 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067408237 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066102799 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065508465 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063221569 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066203401 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064432687 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061025986 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.108535197 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.063564381 seconds)
  done (took 21.231485964 seconds)
done (took 38.173289106 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.246477915 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07793099 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078578125 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078732944 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078354805 seconds)
  done (took 1.824890321 seconds)
done (took 3.082832845 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.103279997 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060129521 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096167931 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095004564 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06322634 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060266263 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.093855275 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060268518 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.093252563 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.095078763 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.097305855 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.096567255 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060213451 seconds)
  done (took 2.336822487 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066586073 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077325965 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07908879 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058590224 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068317851 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077251858 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058642731 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076517987 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.082947256 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07717472 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077107122 seconds)
  done (took 2.054631312 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066218502 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077544209 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083149918 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058443277 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070235937 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077536733 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058687378 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077431577 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080910516 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.077332759 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077397292 seconds)
  done (took 2.050902297 seconds)
done (took 7.689431143 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065212667 seconds)
  done (took 1.293386229 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.516685191 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.538834442 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.064534789 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.083052212 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181241017 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.096021034 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.223216973 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070680992 seconds)
  done (took 8.178318241 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091291598 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069677508 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065900039 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064824534 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.064770833 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064775009 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066535664 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066341164 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065550272 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064560268 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065879981 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065140623 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064743714 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064416745 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066010936 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06547399 seconds)
  done (took 2.404168147 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093372345 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091991235 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069812366 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070790139 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.068226944 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067441566 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.069646945 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.069398925 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.066900085 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068371395 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.070881555 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.068860896 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068787698 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060023795 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.069846568 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071526261 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066635396 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.069871212 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.070733512 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071531022 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070778739 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060258241 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068843517 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.069864408 seconds)
  done (took 3.046114299 seconds)
done (took 16.168536895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110417813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072370491 seconds)
  done (took 1.418834333 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067634165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067859463 seconds)
  done (took 1.386614908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074857095 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058861577 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080269822 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069547274 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.058822488 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058276805 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.078308793 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.058577467 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058689667 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.058724452 seconds)
  done (took 1.905068728 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.0616951 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.06841827 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065589236 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067557014 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065788271 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.060027706 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063516604 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.060379637 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06804465 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.058789465 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.063864667 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.07894428 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063583492 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.080526393 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.06349044 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064451185 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.06688188 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063012348 seconds)
  done (took 2.44215449 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059170312 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059712814 seconds)
  done (took 1.386897083 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06300743 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059268209 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062668055 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06269596 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.05952196 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058395239 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059415758 seconds)
  done (took 1.683070349 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40650422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116162746 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333557347 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.065934776 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075841292 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2418496 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059891425 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.064847445 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065236992 seconds)
  done (took 2.731452336 seconds)
done (took 14.220048588 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077423069 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.0802751 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086695727 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414235925 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089100829 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063478207 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.108820399 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.17327703 seconds)
done (took 2.371044665 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209848699 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.32408538 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.909972692 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063433915 seconds)
  done (took 3.563084154 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.322723801 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.080865577 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073644515 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06382724 seconds)
  done (took 1.816139759 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.062074017 seconds)
    (2/2) benchmarking "read"...
    done (took 0.06789547 seconds)
  done (took 1.400423228 seconds)
done (took 8.266192492 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061790844 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060328143 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.060377957 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060418942 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.060559193 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061150814 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.085229158 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059883898 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060191527 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.059862567 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060370586 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.060277832 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060254624 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060375009 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060410548 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060070769 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060331027 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060420964 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060712847 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06050253 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06002037 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060337761 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060283478 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060331085 seconds)
  done (took 2.764129652 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.077737374 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06272877 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064425277 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064085491 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.06533535 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064030086 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064310665 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06257963 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064359177 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.062555906 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064218712 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065020925 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061943414 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064826906 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062550721 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064676487 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064508159 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062691254 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062367295 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064786693 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.063933931 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062819094 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06439693 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064335128 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064303844 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064289528 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.06269629 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062779568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064108978 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064729362 seconds)
  done (took 3.206552245 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.061755035 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.057212547 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058582477 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065863225 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057434179 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057788014 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057718745 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056884119 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.05726774 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058540747 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057712363 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057027768 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05850575 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056895655 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057148979 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057598078 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061383996 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074353203 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.057219721 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056861784 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.060647849 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057405174 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.056932939 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057079247 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057775296 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057343941 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.056953355 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057352358 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057099301 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058365476 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057265216 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.060454497 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062027132 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057232796 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066170992 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061314957 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057161591 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061190292 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.058471151 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057467578 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057340648 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056733054 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057257075 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057073122 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.065598618 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057704032 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.05832551 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.05767246 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057071639 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056781217 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057116965 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.059486274 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06197811 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058933317 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056964508 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.058513489 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.056802279 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057846326 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057454888 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057117543 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057001639 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060359368 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.059119343 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058158233 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.07452885 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059097745 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.065759807 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057346272 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060791006 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060240999 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057722429 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072899311 seconds)
  done (took 5.541522001 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082342407 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.083426903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062192036 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061719081 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05792584 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.057602711 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.065707562 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057898904 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062125228 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077041604 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058331603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061904977 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061957274 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061806543 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057900826 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062151273 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066496235 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058028218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.057717995 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061678694 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058305912 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065498558 seconds)
  done (took 2.698368029 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.137649106 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063510854 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.100569578 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07430897 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066475412 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074255422 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063429883 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063371893 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063571398 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063967203 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064034274 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063569186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066159464 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064244947 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064692801 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06377336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063319391 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063725899 seconds)
  done (took 2.575457049 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074095688 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06382653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084853997 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06305668 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062794217 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.062780707 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067698597 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068100637 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.062427151 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062771024 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068079598 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062992192 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062537322 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062878899 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062410479 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062694821 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062551559 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063276539 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068022879 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066978766 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067264281 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067945902 seconds)
  done (took 2.741063499 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07060448 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06186905 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075833397 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063702612 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058042597 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.057973598 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063025139 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062257308 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063083391 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061476029 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062016107 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057702591 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.063901636 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062379213 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06435139 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062041412 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061454443 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06231079 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06164096 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057832831 seconds)
  done (took 2.543870113 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08409553 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06109577 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061097756 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078923479 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060884656 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.060403289 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078820416 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060441043 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061095338 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081620865 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06083568 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060674469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078832212 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078611899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060913397 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079047677 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079288827 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078515698 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060932625 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06034103 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.081739278 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061177601 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079357863 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.060844033 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060873873 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.060914914 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060838639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088288942 seconds)
  done (took 3.232734823 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061269382 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.059962761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060526877 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060237244 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060567061 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060386611 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060372635 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.061954382 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060195326 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060516565 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.059814261 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.059930362 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060205937 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060241833 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.060453889 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0603374 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060274161 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060605635 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060693459 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060472116 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060139079 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060348001 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060478865 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06050301 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060329372 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060067556 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060489904 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060504628 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060064088 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060499604 seconds)
  done (took 3.109294327 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.069737995 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069685919 seconds)
  done (took 1.43635361 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060148261 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073860748 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056639368 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066959342 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066740358 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060988004 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.067403931 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066202253 seconds)
  done (took 1.810543994 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.065928456 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086622998 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.05949336 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0605226 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.063359173 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114752877 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073021121 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068402907 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07377065 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.060700341 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059708226 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070944325 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058680364 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.069729367 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060963092 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066254472 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064291866 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068885132 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.069727136 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057386549 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069063038 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060003847 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058297726 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060300536 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059305901 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064640466 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073157377 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.069556945 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066161206 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057312007 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076115152 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058522398 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059521091 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066410565 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.062898822 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058024424 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091943127 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.058460528 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064348836 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057859637 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069070211 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07627338 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070169311 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07430424 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059760262 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.060472411 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057648695 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.060603874 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.060496735 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065841734 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058002682 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063935733 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057523887 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.059566267 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067046906 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058035226 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.064707245 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066081648 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069099566 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067151102 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065020265 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071533924 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065512762 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067227908 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058903177 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075255088 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059762311 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.068812015 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070437756 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059010805 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070739789 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.057497627 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056399713 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057611521 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087346341 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059750827 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.059165544 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058069286 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058053894 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059572564 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066587403 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064381553 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063720031 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061906164 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071734906 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065739407 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057652774 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.065755692 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.074580768 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060284303 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.057777999 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.072670723 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060006254 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.057408595 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07370925 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065756761 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059817521 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.058827502 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060495088 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070429687 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059240258 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056642385 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064606928 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059837524 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.060992358 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063130598 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064066607 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057312067 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066043862 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063290454 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059481179 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056175643 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.060969498 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058636291 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056141621 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065777808 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057522598 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071547379 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062623019 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.069619231 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069758588 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.066105532 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071133968 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.057181098 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.056011668 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.073158837 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.200952327 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061104215 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075437276 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058275158 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067888537 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.058245431 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059906163 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.066775866 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.057554641 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.060422593 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058614816 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.064447756 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060074407 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060782572 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061397549 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.06552197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069257963 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059329059 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065520136 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058380656 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072343249 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066531616 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.061595381 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062586235 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05897591 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069327543 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.063537876 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066815403 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057283473 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059287357 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.057807933 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067204331 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.06721529 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060497204 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067097978 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.061387503 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058853275 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058300962 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.059812241 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061113391 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062628317 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059017331 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064054423 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065778814 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071592124 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070153829 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.065811906 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.056972509 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057274397 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059978237 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057793262 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061308272 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065720647 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071410094 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068526754 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.07686932 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058502048 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066032499 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.059853263 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073001759 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.06915388 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059198504 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.063953352 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056900335 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.059841988 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066264789 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068346729 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070929878 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071112278 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.061454144 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061471269 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057685185 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.070668523 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058296951 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065090022 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.06581035 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063308803 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.057872203 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059974445 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06573891 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061198442 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.057960761 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.071238865 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065495392 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057789008 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069999359 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058128396 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067876235 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057533007 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060135936 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061522774 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.05995039 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065461834 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071662533 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056699447 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058293759 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07180545 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060298439 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059977678 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064260353 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.070657018 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061666544 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064316866 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067343556 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066107839 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061430156 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065599309 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.058776124 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.066032318 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061315377 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068133355 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057661269 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073971422 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056253755 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.070801139 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058393 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067239262 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058301052 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.065433756 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058258673 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.072653728 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059573195 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058544778 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.068297207 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056013693 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.065249056 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.057233709 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06110648 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.062455533 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.065367436 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.05975071 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065555392 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.059123532 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.064149881 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.061426879 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.064407131 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.065308486 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.060901361 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.057043165 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063609474 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066502806 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.063908828 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.058666985 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.058458171 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.057430955 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06491005 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058826287 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.058228543 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063723697 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.060386463 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.061810012 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058886343 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.059152185 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058675684 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064268328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065512155 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072757014 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.063718537 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.063132442 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06475446 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.056692047 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07030108 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.056930798 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.062926886 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.055765705 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063198153 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.064975503 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.056825876 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.073609195 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058442244 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063227484 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068101863 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063604315 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.059447155 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073000324 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060285769 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.063339046 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064034328 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060818556 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062538039 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.05894448 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.063699913 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.065696892 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.066635303 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.058137866 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06284686 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064475117 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059300035 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065281359 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.057900575 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.063129644 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.058719177 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.056383065 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.061147244 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.067344877 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06133825 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.061777916 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.057804294 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.056135515 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057733817 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.064938641 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060516002 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064859885 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071128538 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056297653 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058633443 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.056806559 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.062967767 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073295245 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06568652 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.063117113 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.061132225 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.056362561 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059037626 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059011335 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057425981 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.060331712 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.055885449 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.056760085 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066312817 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.058822721 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060449327 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057666096 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058706489 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.064997491 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062213611 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057444226 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06240842 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.05697712 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060628978 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056529567 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.058917804 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060706819 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.056247813 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.059543949 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.065982158 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.071006181 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.0627754 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064329183 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.058411293 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06422383 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071268368 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065720825 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058860582 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065287445 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.056739368 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073979433 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065204858 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064394741 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065902161 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.058587793 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072184289 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.060832798 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065778301 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070574347 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058738541 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.063325067 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.054577998 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068841696 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.058896031 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.056866263 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.064287836 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063283774 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.306127206 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.069853531 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060815062 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.06762589 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067057893 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063705848 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062258089 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061808859 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068177862 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076336372 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.062202403 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065649004 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.06837063 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068149915 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.064578048 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072315809 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067504699 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061352838 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062237314 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062455639 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061405819 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070810961 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060227038 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063265624 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06313721 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059083024 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.065351337 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074319063 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067998677 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068674401 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059093419 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058625621 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.07605468 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06170801 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.063754053 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065927664 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067365619 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070194468 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.067235085 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074513886 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059363186 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064009874 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069905444 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059769262 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058873891 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061223021 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060607998 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066443719 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067278456 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064794669 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060770728 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064780177 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070226967 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060080332 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062653111 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064794738 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05968167 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068183988 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065941851 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065801438 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.060601478 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.058636367 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.060973503 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066199141 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06507749 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066452317 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059537593 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066871093 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.071740908 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064971916 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062429165 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058677011 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062543399 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065957732 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064254409 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.05851011 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062333829 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061396787 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067475198 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066583161 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062244971 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058252354 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074047348 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065786397 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066513225 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.060801692 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.060988123 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059042818 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058190601 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.068746433 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058383275 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.060729509 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062020799 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.06044781 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074682646 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.065567784 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072930346 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059639007 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062115689 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058230904 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066923582 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06236886 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058617125 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067401476 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.057380763 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072214089 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.0697647 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.068022979 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058394874 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062913528 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065884338 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071447303 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066910145 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066320309 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062996205 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067121365 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060566548 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067926421 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057876644 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.057479718 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.067361693 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065299132 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.069662452 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.058453132 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.067053079 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.060534038 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.064844149 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.065318273 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.059926445 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060349862 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.060193862 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.212837047 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.062248391 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066722362 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062116054 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07357659 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059681286 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068531171 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065702387 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.068358873 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069749206 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070023844 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.065458258 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059168968 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064565729 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065515199 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060382658 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062374638 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062773802 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07947074 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061045288 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.060570984 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.072330601 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.066574543 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058243636 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.064867559 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06099065 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.065870072 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058179381 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.065644338 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.061721935 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.057896125 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.060855787 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062112512 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056944318 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.057842557 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05838739 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067062832 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062218338 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.058621436 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075924075 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060435875 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.065605066 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068377542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064022984 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060437105 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057253397 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.05958663 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06883766 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071895507 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060847013 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065076493 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06016889 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066328235 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057090517 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065553481 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064922406 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065547601 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058053278 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058466435 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.070788311 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071540591 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062210152 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06642615 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066001148 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060023312 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078732533 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065715388 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059221101 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.068170925 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061522597 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05808025 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.057430632 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062058107 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068680151 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058080472 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.061660035 seconds)
  done (took 39.794682923 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097774889 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060151803 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059130697 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058792687 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070945623 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060087193 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059034568 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060152261 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06002153 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061777103 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058670873 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058831791 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070704204 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073452047 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070011391 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063517101 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059053273 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059956371 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058590989 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059873639 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069918252 seconds)
  done (took 2.799950746 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065926119 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073030486 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070419702 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076337781 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06735959 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064108799 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071104152 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064044123 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072079037 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069045422 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.072116439 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064274592 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069383988 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069514924 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069090236 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064143053 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071783307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067415367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.063981444 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071109449 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064136857 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071511719 seconds)
  done (took 2.924932994 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.060308345 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.058893837 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065924749 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.058470317 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058028039 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062156542 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058126047 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.06140841 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.061286069 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061238485 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065458313 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058895376 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.0579205 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062565958 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.05775099 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059042143 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10213392 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059558726 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059495226 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058269673 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.064309781 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066214553 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058027802 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.058389749 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061580093 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062393698 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.0581093 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061405203 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059007128 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061978698 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059250922 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057912369 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065934251 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065308617 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06165509 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06209028 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059976544 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059339946 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058185852 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058339898 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065120706 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.059898122 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058592551 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.059757143 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066092189 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.05868154 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.057728074 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.065960499 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.057743744 seconds)
  done (took 4.430056973 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070808861 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107245953 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.064118572 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087955196 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072840221 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.06607661 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064394042 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088800047 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.05945327 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060406183 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.074211856 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.074843718 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061922903 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063580618 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.064077628 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061677868 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062870972 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061256576 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065510085 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061670116 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065812755 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.065878487 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072685504 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.073278733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063228995 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061085918 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061293706 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063382783 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.073003972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.066145302 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063812272 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064853482 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.073377468 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066465659 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.061439146 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.061576016 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.074153629 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062243863 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.061869913 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.059989077 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061381131 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063796754 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.065974685 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.074659914 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062258621 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.066513647 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062156024 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.059567873 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073368307 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062034876 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067015339 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07510775 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063667615 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062661443 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063941975 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.074042924 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062194286 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060654345 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06242906 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.073780731 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06018932 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063092592 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.074279347 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061680533 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.066459298 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074654258 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066571589 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063404183 seconds)
  done (took 6.109138172 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069317113 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.089767001 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070574387 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070590012 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070492858 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070138695 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069963385 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069903045 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07007875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070418757 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070154334 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109377062 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065851229 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075505694 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069920725 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069795876 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069863085 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06987768 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070137653 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069787535 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.070109591 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07083592 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070322226 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070656681 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.073092122 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065577198 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069954922 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069702649 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070631091 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069709955 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.073120029 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.070331086 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069794574 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070393539 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072961886 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069518001 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.05931639 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070113826 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.070075654 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069869302 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065201047 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070545848 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069755174 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.065431964 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069901209 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06984046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070599623 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072935991 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078766394 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0710354 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070158806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070811064 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069945773 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07024879 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071350023 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078931646 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070754158 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070752672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069939238 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071035053 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070996 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078717252 seconds)
  done (took 5.878137407 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073899714 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066360404 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078904073 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061305034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.058546462 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068906047 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058390843 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058855518 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067222455 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067127349 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069316571 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069215816 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07159612 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069362034 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068589553 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071243881 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068552432 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068638555 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067386742 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068685455 seconds)
  done (took 2.799157847 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.069245444 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075835413 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.064260733 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068610552 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064319235 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068987256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063724108 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064407158 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064846675 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064750253 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070065132 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070109469 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064731836 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068764602 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070427803 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06846798 seconds)
  done (took 2.514398999 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06450773 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.067626848 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.06712601 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.060379622 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063760205 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058927596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059405943 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058265894 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058909795 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072729222 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.059893771 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070846761 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060043163 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058919197 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.058986864 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.066019427 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058987185 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059884755 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059838518 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065364922 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066364881 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061445879 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063697172 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059679962 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064890896 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066792456 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06143459 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06327853 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059929755 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060193557 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065468778 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066401915 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059467417 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.060337196 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058759529 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.05975968 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059798944 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060232314 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065670514 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059875052 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058279972 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06462979 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060024533 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060884724 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059124568 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060467346 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059063054 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065369063 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060446392 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06536084 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060055401 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062262383 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.060436298 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067669206 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062988476 seconds)
  done (took 4.8568344 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072589261 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064621367 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058386695 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058857928 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063360018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064123016 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064034595 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063939711 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06430352 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058685377 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064305756 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063426177 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064496847 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063825241 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064288668 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063991458 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057916946 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.063882465 seconds)
  done (took 2.587804851 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067986912 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063470084 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.067973015 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063723117 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063267405 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06305193 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058869529 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058837533 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058672053 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063154862 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063368334 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062820163 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058961402 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063008514 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063502554 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063662384 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.062994954 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058739315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063498977 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058838557 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062807442 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058786365 seconds)
  done (took 2.813129057 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.085035097 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.080959693 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120194761 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076126002 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083965652 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068292774 seconds)
  done (took 1.959650653 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086423622 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100638183 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06384967 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063548514 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074128248 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066975139 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067098143 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067026133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074491465 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072333416 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067367551 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074427374 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074406843 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06931097 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074293087 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077255759 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067096687 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067510549 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063397463 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077170286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067535885 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07431688 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067937429 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067058474 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087080772 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069467423 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077319769 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072123947 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069542269 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074482514 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077375023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067219457 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074220911 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072217432 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063609977 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074338666 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067597454 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077193527 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074173107 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069499141 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063214484 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074227773 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074660137 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069606038 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077538573 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067579319 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069454952 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067379267 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067744586 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080053508 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074565818 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069657191 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073525175 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077679967 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077816926 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080564067 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072737348 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069707746 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074586867 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072796755 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07000768 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074459569 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069820188 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072474863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078094166 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069943262 seconds)
  done (took 6.230056237 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094023736 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06358569 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067489937 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072200572 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069341145 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067644722 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067472985 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067587726 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067741874 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064334297 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101680793 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067631785 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070036492 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069493513 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067833925 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067457103 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067734432 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069301393 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063994579 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079951004 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067764986 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069952377 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070218568 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069506508 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072416002 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077441619 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067418708 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067594557 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067090075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067519257 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069149343 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067394889 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069444957 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063644369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069249877 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067363685 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067288696 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069400312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067052661 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074453113 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069146418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077191951 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06726885 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067345855 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072406127 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067283501 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067285149 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063913244 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067348372 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064087923 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071996691 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0719814 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072187671 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069712136 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067642884 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067416458 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067585486 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067383472 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067246623 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077400439 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069484729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067151937 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079988427 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067471448 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067704805 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070190662 seconds)
  done (took 6.08279374 seconds)
done (took 124.706927464 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203554218 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.179496136 seconds)
  done (took 1.813057527 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068306076 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.092904035 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07186806 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131236992 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066094602 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101502634 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100148372 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070083522 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065647714 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.0661646 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066893592 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06985942 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134161081 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066092799 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.06552776 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069714898 seconds)
  done (took 2.756101821 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098297383 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.178155436 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105777342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065343828 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101025535 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073162975 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065321608 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076427602 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068996632 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068398201 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073494656 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071188143 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068156955 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071341922 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069396864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072901086 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068173372 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072910057 seconds)
  done (took 2.924578492 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.089491473 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.082834693 seconds)
  done (took 1.629663215 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154372238 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.101296031 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.140976928 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.312931794 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13461863 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.277717451 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130612933 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128395968 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111351828 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.121612232 seconds)
  done (took 3.063330856 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096007145 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162061622 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.295846543 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115476405 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07182793 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.083769083 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11741924 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077630956 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077127845 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076601277 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07634247 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07651387 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.093943521 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073385644 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072866037 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073120729 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097086885 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072100364 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072124362 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072708554 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096931613 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066116969 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073085182 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072247812 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074359942 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074771789 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067286879 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065927314 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072405611 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071980002 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075268887 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.080791612 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074629042 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100072868 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070049039 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.100942978 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.071589883 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.070380727 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072335472 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.070421217 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07404335 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.074513408 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074683602 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073491119 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.067190391 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.071444526 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06746636 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066185988 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07640645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067385572 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076578087 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075704389 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100924936 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067560212 seconds)
  done (took 5.986943541 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104293442 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101520006 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065269352 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1093781 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100827725 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066941393 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101911105 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096018128 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.104908448 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066291097 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065297961 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065790556 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074728775 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079376706 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.111177178 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102115328 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065983889 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064583319 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103923538 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104387368 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063452036 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095351621 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091877321 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103700356 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064229918 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066177845 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064519192 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065770695 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072164111 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073728588 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065265707 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074353565 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081263145 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071794259 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064432646 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064662424 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064906457 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073665347 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074681257 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074812339 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073027618 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064187826 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064473671 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065688121 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066200488 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064110874 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073002497 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.073886664 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.072842533 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064731379 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065190077 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064764363 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065116318 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07369512 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072552834 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075274636 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075031795 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064921227 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06545248 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067297634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075265807 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075627073 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075256076 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066636375 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075552133 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065607433 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077004421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08056518 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065200718 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065920588 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065204298 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064979025 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065479792 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072673629 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073149014 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066039321 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065430637 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065086202 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075382901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073021835 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065381758 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072176251 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064262902 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065291958 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065492754 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065914472 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072412052 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074220861 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066301814 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064666879 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065405274 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065222553 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064389283 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072920745 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074059779 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.074723454 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073427244 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065569654 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073901918 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073335841 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066010188 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.073142536 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064936956 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065482448 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065590198 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073330581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072697306 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074397237 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065233049 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064347183 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072587677 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209646108 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.064260963 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071351443 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073769716 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.071697766 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.063419645 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078466709 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063788263 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072712299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064092151 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074498096 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066415233 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073498861 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065433221 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064910913 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065321562 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073686312 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066454791 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065508791 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066053162 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065451113 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.073475748 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077241913 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066914481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073704382 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07232531 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064733265 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.071136533 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.063954276 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072217467 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064904695 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066258208 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064279853 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075874881 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06579298 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065040484 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065438712 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076231831 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065659975 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075004572 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073056661 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064837508 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079568977 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.074430093 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.072646957 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075324516 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066495954 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065309544 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06517406 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065092138 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072297078 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074010786 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065952935 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065266002 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072243384 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075787409 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06464944 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.072618056 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073054822 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072968673 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065120106 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.065066122 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076051594 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.072630102 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071393187 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071772222 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073953441 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064926521 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.072764922 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073201471 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065063417 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079928737 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065542215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077832569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07382537 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072175551 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07381413 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075055653 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075936049 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075792362 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.078529245 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065074682 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065039897 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073176522 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065077276 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064719733 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.072629211 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065665054 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065406219 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078569963 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063540694 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074109893 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064686604 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074436406 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064623911 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065491362 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07869215 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06570522 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06599729 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072859913 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065125722 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072517913 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076317491 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073168482 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064742304 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065201513 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.073354731 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.073879186 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064826262 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064270566 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065174107 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.072169844 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.072081218 seconds)
  done (took 17.670459075 seconds)
done (took 37.313802699 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203804722 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15503817 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191148598 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113328905 seconds)
  done (took 2.217700181 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.093302892 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.092872513 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.076202483 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.061886402 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082137142 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061869698 seconds)
  done (took 1.966793349 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.269917684 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19254066 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171217663 seconds)
  done (took 2.129191212 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20795418 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.192073943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457956157 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.287300858 seconds)
  done (took 2.731090962 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.129802769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.078943501 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061261129 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.071876578 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.110733548 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.143620411 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.089161272 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.111646158 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.072284897 seconds)
  done (took 2.425429911 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.132012285 seconds)
done (took 13.121796187 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.098683222 seconds)
    (2/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0778915 seconds)
    (3/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.22251684 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068830486 seconds)
    (5/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073704563 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.082226298 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.065302442 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.195094021 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.205531692 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.177666349 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073291255 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118211211 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.234548234 seconds)
    (14/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.080875941 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.386337469 seconds)
    (16/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.177283529 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071938605 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074378841 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070780105 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.118026614 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076697731 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125382953 seconds)
    (23/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.06218949 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071260809 seconds)
    (25/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.10621368 seconds)
    (26/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.169961047 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079536393 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162776611 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.194900347 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087910935 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073665388 seconds)
    (32/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.163552099 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071426862 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.113778477 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089703279 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070068924 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091115852 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.061482868 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084174867 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062083839 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.073230723 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071138086 seconds)
    (43/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.169574167 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061248482 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.150520215 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.06946295 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073997701 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07497822 seconds)
    (49/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.174407745 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.135376402 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.074385318 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 0.149793308 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062776135 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.203649055 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.071416322 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.061311751 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.081865743 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.1919864 seconds)
    (59/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.081861467 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.062943951 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.214911448 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.182185152 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072958494 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073599397 seconds)
    (65/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061988799 seconds)
    (66/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.071196202 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061738941 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071111295 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.116871443 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.132554615 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.085780686 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.062776583 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061107542 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.200921434 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.06123942 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115776295 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064580141 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076693048 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158349837 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.069078221 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.18146859 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07351024 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070722028 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.200288384 seconds)
    (85/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061654577 seconds)
    (86/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.15994221 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.267329858 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063613909 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070911453 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.139646151 seconds)
    (91/309) benchmarking ("sort", Float32, false)...
    done (took 0.13215422 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074001606 seconds)
    (93/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.09132488 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085172118 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.070982522 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069327259 seconds)
    (97/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136514693 seconds)
    (98/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156645569 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062545917 seconds)
    (100/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.061916109 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.135193438 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062951181 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123698004 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.069051823 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.069865334 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.171328301 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.062235344 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.063484631 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091778625 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.061921647 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.091310453 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07417504 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078589925 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.062611841 seconds)
    (115/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.135896372 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061541377 seconds)
    (117/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070703221 seconds)
    (118/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.179540322 seconds)
    (119/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.071575985 seconds)
    (120/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.211428226 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066673235 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.063202413 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165954247 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08633114 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164287881 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.203222262 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062569413 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073457449 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.07069784 seconds)
    (130/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.073197177 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070847426 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185848353 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.157570587 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091603791 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.064898785 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.186670693 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160298297 seconds)
    (138/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.15400995 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072434718 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08317407 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074720054 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.169570822 seconds)
    (143/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063265159 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063593392 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.179778105 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072735459 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.07058907 seconds)
    (148/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.063361464 seconds)
    (149/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063135403 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.130091559 seconds)
    (151/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.135834634 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131933849 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070983608 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.061990683 seconds)
    (155/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067835867 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.063133862 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06327802 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086753003 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062018268 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.19920347 seconds)
    (161/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.065247287 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.079908085 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061050483 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068832923 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061700891 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068690653 seconds)
    (167/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.135816275 seconds)
    (168/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063023712 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.0701301 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.062845328 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114702343 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208722511 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126257724 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.061549059 seconds)
    (175/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.063039757 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087990958 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139631019 seconds)
    (178/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071403228 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090076554 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.061487316 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061827949 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.079595809 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.215483028 seconds)
    (184/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.061566624 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062298487 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110065991 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062004993 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.158623864 seconds)
    (189/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069750966 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.061877108 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.061869735 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.141192552 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061635672 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062511423 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069869052 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060685925 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.066842179 seconds)
    (198/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062531614 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151240098 seconds)
    (200/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062387205 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081153276 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.073721076 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.197600036 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061026889 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.064052182 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061295298 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.198083631 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069236958 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.060618622 seconds)
    (210/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070165325 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.075822272 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06243269 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.062074257 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.2139887 seconds)
    (215/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.062358306 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.061439164 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068374402 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.127321623 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.061688967 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.073448575 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.061253836 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064159723 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072078985 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.121251861 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072323538 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.132655644 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 0.162888677 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.061785938 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.135509135 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117192832 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069095272 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06051711 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084034006 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061942658 seconds)
    (235/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061425564 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060406546 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.086042837 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.139136534 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069767177 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.060740838 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070569918 seconds)
    (242/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.060984923 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062112132 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.065270506 seconds)
    (245/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.061449507 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.062974787 seconds)
    (247/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.066081249 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.159485987 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.081956951 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060803954 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061905333 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.060471722 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.061848477 seconds)
    (254/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.06240092 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06003936 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113457521 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.062218502 seconds)
    (258/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062335595 seconds)
    (259/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066174554 seconds)
    (260/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.164596613 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.07411676 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.06106361 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062235699 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.062238487 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.11465687 seconds)
    (266/309) benchmarking ("sort", Float64, false)...
    done (took 0.127176332 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.06215162 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.062360905 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.062428437 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.072771981 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.060641981 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.062220399 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.132982575 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060899509 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.062773202 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.128011292 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 0.233296554 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06826452 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.067584205 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.061525423 seconds)
    (281/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061261094 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.062142544 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.060891762 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.072424149 seconds)
    (285/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.062479698 seconds)
    (286/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.069355511 seconds)
    (287/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061676114 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.060890972 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.062041751 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060808231 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.064619745 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.063660763 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063798609 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120608553 seconds)
    (295/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064563307 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.061109298 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072176677 seconds)
    (298/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066080536 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087156079 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.085737951 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061912474 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068329861 seconds)
    (303/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.060865311 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060508271 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.06765186 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060439008 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060718433 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063373738 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.060754606 seconds)
  done (took 31.446657226 seconds)
done (took 32.962239328 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.088243417 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089536091 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072605155 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.085644666 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.0798961 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097306043 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073771107 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078847156 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081424432 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080674884 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079433577 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.072909936 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07521017 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075118598 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073180971 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088955705 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079202104 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073246915 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073658973 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064818017 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073378305 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064722077 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064868571 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.07152752 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076340337 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072009886 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073726235 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073528511 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064185856 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06424629 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068795062 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073185874 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066820434 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077035577 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073246026 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072040845 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073589381 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076104503 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063141063 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063998337 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073387309 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063105785 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071794093 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069356158 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.067878082 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.06990523 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071561965 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075768227 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086288993 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067260045 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073303487 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.073974634 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.074692453 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068742808 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068167328 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071569442 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069134672 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086325477 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07140532 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067021742 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07266657 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07201142 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06956288 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07136339 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071228616 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073710912 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075952584 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069600471 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073068302 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070413258 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0631555 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07153278 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067761958 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062567617 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074029051 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076012855 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062029393 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067614429 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071031794 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071358978 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062568199 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066870615 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062090897 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068228915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066615968 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.06913351 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068342383 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070484131 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062078919 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071451217 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070145014 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070889988 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06237117 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076411479 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062446781 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069047624 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062822174 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062806546 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062109422 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068033445 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062702381 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067148889 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071827209 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.061901422 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.0678195 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077104783 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062937142 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070384845 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062526102 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062752274 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074154828 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073467061 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063056359 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067018256 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.0623427 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069069354 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062552825 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062450138 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062610165 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062438034 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.0667455 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062866825 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066678154 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068283998 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.0760951 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062335661 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067168715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066941802 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062574293 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069284359 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062755989 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062493554 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.062012146 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076330029 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067228888 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062872889 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068110294 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066960503 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071159845 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061527842 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071443107 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068909574 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.067390761 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.068923524 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.061858776 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073743243 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066878765 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066873129 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062222119 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062445002 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.061684202 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062187019 seconds)
done (took 12.437817925 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063530628 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.089031237 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069068135 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.077216782 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.074638163 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.06315663 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067831205 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.08146642 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066132756 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.08228533 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084568507 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083855995 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090742992 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062371893 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062934403 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.063842093 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062112523 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069896644 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078747354 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084236449 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092456835 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063400022 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072630526 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078307899 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.073627148 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082289513 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064374317 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.063953083 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065343304 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079175837 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086590572 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062832616 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063329409 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077793338 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077206959 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071020232 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063777916 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067977845 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064307865 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062876824 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064451013 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078167458 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.067473123 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.070471098 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064291296 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064568861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063994821 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067401128 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.076606863 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.067237853 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071412592 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.075742376 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065752897 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06365527 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.061987982 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.067889889 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063538883 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.063910294 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063697647 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063232009 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063148619 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.064955836 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.063724565 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.063609056 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066645998 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066506227 seconds)
  done (took 6.253262732 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.078772323 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089614989 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079771402 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.079985136 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062608045 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063177038 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063822827 seconds)
  done (took 2.167377015 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.06192135 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076633745 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07976836 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079649714 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073062556 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081492776 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063667787 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092457248 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06238698 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075878546 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109351176 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080446306 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066700986 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074725948 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06352155 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071554196 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063283552 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071645013 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072312565 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079479258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067433818 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090126115 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076499772 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063618129 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085271075 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068780389 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062910062 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.06356199 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065054393 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.064844178 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064803257 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.102277437 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068282947 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077494177 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064571598 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06330072 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069915471 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067236828 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067273822 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.069656147 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069407373 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065166151 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062154588 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064709682 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066245558 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.067471157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062233528 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.064694928 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.064680155 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.075451378 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062371411 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068227566 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066947184 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068580989 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069038633 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067932471 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071617434 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064756779 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075409645 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071637595 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064699754 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.072647455 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.071824381 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069435127 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072038604 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.067586384 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068085475 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.069505255 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064687826 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.065669629 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065072496 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072273215 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.063383411 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065644113 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066874074 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06519542 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.067652006 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.079987337 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080018466 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075883607 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065078932 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06482009 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067674574 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079699854 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.06861642 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06468708 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06671898 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062526501 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.067720401 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064720645 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069298781 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.064893561 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.071611341 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.065730011 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.06754893 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072282616 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.062979367 seconds)
  done (took 8.441531208 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067006936 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064587265 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.065836614 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.064558845 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.063829941 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.064697398 seconds)
  done (took 2.07865262 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.084883302 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06444678 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077529656 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.064679325 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.098472693 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072184868 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072185791 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073005503 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077252743 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076275064 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071907437 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074564994 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071316566 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066415762 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071668262 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.065279903 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071590808 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068387539 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075800266 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066610623 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.078003119 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.066068522 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066283643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.07617923 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067132375 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.065305192 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064142749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.075757757 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.075596662 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076521275 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066000961 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067450108 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071514752 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.072921457 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072041834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071580418 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064708854 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070145386 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066702098 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.067845188 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074507673 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.066337069 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.066854606 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070103288 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.072951623 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071646297 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070334963 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.067781335 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.07132376 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070089758 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069891825 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065219078 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.067107385 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069810074 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071698122 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073037715 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070159776 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071534945 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06597513 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071475896 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064227242 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067474518 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072829993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067035414 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068263225 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.06986709 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072137514 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.066179674 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.066452432 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.064201748 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.06983719 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064349317 seconds)
  done (took 6.731890238 seconds)
done (took 27.349863903 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.971795092 seconds)
  done (took 2.609945137 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.558669603 seconds)
  done (took 2.233175312 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.705054081 seconds)
  done (took 8.376219157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.283568831 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.330992268 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704852305 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127619299 seconds)
  done (took 3.147077066 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702271144 seconds)
  done (took 2.384196256 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.228292622 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220744923 seconds)
  done (took 2.134873323 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.341590524 seconds)
  done (took 2.017758327 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.110045893 seconds)
  done (took 2.778969982 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225220302 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157074277 seconds)
  done (took 2.06708316 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44756882 seconds)
  done (took 2.124898265 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.450206814 seconds)
  done (took 6.133659794 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.230927957 seconds)
  done (took 1.950043653 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.230133394 seconds)
  done (took 1.913694286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.710630959 seconds)
  done (took 3.390333805 seconds)
done (took 44.94478148 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078470915 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080129163 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080247888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075419472 seconds)
  done (took 1.971404941 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069371805 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.066864904 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.070903869 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072078437 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.068655791 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.069981401 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070325679 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067174876 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.068786271 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067162332 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065976601 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067086647 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070350496 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067015522 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069964929 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.07135912 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067762544 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067135512 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070385811 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067075818 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070205678 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066968249 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.065538165 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066525433 seconds)
  done (took 3.325156402 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074612483 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069477563 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.072197867 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068472081 seconds)
  done (took 1.972195861 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.072682004 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083859605 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.084888434 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.09052022 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.073473835 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074025322 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.082557289 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.083154607 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.062776424 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086149048 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065254739 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.063438952 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.063986856 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084355615 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.081804535 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.060287819 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062070188 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074434247 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.073435419 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076118144 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06517623 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.062616369 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073751773 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.073795436 seconds)
  done (took 3.461317524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07585471 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.062816912 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077424613 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089353453 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091699709 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063439566 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.078688517 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.0911132 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.138140513 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062816031 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068483701 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062804242 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104386654 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062761032 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079330391 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108872399 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112350379 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066492404 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096231982 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062749098 seconds)
  done (took 3.351226345 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074633169 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066339932 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067552991 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06258388 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07387537 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070062909 seconds)
  done (took 2.112102827 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065002569 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064553826 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064137041 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063742782 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069251011 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06409557 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06308538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06450225 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064867921 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.064650993 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064077258 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063215765 seconds)
  done (took 2.465543036 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157615406 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067519438 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067386533 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066730041 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.068995946 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.06396251 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078805774 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066292471 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083018468 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063669108 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063491595 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066314591 seconds)
  done (took 2.606320142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097078519 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126148212 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095058665 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.070890501 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168248495 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092418574 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089221756 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.120303258 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091835252 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.067591127 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.092201083 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134692579 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094013371 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.097383294 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08053692 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121823152 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108516115 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085939366 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112389407 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081039333 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069794669 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131676372 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068711192 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091768549 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100702108 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097081316 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107848024 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131460004 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083191104 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.088967387 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081266506 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.072731534 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1038128 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083440136 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095736312 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092414712 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096546637 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083506039 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085102834 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118594345 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151195976 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098686447 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099251639 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133162263 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076658204 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.106724132 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079750717 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09720316 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102152578 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091979038 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074006525 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09004383 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.104547569 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100097631 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.080427828 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080316456 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115937751 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097119176 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094783395 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078496084 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106411429 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086172971 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106946088 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264415062 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136704643 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100832674 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135227812 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12185738 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093933968 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.088091213 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.09114018 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074089329 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10874492 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097094515 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134475347 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108668076 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098511468 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.095659575 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081562705 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107243234 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11345664 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091395201 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092179914 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143799428 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107289006 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094278911 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089821148 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.141335975 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071335452 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14588228 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0879269 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119520304 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09575708 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137161143 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090123564 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.082295884 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105030746 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101978937 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088178895 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101801908 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082861148 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112088134 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091473651 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099390121 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08056684 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089737507 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085514501 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096059824 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07358264 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102191839 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114339327 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111654432 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073261475 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106842078 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084881264 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076103593 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091161156 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137084142 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082057226 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073606868 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148865866 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092710855 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116751367 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10968665 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.082820969 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.266469021 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135644211 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092045229 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089111937 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07579016 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152264167 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075294157 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117993241 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080350004 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101520746 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104769733 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13026961 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136938155 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094739379 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077600964 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091527072 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.105577023 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085539138 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084719672 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075643785 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.107710843 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123687867 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.099519388 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080462979 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091138214 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.06804061 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112737354 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075087379 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084090178 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094567545 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.086718362 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.088604659 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141004107 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083807983 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107024783 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097108669 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066368263 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090693071 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150655764 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081907925 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.110047959 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115287746 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082861809 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067444098 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094820874 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071705145 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107606032 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091681139 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105941019 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076703846 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105429567 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067419247 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072750054 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127298207 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100956699 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088154366 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131120942 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104261916 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.088262132 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102853244 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.097641155 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095714856 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102313187 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.259695302 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106114285 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072987134 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128048867 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090957597 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076702221 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087344275 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078358428 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077230789 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099522785 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113513114 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088308606 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100421217 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102530835 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088934102 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109581357 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088203035 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077836681 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130588548 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075546465 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073886138 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086794819 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.10530392 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087890109 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133048189 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079041112 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134768639 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091498465 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080177294 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113634799 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.067749379 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069630121 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080255317 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091300054 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114841393 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078377744 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077001277 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117081702 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130706327 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096788969 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101587443 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067320376 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08994931 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134603755 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113882675 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080844169 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10852239 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083585668 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128559367 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095823685 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11929358 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105069309 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109944726 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.090829272 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.0801882 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072398817 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08677326 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109935072 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085220674 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08092816 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066929043 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073617603 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091747751 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090188476 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111572012 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086998248 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134736879 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072198227 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100672049 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259238463 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107501495 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089757015 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095280311 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091722198 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091326474 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091106176 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091454024 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07282332 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126206905 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102582303 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077711844 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088456914 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094191462 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107192119 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108113579 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108531974 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092688196 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105276401 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122361023 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098347632 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081798718 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083449801 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092953135 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.084441091 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079933221 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.103291847 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110875196 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097494427 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108133024 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094056833 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.092523429 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105948693 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092529132 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08779499 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.11745002 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151434262 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.102018144 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.103732038 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084434196 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10620314 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105203262 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112032028 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.110169606 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108104967 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070009902 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07431148 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.069352307 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105732691 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078532286 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116731883 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075599748 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106105894 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095907021 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079240129 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065883789 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100738879 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0928446 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081378478 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122298911 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113082042 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.072080968 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090073096 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106651347 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082652077 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123208412 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.102083691 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101066991 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071217452 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091071553 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073124363 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.26082253 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100185753 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077372085 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076176376 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06993839 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106667284 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08340097 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108713803 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088664049 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101303097 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119267592 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129823576 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086393445 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09562409 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116661134 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112570858 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.082379051 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11214087 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134327629 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119361316 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.080103752 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.084183568 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105559499 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105037421 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10126227 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075506635 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078841516 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107866859 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11347299 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067349833 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083680535 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069557645 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083364931 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111362957 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094653404 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08197379 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116809338 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074549493 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10672172 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094856151 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122293497 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121726891 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14364316 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096501447 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084779605 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076455421 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123715713 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070179124 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116602645 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111251087 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086425698 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066127889 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080888015 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.094787039 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.626023957 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108410617 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075444525 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134330555 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086515048 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114539268 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08426626 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117391711 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089123257 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102304638 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091365157 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.280391799 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082445701 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109762887 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.174121989 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109696774 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.107274878 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07393791 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086021091 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.073355626 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.077731177 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.080616706 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085976575 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107911712 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083108631 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10549684 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.078974004 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107075554 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090686796 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088156148 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.09907565 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077983432 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138188481 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087288861 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123161427 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106455444 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077739112 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074188645 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.087240655 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100450218 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081777119 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093635741 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077946475 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07532422 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150718544 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101655583 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084374056 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101948767 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091182061 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.085619629 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091338811 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116955399 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109569686 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072788645 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087110942 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102940559 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078743186 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.073963227 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096272614 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069030469 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08876113 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098375677 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095551271 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089422631 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.102366458 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07747479 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086527817 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109016229 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084697364 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076947492 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076115085 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.076167861 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.075426089 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10243786 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107600034 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113814177 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109051967 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091243441 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094119603 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.078297212 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.222603902 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234107863 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097233573 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.104862875 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075326295 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.131665991 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088372269 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088763987 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095995753 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100718579 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150952747 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073405275 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108276176 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094103196 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109363294 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086145355 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105651778 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094884597 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092514924 seconds)
  done (took 50.237387743 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.089645676 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144612551 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152718759 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.077027583 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090918773 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.115005169 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204178219 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187684167 seconds)
  done (took 2.869547679 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064936557 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.079391714 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101911776 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079709719 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.061515782 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.062748633 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201485412 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078978918 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063785848 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10147106 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074295494 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065309711 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.411499997 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062759789 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064577111 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07311237 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.064362024 seconds)
  done (took 3.502119188 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359734657 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602773332 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.3373629 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073372825 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.972951674 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.083880372 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.329058279 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131364712 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.075958155 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.556091861 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.365714915 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.126886042 seconds)
  done (took 18.818889303 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.07248304 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072233113 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.076166494 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.075584738 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071972743 seconds)
  done (took 2.162904534 seconds)
done (took 100.553057679 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.077748605 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.166785826 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.065447875 seconds)
  done (took 2.063238345 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.08092626 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079093661 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078579535 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.076846077 seconds)
  done (took 2.118711554 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070909478 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073398457 seconds)
  done (took 1.94092315 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24157696 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159793056 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089650215 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079751779 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075891136 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076242641 seconds)
  done (took 2.037109428 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068561757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067187398 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069471695 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.069298537 seconds)
  done (took 2.07284706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06379027 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061357554 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064261577 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06691303 seconds)
  done (took 2.054684459 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.079456169 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078868036 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.073197325 seconds)
  done (took 2.023607112 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092209981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091626735 seconds)
  done (took 1.974740261 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076677279 seconds)
  done (took 1.868786962 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086039308 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094185263 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.14685788 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.106966005 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.145352607 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.129950459 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.073263758 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.074617842 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.069431837 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.067945891 seconds)
  done (took 2.78547079 seconds)
done (took 23.303584176 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075193731 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363186189 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.356259633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080994176 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.665473728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353311955 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981520765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089295236 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097242955 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064252048 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080314186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.644906866 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976832555 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327674149 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964141464 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326735231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646580307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0656514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064823605 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065839221 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.970420806 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06561184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065886867 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103079342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646001436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371024378 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066767634 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327043557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066084196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068841094 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354370433 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068038864 seconds)
  done (took 16.236721126 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067055756 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116272105 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070650107 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080827763 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068078354 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067229934 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069148121 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066400275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.106774229 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066282178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082807225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065164241 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070113162 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06782654 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086846263 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066803036 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067958389 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067439632 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066465711 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070703447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083349386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06348402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064711944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0644728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064553902 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076518728 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065113306 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06507583 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063953586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066722164 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069791112 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067879334 seconds)
  done (took 4.122581733 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117346755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124521385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070862917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104417446 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117696133 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067934732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147498522 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090170162 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111723458 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066634888 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083205678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065880801 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100735274 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068122176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087395147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06723792 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069004365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067251236 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06661557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06762462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085465689 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066356067 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067546061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067412141 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067713106 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081843973 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068413715 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066766073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066732717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069517366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070994816 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068506019 seconds)
  done (took 4.42303879 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068275969 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069812491 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078070679 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.078696442 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.064812404 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.066529629 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.068136336 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.064579769 seconds)
  done (took 2.375992717 seconds)
done (took 28.973062606 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076275836 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.065302989 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.068643009 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085540878 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070569163 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.068201153 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062559888 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071576545 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069132507 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069343337 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07032988 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06368145 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067507018 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.062447206 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.069215823 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063730675 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.070429236 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068722511 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.068922204 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069667991 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066576655 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.069628771 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07190064 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069460195 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.069412475 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.068938441 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.073828949 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069564434 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06501193 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067448347 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.0668406 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.075692576 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071590918 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07084284 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062824482 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.063339243 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068443093 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066325739 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.070791135 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073552529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.065998537 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07359535 seconds)
  done (took 4.68140257 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079756364 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084102736 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078262543 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078950337 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.097891959 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079687132 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084598931 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076086865 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.07439769 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.083796703 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071174904 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077814844 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.076175655 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.069293514 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074660949 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.071670292 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076555293 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.070678915 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.073932924 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.072702522 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081515705 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067162985 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.074632902 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.073976605 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069496118 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075272296 seconds)
  done (took 3.821392994 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.06920369 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081813619 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08933108 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146090223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110507813 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077543958 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078120742 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091207662 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094802702 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.065309858 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069079292 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090166611 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089563548 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071479593 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104949984 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081615264 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080405699 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.067261299 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.071982722 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.094255402 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085278712 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.082634259 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091210079 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081128412 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.064174783 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.067042336 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071218128 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078188188 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071726123 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076035511 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069017499 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068001674 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.065461952 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075889291 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069265509 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.063885347 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088348292 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076510622 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.0775411 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.107590473 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.073415587 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065762718 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092525044 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125961879 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06459231 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06806652 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.067785923 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076105359 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.065752969 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092903918 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07876064 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064234753 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.065382302 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065524718 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.065700577 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08010646 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066582014 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066340402 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07547669 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071108077 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08660805 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.069666932 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084039677 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064502985 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074767255 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065926389 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065688782 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063558655 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095523393 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071412295 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112841122 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065334823 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063247997 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076361056 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074978848 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070559107 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.064167756 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082214164 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075516167 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.067720253 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.0758944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.06761364 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067578998 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.095581764 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065599133 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063967111 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063270378 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067723765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067273377 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065205799 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078042793 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063652773 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067303237 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.078985763 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064253956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06502932 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068184889 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.066799944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064287323 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077172746 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068640169 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.065912799 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076017367 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065004197 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067483808 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078189148 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07196283 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063817081 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066376631 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.06762239 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065662023 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068342817 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067355389 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066857747 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071636803 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.071651846 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.06993275 seconds)
  done (took 10.637673237 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159604975 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149732774 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.06717406 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143103368 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.073390297 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070511531 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143776352 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084629541 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.065747135 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066254331 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06487115 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.093663586 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.090361503 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102202779 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068220802 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.063601257 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086346292 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.094673945 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.143121259 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.13849953 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086480627 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.069941674 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.065831797 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065196031 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06573293 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.07333252 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082575004 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073833968 seconds)
  done (took 4.418258933 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.073607699 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.089260256 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069748558 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.07601983 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.08461726 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.065725272 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066907027 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066929356 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079417458 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07439542 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.065670058 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.069480574 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.068901741 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068095308 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065901059 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070950828 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071892281 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.064637915 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069201483 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070348912 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075083487 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.090423778 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.069241161 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065047629 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.067445656 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.064565485 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074243896 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077440036 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065177382 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080442765 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062960462 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.069348254 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.078858359 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065961909 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065125597 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.065558676 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065419531 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065251726 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.065226827 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.063556917 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.06397296 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.069815869 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063797786 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073190335 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079014944 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072271677 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067889965 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.067742159 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068068295 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062786898 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068462993 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067890278 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067423518 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.0724359 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.068537592 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.067988347 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068898973 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.090714009 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.070821995 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064563749 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064925469 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.064112942 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.0675594 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075537471 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081849946 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.067506218 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063734786 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.065348516 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07061962 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078870079 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.064289984 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069560653 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062888846 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065820379 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.067184377 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067259885 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065729649 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063723885 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064620525 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065386471 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065509957 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.064785674 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.064823883 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067706406 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063729866 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064063263 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065181193 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066754502 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073863845 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064377081 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.0687199 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066202672 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063713752 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067212591 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.070262809 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067734395 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078358558 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076174563 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.065578032 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06380093 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078282608 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.067729706 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.064708576 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071415308 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.06949284 seconds)
  done (took 9.146162461 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086828322 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067825019 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081726883 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088245898 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.07522643 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.070377409 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075880502 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066970645 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081893642 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065077121 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074074471 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064320744 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076209646 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075364636 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067347926 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076212652 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.067972434 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082371995 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080080534 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064321156 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07393989 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077210879 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.077543138 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079355917 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078800043 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079956269 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077457504 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068112 seconds)
  done (took 3.97466165 seconds)
done (took 38.486749114 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.903178041 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.060627541 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.888372904 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.081649471 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.051190013 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.91097719 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.100126811 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.887785484 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.000557011 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.937404105 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.208961765 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.419526507 seconds)
done (took 67.343450181 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.911306435 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.051498177 seconds)
    (2/2) benchmarking "String"...
    done (took 2.145269753 seconds)
  done (took 6.020459782 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.157912329 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.685274 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.177167708 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.888753757 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.889426645 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.437133853 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.674881225 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.340533702 seconds)
  done (took 31.917166772 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.03573483 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.114614349 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.591553616 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.603299819 seconds)
  done (took 16.21024162 seconds)
done (took 66.142619911 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.925486265 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.887062486 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.956000268 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.919515807 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.8922351 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.888513188 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.891734438 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.891014212 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.897159298 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.978768056 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.888248759 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.888857211 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.888916913 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.908619511 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.439411013 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.941988181 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.896924285 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.895299182 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.904663608 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 7.093532241 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.890595579 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.88782862 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.395904435 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.082982705 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.509890772 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.145750108 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.293039465 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.323054481 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.902305637 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.888047662 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.925598335 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.115159909 seconds)
  done (took 208.057247877 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.889894588 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.68766737 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.790754998 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.894302442 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.200798889 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.06164478 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.99627522 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.276748613 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.892191617 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.904213724 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.020144896 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.888833814 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.043942858 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.83102042 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.926593129 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.976558585 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.02912467 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.076451565 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.921053876 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.043558219 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.91478549 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.854043544 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.813162332 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.011283594 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.898909361 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.9830233 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.896991488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.897911061 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.077432765 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.006413347 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.890834844 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.907289756 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.063267621 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.759863492 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.903262261 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.893815769 seconds)
  done (took 172.950914364 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.080246302 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.900881498 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.891035204 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.948151865 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.013969838 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.894657563 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.560042243 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.902126356 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.297586203 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.895918844 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.892661184 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.892272845 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.892836233 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.905899965 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.97360527 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.891643637 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.905909947 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.894097822 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.917606787 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.889324105 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.893247376 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.891998001 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.891937012 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.892282483 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.89278111 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.892044644 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.144701311 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.132037389 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.893433695 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.892938698 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.829134747 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.903161409 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.030144073 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.895404768 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.984668114 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.947767096 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.013445165 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.893511901 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.112076429 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.963396781 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.892315401 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.892592956 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.959546234 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.904104136 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.892076736 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.896351912 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.898198476 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.956914484 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.140107703 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.891781969 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.015116118 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.377393163 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.891684583 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.893956972 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.892888965 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.490924144 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.895339896 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.894012919 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.899218451 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.897144201 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.892285867 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.895294724 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.283691316 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.96290172 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.14141757 seconds)
    (65/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.26058974 seconds)
    (66/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.894753099 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.223175732 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.017511836 seconds)
    (69/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.891595502 seconds)
    (70/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.894640696 seconds)
    (71/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.896136473 seconds)
    (72/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.896855496 seconds)
    (73/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.894943471 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.894949477 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.894207716 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.896213725 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.898491729 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.017480621 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.901660603 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 5.018306679 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.977988862 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.015370036 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.897903433 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.905535695 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.726739419 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.965751525 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.931385541 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.723940601 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.897523 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.897777114 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.270254183 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.653592494 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.896157233 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.896579839 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.910096258 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.894185191 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.895726231 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.899714184 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.977297851 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.895312998 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 2.018785557 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.620065958 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.399743203 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.897697195 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.896390856 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.903708564 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.978053291 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 2.01697548 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.897544462 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.963258516 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.901341777 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.894836065 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.980432132 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.895129337 seconds)
  done (took 414.627765146 seconds)
done (took 799.609085217 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.486897974 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.46123246 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.553290006 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.475147016 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.448411898 seconds)
  done (took 14.256436797 seconds)
done (took 16.099266296 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.912227399 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.904333166 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.956607679 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.980576238 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.912727053 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.917104339 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.977636724 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.914588454 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.948957428 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.949165493 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.979204021 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.982310915 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.923147734 seconds)
  done (took 27.088878423 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.907295245 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.049269603 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.135129933 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.938354949 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.909589526 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.128015039 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.961603911 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.047564699 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.055799764 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.125259155 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.142151045 seconds)
  done (took 24.235329737 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.908078803 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 2.053324923 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.150125578 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.940104345 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.909993243 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.133312447 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.96882441 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 2.058576875 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 2.061523785 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.133167869 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.139934011 seconds)
  done (took 24.297944263 seconds)
done (took 77.46752648 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.902161331 seconds)
  done (took 3.734545133 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.924500571 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.06683503 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.901649344 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.900445066 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.901277887 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.903419609 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.901097389 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.902523191 seconds)
  done (took 17.235320591 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.902545696 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.902799827 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.903486413 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.903093357 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.903569143 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.903067587 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.903455755 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.902828285 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.905014451 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.903364185 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.902607168 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.903269617 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.904210476 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.903564987 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.903630933 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.903177766 seconds)
  done (took 32.289943066 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.905897768 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.901949692 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.904096477 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.903289492 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.90548949 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.904633564 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.904550044 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.904646116 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.903275765 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.904659475 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.904391176 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.904176261 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.90471025 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.904054487 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.903391692 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.904438417 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.903656549 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.904928403 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.90697535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.903562964 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.903751838 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.906092906 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.90571137 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.904635866 seconds)
  done (took 47.542610271 seconds)
done (took 102.656526064 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.651416949 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.618494598 seconds)
  done (took 10.105611172 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.905495088 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.905664925 seconds)
  done (took 5.652507263 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.905295646 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.905510369 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.907314391 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.90673192 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.908188813 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.906534253 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.906455961 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.906272242 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.905898938 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.905624863 seconds)
  done (took 20.901186118 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.906278055 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.907065826 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.905466013 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.905477121 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.906461617 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.905631641 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.904902931 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.905700732 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.90581007 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.907759875 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.906641268 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.906735648 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.907323528 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.90712973 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.90683254 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.906776337 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.907050049 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.906721836 seconds)
  done (took 36.154641759 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.908232824 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.906657254 seconds)
  done (took 5.651686574 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.907324642 seconds)
    (2/7) benchmarking "second"...
    done (took 1.906896074 seconds)
    (3/7) benchmarking "month"...
    done (took 1.909248749 seconds)
    (4/7) benchmarking "year"...
    done (took 1.908992221 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.907493701 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.907406338 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.907601966 seconds)
  done (took 15.192410404 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.908097936 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.060592629 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.112774131 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.757299361 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.909183979 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.911370085 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.234803713 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.911940484 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.918035408 seconds)
  done (took 21.563836494 seconds)
done (took 117.068888677 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.703334707 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.905227588 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.173789816 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.962195601 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.929222287 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.203575795 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.933457162 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.54516397 seconds)
done (took 43.208527541 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.986598901 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.90613502 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 7.147787 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.938990112 seconds)
  done (took 22.833129357 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.90889026 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.334037373 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.932775058 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.811245136 seconds)
  done (took 22.8542848 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.293922108 seconds)
    (2/2) benchmarking "read"...
    done (took 2.250122691 seconds)
  done (took 6.387814978 seconds)
done (took 60.916401735 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.909102099 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.908300688 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.9099576 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.909451832 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.909284719 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.908678256 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.910953987 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.910251453 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.910537877 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.910569728 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.91010509 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.90976327 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.911134507 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.910638895 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.911511692 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.910881254 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.908709156 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.910779575 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.910782806 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.909959374 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.909515228 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.90950459 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.911273883 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.911010651 seconds)
  done (took 47.681211527 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.909729618 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.910141735 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.910298992 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.912400811 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.911710401 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.910197298 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.910523962 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.912869865 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.912485953 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.91084999 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.912539555 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.912589716 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.910991379 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.911297824 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.912365106 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.912976612 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.91304128 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.913205201 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.912436705 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.913223625 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.911428618 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912124845 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.91260705 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.911263612 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.913160917 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.912013636 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.913069789 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.914009438 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.914374402 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.913355043 seconds)
  done (took 59.204516402 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.913347219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.911187567 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.913087365 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.913525639 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.914017233 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.913771976 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.914079048 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.913155936 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.914202528 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.914069622 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.915348435 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.913849967 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.913991153 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.917006717 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.916543769 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.913988559 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.91410248 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.912263911 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.913620688 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.914671922 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.915383924 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.915101265 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.913053097 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.916170021 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.915376781 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.915282988 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.91413779 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.915079576 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.915483361 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.917701539 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.914446759 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.915621117 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.915196287 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.915851282 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.915636746 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.914106914 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.915523368 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.914649596 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.914976027 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.915270409 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.914274042 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.917654737 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.915272609 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.914099001 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.917078808 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.921995806 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.916323831 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.917550112 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.917534476 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.918197003 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.917318049 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.919601822 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.91907118 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.917896023 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.91818068 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.918469431 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.918794653 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.919428003 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.917994943 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.91647872 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.923599647 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.921091213 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.918638866 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.919620646 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.917303183 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.916644695 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.915232394 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.916531099 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.918583183 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.918540222 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.922270742 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.919225458 seconds)
  done (took 139.810483953 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.919991023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.917679535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.917678881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.923159433 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.917922398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.918755421 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.917334794 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.917505166 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.919048787 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.918057644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921948542 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.920441607 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.91558704 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.922178684 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.919374333 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.920525683 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.917670636 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.918937057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.919574542 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.923189297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.921212127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.918776834 seconds)
  done (took 44.077095308 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.918769368 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.922309349 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.919971989 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.920811189 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.920285077 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.919169684 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.920049608 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.919178066 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.919317264 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.920594745 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.919590083 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.922372547 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.920174248 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919764206 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.919655408 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.921780768 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.921659413 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.920819516 seconds)
  done (took 36.418203831 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.919394604 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.921115484 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.920334685 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.921319222 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.918740281 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.91984921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.918725654 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.921139173 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.922099587 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.920963692 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.921103189 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921189331 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.920751434 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.919922286 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921202014 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.920744506 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.919112289 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919655021 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921373502 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.919753072 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.922190676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.920821991 seconds)
  done (took 44.105068086 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.921204245 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.921457271 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.923903616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.920343039 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.92247136 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.919718826 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.922669369 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.921395954 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.922323352 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.921907022 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.922604336 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.922866608 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.922999519 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.924171686 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.921771413 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.921696911 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.922337997 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.926472646 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.923807903 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.923348322 seconds)
  done (took 40.302124573 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.924301358 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922431384 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.920842345 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.92348058 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.923157486 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.923311294 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.923001622 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.923389093 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.92389208 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.922447725 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.925666536 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.9244876 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.924855422 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.92145061 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.923203977 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.922937175 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.922352452 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924863184 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.924316033 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.923051004 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.922611812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.923758606 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.924461433 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.924286978 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.921116667 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.924425745 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.924429427 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.925343048 seconds)
  done (took 55.713973152 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.92213435 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.926324562 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.924407206 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.926698359 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.924760948 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.923919431 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.923609601 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.924523242 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.923981964 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.925433647 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.924027245 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.926626537 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.925359415 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.92694052 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.924966942 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.924196187 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927171306 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.92467734 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.926614131 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.926469596 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.925901893 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.92426657 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.925356093 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.924678174 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.925631075 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.924716896 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.926089498 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.924864379 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.927628655 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.925809929 seconds)
  done (took 59.613816201 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.946560298 seconds)
    (2/2) benchmarking "in"...
    done (took 1.945881691 seconds)
  done (took 5.749161216 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.925862148 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.925081583 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.923661388 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.923553626 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.925333696 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.925726917 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.926577797 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.925105979 seconds)
  done (took 17.257172525 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.926905017 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.92910139 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.927665169 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.927085613 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.926296797 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.935741056 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.926871575 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.929287131 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.928007414 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.929304102 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.931508791 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.92943254 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.93562539 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.93054658 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.929254245 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.925414767 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.928067138 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.931158737 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.929014175 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.927874763 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.929060378 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.92522288 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.92628226 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.926692412 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.926555996 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.93041673 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.941443481 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.930230653 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.927697248 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.928820903 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.936543077 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.926489397 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.929916406 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.93003966 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.927672667 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.928742755 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.936536629 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.930162885 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.927048501 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.928315942 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.930495946 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.932002516 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.931926924 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.935497883 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.927941101 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.929920901 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.93024481 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.927081573 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.931807496 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.935777159 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.93874892 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.929134714 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.93043052 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.931729223 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.932271823 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.927393627 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.930003402 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.932887342 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.937930211 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.935999481 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.930019021 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.950544177 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.93929847 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.93139121 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.930585492 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.938854754 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.959038169 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.931462862 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.931938547 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.929840416 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.938910835 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.929527446 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.930815556 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.931087083 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.941464291 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.938610483 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.930469405 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.930903083 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.93099821 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.930925164 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.932597733 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.930464342 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.930295338 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.932583101 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.940873004 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.959128091 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.932048233 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.932440942 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.932887502 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.932590875 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.935177881 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.93314053 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.930423534 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.931877025 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.931916957 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.934804749 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.931834298 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.929143149 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.931854133 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.941075039 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.931172014 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.930902241 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.934901888 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.940417096 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.933332331 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.929356383 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.932257093 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.931888103 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.939361707 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.930996008 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.93235687 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.933167799 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.932675285 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.935777197 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.931543668 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.93525247 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.939500543 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.940994984 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.932442923 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.936821112 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.936665245 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.933891531 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.942627422 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.959018506 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.933640169 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.936504279 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.941391219 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.946782167 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.938655477 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.934568965 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.936611651 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.931838112 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.93527877 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.937723259 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.935330502 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.932807351 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.935506405 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.933822355 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.935021181 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.935606587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.937414193 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.936304761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.938796189 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.934943504 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.939184166 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.935059982 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.937271605 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.942170152 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.934056403 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.934203701 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.934660447 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.936766622 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.937566914 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.935549261 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.934354336 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.934745791 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.936685278 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.937527189 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.936279066 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.935150378 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.935739088 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.935580954 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.940956658 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.935890272 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.934054508 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.937882335 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.935701483 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.937142584 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.937938031 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.937872346 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.941314685 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.937079544 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.940396259 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.937502583 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.935490539 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.937871606 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.938064936 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.936564386 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.940770729 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.949764566 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.940322839 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.945541007 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.938473047 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.944784587 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.937109531 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.939004856 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.939354467 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.937472313 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.93760225 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.938115569 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.936757853 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.943314551 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.959258063 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.949435447 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.940995431 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.939483453 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.943342785 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.941890663 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.944158947 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.937230172 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.937399855 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.939208251 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.938354222 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.938391299 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.939495994 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.941765805 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.940482706 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.93957781 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.942640265 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.938785454 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.939809732 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.939506593 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.940224137 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.942756281 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.938659042 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.939079878 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.940233316 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.939776014 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.945773542 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.945168656 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.939939568 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.938224981 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.942101445 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.936465638 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.938761497 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.941201811 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.946085709 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.941469869 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.940483909 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.950134817 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.941438611 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.941217577 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.939934109 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.941290458 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.941819293 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.942279966 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.944302338 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.947169464 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.942000585 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.940473038 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.946309313 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.939181488 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.942179002 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.940168263 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.941775546 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.940738604 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.941764745 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.942198081 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.942339322 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.949329327 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.942426926 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.940128218 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.940464737 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.943405177 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.941912703 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.941679013 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.938901513 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.94261479 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.949360423 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.948271138 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.942588459 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.942969324 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.943703228 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.941931571 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.944173505 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.943246191 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.954773731 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.951546116 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.942078036 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.940551411 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.941978448 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.943599433 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.941051967 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.939562826 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.951182666 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.940855271 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.943998011 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.94761219 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.94006651 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.941170935 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.948612754 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.945402065 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.944101931 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.945567711 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.943810383 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.944053789 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.941861157 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.945986264 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.940266327 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.944323731 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.947700236 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.944546964 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.943387212 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.943787688 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.951729112 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.942110335 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.943522337 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.954630514 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.944330592 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.943104749 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.945097997 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.943154498 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.944328586 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.944939992 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.942669608 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.94447085 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.944486792 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.947911202 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.954168984 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.947197931 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.951274994 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.946378056 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.95632736 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.941466756 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.94500478 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.942983303 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.947366049 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.951509151 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.944304329 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.944295129 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.95172061 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.944437462 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.944946354 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.948893876 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.9443826 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.944166229 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.945298477 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.945114486 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.951462535 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.948303369 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.94450181 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.945171965 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.947463966 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.946233244 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.94954211 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.947555647 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.945834093 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.946645784 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.945555443 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.945219573 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.946050062 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.94475713 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.946305701 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.949086332 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.945208527 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.952689571 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.944883194 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.945334593 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.950226526 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.946449239 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.956009265 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.943138591 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.944177969 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.945802683 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.945495345 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.948757199 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.947709637 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.943868549 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.944779576 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.943529253 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.947700155 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.958850469 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.954891528 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.949869809 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.948781525 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.94681034 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.947419248 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.956834386 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.973556182 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.947506202 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.948107412 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.95089409 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.954408971 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.948666392 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.956486283 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.950029949 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.956345323 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.948542101 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.947676005 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.950747517 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.962339431 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.9462426 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.946686674 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.947078892 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.953499075 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.950508154 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.948982383 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.948660339 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.949870372 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.954644266 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.962290565 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.947139547 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.950656232 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.950280772 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.948942514 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.948542917 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.947147024 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.948809058 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.95114812 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.947797399 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.949252318 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.950724055 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.953816965 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.946195579 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.952194114 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.959796083 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.948718501 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.948508612 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.952841197 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.947895292 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.950215826 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.948708378 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.947980647 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.952190968 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.949166552 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.951127229 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.954605251 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.959768365 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.95136806 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.948899335 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.952249349 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.952996994 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.9499346 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.949029312 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.951689127 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.958403109 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.955443922 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.96224643 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.960505029 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.949918945 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.95294233 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.958458013 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.96017667 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.950812253 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.951584541 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.950525124 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.953322945 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.953820278 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.953173628 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.949544377 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.951204961 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.95670262 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.950178123 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.950730864 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.950057754 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.949099449 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.952341894 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.954429034 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.956670775 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.951861345 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.951249102 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.951379894 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.950824056 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.951913534 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.952675516 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.951166688 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.950535407 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.954193341 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.952035119 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.956111275 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.950598821 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.953830217 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.952960714 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.950721451 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.952488969 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.954958579 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.952482493 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.950524592 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.956572796 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.961223194 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.950243291 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.954745576 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.954161077 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.958049242 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.951920903 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.955388134 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.952218376 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.953936138 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.961775212 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.95317563 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.953031906 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.954133812 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.953248733 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.958561506 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.953184799 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.957793644 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.954608404 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.954439466 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.954084164 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.958812735 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.963935411 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.95925622 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.956903114 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.963497827 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.959509874 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.954358218 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.954826228 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.95537483 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.953091028 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.955603763 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.958278562 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.956010413 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.957813373 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.954772213 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.957085291 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.953857105 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.959428777 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.954464673 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.952753568 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.957650604 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.963879286 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.962418906 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.954722074 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.954383439 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.955145058 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.957335571 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.96675523 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.955460368 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.957636496 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.955023107 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.956394475 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.957290916 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.962861861 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.963535095 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.956360886 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.953240395 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.958228313 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.977367538 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.958580327 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.965832287 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.991830561 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.95630477 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.954713626 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.957219507 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.9575712 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.956009533 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.959911966 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.954783445 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.96283823 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.956747764 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.956932319 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.964219731 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.95590473 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.957611337 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.95965343 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.959071764 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.962068204 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.957333449 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.965114799 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.956949113 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.959047829 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.959500798 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.960672283 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.957023731 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.96151793 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.957080963 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.957464218 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.955736808 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.95729604 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.966432851 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.951844873 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.954302568 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.966700676 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.96657508 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.953388868 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.950607335 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.952140318 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.955894474 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.951868389 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.95107325 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.954483397 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.959315477 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.954226408 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.960337618 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.954136395 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.949351092 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.952271982 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.950742849 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.94998431 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.966335162 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.964135397 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.950889388 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.951976357 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.956453323 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.95352511 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.959236846 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.957762006 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.950692534 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.952984468 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.95292972 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.948914528 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.95310115 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.952673201 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.95514078 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.95786691 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.942854298 seconds)
  done (took 1161.257983881 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.940905491 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.940564097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.940023537 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.93956098 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.939271841 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.939539109 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.940354838 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.939405857 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.94048973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.93889219 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.939204434 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.938977253 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.93856649 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.939100521 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.938589497 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.939137514 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.939099204 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.938924265 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.939710724 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.937944639 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.938755824 seconds)
  done (took 42.601080064 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.93922122 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.940970274 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.938462774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.939872257 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.939766636 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.938323116 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.93983144 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.941724511 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.938196664 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.939994088 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.938919692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.938065636 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.940124623 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.939839202 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.9400395 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.939516385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.939402434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.93761706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.935630004 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.935795068 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.936013793 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.936138175 seconds)
  done (took 44.527230355 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.934142617 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.933205782 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.935373296 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.934117174 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.934455098 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.933451023 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.932818754 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.935249512 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.934100309 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.938699959 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.940544456 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.942733993 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.933730222 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.936509252 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.934549297 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.934030609 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.081701149 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.934236063 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.933871118 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.934000741 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.934746821 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.940628515 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.933982025 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.935293512 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.933806431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.942366712 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.93388875 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.933977396 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.933489901 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.93540806 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.93881633 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.933604126 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.934857569 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.936287109 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.93504667 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.934615151 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.937412586 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.934682457 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.933796552 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.934861532 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.94723878 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.95909068 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.934154284 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.933685443 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.94228784 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.935058995 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.935136947 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.936732591 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.941405083 seconds)
  done (took 96.899082658 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.934548773 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.934517721 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.934080258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.93669819 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.934053981 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.935596702 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.936871865 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.935340143 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.933480698 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.934488223 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.934226794 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.935381348 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.934575587 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.934465486 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.933168393 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.935402203 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.936274922 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.935143534 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.934570704 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.935226699 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.935461036 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.93788552 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.933396148 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.933046077 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.934109378 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.934741117 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.934357736 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.934070082 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.935514368 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.935372886 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.934134388 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.934007806 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.935186945 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.933292608 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.933563062 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.933251383 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.934174108 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.936834296 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.933944298 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.933055697 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.933378083 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.933554714 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.933583169 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.93077649 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.931226708 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.932066566 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.931696812 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.932981754 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.931084539 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.930730055 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.930595215 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.931759077 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.932198877 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.930307778 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.930662251 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.930014723 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.932481124 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.931579629 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.933510004 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.931706391 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.930683095 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.93159351 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.930896443 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.933030514 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.931875805 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.93166566 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.930557018 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.931588147 seconds)
  done (took 133.34676187 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.930488567 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.931022647 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.930736499 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.930025809 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.930659318 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.930817674 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.929978171 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.929665309 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.930260768 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.932905677 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.930575841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.930940618 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.930260066 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.930488714 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.931870855 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.929691817 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.929311856 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.929664495 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.92966062 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.929256655 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.930813091 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.93010753 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.929308041 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.92862392 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.92963135 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.930866832 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.928191235 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.929125519 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.929654115 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.928909679 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.930680661 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.928249665 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.928859824 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.929080451 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.928861238 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.928625978 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.928364401 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.929535741 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.928342594 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.92807629 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.928390845 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.928384149 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.926558503 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.927808153 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.927233782 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.929759364 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.930231956 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.927550467 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.928445655 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.926985923 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.92708822 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.927860442 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.927080619 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.927347574 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.928219262 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.926031 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.926931227 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.927094144 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.927246287 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.929130111 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.926934396 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.930482081 seconds)
  done (took 121.474842841 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.925261779 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.927018571 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.92592675 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.927429887 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.927118611 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.92564656 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.926731286 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.926027904 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.926469466 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.927185308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.926401884 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.925606508 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.927917006 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.925441704 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.930653414 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926742129 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.925558767 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.925104523 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.925062198 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.928252053 seconds)
  done (took 40.392332183 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.924960072 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.926460882 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.925623565 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.925056246 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.926080242 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.924009759 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.924921421 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.92495307 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.929460265 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.925116507 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.922772271 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.923182017 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.922784649 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.922792519 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.925010545 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.923532598 seconds)
  done (took 32.656691729 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.922832775 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.922804155 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.924377893 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.923541204 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.92305574 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.922448182 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.922607924 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.923241335 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.920182752 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.920320521 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.91961212 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.920579355 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.920788752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.919053958 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.919835236 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.919747789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.919756138 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.921476633 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.920153299 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.919806761 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.919826593 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.920032674 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.91991711 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.925113353 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.919161872 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.919602565 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.920513513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.919477527 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.921481461 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.920988712 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.919265183 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.920356605 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.920661282 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.921252966 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.920274416 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.920448597 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.920273887 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.920891021 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.923346452 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.920164687 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.920645501 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.920292433 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.920911464 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.920629559 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.920561651 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.920905164 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.920082717 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.920601617 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.920237011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.919934905 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.919451287 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.920001642 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.920674951 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.919875091 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.923798069 seconds)
  done (took 107.507075216 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.9197167 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.920486046 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.920821672 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.921610028 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.919231403 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.919060668 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.919477421 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.91955062 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.92172089 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.919771241 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.921013869 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.918536927 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.91912074 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.919615512 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.92005448 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.91904812 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.919733008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.919357541 seconds)
  done (took 36.412192473 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.920388986 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.920032762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.919708819 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.919655314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.919418706 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.920900638 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.920850724 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.92016862 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.920627307 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.920396353 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.922635901 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.920403277 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.920263463 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.920448516 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.920699132 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.920802247 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.921521475 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.921012951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.920468935 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921736301 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.921655865 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.922517745 seconds)
  done (took 44.111919009 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.920442026 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.921046565 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.935835313 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.941416443 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.939575775 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.95122493 seconds)
  done (took 13.465573146 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.920952557 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92237175 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.921492091 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921092842 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922408614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.92150886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921504711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.921378098 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922128553 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922814824 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92225911 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923112168 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923692415 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922598476 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922108607 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.922304981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922353642 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922608251 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.921969177 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922174976 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.921782001 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922457724 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923343758 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922719704 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.922302073 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922170175 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.921930701 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.92512408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923006263 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923189624 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923245975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.922672387 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923942867 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92354382 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922303082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.922556852 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923854321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924355063 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923045345 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923234013 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.923830424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92326277 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924322168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.929084698 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925207201 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923439805 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923410366 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923836419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925389843 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924068689 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92357822 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.925259661 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923885985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924565168 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923847619 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924298371 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.924132521 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924033094 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.923540954 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924528015 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923450913 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.923353884 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924653692 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.925722882 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924702582 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924485042 seconds)
  done (took 128.794976142 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924669115 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.925188746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926236069 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923875507 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924401569 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924248913 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92462245 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.9269885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924781744 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924178377 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.924957216 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925075129 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.92550514 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.92521313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925295917 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925434993 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924606302 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926152291 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925180886 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925570434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925580047 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926142037 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926015901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926457918 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.925881846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.925443693 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926580018 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.926152409 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927499926 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926230581 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926076083 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926960588 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926456208 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.927561757 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926391681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.925737491 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.926396601 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.9261693 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.927427962 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926777789 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926083162 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927153972 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.926557085 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.928585267 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927981796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.926120744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927768588 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.926892367 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.927900032 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92684396 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.926613278 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.929827817 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.927458153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927322693 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92966222 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.927032953 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928208316 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.927903909 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927171799 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927788965 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.927611802 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.92731853 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.927557617 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.927735009 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.928493202 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.928222684 seconds)
  done (took 129.009459824 seconds)
done (took 2684.245101474 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 7.005164103 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.005212774 seconds)
  done (took 15.871925072 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.094604403 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.048254092 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.931850286 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.984964128 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.933254145 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.956819293 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.94263405 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.932480585 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.932469047 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.932506443 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.932967325 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.115633517 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.98751782 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.933245549 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.931949487 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 2.025638716 seconds)
  done (took 53.485961972 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.938239361 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.93677863 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.947035014 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.935837175 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.936770093 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.948811163 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.964566757 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.942230171 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.972888368 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.949942504 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.008356605 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.94821122 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.93809888 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.988610593 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.953273092 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.951240867 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 2.035065135 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.013295684 seconds)
  done (took 37.173713771 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.014701054 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.944776729 seconds)
  done (took 10.830288272 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.945308013 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.965345193 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.928551285 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.962250094 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.94888149 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.950050777 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.956432703 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.956374181 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.939451599 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.945666516 seconds)
  done (took 71.367344629 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.939481691 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.935974062 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.940327009 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.931388695 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.929395072 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.935143696 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.932595626 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.931427669 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.623933829 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.975573207 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.94615193 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.944400174 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.935651583 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.937146965 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.934092054 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.961263536 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.049535723 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.934867407 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.931739415 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.941501072 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.936414609 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.998461102 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.9479566 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.937136189 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.969456429 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.617240187 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.948907715 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.941514675 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.046612282 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.933913451 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.936095668 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.146456332 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.9434234 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.39792961 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.20048992 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.942546515 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.946277912 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.942568671 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.933227653 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.058238571 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.93729593 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.941601791 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.933783122 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.177289103 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.031245191 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.98447897 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.267349293 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.938794746 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.936587456 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.974876691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.938453928 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.938477383 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.954682683 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.463503373 seconds)
  done (took 136.601879737 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.937351692 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.285874497 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.099269628 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.935462457 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.219403157 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.139908859 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.936264855 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978763456 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.939617156 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.162741781 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.190096249 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.042669907 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.937459505 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.935303539 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.937615891 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.933259495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.090103516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.009539313 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.940322429 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.933483319 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.961414634 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.175178647 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.059588581 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.94502492 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.961188621 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.144218062 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.052519188 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.039586943 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.716525047 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.934704933 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.994951409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.941236271 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.937115407 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.934359253 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.093549711 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.030669731 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.01753046 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.936690032 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.934079702 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.933468808 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.679910342 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.134861546 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.028533643 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.066177958 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.185680731 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.138241986 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.713618948 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.93505294 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.667435127 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.09497467 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.161563406 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.167451674 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058973172 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.9400028 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.267088178 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.934184739 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.936695552 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.183827131 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.153721197 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.036894253 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.942829594 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.938064045 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.932496218 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.223112099 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.935598389 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.029227865 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.941743741 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.934674263 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.030134071 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.033662459 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.168037296 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.148602974 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.964914041 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.281956275 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.447023641 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.182657466 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.007207333 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.184680129 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.94157916 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.936018302 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.013449163 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.779303592 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.188575181 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.218911954 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.186142079 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.972312604 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.65130928 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.937004058 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.160887363 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.155969147 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.195556351 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.18488229 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.176918048 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.25340767 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.942185787 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.93823356 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.298395072 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06206252 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.94700281 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.281138178 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.174831935 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.510559255 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.967188123 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245042901 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075602727 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.946736368 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.573748272 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.941124909 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.168044034 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.984009508 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.947429437 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.943670602 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.15938674 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.934933197 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.943701372 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.573152272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 2.003892531 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.948980313 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174592784 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.949056131 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.212121863 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.947323337 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.180642503 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.528442235 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.969879777 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.115080703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.184391101 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.944999402 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.18953393 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.186205678 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.057077434 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159564355 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.638124068 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.940958189 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.227765471 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.945891984 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.940866986 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.114984848 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.944421353 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.08320529 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.948264251 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.234908747 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.967011403 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.174764422 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.948122227 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.198467444 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.976228738 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.995319879 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.948033937 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.076665686 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.947586632 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.77106756 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.09944888 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.945588436 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.943972486 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.502477041 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.941839933 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.091024031 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.170147555 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.965970505 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.013141255 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.607965323 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.944101906 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.023528548 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.967071969 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.332363804 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.945630216 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.193996376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.946880781 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.940804208 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.94459451 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.224877424 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.123849727 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.94629914 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.943293982 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.84619799 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.944231819 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.941268651 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.12342203 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.282943484 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.94373299 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143515603 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.945288876 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067318763 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.943092924 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 4.014806285 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.27416954 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.938728554 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.939865477 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.942796718 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.9415348 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.94333155 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149519885 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.965743236 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.4698675 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.075445141 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.216046584 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.248647327 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.177820961 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.98068744 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.943761894 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.193576112 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.943326062 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 2.001250234 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.942776171 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.962847135 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.168840522 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.944471701 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.148021264 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.20782229 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.818756631 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.990206923 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.942351111 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.947338404 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.940628262 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.084928578 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.027067942 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.942881404 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.940664717 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.056222769 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.062238051 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.151969574 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.944784304 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.03703033 seconds)
  done (took 918.868060646 seconds)
done (took 1246.074361534 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.942210051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.945475262 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.946460131 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.947140775 seconds)
  done (took 29.657573053 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.943863371 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.943588882 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.942815973 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.941960458 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.947387103 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.942623839 seconds)
  done (took 13.539729925 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.029142358 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.947437757 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.947465373 seconds)
  done (took 21.801132024 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 2.019716136 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.354838363 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.084121059 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.380372544 seconds)
  done (took 10.715003369 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.943983786 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.948357626 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.944840675 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.945719923 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.945160556 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.945839178 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.945265935 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.945996628 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.946240189 seconds)
  done (took 19.389526929 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.694554373 seconds)
done (took 101.687727987 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.964316614 seconds)
    (2/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.945014679 seconds)
    (3/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.688962653 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.005490733 seconds)
    (5/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.334204436 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.180040074 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.044381808 seconds)
    (8/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.103512275 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.099809223 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.028814689 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.959855766 seconds)
    (12/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.967642783 seconds)
    (13/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.187160368 seconds)
    (14/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.573921381 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.079391599 seconds)
    (16/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.186173455 seconds)
    (17/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.508777445 seconds)
    (18/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.300697887 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.226980009 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.073399951 seconds)
    (21/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.943858937 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.164993926 seconds)
    (23/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.694186626 seconds)
    (24/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.967299669 seconds)
    (25/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.426350119 seconds)
    (26/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.228002226 seconds)
    (27/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.733949433 seconds)
    (28/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.203182873 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.94409263 seconds)
    (30/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.958803159 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.029350587 seconds)
    (32/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.404588755 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.969081663 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.554127548 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.62026086 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.038458353 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.971145009 seconds)
    (38/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.461335091 seconds)
    (39/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.885898253 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.275280339 seconds)
    (41/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.950797269 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.16361692 seconds)
    (43/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.040029721 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.050921274 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.092457721 seconds)
    (46/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.973759503 seconds)
    (47/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.944856777 seconds)
    (48/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.012399941 seconds)
    (49/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.228745753 seconds)
    (50/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.045575863 seconds)
    (51/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.372210832 seconds)
    (52/309) benchmarking ("sort", Bool, false)...
    done (took 2.160262828 seconds)
    (53/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.392640953 seconds)
    (54/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.277756884 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.025427841 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.040201556 seconds)
    (57/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.282885986 seconds)
    (58/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.25528184 seconds)
    (59/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.82393365 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.621721276 seconds)
    (61/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.055996039 seconds)
    (62/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.133034036 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.234689406 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.186753388 seconds)
    (65/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.347685371 seconds)
    (66/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.026974082 seconds)
    (67/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.100688077 seconds)
    (68/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.967682676 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.496064077 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.129697858 seconds)
    (71/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.946545758 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.951152604 seconds)
    (73/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.130437992 seconds)
    (74/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.182533807 seconds)
    (75/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.062353065 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.951009843 seconds)
    (77/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.352558055 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.385612113 seconds)
    (79/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.053134878 seconds)
    (80/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.08467764 seconds)
    (81/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.333587885 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.965194527 seconds)
    (83/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.968870734 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.251350585 seconds)
    (85/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.322087551 seconds)
    (86/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.147648189 seconds)
    (87/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.071769837 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.113101403 seconds)
    (89/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.181997877 seconds)
    (90/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.127503318 seconds)
    (91/309) benchmarking ("sort", Float32, false)...
    done (took 5.652388273 seconds)
    (92/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.965170335 seconds)
    (93/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.982726249 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.822539313 seconds)
    (95/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.085586394 seconds)
    (96/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.950123192 seconds)
    (97/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.199356423 seconds)
    (98/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.1539612 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.132973585 seconds)
    (100/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.064831737 seconds)
    (101/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.093191121 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.274852883 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.061780991 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.964109923 seconds)
    (105/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.026634435 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.432325411 seconds)
    (107/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.206223826 seconds)
    (108/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.244477258 seconds)
    (109/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.950150234 seconds)
    (110/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.111820289 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.924510597 seconds)
    (112/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.957187923 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.235897055 seconds)
    (114/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.955995864 seconds)
    (115/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.07987062 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.345288197 seconds)
    (117/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.974910079 seconds)
    (118/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.149112141 seconds)
    (119/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.099377192 seconds)
    (120/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.282124463 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.011264147 seconds)
    (122/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.092204042 seconds)
    (123/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.9569388 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.085169974 seconds)
    (125/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.162488752 seconds)
    (126/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.422762678 seconds)
    (127/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.950552163 seconds)
    (128/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.308963628 seconds)
    (129/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.973038525 seconds)
    (130/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.079838123 seconds)
    (131/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.97169752 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.950627516 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.150674206 seconds)
    (134/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.841496622 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.037183104 seconds)
    (136/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.850012895 seconds)
    (137/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.012682783 seconds)
    (138/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.060413428 seconds)
    (139/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.983064927 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.835839049 seconds)
    (141/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.219534571 seconds)
    (142/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.950176166 seconds)
    (143/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.054214464 seconds)
    (144/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.719510054 seconds)
    (145/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.249045357 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.291417657 seconds)
    (147/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.972843922 seconds)
    (148/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.356156119 seconds)
    (149/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.244134859 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.086162227 seconds)
    (151/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.22161206 seconds)
    (152/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.954270631 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.976624825 seconds)
    (154/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.127744188 seconds)
    (155/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.051022935 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.255613151 seconds)
    (157/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.235863028 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.307528863 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.303137748 seconds)
    (160/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.258707354 seconds)
    (161/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.038774418 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.281685276 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.969806813 seconds)
    (164/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.037071239 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.270058484 seconds)
    (166/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.278192589 seconds)
    (167/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.459219826 seconds)
    (168/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.459722329 seconds)
    (169/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.97551181 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.093898753 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.959177509 seconds)
    (172/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.467006525 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.991646429 seconds)
    (174/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.954131429 seconds)
    (175/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.239969803 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.736406373 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.960888553 seconds)
    (178/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.483518891 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.061132968 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.093662908 seconds)
    (181/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.116539682 seconds)
    (182/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.960422704 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 8.49582005 seconds)
    (184/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.534632752 seconds)
    (185/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.953753246 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.120954643 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.343879048 seconds)
    (188/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.083292046 seconds)
    (189/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.973754513 seconds)
    (190/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.13073428 seconds)
    (191/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.212566035 seconds)
    (192/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.955563423 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.30450891 seconds)
    (194/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.266911687 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.11567783 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.341146334 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.970065954 seconds)
    (198/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.435961504 seconds)
    (199/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.14015434 seconds)
    (200/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.243717202 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.900785222 seconds)
    (202/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.523169419 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.250967077 seconds)
    (204/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.389340992 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.956981652 seconds)
    (206/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 3.83953679 seconds)
    (207/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.353834823 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.021268654 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.163765217 seconds)
    (210/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.977110436 seconds)
    (211/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.756334621 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 7.03040509 seconds)
    (213/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.958258858 seconds)
    (214/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.902045098 seconds)
    (215/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.148336257 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.354061252 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.183116043 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.982289705 seconds)
    (219/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.525782006 seconds)
    (220/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.23520003 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.20883466 seconds)
    (222/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.022860822 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.257586692 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.055165029 seconds)
    (225/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.628869267 seconds)
    (226/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.95451904 seconds)
    (227/309) benchmarking ("sort", Int8, false)...
    done (took 4.849621023 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.829055906 seconds)
    (229/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.044666341 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.118028212 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.977253946 seconds)
    (232/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.052953239 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.885708294 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.448251414 seconds)
    (235/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.087056624 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.276485257 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.72659268 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.96457688 seconds)
    (239/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.50803277 seconds)
    (240/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.373841189 seconds)
    (241/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.962159767 seconds)
    (242/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.042217397 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.03335318 seconds)
    (244/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.018831141 seconds)
    (245/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.086429703 seconds)
    (246/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.274936996 seconds)
    (247/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.053924615 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.955585515 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.100785013 seconds)
    (250/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.216891485 seconds)
    (251/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.95813601 seconds)
    (252/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.676872998 seconds)
    (253/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.958041386 seconds)
    (254/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 4.610138077 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.091756436 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.668731886 seconds)
    (257/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.063467122 seconds)
    (258/309) benchmarking ("map", identity, Float32, true)...
    done (took 3.824695359 seconds)
    (259/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.045243022 seconds)
    (260/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.956661344 seconds)
    (261/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.451658155 seconds)
    (262/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.365170694 seconds)
    (263/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.545312425 seconds)
    (264/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.191349019 seconds)
    (265/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.962250275 seconds)
    (266/309) benchmarking ("sort", Float64, false)...
    done (took 5.686176054 seconds)
    (267/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.049033458 seconds)
    (268/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.229281959 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.181883408 seconds)
    (270/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.645323756 seconds)
    (271/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.050302232 seconds)
    (272/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.363257806 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.961378554 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.172879736 seconds)
    (275/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.961503721 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.021705456 seconds)
    (277/309) benchmarking ("sort", BigInt, false)...
    done (took 6.961070872 seconds)
    (278/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.978510667 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.961149022 seconds)
    (280/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.958508131 seconds)
    (281/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.690977851 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.081550441 seconds)
    (283/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.355348252 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.617715724 seconds)
    (285/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.388275597 seconds)
    (286/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.987282494 seconds)
    (287/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.647046595 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.358803356 seconds)
    (289/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.963483366 seconds)
    (290/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 4.003605503 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.030460378 seconds)
    (292/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.962476207 seconds)
    (293/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.888518155 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.155042605 seconds)
    (295/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.094959686 seconds)
    (296/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.105370863 seconds)
    (297/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.83990098 seconds)
    (298/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.086117046 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.569806976 seconds)
    (300/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.640291629 seconds)
    (301/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 7.059711446 seconds)
    (302/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.998916525 seconds)
    (303/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.41858074 seconds)
    (304/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.255078832 seconds)
    (305/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.978962879 seconds)
    (306/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.220543837 seconds)
    (307/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.261332017 seconds)
    (308/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.968376836 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 4.082282814 seconds)
  done (took 1036.174168015 seconds)
done (took 1038.140944021 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.987658418 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.982200155 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.964112656 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.98584856 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.078284732 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 2.007426592 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.978700659 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.969815472 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 2.015125261 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 2.015641636 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.96283976 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 2.006035311 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.969168425 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.96592554 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.967289556 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.982930839 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.265259861 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.991396756 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.983713396 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.977796432 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.983417077 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.963787193 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 2.015073665 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 2.006318252 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.970619694 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.97073317 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.969239486 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.988167982 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.079709689 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.969528674 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.971433529 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.978390925 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.262983306 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.989938871 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.964947469 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.98598227 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.979412222 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.980141773 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.97169152 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 2.00090988 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.399243556 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.97081508 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.970946924 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.968405906 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.968245978 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.974442927 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.968603214 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.975555508 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.984272281 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.983752456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.394116255 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.987283933 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.969640899 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.96663198 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.981460647 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.968242865 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.970514504 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.984720172 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.987711964 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.984851075 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.252941516 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.998887775 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.970723056 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.986592398 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.97863011 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.430204353 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.97220915 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.97474304 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.399569263 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.981968058 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.429214689 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.985406813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.971106683 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.98338766 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 2.003051883 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.266787089 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.990945212 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.968365632 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.980309492 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.967917483 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.980821684 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.982951805 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.974061251 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.968832915 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.988631688 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 2.011467648 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.987318313 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.970136737 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.981140587 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.988219396 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.978477943 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.982729143 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.973194055 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.967346605 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.982562741 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.974565811 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.971653014 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.972274824 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.974600806 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.983801946 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.399540349 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.995258273 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.967468191 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.967048726 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.970523664 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.984620783 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.398587356 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.975389606 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.993831445 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 2.019762829 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.974275743 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.255136749 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.997308982 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.989175409 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.983460699 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.972868929 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.974359152 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.25826939 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.423247446 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.99055333 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.97289426 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.969059782 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.987743965 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.974018775 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.968116212 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.2706267 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.997469754 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.987138981 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.096504753 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.985234656 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 2.005834633 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.972986358 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.975399794 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 2.01942779 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.988454934 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 2.004725004 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.974556014 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.987803226 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.991437011 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.969584465 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.984722698 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.985430001 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.972557051 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.981106394 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.9698943 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 2.017437153 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.989989452 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.986531086 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.993613884 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.095114962 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.969594507 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.256842228 seconds)
done (took 309.215405461 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.047752916 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.96714531 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.08634404 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.969542178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.062974818 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.04242835 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.96926953 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.969713042 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.969452764 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.466517532 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.968732076 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.976674025 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.969176328 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.970284582 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.042106752 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.969659731 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.971727898 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.414603799 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.971259564 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.056738575 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.969050344 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.97115225 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.970299954 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.470914048 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.970237128 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.968661211 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.051361896 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.969972499 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.415845428 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.970602679 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.969326381 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.41398391 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.048990988 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 2.00099459 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.977763834 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.975023584 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.061326876 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.980065222 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.0393141 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.040543407 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.100844834 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 2.002604805 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.970110705 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.971125227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.974224853 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.97271687 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.970916566 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 2.003118037 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.969708041 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.975552786 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.415050683 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.976579722 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.978740345 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.972056088 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.971569463 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.998937615 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.973484621 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.972611052 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.060223849 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.972790233 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.041747433 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.477352074 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.469820393 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.972005452 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.970827455 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.971896147 seconds)
  done (took 192.107250835 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.038410667 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.049930399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.037958271 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.97770251 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 2.021512616 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.040109146 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.976338672 seconds)
  done (took 16.046130347 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.980382747 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.971779502 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.021564011 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.022757957 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.972966477 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.153718658 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.984469128 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.978330887 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.002582467 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.973163364 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.639283627 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.02229671 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.979762763 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.973946116 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.984283566 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 2.028991525 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.974884482 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973933012 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.090702179 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.121278077 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.980340842 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.980935692 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.000801165 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.985807596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.974283453 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.973083007 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.974635636 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.98116184 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.974193925 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.974755015 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.974224728 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 2.025754894 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.975425608 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.973628141 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.973367757 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.973972312 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.973685063 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.973069406 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.974220783 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.973713537 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.973669278 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.974345719 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.975068249 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.974130327 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.973887359 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.999638929 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.97553612 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.973889735 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.974117159 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.974582269 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.000890735 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.974289374 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.975448426 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.980237757 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.019745628 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.98156374 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.975756191 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.974341231 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.975060006 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.975096121 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.975952637 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.124125563 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.024474285 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.975905018 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.02465799 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.13020512 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.975958846 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.975486142 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.97523055 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 2.064194746 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.975274699 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.025426148 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.975842266 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.089417154 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.976281346 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.157110122 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.999703779 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.980628127 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.979855314 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.97581069 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.983338819 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.976625101 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.978832169 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.983211315 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.98150322 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.976741356 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.976734609 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.978716448 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.984920409 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.976727363 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.03022481 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.976495593 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.977022382 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.118045094 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.977777404 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.094130594 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.004865292 seconds)
  done (took 216.30959708 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.985677046 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.98626265 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.980131341 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.994168488 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.978736848 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.980719987 seconds)
  done (took 13.814904981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.981821609 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.980041431 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.977709413 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.97901987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.978898261 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.979203915 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.977878318 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.980652711 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.982222071 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.978686766 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.979683592 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.97937348 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.979970816 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.979037199 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.980167182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.979130136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.980326215 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.980394825 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.978241139 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.978989056 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.187539202 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.9794319 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.979400515 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.982940635 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.981737953 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.979150759 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.991848147 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.97981633 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.97923458 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.987656815 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.982121947 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.978974565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.981397929 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.985546891 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.983118123 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.984297803 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.982312991 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.982136769 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.979381396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.980962748 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.980852595 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.979740067 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.980622125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.982843751 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.982050936 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.986913859 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.984243652 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.993262174 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.981148062 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.981508361 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.982042313 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.981964351 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.981402063 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.981549996 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.984676364 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.987569292 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.985249238 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.981386604 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.983487254 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.984446543 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.984416488 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.982071633 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.985673328 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.984187347 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.989182531 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.981979816 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.984714457 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.985460693 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.982335813 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.982366105 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.982392551 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.981883956 seconds)
  done (took 145.826623424 seconds)
done (took 586.030153368 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.875064076 seconds)
  done (took 9.790146572 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.140132925 seconds)
  done (took 9.057579537 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.502273361 seconds)
  done (took 10.416763466 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.994498211 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.026108018 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.996333972 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.990436474 seconds)
  done (took 29.93074592 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.316106911 seconds)
  done (took 9.229969019 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.991282531 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.988985946 seconds)
  done (took 15.965521939 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.012179419 seconds)
  done (took 8.927377751 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.179816624 seconds)
  done (took 9.106032276 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.998162601 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.986965614 seconds)
  done (took 15.917448696 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.985355563 seconds)
  done (took 8.8994467 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.516956831 seconds)
  done (took 10.51910023 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 7.000866016 seconds)
  done (took 8.958502928 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.040166083 seconds)
  done (took 8.955131358 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.154942656 seconds)
  done (took 10.069830656 seconds)
done (took 167.670268946 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.986639835 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.981138918 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.982195054 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.982619206 seconds)
  done (took 29.847593935 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 2.018076664 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 2.019216007 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 2.026396817 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 2.01812338 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 2.008022587 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 2.009532923 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 2.01894619 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.018376331 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 2.008199843 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 2.015529059 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.018654387 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 2.016379498 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 2.017727387 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 2.02717512 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 2.027648835 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 2.016188017 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 2.018683261 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 2.019337838 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 2.009652379 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 2.027562861 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 2.019270187 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 2.036089018 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.984437067 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.98419871 seconds)
  done (took 50.298389554 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.175672147 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.054940506 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.137293571 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.036124823 seconds)
  done (took 10.319288175 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.983842699 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 2.04900262 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 2.036038906 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 2.030987748 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.035056941 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.089226878 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 2.038055918 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.122272756 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.115054337 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.127268997 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.993472517 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 2.007304083 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 2.009859823 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 2.03251068 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.090392205 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.985457967 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.9848873 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.100655033 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 2.047811473 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.168149449 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.988594039 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 2.04002473 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.036442197 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 2.037852688 seconds)
  done (took 51.066759126 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.986184969 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.994349106 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.993185705 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.988312597 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.98796539 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.987204685 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.994464705 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.99010181 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 2.011338043 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.988580235 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.988163182 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.988553346 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.994125809 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.988786382 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.988476332 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 2.001890093 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 2.002508782 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.989136859 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.992635873 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.996032618 seconds)
  done (took 41.769143115 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.987776215 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.834438291 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.332746775 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.23903544 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.986807672 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.987914949 seconds)
  done (took 32.287719178 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.999115385 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.993965847 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.989230105 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.045685682 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.130092723 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.997361553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.988422343 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.997859252 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.030193144 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.05566957 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 2.006837463 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 2.014254162 seconds)
  done (took 26.168628155 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.987870837 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.9923281 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.991491257 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 2.002788244 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.997095564 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.995773362 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.995753421 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.987670837 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 2.003120242 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 2.004730583 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.99719196 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.999239161 seconds)
  done (took 45.877849106 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.693513552 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063515485 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.988148918 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.862568107 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.44548676 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.534815688 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.882294657 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.712520944 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45638126 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.915435885 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.191269689 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.98878001 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075197221 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.991345116 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260746164 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.38799944 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180026426 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.232958969 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.865173269 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.016577529 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.193051179 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207099804 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.277693058 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989562895 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992184568 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.998361379 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.561196357 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.810672685 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028242953 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.309521042 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.229052002 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.938746689 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047079515 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.993067095 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 2.004633153 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99285048 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995060159 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.263983763 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 7.001925045 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231694883 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065974795 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238521804 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.995736389 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.409347037 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.695928224 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.327731585 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.104283463 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.990509427 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993270176 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.990547206 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.915103881 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073008394 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.994695516 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997197772 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.690777553 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.990304512 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064967918 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.992317757 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195761619 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.799391793 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.683871257 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.994717091 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993341837 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542019036 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.104929346 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.102999803 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782168216 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.377470808 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.412572621 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.088167864 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.991271989 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991981352 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.126856954 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.952325245 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.733257445 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02715999 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.12888803 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.008632043 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.631641068 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287032633 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.449858423 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.549243136 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.912055393 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265716892 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846918225 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976038235 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211752544 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.841987728 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918659947 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211062979 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025890422 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995552664 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.261309104 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779113395 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.106483988 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 2.00613597 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437342207 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013831815 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998024335 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.99408419 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.207779152 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39238458 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022899871 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.122363377 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012749372 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.075519591 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921252132 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 2.00620368 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.994312382 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.072376066 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.999899997 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927054815 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.043692704 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.655089676 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.035974374 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.932956596 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997310112 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.113199248 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037560596 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.947827505 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.246713026 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.30123958 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.665392326 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.022658996 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.110705203 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.392939197 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218568424 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00268365 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.209403483 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522103511 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.443499709 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038778366 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.283106693 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.058723473 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.285978675 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424761885 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070656707 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.790896366 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.618180859 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.210667391 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010901056 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.995660096 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.000554713 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.002597365 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931000826 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.638159525 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.404068009 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.160934049 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.209470471 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.320059522 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.982802826 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.939355708 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304103813 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132468032 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008227581 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.664005052 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.412908601 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.830460135 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.022995264 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.130745311 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.346977256 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.958745755 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009915068 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072926615 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012764287 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 7.00923009 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.393749374 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.357615356 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.999397882 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.998748315 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.946316599 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.005730177 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 2.000648686 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530269451 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.969528731 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.004401653 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.0127807 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.874917436 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073843191 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 2.003332293 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.003373916 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.534370432 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.517554559 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.008637363 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.660421826 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 7.012857345 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.178676505 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.275760021 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.392904123 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125640296 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.700995877 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.451587781 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.111894057 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.703478641 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.928955098 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002385964 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.944081403 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003302218 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.004148239 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.006267851 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.187799589 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.282574978 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304822224 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.475576873 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.069063049 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205436319 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.747081325 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.953388849 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.003860656 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00759211 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 2.004447118 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000982229 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.510885907 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.295301409 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.115626542 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034190186 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.00689672 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.130657485 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.014479235 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.92906469 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.00405091 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.006195956 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467047772 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.034256477 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.951507611 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.342243223 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.909808302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120525127 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050327186 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.013891433 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007119908 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.737550803 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.046307986 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.928973716 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425984279 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.037908908 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.779028661 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.534161293 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.55987423 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306864848 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.329571693 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.336238427 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.074200151 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216964891 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.088667439 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056697585 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.09379028 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.940138066 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.928758864 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.672889506 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341400285 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.273411072 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015847883 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220902722 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735131592 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232473047 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.033757704 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.678735778 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31807853 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982829017 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01938595 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.335095041 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109481622 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084965729 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.007111966 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.953313815 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.333400229 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041795173 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.704609813 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014556495 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.355896245 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.431738678 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.216162908 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.388718128 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210848264 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.009778801 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361595199 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.20604232 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.043088568 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.009865571 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.99444368 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.220934528 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.583561086 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.859876558 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007514471 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.161598389 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.294520364 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.914259605 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 2.007714232 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.152901209 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262333624 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003421465 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.561013424 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373705036 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.100704089 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060542294 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.229739154 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.679502368 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307659896 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.560277235 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.484101166 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008417686 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.924339363 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.698282365 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.203872323 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.007790319 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.967658192 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.20666487 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230040493 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.682869299 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.22073198 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.240159397 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.009278717 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272404733 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072557083 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.095988325 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.321627267 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.427733572 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.247662985 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.230602317 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547711157 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.220858435 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.473628829 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.166096839 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.007398275 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207203957 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220766261 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.219224323 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.405002683 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176763127 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.713719955 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 2.010506774 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.21116487 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306669427 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064934489 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.408413904 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.17478443 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.090340124 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010661525 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071571103 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011294158 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.015717898 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406772461 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.530129386 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.01981109 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084838947 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.136973701 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.5127263 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.009489344 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 2.013535955 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284403262 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.359924367 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.34374853 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.991267023 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.006935221 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.010959836 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138551498 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.93574718 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013610493 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27768679 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 2.010878957 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452864807 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.15807437 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021996024 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.335981428 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.393143855 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.680507243 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971921896 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014482293 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.225260593 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.308092508 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.1800482 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122994449 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.280788997 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.335892591 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.041074151 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.403377836 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.247081353 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.012658388 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.884272178 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.010972573 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137900328 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.20638041 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288637472 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.517005479 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.740904212 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27797505 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.853173524 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.012863127 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.798815337 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278604935 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282851085 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.064989407 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074431851 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014862835 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449034901 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.73215435 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142717422 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.874399636 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936156008 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.014967644 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.325690117 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.25393148 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.719804897 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014685909 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.291538144 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315805059 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2912726 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.063219645 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.877126525 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226833899 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013444236 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 7.028044088 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.264282234 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.229160725 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25338526 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014062992 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.020352912 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.818738003 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.938403794 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.013934962 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068387167 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238474425 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031684274 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.526968771 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.711431283 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288484536 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058357839 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016100032 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293259083 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.546710513 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.561434171 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019881636 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.223950079 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 7.040920478 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.294308731 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.014622755 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445788931 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316686177 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.013708873 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.540899141 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.258742153 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278535126 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.947698828 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.022172849 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226417439 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.882940058 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.014891857 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.027537725 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451521304 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246215679 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.74956538 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570379529 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.016484787 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 2.016539101 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.450804278 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.048361768 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45123933 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.043383491 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029740171 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.533039074 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.706808754 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.298571153 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.257215759 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.544614509 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.619504216 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.015277761 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 7.013609093 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.018831963 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.93481447 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365261161 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.201012722 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292216689 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.042205616 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450889578 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.048525841 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.403202828 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127974052 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.167166979 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052294493 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.535081117 seconds)
  done (took 1724.756021407 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.034015275 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.04453065 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.04527148 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.025018771 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.030089473 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.038804363 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.075579779 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.067284437 seconds)
  done (took 58.306779985 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 7.014373662 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.028796165 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.017540717 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.014567629 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.017118844 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 7.014110993 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.166372007 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.020419997 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.017512019 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.018232951 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 7.015665602 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.014149876 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.290143947 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.031967355 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 7.025110299 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.015099501 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.01894058 seconds)
  done (took 76.687081524 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.014277938 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.245289332 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.074080742 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.014397342 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.957321377 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.019475384 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.967454428 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.0322195 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.010392224 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.228899957 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.302501558 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.011186808 seconds)
  done (took 91.822240261 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.004152017 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.999648878 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.001548042 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.997436946 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.996719586 seconds)
  done (took 11.933032205 seconds)
done (took 2253.101387513 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.230438763 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.053254668 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.096102551 seconds)
  done (took 6.078475576 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.145647014 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.191997215 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.303836571 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.061888408 seconds)
  done (took 10.635755019 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.302385453 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.383333019 seconds)
  done (took 6.609392723 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.346100936 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.01355723 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.404706113 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.995407287 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.99535597 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.994678445 seconds)
  done (took 22.9139066 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.991214385 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.989045979 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.988778413 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.988928619 seconds)
  done (took 9.878257963 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.989369555 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.720850835 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.988283242 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.999804715 seconds)
  done (took 21.61816656 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.182999857 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.097694601 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.128253463 seconds)
  done (took 8.323415408 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.129458716 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.844564932 seconds)
  done (took 6.881726124 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.131957051 seconds)
  done (took 4.037208066 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.014233885 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.250799652 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.454600369 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.951836474 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.708685496 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.13432469 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.390484786 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.279114308 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.428575687 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.472248478 seconds)
  done (took 26.99647028 seconds)
done (took 139.909022684 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.548674195 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.044932845 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.226631863 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.409010085 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.250717625 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.223073699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.223904106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.405964779 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.075267164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.069455688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.397292013 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.240187525 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.169809156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.036780447 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.175587268 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.035100464 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.236974304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.398640312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.063296718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.290725069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.224763222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.035452293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.237418497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.036895822 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.231050702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.185538338 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.590150902 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.027130748 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.208150238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.57310392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.15766284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.428818708 seconds)
  done (took 173.407166031 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.001175425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.001124633 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.991342154 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.991778772 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.571275279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.989629288 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.991610897 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.994982638 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.459034365 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.456293063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.98632613 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.564405405 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.982874925 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.983860123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.982225599 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.986209586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.627044023 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979668655 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.986305466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.977685053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.979823889 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.398031242 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.978344266 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.408314313 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.619388657 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.975803388 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.978511319 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.978788345 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.977409554 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.976909506 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.977372099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.978530171 seconds)
  done (took 213.658762717 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.980273104 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.979413993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.980425385 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.98257656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.978551784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.978044158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.981272433 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.978136367 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.832383503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.808732135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.977069001 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.979440315 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.981757065 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.978320113 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.976571382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.978385101 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.976925968 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.979598312 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.004904802 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.977489305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.979307963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.680263754 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.97706392 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.753243927 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.980229828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.980480897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.980426817 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.978427264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.979311001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.97937514 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.980879859 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.980411754 seconds)
  done (took 224.429167567 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.220170457 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.983518923 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.983386352 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.901268237 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.98597526 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.983129864 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.971350045 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.229524826 seconds)
  done (took 20.168851703 seconds)
done (took 633.641333638 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.376419321 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.210225333 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.171505146 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.003824722 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.262513757 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.050514791 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.001317796 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.072991483 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.837015591 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.084084504 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.638688617 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.029193403 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.732013896 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.033591123 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.124189739 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.06172818 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.595673566 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.697805107 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.150110335 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.071647629 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.194515918 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.951356264 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.081109089 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.881127873 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.652430266 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.990009283 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.087462248 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.599146903 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.014448498 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.16044107 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.694614423 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.348878827 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.019935101 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.998044347 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.048821205 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.032064022 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.269367246 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.017421365 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.130412014 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.745628634 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.07706601 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.747741845 seconds)
  done (took 107.856456035 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.989476602 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.987890669 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.98532801 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.983731415 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.993924808 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.983369012 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.986553121 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.985147738 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.986164389 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.985961696 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.985703753 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.994544579 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.984869808 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.994578271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.985117581 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.983749066 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.985885858 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.995115402 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.986846554 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.985439979 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.986693259 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.98678358 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.981935335 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.986470967 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.985698173 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.987813955 seconds)
  done (took 53.587545326 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.981527423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.138249855 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.229289093 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.002183799 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.983013407 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.983151171 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.000082217 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.984935972 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.984989057 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.983610435 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.070699767 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.986822487 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.998942818 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.23064924 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.998689628 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.980935954 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.983126645 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.983976798 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.146604338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.001195242 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.001295159 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.985500085 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.000610608 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.994125054 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.982672499 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.983278023 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.987630011 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.42576119 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.994124963 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.072101269 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.056017732 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.005438293 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.364598983 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.234803389 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.041511473 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.992685974 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.981601884 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.080337608 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.987083149 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.981503643 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.002625004 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.985853489 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.231591075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.501012773 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.997783195 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.982623428 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.436323662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.089973954 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.023195613 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994080257 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.234549 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.998614844 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.975515118 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.979424683 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.016427588 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.991773286 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.98082115 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.28148901 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.988227708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.992471489 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.979056343 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.983580327 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14304171 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.986047485 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.132271938 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.98569681 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.984464479 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.972968283 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.225669889 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.989347575 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.506048763 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.99052249 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.971918433 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.070273895 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.134075198 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.452346724 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.989957413 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.146055229 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.368186829 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.997408261 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.982137352 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.399277332 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.998349144 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.976703708 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.97169176 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.976124808 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.968111154 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.011026788 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.982796218 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.411605473 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.501763302 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.288987608 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.990688163 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.975324959 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.964446576 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.272385323 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.969626157 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.961432125 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.200383404 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.506689749 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.974271144 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.966658369 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.471499634 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.97577663 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.980757633 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.964857522 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.215637457 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.973293366 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.001975882 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.958159027 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.962085537 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.9576292 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.973527265 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.962717361 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.954938849 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.455554905 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.06163194 seconds)
  done (took 244.530849393 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.953876527 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.950441517 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.950289283 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.951955937 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.950833956 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.955814116 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.950309592 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.950877348 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.952242794 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.951295016 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.950048285 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.951361981 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.952391705 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.954583167 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.997072057 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.953999076 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.5551641 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.954276061 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.951654138 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.953656582 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.593740303 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.955600182 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.955243858 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952796587 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.952479181 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.95078823 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.953907823 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.994127636 seconds)
  done (took 169.88852927 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.952949525 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.066759661 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.973305975 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.981482349 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.960848266 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.953486529 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.052270596 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.975079104 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.960062983 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.953135803 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.95413387 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.013394983 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.970635215 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051850071 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988531068 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.061265351 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.063371901 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.965583021 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955107812 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.954376537 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.982341876 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.9640195 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.014093683 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.084378587 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.978048538 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.066249977 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.976588083 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.954485225 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.954495787 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.067253419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.979644905 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.014456899 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.985922595 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.972596305 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.071595309 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.073268285 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.064008987 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.064456778 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.967347993 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.954806521 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.954648244 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.958126267 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067223509 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.976297281 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.957691036 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.073037091 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.976267176 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.955736681 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.955606851 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.956589896 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.96845197 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.973773714 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.019960089 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.092774647 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.993174884 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.978696124 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.054630515 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.099955244 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.955461131 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.054657096 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.969015882 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.069929316 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.978942635 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.958077235 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.958643791 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.959400145 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.986241529 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.063481512 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.07066582 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.969221165 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.055510547 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.997669305 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.964602519 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.958041083 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.96078969 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.070426145 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.076732235 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.997522276 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.994275753 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.988645662 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.966908536 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.958281552 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.959450614 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.976339558 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.9631715 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.072083141 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.076341152 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.96915934 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.958095283 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.959089414 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.958652739 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.983620239 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.078220727 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.994459407 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.065154202 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.02851058 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.036738619 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.977802314 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.972195544 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.96354931 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.020312709 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.978286044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.969364346 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.287074571 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.017676526 seconds)
  done (took 212.148085739 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.340982427 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.010581385 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.015006017 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.291021827 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.358868839 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.942538069 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.010515116 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.008559788 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.048728279 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.230813971 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.088540378 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.024961482 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.993885481 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.981491064 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.008856843 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.041528473 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.015339031 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.34231755 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.235735932 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.450956763 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.001707122 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30149171 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.367051025 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.596837948 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.061691273 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.409687441 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.601841302 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.174499574 seconds)
  done (took 65.855741166 seconds)
done (took 855.789009058 seconds)
SAVING RESULT...
DONE!
