cset: moving following pidspec: 8170
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246988998 seconds)
loading group "string"... done (took 0.569512508 seconds)
loading group "linalg"... done (took 7.189910208 seconds)
loading group "parallel"... done (took 0.158553342 seconds)
loading group "find"... done (took 1.114242458 seconds)
loading group "tuple"... done (took 1.759067507 seconds)
loading group "dates"... done (took 1.248530773 seconds)
loading group "micro"... done (took 0.222107087 seconds)
loading group "io"... done (took 0.917579517 seconds)
loading group "scalar"... done (took 36.256297223 seconds)
loading group "sparse"... done (took 11.110866062 seconds)
loading group "broadcast"... done (took 0.909624225 seconds)
loading group "union"... done (took 11.841543524 seconds)
loading group "simd"... done (took 4.143873886 seconds)
loading group "random"... done (took 8.544837634 seconds)
loading group "problem"... done (took 1.858319327 seconds)
loading group "array"... done (took 19.826647569 seconds)
loading group "misc"... done (took 1.664051062 seconds)
loading group "sort"... done (took 3.088979571 seconds)
loading group "collection"... done (took 16.691469217 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.488737493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123931804 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115014397 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119265009 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.134536306 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114764565 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123709319 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083983105 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.791504057 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.145856921 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119364518 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.417148677 seconds)
done (took 5.093646245 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173268547 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08327515 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081514057 seconds)
  done (took 1.293098864 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06533057 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122405452 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065935458 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066249771 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066534028 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065831751 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066497444 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066141111 seconds)
  done (took 1.649746751 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073498764 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069220924 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.069018088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067867406 seconds)
  done (took 1.4117256 seconds)
done (took 5.731773663 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.768477456 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.202872956 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183835513 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401810646 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128791509 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.157708538 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647624681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.335946917 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183874844 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081627965 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104751591 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.319950495 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107018166 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.62635804 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075370773 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090154287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136179526 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417355796 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067633777 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081788108 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08894368 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12776339 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085402377 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074461112 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144068082 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067677889 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130569999 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080559935 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.06654689 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.208328504 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172455625 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658891004 seconds)
  done (took 10.194053649 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096154142 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097406534 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068691921 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137103226 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096659094 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.06948322 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070799716 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.06714855 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087518134 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128294533 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088835059 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101507609 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065366903 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068771288 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084742509 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203608483 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080431192 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08143148 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070583704 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075316027 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116761437 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078034939 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078054256 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077528022 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127900746 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179772672 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098246512 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097321402 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066730705 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080920044 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115008022 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125722858 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067361245 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.06717627 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124765286 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094312445 seconds)
  done (took 4.600664319 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.934320239 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.139978431 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090993995 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.131557895 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064908057 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.107526476 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065527728 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080823845 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.203176283 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.294277212 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575736394 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110926483 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083866539 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100395413 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067485314 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068246175 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06637027 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.362309281 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.122362369 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104099813 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081787954 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070627636 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06888976 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342942356 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067833836 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063830843 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068332151 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058582084 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123643549 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068387666 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.925723829 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124406962 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066267619 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100641101 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169213745 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087578092 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272746037 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06811678 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064239279 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.15013978 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069822988 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.090700259 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068471059 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083377313 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103916204 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113137377 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065641292 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067149181 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162287192 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065089634 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078149156 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.982838239 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154296749 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.0764606 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.06446688 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248761398 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086452297 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069043289 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064849239 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17068519 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.13602728 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064197329 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067195247 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067028528 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068090803 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069667645 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349292508 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06603935 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.705562239 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070766898 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077192192 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068987428 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069578152 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072647648 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072619147 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085756038 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066132248 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075358972 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065954128 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066143107 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066657344 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084268442 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063727942 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360070632 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066552543 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06851573 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064655651 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085633885 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096709407 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066619218 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065011886 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10049311 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.176155878 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066603767 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106425694 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067409277 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084375885 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069061578 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115581008 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065988602 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.078135914 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06810912 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096501232 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07016205 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099205587 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081799692 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068566526 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.399676156 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065356005 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064988052 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067810051 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065566662 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067464252 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066729115 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.07953575 seconds)
  done (took 20.838529588 seconds)
done (took 37.698562251 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.27252364 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075044715 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075941692 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075392391 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075379205 seconds)
  done (took 1.796165232 seconds)
done (took 2.99969257 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120014322 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099187654 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064480051 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095515918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064274771 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100530644 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098717029 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080683887 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099356957 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06429706 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096249248 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0641744 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064134283 seconds)
  done (took 2.334066412 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083027977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083547956 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070287904 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08204564 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063936013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082289205 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08077844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088260389 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080750217 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072037664 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063526406 seconds)
  done (took 2.048645038 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081433853 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083423592 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069463416 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081307474 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06384943 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081453399 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080876926 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085270025 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081199278 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073099498 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064208683 seconds)
  done (took 2.038545811 seconds)
done (took 7.612807269 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077323339 seconds)
  done (took 1.26200664 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.597341642 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.103377889 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081715895 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112998715 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183921587 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120732553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283687848 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087033744 seconds)
  done (took 8.937378705 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101469632 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071524638 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072069138 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070256879 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069277881 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071188468 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067986363 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068500263 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07067364 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071871333 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068509152 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071952008 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068344448 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071924047 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069305972 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.06936896 seconds)
  done (took 2.410969385 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091988683 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09079054 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07353116 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074984386 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071870635 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072601471 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074100974 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073666232 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070851076 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072123165 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074644692 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07401984 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071621416 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065156483 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073983952 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075685259 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070759587 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074102226 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075042291 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075129871 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074540673 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064493081 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071364864 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07379588 seconds)
  done (took 3.074059555 seconds)
done (took 16.878049918 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112516999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071700769 seconds)
  done (took 1.378394763 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080770869 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082618478 seconds)
  done (took 1.363365956 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083430346 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065482145 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090490144 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078162254 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0668138 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065808525 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08801279 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066453135 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066087847 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066121725 seconds)
  done (took 1.938069248 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068469322 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078158225 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071359671 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080803695 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074280518 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064759293 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072518297 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067885296 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078318834 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062752123 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071372129 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082053813 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071270015 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084051565 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072572032 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06820317 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070671941 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067650478 seconds)
  done (took 2.509760417 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065547591 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066986637 seconds)
  done (took 1.338716032 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066588917 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063631274 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067248386 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066403205 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063492099 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06262395 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063413621 seconds)
  done (took 1.6563931 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38480324 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110251308 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.29464214 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070776557 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081591005 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249791106 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065108175 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070571532 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070776654 seconds)
  done (took 2.644119021 seconds)
done (took 14.036916006 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078415863 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084941092 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09433697 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.365865214 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091859649 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065895912 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113742403 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191304683 seconds)
done (took 2.303885672 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209912081 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.603664009 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.382163198 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194951932 seconds)
  done (took 2.390948163 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325855897 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087080694 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.05895089 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066298698 seconds)
  done (took 1.753956442 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065665883 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069151867 seconds)
  done (took 1.349082543 seconds)
done (took 6.918158561 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.082612797 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066088806 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065456762 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066375363 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063279291 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06626897 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065848881 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063395244 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06319235 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065535895 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068320582 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065563042 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065779829 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065676625 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063344354 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063155771 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065825151 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063047408 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06353483 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066281717 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063596074 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065792623 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063224915 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063300664 seconds)
  done (took 2.820154284 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08403789 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066355463 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071806077 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071662527 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070827523 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071154975 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071102646 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066295575 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071398926 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06831646 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070131585 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069991808 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067788904 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070335641 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067844426 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069959338 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07119434 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066100403 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067805758 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070079716 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070741229 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066254501 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069907794 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071085692 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069555008 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06937669 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067959467 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066351108 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071439127 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069704006 seconds)
  done (took 3.318148798 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069451602 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063275122 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063901282 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070817047 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064095088 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065113519 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.0630908 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063977918 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064300417 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063283587 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064795281 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063453435 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063388047 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064432957 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064357922 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067008209 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078637252 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063857341 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063409286 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064172822 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066698229 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063662875 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063560281 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063534476 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063442759 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063412046 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063654451 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063385877 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.06414704 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063594095 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066653394 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067031352 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06347122 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070326288 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066767864 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063096327 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067221508 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062976036 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063711403 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063046761 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062966584 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063298258 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063077643 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.183047051 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063184438 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064812345 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06399339 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064829244 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063861675 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065873649 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063104475 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063025132 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065426791 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064166362 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067017401 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062671574 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063952946 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062747585 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064122007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06286963 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062793615 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062738968 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065239844 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063590607 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077626062 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069613936 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06359955 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066387306 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064015568 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065696639 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064745386 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076153299 seconds)
  done (took 6.025753471 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091082336 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086977429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065438229 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065132535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061829273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063878763 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067489446 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06412593 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06525664 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069884489 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063897436 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065122082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065081428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076355789 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063876866 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065071194 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070362925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061985689 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064068337 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067299064 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063922489 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067206117 seconds)
  done (took 2.730936611 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156215524 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070277959 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105510168 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073104212 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067364173 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073031204 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069574391 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069981595 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070021007 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068413582 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06844588 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069833132 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06763489 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068112578 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068101726 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067994122 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070015733 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068358311 seconds)
  done (took 2.602292337 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077436443 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065991247 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086517529 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065783371 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066092251 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068354859 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070470984 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074500036 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067970338 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06572693 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074110961 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068270904 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0681649 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065856777 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068087535 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065738083 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067847103 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065819907 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074044274 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070349093 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070459939 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074082763 seconds)
  done (took 2.770512056 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079246193 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067703072 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081927432 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068635034 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06213736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064172437 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069941259 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065891807 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070388683 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067790599 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065833022 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064206352 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069347605 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065546953 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06907924 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065622618 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067227791 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066003221 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067281759 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061559192 seconds)
  done (took 2.590770617 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086175296 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06834197 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067784822 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076266729 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067491366 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067283652 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075094483 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06731214 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067331885 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087151088 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066921742 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067182027 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075403544 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072336065 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067485936 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075611553 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07540465 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075318632 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067518312 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067080226 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087291763 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06717328 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074997971 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067368453 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067204421 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066856387 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06699599 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072495138 seconds)
  done (took 3.243599157 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066683502 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065661097 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063382515 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063337377 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063807886 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063449032 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063675987 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063725267 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066164614 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063165309 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065622174 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065742729 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065419917 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06544771 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065730112 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06582292 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06582959 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063431868 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063183375 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063223539 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065877177 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066235692 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066052694 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06327511 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063283904 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065590128 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063380648 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063231458 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065510823 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063239393 seconds)
  done (took 3.173160976 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075378563 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072384865 seconds)
  done (took 1.383595922 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062861432 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08077921 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063609976 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069284767 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069780643 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066089668 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073242006 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069939362 seconds)
  done (took 1.788480063 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081078276 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076640228 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068140545 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080538147 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076498173 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082985719 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131934595 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066854315 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072725042 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064186006 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080143935 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065662712 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071900035 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066066413 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071863885 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072200984 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064106472 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072145004 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06827326 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064875499 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067221142 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075157646 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068625782 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061746371 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067530856 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088318568 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077233355 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066053491 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069088399 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07339744 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071817401 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060408696 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066213542 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066835607 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064381382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075523345 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081125055 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068788184 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074449827 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066917385 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076641557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06156512 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070369161 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072818683 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076015313 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066263743 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066812229 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061025153 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063831698 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068154995 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061295748 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066114038 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060797967 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075474596 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069634904 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076616279 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064824933 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067887694 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068844817 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069129652 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07261578 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067950322 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069053068 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065679739 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072996467 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070410263 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075147443 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06197204 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062511631 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064265855 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075566226 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088373244 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072262579 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06663104 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066826158 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063946902 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069457021 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067138605 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072098253 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072576121 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066073956 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072179736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073493394 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066305268 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068641595 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075038333 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064407768 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069374609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064062088 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082549409 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06493924 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064133049 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064182748 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076544507 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069636151 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065984765 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064431802 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073489125 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060403067 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067486111 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066715509 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066497934 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075549911 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070067038 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070417623 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073679651 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07248591 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065133865 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067781315 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062277813 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065809421 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06411037 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072239253 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059424987 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067796469 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065671864 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065341532 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199126502 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064905245 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067018862 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074689081 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072346814 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065458568 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06299967 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069498944 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066152696 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069696381 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074523977 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065092206 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061116242 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061396449 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069625674 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066434639 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070503337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071379397 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070005742 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061072014 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064563743 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072199833 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074890271 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066820617 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067509212 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072540849 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.0681511 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065898681 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072442661 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06905889 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065958665 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072039427 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067622344 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062083063 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070337994 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069692651 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065991912 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070488387 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070114828 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068842213 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06728938 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06562473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074314792 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067990843 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065170467 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066943368 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064915284 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076758324 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06856896 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061727595 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063109871 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076048998 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064576089 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066585274 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065308901 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068901547 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066960442 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064703269 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065665438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068404837 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076860979 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069877519 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067643432 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072258088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077890633 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065713145 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068568455 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065489528 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067400554 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067473993 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075018925 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072378911 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071139937 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068508528 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062922803 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071912057 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073915327 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066113911 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064058998 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06544871 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070922693 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072199494 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07038805 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067300333 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06448966 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066804961 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069493302 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06849377 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065740799 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065229422 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073185494 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064636942 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073356727 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067055821 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075941522 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069382588 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061543198 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069554479 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064269655 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072085091 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061278976 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064771035 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065277727 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066841857 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065184081 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068211062 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060217173 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072520459 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072108966 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065585665 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064514298 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065038126 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07183119 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067001892 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068998086 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068985943 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071032946 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075316182 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064466495 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068384645 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075016179 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064819928 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.188657274 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074071242 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065378422 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065697314 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06523496 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065970267 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069450265 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076018247 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073868838 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06135431 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069579175 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065284434 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065638343 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062166737 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071456524 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.06959844 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068157088 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073855437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067425694 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066605236 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070933856 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066006399 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068178938 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068084912 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069949943 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067812004 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068658375 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066114561 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069625761 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065637033 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064113184 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06941194 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066902037 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066960736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07260622 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066136459 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066540616 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069351806 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067503609 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06761148 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066756861 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065471101 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069798103 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067441411 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067249262 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069570875 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061687802 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074006999 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067237366 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073896466 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067393969 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063780769 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074345289 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069105743 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072396141 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067545232 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067564451 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067777312 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066377215 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069034905 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073461108 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064751837 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077313849 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0744146 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067182289 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069536016 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067167839 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068156597 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065292896 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067725846 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067601808 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066960857 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066013596 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071310878 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069793395 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066862029 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067750547 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067394969 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066479313 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067161196 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060673088 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065206935 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065636192 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06613723 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076072199 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067188013 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066105095 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065502563 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067352134 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065498369 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06342399 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074909247 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076103321 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066983178 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07366788 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.066097589 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068306516 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077147193 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060961205 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064681364 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06472963 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064859223 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074553622 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06735169 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075877245 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066658298 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065925571 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064041826 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066566941 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.06460695 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06059161 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063620495 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069109643 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064650667 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064513765 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065449529 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067924095 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066540531 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074807647 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064913469 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066446877 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06564306 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062673238 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064498231 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064552307 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068153571 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065641162 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063463115 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062450487 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06477387 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066033709 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066938889 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064569197 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.06679912 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074487486 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064518673 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.067673225 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068499593 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059932668 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067604297 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064623191 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064795429 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064547439 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.06856111 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068229168 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065933001 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073581364 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.06457374 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065701313 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064927353 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063145694 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.064481895 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064333082 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064746094 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064215638 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066040905 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072967065 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062900624 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068061139 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065351683 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.065679656 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071582485 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065940302 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068218721 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071249859 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065482291 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066662357 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.072820174 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.068920884 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06714481 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06482362 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066449367 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06957457 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063563168 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.070393692 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064420919 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.064305697 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06553384 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061856628 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063375195 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.063573963 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062941446 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069676056 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.064818775 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063799617 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063402859 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.061457702 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064899583 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067307817 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071209306 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06729819 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066862392 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059390938 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061548199 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064462367 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062862639 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06526235 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066616007 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069646163 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066088967 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064631796 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063588708 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073117448 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069358268 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067422224 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.062471814 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067340477 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064927594 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066199963 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.065385903 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064378983 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064766364 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.068678067 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06530935 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.063473765 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070623117 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067266095 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064641935 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066195975 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.065605845 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065317861 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059732559 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065372518 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066254535 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.06894949 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06695134 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064553975 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073675094 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.062492849 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064906739 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066408836 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063593078 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.068394588 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060052492 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065912005 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064983737 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065335483 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06013898 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064101677 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.062549128 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066065257 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064203602 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06007985 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074131705 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072787115 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067343384 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063111199 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06290151 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059280785 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059607474 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.304583635 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069460916 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070472971 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079130694 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067516976 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068628139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064107885 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069316788 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071926114 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07158436 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065744015 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063839659 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067790351 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071252656 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.074490956 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067339949 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068291958 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072027225 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070735597 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066078721 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071580878 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065363243 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071703953 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080807904 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06889069 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068793137 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074172911 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076019366 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068211632 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063203132 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069032159 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071444228 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.068475198 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.069438381 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06854084 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083477481 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070417749 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067328977 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066538149 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070772803 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067917896 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075398467 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068450799 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068129101 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072416211 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070223007 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076497876 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07112374 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075168641 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070767016 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070581678 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065761269 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067286119 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066041125 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066468712 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068167311 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068341614 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072970303 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075851002 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066729999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078066764 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075884011 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069522329 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.06418623 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066646822 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066754543 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062399222 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068966377 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065554676 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06461061 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065971503 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065941616 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068639838 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072439899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068121616 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067978417 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066861456 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061455353 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069699905 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069641248 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067259408 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063663083 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067306261 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067886081 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070856532 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070278165 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064877769 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069012092 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069981975 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067452881 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062051085 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073632755 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066438675 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0691046 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065569856 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066982646 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068100749 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070914836 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071757182 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068828044 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069109269 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070578584 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069227712 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064735939 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064489619 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072731232 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064841235 seconds)
  done (took 42.386883835 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102468083 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06438438 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06296903 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062392335 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075270727 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063743882 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062634896 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063513586 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06372859 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065865836 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062855101 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063034465 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071894158 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07886344 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074884873 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06773866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062750479 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064035847 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062858206 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063708989 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072018433 seconds)
  done (took 2.816783127 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074372102 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07125041 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074278616 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07676036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068004021 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071415145 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073364677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071370988 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076983245 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068148954 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077162075 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071736832 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067744767 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067849323 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067861009 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071847449 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076934643 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068140578 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080098159 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073521486 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071750785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073361885 seconds)
  done (took 2.942332075 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067436719 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066597476 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068654042 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062193386 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066085831 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061739256 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069957429 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.065024477 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069956306 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065848063 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065817209 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06601864 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.06840787 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062237428 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066732132 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064652887 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110800839 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070334869 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066591915 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06750264 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062201802 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069406857 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062508824 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063051387 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066517074 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070784275 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067644632 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064845146 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066941529 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065864689 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.06650232 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064890308 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068255899 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067211511 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065739437 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065781437 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066532086 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066534565 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062223039 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065364689 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067411993 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062661723 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066952693 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068006932 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064749975 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064665243 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067973071 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.06643833 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062018687 seconds)
  done (took 4.634763475 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081305456 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110270094 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068519824 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089397583 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081349529 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076457185 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070004724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.09034806 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064116914 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065006044 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082791703 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08092152 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066689281 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071324983 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07346701 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066590466 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068216805 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06592206 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070801911 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066386886 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070863156 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073021783 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081356514 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080447871 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070610023 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065571922 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066227187 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071080769 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079360219 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071308608 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07137945 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071985373 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082277641 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071956741 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065722154 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068762105 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082568294 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066633434 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068687115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064274754 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068566988 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071211145 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073227224 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083047485 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067164784 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071538998 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066284752 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063657215 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079475381 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068561713 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074578056 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081082378 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070330861 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066605944 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071309856 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.08137515 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066571937 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064738321 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069382073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078854617 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064126346 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070160999 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.08000857 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068149088 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073363935 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080342166 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071702666 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07005543 seconds)
  done (took 6.454160395 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075814512 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072972766 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082784173 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081510898 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073061209 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07295048 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072573999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072850398 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.073016142 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078093327 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073287842 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.094076046 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068316643 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075803921 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073322907 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073448477 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073010626 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073122519 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07309951 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073385898 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073043311 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081401623 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073190714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081393517 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.099290903 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068769123 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072723731 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073105919 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081707462 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072985659 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080144445 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073334412 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072948 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081519975 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080490584 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072689648 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065808517 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072706522 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07295873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07270313 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068034825 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08122907 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072464191 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067915554 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072352081 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072036358 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080221439 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079545137 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075138328 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077250557 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07220619 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080323466 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072459293 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072744504 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08062604 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105967027 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080767242 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08083753 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07259984 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080692905 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080587669 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08699389 seconds)
  done (took 6.114160429 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084846789 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075968951 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07695676 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062331072 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064605361 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070738251 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064456693 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064573132 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074880851 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074988638 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077148675 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070270533 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073420842 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077297401 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070818522 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073002523 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07041523 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070433546 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074898231 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070443625 seconds)
  done (took 2.81794879 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074848266 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083349632 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067344589 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072442993 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069413891 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072776668 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069076661 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069210068 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067506398 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069372374 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076619097 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076648255 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067105083 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072535319 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077072744 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072089538 seconds)
  done (took 2.524355705 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075099288 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072706962 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080038357 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067334696 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064655599 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062978081 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066232552 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061771776 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063233682 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078874067 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066331892 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068685087 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066827938 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06525384 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063150505 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069168058 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063048686 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064038467 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06648512 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078684499 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076986985 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065066261 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066721922 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066524214 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066385589 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071980852 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065686724 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063923142 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063229235 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066156117 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066756065 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069548446 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063450137 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063771517 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064776649 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063614199 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065572879 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06622485 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06884965 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065610344 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063849385 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065749526 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066275305 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067441575 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062342631 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066697323 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06250583 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068526456 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064306205 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066623381 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066571661 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068980562 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067065741 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072531509 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068889811 seconds)
  done (took 5.061112212 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079584485 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069831155 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062034749 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064279009 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069072405 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068003202 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069405037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067939148 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068016107 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064848052 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067752541 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069335644 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067960016 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070112388 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06794807 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069905023 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062528106 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067888021 seconds)
  done (took 2.606086447 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071150299 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066819141 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073241644 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06639797 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066058978 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068198475 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062117226 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064896514 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064630198 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066302989 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066286207 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06838053 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064825477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068337324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066026615 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066311334 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068340983 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06480077 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066586893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062613207 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068376324 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065056693 seconds)
  done (took 2.839223112 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072318801 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.092435661 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137680328 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084315427 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.081550772 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078858915 seconds)
  done (took 1.921788718 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091165539 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079330987 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067129447 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089078487 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07369412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067600554 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067719478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068011305 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076371887 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077154949 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067553949 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076335637 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076729977 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075797652 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073389765 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073293894 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067602589 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067690839 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066450925 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084744431 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06805738 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076215224 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067735355 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067436218 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067835323 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075960112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076875377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076689906 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06797574 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076567766 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073662379 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067900199 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076554353 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076663394 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069101201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076562686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067800663 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085022576 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073416435 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075905646 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069019645 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073761986 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076485272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072520479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076173029 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067713469 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072664329 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067920131 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067967453 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086525018 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0735348 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075878869 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073654665 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076677291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076613696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086601865 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077014086 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075604962 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074058331 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079536181 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075959639 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073719917 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075740007 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076827427 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074024846 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075998052 seconds)
  done (took 6.280279899 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082673346 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086505517 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069257321 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077026766 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07614897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067788404 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067920331 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068075738 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068106858 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067626842 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108170346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068458167 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076132397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076329036 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0682832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067974497 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068143272 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075752711 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067602273 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086639591 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068150766 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075926994 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075954366 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075949958 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076640122 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073838044 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068016266 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067944899 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068007584 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068369236 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072612824 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06827083 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076241334 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067507221 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075649127 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067944252 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06770778 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072750148 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067830538 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07388932 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075899766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084899985 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067903453 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067721049 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076671884 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067866139 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067842809 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06728334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06784307 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067365137 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076739465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07641025 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076422829 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075638167 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06815082 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067944293 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068102531 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06773583 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068045365 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073410605 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076186839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067642396 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086431565 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067861885 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067718343 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076311693 seconds)
  done (took 6.192836576 seconds)
done (took 129.250649633 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.184670835 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169742839 seconds)
  done (took 1.729522395 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068796683 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097254586 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07723638 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128533165 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066440177 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100562498 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099576463 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078486754 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066275747 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066409815 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066475642 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068766459 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131724367 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067162665 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066342531 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069016746 seconds)
  done (took 2.707013534 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096667386 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15842711 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099603741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065016904 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096887515 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073051434 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064889189 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075240308 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071852771 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065242237 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073140984 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070903629 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065387959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070994714 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071602385 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073482778 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065128278 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073239938 seconds)
  done (took 2.820441669 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101943349 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.09218848 seconds)
  done (took 1.585160898 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161749279 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106293399 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.15187014 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.348205934 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16877303 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.231165455 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.135242762 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.130246521 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121507002 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.124564308 seconds)
  done (took 3.066461386 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097715036 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153278207 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.256633213 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115563455 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072902925 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09544227 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116979265 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078108715 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081587331 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080804933 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080809702 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076623567 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099263902 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074078628 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073775047 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076527553 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102996947 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072694473 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074783555 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077157059 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099605245 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065947182 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073983298 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072676584 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07775131 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078122562 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065916785 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065812001 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07704059 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074893378 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077450738 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094501902 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077883324 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1082016 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07025157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109069975 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076807064 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074134632 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074366441 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074463121 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079300499 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079674463 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072378315 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076734027 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066101523 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077100075 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.06596084 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06630186 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078662118 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06731409 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078597299 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077319524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108347454 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067094894 seconds)
  done (took 6.02370021 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103268882 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105349186 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071828068 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.109219392 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098185511 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07180698 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101966379 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092434624 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103273195 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.093460742 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.089311454 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071232562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082309489 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084155288 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110242641 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10249543 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095941706 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071015988 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.102749134 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10353063 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069080644 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095535702 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091938839 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102390654 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068176103 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071031805 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068227522 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070938818 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0781106 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078969097 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070466325 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.103100192 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084608643 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079339732 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067445022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068256887 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068991818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.0799271 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.09805132 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079452793 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078245401 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068354824 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068514747 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071279258 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.091042235 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067867154 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079346983 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080667031 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079336008 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069991468 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070835833 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068653722 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070009268 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080718972 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079147146 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081324888 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080526055 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068547786 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069180107 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072182774 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081135194 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079860716 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079607783 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.092921615 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079891176 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068674488 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08104712 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085467729 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068914797 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070343366 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068967182 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07005642 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070255613 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078566703 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078841904 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070068623 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069983382 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06879474 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080789604 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078820843 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069070222 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078172759 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06793852 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069159969 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070776534 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070643042 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07916221 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080763257 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070742881 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069296891 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070187836 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069568857 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067707759 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077642939 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080690404 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079068439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079397474 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070013558 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079778689 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079397719 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070139443 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079252422 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198597052 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072384842 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071469202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080097863 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079305404 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081418663 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070952727 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069665432 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079278436 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081702523 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069994988 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07950909 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082376087 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080412254 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069012711 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081930883 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069004456 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081707605 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071907598 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080910109 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069581808 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080098272 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069358604 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068461594 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069247003 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080867819 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071033172 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069743058 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070952467 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071934204 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080457393 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083758369 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071507947 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082021222 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079538382 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070718675 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080084744 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069703138 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.0802647 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070160006 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070965331 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068292242 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083115908 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06887195 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068812673 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070639449 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081655905 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069134607 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080837903 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078289043 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06822028 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082385161 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081064868 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077963698 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.0816337 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071383218 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069261177 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06900453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070223253 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079023766 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080890918 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070979499 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069897365 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078896066 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080663486 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067599738 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078938588 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079168175 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079157434 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069583581 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070627988 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081370954 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081499905 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078894504 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079219023 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079459203 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069198353 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078244613 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079337896 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069006609 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085598887 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068986241 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083103625 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080167567 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077635598 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079909413 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081763149 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081451015 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080753661 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084032426 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068893745 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068802715 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08034211 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068987522 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070675198 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079030792 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070724557 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070261425 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083826863 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06880241 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080177325 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06776014 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078831733 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067848966 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070459095 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.215850436 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070216353 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071331631 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080659322 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07104034 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078932429 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082795124 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079609592 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069548351 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071458886 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081058126 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080325863 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069746189 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069049873 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071323756 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079370536 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079516507 seconds)
  done (took 18.990547432 seconds)
done (took 38.321735737 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212240824 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152021794 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181584181 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119405685 seconds)
  done (took 2.150705905 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122559396 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101335589 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095721137 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065097696 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102810325 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065312084 seconds)
  done (took 1.976189348 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316118331 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214310632 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184732939 seconds)
  done (took 2.142526961 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199868329 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189409582 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395471742 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255841008 seconds)
  done (took 2.56888816 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145150526 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090189733 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067289813 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083484299 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136154921 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162900356 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102302084 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127393345 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078668051 seconds)
  done (took 2.467815186 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148864505 seconds)
done (took 12.877017483 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.177630614 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114376587 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219728663 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.177786799 seconds)
    (5/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.174116586 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.051469693 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.119048283 seconds)
    (8/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.174095023 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102228864 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110072725 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077537497 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194561789 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072731382 seconds)
    (14/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07521311 seconds)
    (15/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073925632 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.148720843 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.095452953 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089869634 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078729481 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075244769 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092807457 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.168440546 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074087445 seconds)
    (24/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089134178 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073334676 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07343448 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109343216 seconds)
    (28/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108250217 seconds)
    (29/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061844968 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.216399331 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095250133 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079177087 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078740771 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141140536 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.170619737 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071531004 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.193246945 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.099109534 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.194218039 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133201283 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092748069 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.140586869 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079081381 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.218750974 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073007292 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.196058037 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09047145 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.099956966 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.153571492 seconds)
    (50/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.106731066 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.197721264 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.182212806 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.086943083 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099391726 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.194931355 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.156447294 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051458732 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072912726 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075952494 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072342059 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067747816 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077661435 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.180793164 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122100239 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138549267 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065746239 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066374321 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.148997817 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067491707 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073616659 seconds)
    (71/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099568721 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156234486 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.099790237 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.051089584 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.174870146 seconds)
    (76/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.109479471 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063848871 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.072135744 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.156677406 seconds)
    (80/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051580334 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.089647458 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 0.126423406 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.207256832 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075090528 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053561599 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.052136707 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.162027584 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.177045064 seconds)
    (89/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.157638003 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100218564 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 0.067168797 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172646436 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.070811776 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062481897 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066068602 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.087848348 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.114299032 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.150653231 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.073026497 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.185633968 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.109179371 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071886327 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.14653023 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065623192 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.181081915 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.330223078 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.080899351 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.18043649 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055202105 seconds)
    (110/309) benchmarking ("sort", Int8, false)...
    done (took 0.141140171 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051907203 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.173965133 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.177723821 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.150762475 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144005941 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067363708 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075384611 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092288777 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066699406 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089227584 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089665832 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.165095215 seconds)
    (123/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.146449788 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140034013 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064249836 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065505096 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.051892501 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088440562 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076541829 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051127357 seconds)
    (131/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075401931 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.107812917 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168037859 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075014814 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106231434 seconds)
    (136/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075567769 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069993043 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 0.133552695 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073579699 seconds)
    (140/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068987046 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 0.124853866 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071874845 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072058068 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.066578089 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071240484 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.105842885 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070439923 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064983988 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.149218337 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071670206 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052464616 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066866424 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.149000015 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051275165 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072134427 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07279142 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137034407 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081762283 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096010737 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174855381 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065563456 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072484002 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052446652 seconds)
    (164/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052466765 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065541391 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076982226 seconds)
    (167/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185863664 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051405821 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072727183 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073135306 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.136162729 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065203811 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.0659396 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07388554 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066174644 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072687109 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087945358 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072242183 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051264485 seconds)
    (180/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060389073 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064860291 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.050912598 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089592361 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086140744 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148071073 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07572811 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064857483 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.256691614 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.13709725 seconds)
    (190/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068618675 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065628516 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051902599 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065736686 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051879573 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.072930961 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051576343 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051915707 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072858055 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07404018 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052933431 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052594491 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052867895 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088999662 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.06612566 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05596004 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.0645106 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.156659418 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062836218 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051705978 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05326195 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066249788 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072117408 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080835978 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069316064 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066234122 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101704344 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092553455 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071575674 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05183208 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051808471 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074777249 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072564111 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.052143532 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.0946338 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090619079 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068307315 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075465609 seconds)
    (228/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05237482 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070743279 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06986678 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.065607725 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065934657 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051895595 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.051970569 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064914994 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108471667 seconds)
    (237/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066817556 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051464337 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136011742 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072361562 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066658323 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063179401 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051352863 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063035087 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052478596 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087513217 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.064990847 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052467732 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052443272 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088242347 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.141865121 seconds)
    (252/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118775519 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06579986 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065309167 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068822442 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051233268 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053523336 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071444808 seconds)
    (259/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051748245 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072869748 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051365113 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068483597 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071591553 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089371875 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053373676 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052766495 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066296734 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073227267 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065468571 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052350923 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065122712 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051247341 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107080761 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051470799 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090112008 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.086132883 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067776764 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178379972 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072547834 seconds)
    (280/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085867005 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064255702 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060870424 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076965547 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.071567481 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131793283 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066653512 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064025968 seconds)
    (288/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068084946 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072880771 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065959479 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.138479005 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066227998 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052822732 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.097090594 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05253192 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070831759 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.075904366 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052575573 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068171159 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.05177506 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073316156 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071113214 seconds)
    (303/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070887753 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089118081 seconds)
    (305/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060872685 seconds)
    (306/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051593885 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085780235 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053812714 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.078414651 seconds)
  done (took 30.607957183 seconds)
done (took 32.042269387 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084258332 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092402775 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07414748 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092869637 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080349804 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076459644 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072145865 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077623182 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079619333 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081326752 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078175257 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054780501 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073608559 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074006071 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074213451 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091208888 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077799472 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072541276 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073474038 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.065052593 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072793927 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065395995 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066928985 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054748953 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077774646 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071450726 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072285195 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073904116 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066086824 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065869093 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069142571 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073140001 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065411683 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077568932 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072404313 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072718468 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074159699 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075946172 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067391529 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065696953 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074174123 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065977031 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072508147 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073539113 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071369896 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070946349 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072892729 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077596373 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0913676 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068077864 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074068021 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075381069 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076182869 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071705095 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069194527 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072957587 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070567648 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091358868 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073200554 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068171387 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07341103 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073348406 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070763764 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073042974 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072720607 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074677693 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074842726 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070762669 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074648572 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070954055 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065407634 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072489746 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069021886 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065783725 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075879064 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07665642 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064172029 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071054664 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072686997 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071117378 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06478942 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.0671928 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067232697 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071123276 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067452612 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054537817 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068420539 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071065505 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064172432 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073130367 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071233349 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071853336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067022565 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075098425 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064892984 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070272133 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065179669 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065284253 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066745427 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069013677 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06512585 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06732999 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073911764 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066817549 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071248672 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079192778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065540636 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071253709 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064269648 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064659695 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079197774 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074685685 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065395619 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067653617 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064655112 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07207646 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064102818 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065065551 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064694397 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065298866 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070614671 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06520776 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067239659 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072217137 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.077028743 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065007715 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06816369 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067058685 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064986917 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07023411 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.06520026 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065232533 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.200931721 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062066171 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067885254 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066349926 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072733106 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068234729 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072755511 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067426093 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073428359 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069906936 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071508025 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070746662 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064454329 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059489193 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068558094 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067595149 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067930949 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065332568 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06656754 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065944895 seconds)
done (took 12.453645201 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066698324 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.142997133 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098544673 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.094926364 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086160095 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066566853 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076554636 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102148379 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068149224 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102692803 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087414637 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084807534 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112759057 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065283725 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065832184 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069695582 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067425508 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081580167 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101016 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087032302 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116250401 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065456813 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094542672 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089997666 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08737298 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092278473 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066772684 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069704273 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069259714 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100204373 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086162818 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069388309 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066574591 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101021641 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092360858 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083414665 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066291266 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082175329 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066407663 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065661468 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067184987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.097935785 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080119376 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080416016 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069721599 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068966904 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067097592 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08323074 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089101694 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078565759 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086823624 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102996149 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068365501 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065785034 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064576011 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08542866 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065631766 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069073635 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066254767 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0680335 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06607764 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068884642 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080866589 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081951489 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069453479 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080068326 seconds)
  done (took 6.825893399 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083288889 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089531221 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08315316 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083582443 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065611677 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066503697 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066574537 seconds)
  done (took 2.065700083 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067156958 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087657516 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088652202 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088733869 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08442444 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086885458 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075895664 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066708859 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080477573 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067678681 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087245445 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101402697 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067111103 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072625879 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09052954 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066636957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089948975 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066426105 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069127495 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089581237 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068338486 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081855513 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070377034 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067003621 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080967607 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066558641 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.112596619 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07089475 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068039561 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069898187 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064863053 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106056092 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080557802 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075468244 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06617648 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080672288 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080722564 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06477082 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082086167 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071269112 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079845709 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067082201 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06751242 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065315065 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071362983 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077020267 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067358947 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067224109 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069199895 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086420419 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067161199 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080110362 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071058153 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069143461 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068134051 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07008111 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075820183 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067641051 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085583638 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067755921 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.0831029 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082217557 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079785307 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082343644 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069376345 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0800878 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080471989 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068741522 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068103425 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070005773 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083100638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064757139 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067785191 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076745882 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068114737 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089267612 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.088938529 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067946206 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075722941 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067287753 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06712378 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066799271 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089721407 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069213688 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066478983 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070946493 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069961117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065079861 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065458637 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069839826 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065125836 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068025305 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069242846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069761722 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069145976 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082845918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068877885 seconds)
  done (took 8.78994675 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068419862 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067948115 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069400293 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067831296 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067753854 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067764909 seconds)
  done (took 1.959674829 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093849748 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069876811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.0803414 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072178852 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10436089 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086790573 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087095739 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079021927 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084163234 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07901867 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086491452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088490338 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092541663 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072712577 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086667169 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072187064 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087169316 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07586644 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078449681 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073091161 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087108702 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072457708 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073064729 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081502014 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075520471 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072001089 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06734179 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079486491 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078293069 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079064316 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072292044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075706418 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070809192 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078719624 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086851764 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071018175 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071772681 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076988818 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072480235 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075599623 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088060021 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07269411 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074610321 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077391322 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078751718 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070544474 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077128728 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075977021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086295414 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077042719 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076931729 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071516478 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075148851 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077067326 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070588823 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07870664 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077283001 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087257879 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073023581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0704654 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069752018 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0753783 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078256608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075189416 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078700941 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076728536 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070193036 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072191437 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072779891 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071806838 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076612931 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069106847 seconds)
  done (took 7.12147698 seconds)
done (took 28.275987137 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.539948974 seconds)
  done (took 2.059754882 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.600379001 seconds)
  done (took 2.143309989 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.640165349 seconds)
  done (took 8.178236279 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.395465036 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.476016484 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.695473295 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131373114 seconds)
  done (took 3.276104575 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.670805218 seconds)
  done (took 2.222206299 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208913914 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197431023 seconds)
  done (took 1.964365176 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376006836 seconds)
  done (took 1.917540682 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.115275328 seconds)
  done (took 2.659277652 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.262993637 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.167699424 seconds)
  done (took 1.976810493 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.45918721 seconds)
  done (took 2.003486223 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.896408497 seconds)
  done (took 6.442661323 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.212087085 seconds)
  done (took 1.802867356 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240245404 seconds)
  done (took 1.791124496 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.699092864 seconds)
  done (took 3.248699688 seconds)
done (took 43.234296293 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079351944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.0815301 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08083494 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.07788826 seconds)
  done (took 1.856811023 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075860971 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072237359 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075980912 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071875537 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076278164 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.072201562 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07402525 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07654311 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072842836 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072609842 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072150872 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072260288 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07458821 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07383073 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070279038 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074962207 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075704579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071812889 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075060143 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072026953 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070531005 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074431376 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074701597 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071519916 seconds)
  done (took 3.316814942 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07778916 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.072826564 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073896725 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07182209 seconds)
  done (took 1.854509517 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076812245 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.091624308 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088975509 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077724744 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092202297 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086169727 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068413564 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068640824 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073156551 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07646837 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067243301 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095803219 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087040794 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076913574 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078479104 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065558853 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067833483 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086538994 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076683746 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07753203 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070073172 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076514087 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067678759 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087712462 seconds)
  done (took 3.436919744 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077685848 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103454103 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077082673 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087570653 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088958006 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065485036 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074076243 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088610006 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122161153 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064920122 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069530673 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065023121 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071746385 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064838904 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075872148 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10393841 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107575021 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068306273 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095353122 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065463463 seconds)
  done (took 3.201242689 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072921597 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069514327 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065090429 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068232563 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077521342 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072818551 seconds)
  done (took 1.994157416 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067311043 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066885063 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067101014 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066505383 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070968999 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066543042 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06533825 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.067114332 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066596176 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066806384 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066606056 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065585045 seconds)
  done (took 2.36690621 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.421481965 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06890986 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.0690893 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065375708 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070557062 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065953984 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079381826 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067973851 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090312124 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065971748 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066045634 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068301856 seconds)
  done (took 2.764655135 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206199299 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075945338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238307918 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137146397 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111469654 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115960924 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103977752 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112517218 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144363672 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102174118 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168407121 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166888634 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107063531 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138022708 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089190398 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097939751 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1557362 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162736351 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103560859 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165825814 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144311716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124495591 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146507562 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101412017 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105998415 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121701348 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070591132 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07968161 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171409235 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13166252 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146694523 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110607291 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093869933 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177311549 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171371242 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142814961 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134373947 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083099797 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.101952164 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133168009 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200334317 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088367741 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163441593 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245896153 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080621125 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132998436 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120466889 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121747714 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107092205 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0893115 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146809275 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183466392 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139147154 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086742096 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111375463 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114462 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.116033565 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103400084 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183166775 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161860673 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12746729 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071001112 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099022593 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153956804 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131077895 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108931763 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127252994 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094182112 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133426899 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154357754 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118249908 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14348403 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.128961435 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089012065 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118963119 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139820552 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128163021 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17005732 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124231205 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072606546 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125293357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103561149 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080874729 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141361316 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075054531 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17620333 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098248166 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106223966 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112448042 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108655971 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108808672 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162113344 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143661097 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.245055092 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065769886 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104262428 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.12009595 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148715369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087066251 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108939715 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116675238 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07744502 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138539697 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074266104 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122596953 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074889156 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125399307 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131968532 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07481723 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120930609 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102172278 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.100218018 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132906205 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159464108 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088429342 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082278472 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167504648 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12138715 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10333686 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144026348 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156127385 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.099463144 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102137128 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150185675 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179855337 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089416927 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162600329 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107186694 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083371727 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087630191 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123918798 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112354161 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122639661 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081969654 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118895816 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168840568 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075023872 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09501182 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134015792 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079577969 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081272129 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103297094 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099910227 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095022923 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099925727 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104146052 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137712441 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123120257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103967053 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27014168 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098419409 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170372061 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088770538 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.100805161 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104240358 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069661625 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138103425 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156895199 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078996239 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164799369 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123638493 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10554065 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119092944 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082880408 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141008233 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078749746 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070431656 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144093913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11079748 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109639682 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150936151 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104438968 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129309071 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120101499 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134966818 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132676112 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128313441 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105303801 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088240027 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111313946 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126001627 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07309667 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090933415 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080060479 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103717582 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095234615 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082837648 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143081834 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125094232 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10017641 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111792968 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096499461 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147157548 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076247025 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129688893 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119860217 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094351959 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151643411 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151933117 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13159188 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098860278 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144896347 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069664436 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073181312 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088856115 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.268214708 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084210491 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083518133 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117506549 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146650217 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130084208 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138033848 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111429227 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121559003 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15473017 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069562042 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116186947 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150513756 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121632242 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103815742 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089646878 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098678252 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141909655 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108003412 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18230753 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114425514 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126254363 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153595767 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099540493 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07940379 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10853454 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135482009 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105551743 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144862456 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09964246 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088064768 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109882304 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073764717 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100304239 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12772464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120065235 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135677807 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114962755 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133963757 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076624421 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117384138 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120369491 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122984594 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064084807 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1207676 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161481651 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093682947 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119014644 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15306661 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078738104 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124006063 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319899439 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145826818 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084288731 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109595266 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118504832 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128443085 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119708912 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140407711 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108666727 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135733354 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108546627 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084480849 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086679827 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097185321 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104847182 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09465125 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.108329501 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114708496 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094440998 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132318422 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103421062 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109032929 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11714453 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096251771 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.08958965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095717425 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174795943 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118675614 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173155395 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098479879 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146800915 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164466053 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074388005 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078569721 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077924167 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140127783 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083821159 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131506376 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097871021 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105305969 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124024872 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142524179 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094808522 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068510317 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108487125 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134765794 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112624404 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09841752 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104897597 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163681014 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100562084 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08007337 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113947069 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104255745 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102033939 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172482137 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061130702 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242691255 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075656579 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080725975 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127984808 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154499718 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080821053 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103118246 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11966654 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111701273 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128032014 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101634679 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099603571 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113978499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150068575 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129118953 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089715166 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112870053 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131075828 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157705542 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105117386 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095056529 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171812039 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152067495 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.160728526 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088932716 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131355152 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113517797 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10759763 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139394994 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08360624 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16401578 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081661435 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136858373 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10451422 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090485695 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130090091 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098478748 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088293806 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148693403 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117878606 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082077932 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077914272 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118323577 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120471284 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106708451 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.075323293 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139758831 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072709871 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132056691 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168556648 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080969026 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103536575 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239832534 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080020762 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109466157 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10322244 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089550046 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097745948 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17402119 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08778275 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149545936 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141084776 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113183695 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137572908 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099331074 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636940105 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077638843 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15214827 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116443106 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173626464 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097233885 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11766585 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109328693 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123929121 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145237917 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104904261 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.177107319 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133101333 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115744138 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079261524 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102567337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105640424 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088664477 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104572217 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113738271 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116482666 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094262945 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116055299 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124151064 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082048044 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094896481 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156682729 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117015998 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144905699 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140543373 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084838979 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117933775 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139118285 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079396364 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122238066 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152857374 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105709228 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097203564 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079945615 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246912193 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171537948 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072969573 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164062218 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120644136 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108893938 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112801363 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115037129 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131066616 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108489356 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12192587 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094213157 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110743621 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112718184 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081278091 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076920837 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104497676 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112258184 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097448986 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098552685 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097709114 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151293205 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070887536 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095557647 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102842188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145903103 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175292115 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088319415 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082227266 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11901797 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112688806 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113352539 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120437014 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079592924 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082058389 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081832883 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077153842 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10812923 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111858526 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104575561 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111543335 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16434157 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082365973 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.226598126 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095234478 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104553214 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.069558481 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079157897 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095791079 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09753851 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108336402 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100779148 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171090063 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09408547 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089497084 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092879948 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072959258 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082523719 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126681515 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256016427 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119999647 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097966325 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062529178 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108788418 seconds)
  done (took 58.945737314 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109107245 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08250449 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096391163 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149763092 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121907796 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212380954 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156531671 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19976853 seconds)
  done (took 2.797770464 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067687077 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093777531 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099918625 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082752153 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066055574 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.06861163 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225834651 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080505805 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066026958 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088589112 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079190297 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068923077 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423314962 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065940166 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069080473 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062409583 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067440092 seconds)
  done (took 3.437935829 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.365931587 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.360498866 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372087516 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072815976 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.811895783 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088719257 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.078156946 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.096252132 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071056714 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.268457477 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.701548389 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.092192005 seconds)
  done (took 14.049015329 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075409365 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069417573 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084134842 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083412941 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072271674 seconds)
  done (took 2.051946035 seconds)
done (took 103.661877398 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.079294898 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.392299061 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053702085 seconds)
  done (took 2.141704771 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082233253 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084286882 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.083814728 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082426629 seconds)
  done (took 2.012671154 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073843862 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076460619 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083992961 seconds)
  done (took 1.907720062 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223537635 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.13906989 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086642683 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081497347 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077746183 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077811589 seconds)
  done (took 1.914190848 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071660462 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07403379 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071809485 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075639474 seconds)
  done (took 1.965469365 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075881652 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052711032 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054777512 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055850054 seconds)
  done (took 1.912767963 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.085397355 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078132633 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077884784 seconds)
  done (took 1.915404129 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106961856 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084855256 seconds)
  done (took 1.865805982 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.081469015 seconds)
  done (took 1.756247409 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.09837371 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113104697 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128174656 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109057126 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.136523721 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108800515 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085446436 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086520984 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076940409 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087458559 seconds)
  done (took 2.704808966 seconds)
done (took 22.292394425 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078489178 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365419704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360759894 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091474229 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.698739367 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356254076 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.997352298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092105082 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113209875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067944804 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083509472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649319065 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024961127 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322621595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.009821989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.31860364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649660936 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067682515 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067760022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067788779 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980305364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067882162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067695593 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067805002 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647293183 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37051961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068128806 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323204912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067271353 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069729841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354706853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06757719 seconds)
  done (took 16.297635045 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070563525 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117006413 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07300212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084050042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070045486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069413913 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071299197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068569545 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119450268 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068048022 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084028748 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067815059 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071538069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068414915 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086754347 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067930274 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068890591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068375057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068270069 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068256005 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086305919 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067771764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068256478 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068137021 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067631613 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078948409 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067804794 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068232483 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068020764 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069756944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071068344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068708076 seconds)
  done (took 4.071668657 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115153575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124335323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07341445 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102511065 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112342034 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070053844 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.1426421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092659582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127241194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067893983 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084478332 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067759535 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100675428 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068630698 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087322254 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068767459 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068700436 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068463341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068376339 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068376711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086742573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068120771 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068138992 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0691173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068448197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081493849 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068584773 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068597773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068583561 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070052201 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071635397 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068594475 seconds)
  done (took 4.328841685 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07178478 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074812244 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082914801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083377543 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069724622 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071750708 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072284289 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069794434 seconds)
  done (took 2.290552847 seconds)
done (took 28.668205764 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078851666 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068506304 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072528116 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080742168 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072781707 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078395413 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066809108 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073984494 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071772119 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072838552 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074774173 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06735044 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071069341 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067248639 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073617823 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067590817 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078924943 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071658303 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079082299 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078969587 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069749029 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072645019 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073557612 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078974595 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079119291 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078924488 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077427793 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.0725602 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069159761 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070173028 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076331505 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083634141 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068552066 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079255576 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067450014 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067861836 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071298838 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067766682 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079247089 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076504516 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069314242 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076026535 seconds)
  done (took 4.767038058 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087287129 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091447608 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08412896 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061779665 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.066654116 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064906528 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088003782 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.059436604 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059401738 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087933003 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055768889 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058947853 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062314039 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053879222 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058863652 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056655268 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061203447 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055574793 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058819874 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059273875 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058305556 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054250614 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.06002921 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064917834 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056341887 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061939963 seconds)
  done (took 3.387329843 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073918869 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082816818 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087679184 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125948271 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104711168 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076444193 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077860096 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092287198 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085128756 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066845028 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071208128 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093635632 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08807037 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074432123 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067134517 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084836903 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081580569 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.06865408 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073635475 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090290071 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084540579 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083483535 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092232971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080888037 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066692786 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069325693 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071135081 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081437067 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071955924 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075972251 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071410746 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070859075 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.080128197 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078241266 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071124806 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068826391 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090627067 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076672386 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077089003 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067720465 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070461428 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068094358 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088704075 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122155521 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066862888 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073828521 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075040171 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076886651 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067233624 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085367357 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078176482 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066744229 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070161901 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066970067 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067300946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079939163 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069152964 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069738293 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076097021 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070164848 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085244584 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07136993 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082918121 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066883141 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075037117 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066852377 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068377217 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066187461 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092427552 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068761107 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108052751 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.06838267 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068086312 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076276942 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074875516 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073554666 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067984802 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082080281 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077293265 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071238164 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076001886 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070341552 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07008178 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.087380313 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069625909 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068647377 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068474342 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073377109 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070164725 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069121926 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080038201 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067337229 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070300639 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083859024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067112805 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068579396 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073456158 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071785189 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066952109 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078738847 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072203049 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068138613 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076646171 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067556159 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070825922 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077393919 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073595086 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06633384 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071901 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07330039 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068379233 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068876838 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070144729 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068981138 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.07575732 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074050957 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072347973 seconds)
  done (took 10.588852417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159839736 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153273114 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070818599 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144927312 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075925578 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079018656 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147352994 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094120356 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068000784 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068160065 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068619679 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109750598 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105303404 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117640079 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078795157 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067619368 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082796701 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113577163 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149247375 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142527517 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08328987 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07648772 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069819121 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068921778 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070315405 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078419455 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085343388 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076581059 seconds)
  done (took 4.442285862 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081434449 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.100322794 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073993029 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088899731 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090666796 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067414819 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069862044 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.069538168 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080303973 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079029552 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067386622 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073857781 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074225719 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071406884 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068687334 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074360649 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075019468 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069412602 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071144993 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073707763 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077667135 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080860581 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071873456 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066968979 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074031817 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066759813 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06471319 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084884089 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068282571 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089794375 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065795062 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074739709 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081371743 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068298876 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067544828 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067390617 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067294567 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067582241 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.06936214 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06610357 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066327443 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057366337 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066570958 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079588031 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073941597 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056364541 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072281838 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072296934 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072419101 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065181647 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070374633 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070012989 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070870669 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074882722 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072692652 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072393052 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068498641 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065736048 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075473033 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067483282 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064675029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065918504 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072288118 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066775118 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075509841 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072020431 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066086018 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067196008 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069295802 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073613819 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067556537 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070537443 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064962853 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069200118 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07215928 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069354536 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068732046 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065888706 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066947377 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067468366 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055690968 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067323756 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053836194 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070170299 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065411057 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065985814 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.067084324 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072158667 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079885777 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06858035 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073249729 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068151696 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066385271 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070165592 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060274217 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069759701 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082338896 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082458971 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067495403 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065367669 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081498159 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071782258 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066380937 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056081179 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074740349 seconds)
  done (took 9.178165788 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092928594 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087294577 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06952737 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083170211 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.090456694 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086553967 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074598974 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076532037 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069487229 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082076384 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073353952 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076353839 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067950283 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077167896 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.092773371 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076443409 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070105139 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076427078 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07152566 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100200672 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082178835 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081635515 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.074563677 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067907014 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075557771 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079662053 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089042838 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079830388 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07832788 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075334754 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079849182 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.08906575 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074117954 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071735566 seconds)
  done (took 4.439508111 seconds)
done (took 38.491176336 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.793751347 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.024257258 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.779319203 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.165825961 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.862991813 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.940222093 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.830976073 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.787314836 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.933180033 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.810741246 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.013087086 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.827207233 seconds)
done (took 65.484883172 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.807649642 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913548115 seconds)
    (2/2) benchmarking "String"...
    done (took 2.045785772 seconds)
  done (took 5.673479871 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.06575463 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.304038222 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.01955677 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.772401403 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.778927538 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.082546029 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.573351648 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.29405945 seconds)
  done (took 30.539002591 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.974519771 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.970632521 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436662313 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.470093339 seconds)
  done (took 15.612649925 seconds)
done (took 63.489088427 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.810856721 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.788800469 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.799623352 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.758143532 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.832616987 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.789992009 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.847571417 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.9679738 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.773887873 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.763912788 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.775633421 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.217651521 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.778615147 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.829493303 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.773408223 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.778785645 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.792973408 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.212641467 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.929548153 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.780061113 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.789845514 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.787583417 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.779946815 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.781285298 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.801904039 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.774293796 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.207558426 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.781524809 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.401660673 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.777030738 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.807289176 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.005923686 seconds)
  done (took 204.412889252 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.774229933 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.777196909 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.83952808 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.800699308 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.234048132 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.976601796 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.911824683 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.258818352 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.778768149 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.802231543 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.99380108 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.777385347 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.021329334 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.80489544 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.781635368 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.870782373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.013412297 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.021793343 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.779847488 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.047878491 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.793431288 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.876455676 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.828396251 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.964141538 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.804834092 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.847767705 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.911936361 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.808474357 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.969751974 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.984383458 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.795720522 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.816839244 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.996059226 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.646189859 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.791515637 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.790296304 seconds)
  done (took 170.609735853 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.91816522 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.774669855 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.773751965 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.77458881 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.786800986 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.773754569 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.906660299 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900955879 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.235521065 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.117270708 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.825715058 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.603589644 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.771121039 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.771826617 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840460854 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.785152132 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.775267566 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.786878043 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.799807123 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.774152494 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.767717347 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895895673 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.779222377 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.8670308 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.772299331 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.766870427 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770545092 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.134033213 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765085126 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.770389704 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.026728249 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.764581651 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.76421547 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.654746847 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.10350406 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.854142286 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.765806367 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771091425 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.76486103 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.98427165 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.766664993 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.764432415 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.765226929 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.767551403 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.938100466 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.764702939 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.894596006 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.765061336 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260129725 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.764687785 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.765360512 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.433301877 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.421087918 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.76431545 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.765362395 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.76722429 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.764865902 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764981469 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.770223247 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.338813687 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.838836665 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.766056098 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.76552252 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.767519107 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770315295 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.765877197 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.002086985 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.765072476 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.022524038 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.814710743 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.880554706 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.879411578 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760416677 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.823731658 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851222056 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758742578 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.755885137 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.756394153 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.756331642 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.837885289 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.7571946 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.878330399 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.757098891 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.762924821 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.756835674 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.807459252 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.82487867 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.755944465 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.645142964 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.759939762 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.756019478 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.066261618 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823034791 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.757337981 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.755826633 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.756970868 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.877598819 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.881236439 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.547820993 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.756707436 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.388142237 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.758421302 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.908786644 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756655426 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.92574433 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.756554625 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.837746665 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.761974749 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.758504306 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.756709432 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.78761039 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.756373789 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.814463017 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.758785869 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.127704394 seconds)
  done (took 401.131659859 seconds)
done (took 779.84111946 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.434675488 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.398944999 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.511312438 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.422452444 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.398453849 seconds)
  done (took 13.863742253 seconds)
done (took 15.561790155 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.843664586 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.848844823 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781486194 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.846449954 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.778730092 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.847087577 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.82780682 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.782867591 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813871918 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.783472798 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.815147333 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782752861 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770371014 seconds)
  done (took 25.220962243 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.985661794 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.994090802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82631926 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.994765584 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.802867321 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.983823091 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.916530431 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910673054 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907355165 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773032588 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77009761 seconds)
  done (took 22.565187137 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.993943074 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.992766746 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830312103 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984610176 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804279041 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.012123623 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.917549248 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.9088154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910709234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772520811 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76986224 seconds)
  done (took 22.597361822 seconds)
done (took 72.081619304 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.765553126 seconds)
  done (took 3.464934082 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.788261643 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.925247431 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.773519886 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.769980604 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.766340808 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.767576498 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.770971509 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.767069821 seconds)
  done (took 16.029366139 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.766315394 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.765673837 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.765144538 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.763681854 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.763374207 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.765047175 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.763415311 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.76312482 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765662104 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766642651 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763573733 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767260163 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.763721741 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766629113 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.764362119 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.764097924 seconds)
  done (took 29.938413231 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765633162 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764396111 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.764078308 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.764327225 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.764244793 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.764135966 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765837373 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.764090889 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763851241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764400477 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.764734347 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.763937479 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.765319649 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.764000822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.7647495 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.765650547 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.764183836 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.76526676 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.770240651 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764879702 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.765684399 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.764200048 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.76509348 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765218409 seconds)
  done (took 44.062204966 seconds)
done (took 95.194755018 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.444139355 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.193155661 seconds)
  done (took 8.339149296 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.768630333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.76724086 seconds)
  done (took 5.269526949 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.767998254 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.768390381 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768166775 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.768154135 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.767622771 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768379636 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767582579 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767438097 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.7682189 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.769513791 seconds)
  done (took 19.384012384 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.768480925 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.768289011 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766255986 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.768940106 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768455046 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.766083202 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.769775053 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.769390165 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.76887813 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.766424787 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769225531 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.766784823 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.768971567 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.766634953 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.769211187 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.766724986 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.767297794 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766860343 seconds)
  done (took 33.525827089 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769970692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769910978 seconds)
  done (took 5.243362828 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766125867 seconds)
    (2/7) benchmarking "second"...
    done (took 1.766570515 seconds)
    (3/7) benchmarking "month"...
    done (took 1.76661271 seconds)
    (4/7) benchmarking "year"...
    done (took 1.76699143 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.766941653 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.767456181 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.766709573 seconds)
  done (took 14.071054169 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770287852 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.928511256 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995615343 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.453942562 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.77237554 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.773871701 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.724170817 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.77451613 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.775061906 seconds)
  done (took 19.672938435 seconds)
done (took 107.208181976 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.581932953 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766905445 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.148695202 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.808976675 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.82511233 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.064419329 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.802731404 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.992638628 seconds)
done (took 42.696538613 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.859047095 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.222184426 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.256822632 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.233336532 seconds)
  done (took 12.4174959 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.75169259 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.296631836 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.807444176 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.435103433 seconds)
  done (took 20.207259732 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.134807102 seconds)
    (2/2) benchmarking "read"...
    done (took 2.12009967 seconds)
  done (took 5.965811348 seconds)
done (took 47.156959221 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.77005617 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.772133406 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.770927569 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.771671278 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.769030861 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772615717 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77143354 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.769325046 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770004022 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.771305034 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.770582921 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.771708206 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.772142081 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770800005 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769525218 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768840527 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771006329 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.76858416 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768052336 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.770080046 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.76828585 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771298439 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.768695534 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.76803735 seconds)
  done (took 44.193285051 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.771762461 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.768784343 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771149801 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.770827944 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.768014548 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.771333622 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77074172 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.767764117 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.770861543 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.770011728 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767857636 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.770009011 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.768954038 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.767791988 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7688557 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.767497285 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.770566421 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767495724 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768810366 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.766078403 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.769069608 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765461136 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.766041111 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77110381 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.765856449 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.766367412 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.768734617 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.76683287 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.770874493 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.765066022 seconds)
  done (took 54.767073098 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.772004248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.774402157 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.767281268 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.768187274 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.765979999 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.765625133 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.765628882 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.766575993 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.765777474 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.766614908 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.765347038 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.766040497 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.76544105 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.765570658 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.765696646 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.765820854 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.76566355 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.766793407 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.766648852 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.766670655 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.768225598 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766038329 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.766782219 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.76554808 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.766352733 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76624284 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.767265788 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.766192052 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.766493643 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.767928856 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.766553646 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.766879745 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.765727077 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.766374208 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.766072087 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.765732882 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.771063971 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.77276787 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.762817056 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.763163363 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.763937417 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.763264716 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.763778502 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.764293273 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.762613862 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.763529836 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.763456432 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.763641438 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.764842565 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.763261196 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.763215371 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.761799357 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.763156933 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.763365248 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.764542542 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.762737519 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.762791773 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.763231593 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.762513176 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.764209476 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.7635424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.762971359 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.762941191 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.7628438 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.764084192 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.763880449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.76356351 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.764369995 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.762827198 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.764364718 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.763854105 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.765152898 seconds)
  done (took 128.809700442 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.763330638 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760810936 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.760577797 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760339398 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761374306 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.762223138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760655491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76255524 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760059308 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.763198251 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761870831 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.759875497 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760075808 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763263559 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.763094469 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.761223995 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.762661161 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759994194 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.762542274 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.762834214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76341211 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.761587115 seconds)
  done (took 40.456123905 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763302597 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76283201 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.760714431 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76383481 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759554232 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762388063 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.763107735 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761464688 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762309064 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760013234 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759867203 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76238685 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759321658 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759591329 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759568913 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.761070324 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762755915 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.760186907 seconds)
  done (took 33.401881651 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.759454627 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.760687748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.762712053 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.760358509 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.760010781 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762859938 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.759810166 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.763155477 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.762309985 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.759864581 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.762688168 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7627322 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.763065673 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760985053 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761889471 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.760006675 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.762408092 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759001801 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762994645 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.760039279 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.759963089 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.763072242 seconds)
  done (took 40.446609941 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.76343483 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.763527801 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.761895267 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.760255151 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.760001813 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.763059776 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.763136514 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.761740054 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.76327583 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.762950452 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.760134355 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.762774915 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.761253085 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762386876 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.760417503 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.761021508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.762743721 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.761093487 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.765190874 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.760776461 seconds)
  done (took 36.939790436 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763866002 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.764507947 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.763790547 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.765387635 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763688199 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.764040421 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763557978 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.764315961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763933029 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.76516232 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.762829057 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.763400699 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763753616 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.763856185 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.766285741 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.763641164 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.763918566 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.764008642 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.763604348 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.763178696 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.764958977 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.763476223 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.763319284 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.762756158 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.762692877 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.763566426 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.763757478 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.763109449 seconds)
  done (took 51.087290614 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762159542 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.762154963 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.761353889 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.759713586 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.759697826 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.759359303 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.760652669 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.760568134 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.763158801 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.759816354 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.762556423 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.762582674 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.762379049 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.761766776 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.763528506 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.762295026 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762619177 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.75976786 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759872604 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761872209 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.762434134 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762338652 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.76228451 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76021741 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.760649915 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.763315467 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.760200463 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.760601743 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762959283 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.760577978 seconds)
  done (took 54.541297853 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.782343981 seconds)
    (2/2) benchmarking "in"...
    done (took 1.781225404 seconds)
  done (took 5.261103525 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.760806067 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762752533 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.763942764 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.761625601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.760731855 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.762945348 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.763303493 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761515267 seconds)
  done (took 15.795041699 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.765065386 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.763672587 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.763360942 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.763935739 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.764563484 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.767573251 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.772944928 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.764481646 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.767591986 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.76676095 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.770797426 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.773644657 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.77084038 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.764876389 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.766413613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.767631377 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.765944158 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.764510098 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.765047939 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.764766855 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.766067487 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.767994559 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.767937462 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.762740138 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.767300421 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.777367692 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.772542164 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.765857237 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.769588591 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.772681803 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.766827927 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.762735024 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.766562952 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.767440249 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.765563903 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.765876691 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.778293925 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.767929035 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.774711733 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.767238114 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.766051086 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.76316458 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.767945466 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.771459815 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.769662535 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.766098105 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.766347544 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.762973031 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.767665845 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.769422743 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.771580461 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.766765164 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.76428265 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77749115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.770259864 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.77436845 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.76876349 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.770311584 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.774346617 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.779518074 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.781215129 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.774526206 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.769468588 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.766927182 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.776673183 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.788539658 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776938988 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.766028403 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.765526436 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.767566624 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.777889068 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.782169554 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.775864419 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.769130063 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.767632575 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.768131381 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.77109351 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.767553119 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777853592 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.772556309 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.768939595 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.768502597 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.777798219 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786808823 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.77019706 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.768616481 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.769610968 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.769119635 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.769456365 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.779646818 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.769518046 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.768257533 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.770158768 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.770049234 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.774621153 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.770081514 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.769052132 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.771618736 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.765734327 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.768157835 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.768772077 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7736714 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.777681398 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7701585 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.769854801 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.778554307 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.769501111 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.770426264 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.781117505 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.769045802 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.769203562 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.769464049 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.78026703 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.76662189 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.772670833 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.777999414 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.770070513 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.772419792 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.772150896 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.769944549 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.779780036 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.792776608 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.770360786 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.770593082 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.775470834 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.77896002 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.770693782 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.774724998 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.770699009 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.76851855 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.767521135 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.773524607 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.769988519 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.773430965 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.770628484 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.77458485 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.768507807 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.770997796 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.770699754 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.773236598 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.776198619 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.773784728 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.77421117 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.776204899 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.772266549 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.774375695 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.78316357 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.773875008 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.77420489 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.774216943 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.768926843 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.77394325 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.776335357 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.772141312 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.77518367 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.772360735 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.7727174 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.772065428 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.770878473 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.772186313 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.772039338 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.772810791 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.77624914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.773402247 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.779178848 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.773445025 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.769484006 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.772477981 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.772732375 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.775083595 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.77212892 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.772603506 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.776166413 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.779417923 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.773873786 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.772815562 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.779090751 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.773878569 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.773400157 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.773112888 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.777685861 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.781698515 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.773974556 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.782550928 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.772765518 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.774684987 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.774117158 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.775337982 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.774361985 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.77397423 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.777425186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.779814951 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.78952613 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.782267478 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.775732392 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.776744847 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.775693413 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.779270776 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.781933035 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.775201666 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.775327436 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.774358769 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.776728689 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.775174075 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.779663078 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.775242725 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.77520389 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.775385556 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.776455151 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.775050796 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.775218093 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.777518985 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.777981699 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.772024371 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.77599687 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.775095223 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.775687523 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.771530004 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.775251514 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.775755251 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.774573959 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.775217652 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.787448174 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.772760673 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.776749629 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.777983709 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.777562833 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.775287544 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.775534809 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.778513462 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.778095124 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785194241 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.779085753 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.778495434 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78365813 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.776858265 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.777891546 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.780396768 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.775839167 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.773050311 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.779022458 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.781791896 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.776883943 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.776627547 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.777240497 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.777749087 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.776160707 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.787304426 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.774055346 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.777605955 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.776905971 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.782217156 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.774402091 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.779823933 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.77908424 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.778823266 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.779978036 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776771347 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.776782355 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.781711307 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.777067107 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.777592393 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.777805484 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.780016427 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.784719184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.785738642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.780111741 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.783658581 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.779317169 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.780271741 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.780367648 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.777682081 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.778801207 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794056427 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.784329603 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.78797657 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.783298997 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.77771137 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787373235 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.779654812 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.783573427 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.780034369 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.780884541 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.780026526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.77842557 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.775972699 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.782458511 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.77925793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78082548 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.77983077 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.781446811 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.77817358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.779774296 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.779278442 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.779907703 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.778728119 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.780193986 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.779485916 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.78634343 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.782390298 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.780983128 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.781512934 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788635437 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.781979801 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.782053238 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.780502811 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.780413392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.780860028 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.782596892 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.781680847 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.782905781 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.785296335 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.783327098 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.790674385 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.782649586 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792737704 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.781246741 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.783301305 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.786716149 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.777769949 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78092526 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.783616828 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.781318847 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.789088877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.780589052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.781639586 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.785249248 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.78046411 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.781261205 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.780922118 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.780375961 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780516644 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.781393077 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.791859369 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.782434491 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.785655446 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.785108411 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.77895281 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.781432689 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.780935159 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.781274816 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788706454 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.782323847 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.785007664 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.783385541 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.78301907 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.781015939 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.781684883 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.781991448 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.778305982 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.781986323 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.790723244 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.783400103 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.785269013 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.78276469 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.795619453 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.782516089 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791531555 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.782328537 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.784589927 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.782849723 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.781150424 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.786097285 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.783839679 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.786281998 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.784350778 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.784084464 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.785867514 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.783139389 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.789103078 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.783593093 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.783962212 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.784221581 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.793411754 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.802146815 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.784075274 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787000132 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.780946041 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.78512883 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.785732617 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.784068463 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.783156041 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.786909844 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.792163341 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.789310643 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.785092206 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.783935296 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785994669 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784744031 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.78329492 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.784620746 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.78362522 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.783963478 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.789762936 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.784163119 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790903395 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.784008581 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.786337267 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.787709522 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.785739984 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.796875432 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.784083482 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.786260417 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.784490997 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.784834459 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.787122994 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.786506386 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.784707052 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788133992 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.784407221 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.787451232 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.791050134 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.790707955 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.788787591 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.786158764 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.786812017 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.787551472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.787773718 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.785426792 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.785826316 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.786481857 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.788305376 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.785662629 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.79124238 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.785685419 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.785536187 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.787733643 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.786041871 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.789157436 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.792293126 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78849066 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.783242375 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.786330526 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.78572362 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.786247718 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.788347611 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.799031541 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788972434 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.795999187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.793468923 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.789995737 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.788055652 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.788743274 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.795118409 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.78661311 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.789631383 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.786903815 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.791337572 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.78895517 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.792960421 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.787606505 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.797657119 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.788532647 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.78836713 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.798570923 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.789695729 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.787139734 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.789193223 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.792235803 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.789641728 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.785437011 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.787626275 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.788130005 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.797991295 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.791863791 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.788277036 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79234632 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.786484752 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.789525594 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790763387 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.78766658 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.791219639 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.785584145 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.789254602 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.788135956 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.788575172 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.785633527 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.79002515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.790352388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.791500656 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.796509234 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.785913358 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79204855 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.791393755 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.790917621 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.788976107 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.789330467 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.785854661 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.787419514 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.79032426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.789164734 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.791634733 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.794194725 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.791226837 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.791358811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.789366559 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789718525 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792768306 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.798356268 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.795929755 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.786278791 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.790481348 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.791585855 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.793808354 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.78995545 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.790424843 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791721713 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.794430591 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.789759609 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789142117 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.790405356 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.792600161 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.80759171 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.789189124 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.792342128 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.792546399 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798072952 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.78971689 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.787750162 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.790819043 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.795097362 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.793904533 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.79708255 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.79116666 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79905637 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792145113 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.792481173 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.794235582 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.793489189 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.798432366 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.795297066 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.790842664 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.791195503 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.795845712 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.809293804 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791671638 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.800358667 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.819180962 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.794558223 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.793542938 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.793005254 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791512272 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.791663942 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.796447468 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.793741487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.792144975 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792608555 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.792256633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.793881652 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797888257 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.795220834 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.791846156 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.791385689 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.794129448 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.797134551 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.790546018 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.791746917 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.791469232 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.792036873 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.792685613 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.793082184 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.795444868 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.808047057 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.803957147 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.792333909 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.793748664 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.790214151 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.799681384 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.796366018 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80164347 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.798363888 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.793559964 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.793867453 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.796995761 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.793771616 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.790580952 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.795933747 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.794857367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793791604 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.791319887 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.808947628 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800919655 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.80135495 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.796212151 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795064298 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.793310589 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.798798809 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79444754 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795633133 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.799186332 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.796317435 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.797302889 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.792902569 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.794245488 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.798458519 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.800454961 seconds)
  done (took 1063.719947758 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.792441809 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.790816346 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.792036135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.793074914 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.791541119 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.792845424 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.792057083 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.792277137 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.792185876 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.79220584 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.792175043 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.791825761 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.792868421 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.792999525 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.793461497 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.792750684 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.792978562 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.792223505 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.792652906 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793129818 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.79284501 seconds)
  done (took 39.370802054 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.795456442 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.792523906 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.79225658 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.795959036 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.792507293 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.795665647 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792556214 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794923729 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795018858 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794011554 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.79546291 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796240353 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.793113875 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.79266338 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793635398 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796246564 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.7958006 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793586678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.795756748 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79373569 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79668592 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793120091 seconds)
  done (took 41.206109065 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.797648259 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.797381462 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.797264973 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.794898595 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.796664205 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.795109952 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.797502518 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.79674054 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.797844734 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.80081766 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.798659497 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.798830074 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.802954889 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.801048771 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.802068341 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.797430151 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.940847999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.798155705 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.797440037 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.798310637 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.794187061 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.805789697 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.794519073 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.794099023 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.79735382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.79842969 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.798020524 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.797114328 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.798310801 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.798744888 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.801315252 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.797922637 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.799006883 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.801562197 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.799093113 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.79983083 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.801280676 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.799188535 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.796105327 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.798087011 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.808064523 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.814504451 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.798588692 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.809499629 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.798041962 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.798455798 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.802080488 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.805250004 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.796350466 seconds)
  done (took 90.041173933 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.799210432 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.799129033 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.795976769 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.799734254 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.79977762 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.799266906 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.798457419 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.79934504 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.795901362 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.796665133 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.800118975 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.797437901 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797763052 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.80024569 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.799849695 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.797736302 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.797615143 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797566674 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.798596673 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.799259681 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.797986141 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.800826949 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.800296899 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.798847656 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.800185248 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.797963202 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.797556311 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.800985709 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.797426411 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.79834427 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.800720441 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.801336907 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.801085124 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.797949183 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.798068769 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.800451035 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.802095275 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.798047176 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.800773251 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.798299068 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.801938885 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.801461179 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.800748271 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.801448308 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.799239301 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.798508823 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.798575243 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.79898156 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.799386769 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.800975303 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.801496133 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.798861335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80154283 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.79882399 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.80071758 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.801206797 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.799214123 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.79908446 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.802492382 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.79941963 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.800302038 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.802042531 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.798787867 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.802584483 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.801609349 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.800246442 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.800300662 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.80214149 seconds)
  done (took 124.106287043 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.802898419 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.803180948 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802609583 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802791523 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.802831996 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.803098395 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804038649 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.803515799 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.804252581 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.803299887 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.804175841 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803638854 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.803414425 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.802888309 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.802653838 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.803038092 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.803979282 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804645863 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.803710263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802949659 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.803395437 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.803847485 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.805487174 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.803973212 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.80423144 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.804479032 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804057123 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.803729546 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805664557 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.803950989 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.804642569 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.803816702 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.804233445 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.804832486 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.805102978 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.804497926 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.804148291 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804696486 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.80526215 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.804524418 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.804585914 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.804966444 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.805210812 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.805037207 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.804699698 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.805200499 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.806215442 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.805469258 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.805089716 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.805684982 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.806458338 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.805798604 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805854161 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805437453 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.805145807 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.805503668 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806252183 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.806323443 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.805968154 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.805512975 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.805615297 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.806091415 seconds)
  done (took 113.617357091 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.806330602 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.806101824 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.802927681 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.803063376 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.805715424 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.803044329 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.805568375 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.805590217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.806858167 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.805288477 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806446352 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.804799871 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.803220569 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806278843 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.803419707 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804136626 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80335682 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.804140648 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806199273 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.804139498 seconds)
  done (took 37.835793854 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.803405203 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.805687418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.804343338 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.804147809 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.807243485 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.804319332 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.807058598 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.80751347 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804552479 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806626659 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.807043297 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.806754531 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.804465238 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.803950055 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.807403014 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.80451207 seconds)
  done (took 30.629486283 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.805021075 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.806577624 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.807875818 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.808026591 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.805096023 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.805820654 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.807939095 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.806901635 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.805273351 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.808516162 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.808716643 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.808916738 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.80904477 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.808610564 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.805142942 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.808130841 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.806177571 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.805531484 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.80836451 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.809542937 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.807229308 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.80645609 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.808600532 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.808718623 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.805850516 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.806291768 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.80612136 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.806430394 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.806395109 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808645823 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.80590145 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.80636714 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.805871965 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.806894264 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.81068247 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.806787722 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.810203954 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.808662786 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.808925476 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.809202585 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.809336007 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.806683996 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.809329657 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.809058149 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.807117375 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.808859222 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.807358372 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.80731857 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.80685055 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.806959212 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.809976654 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.811390879 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.810649683 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.81072743 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.810139229 seconds)
  done (took 101.169745897 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.811010374 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810839858 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.807668218 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.810552039 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.810089331 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.808542782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.81041653 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.808361355 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80856057 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.810651718 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.809509465 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.811398705 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.808750854 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811113918 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.809876984 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810100545 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.808848708 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808830647 seconds)
  done (took 34.319549926 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.808268227 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.809297266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.811920391 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.808126175 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.808879647 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.8118124 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.808776648 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.811078228 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811303787 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.808891187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809603613 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.811639992 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811407247 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.811581526 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80957189 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809166239 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.812299202 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.811471373 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.809472363 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.809070661 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.81225494 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811236279 seconds)
  done (took 41.572309602 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.812863196 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.81309701 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.828595688 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.852885276 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.839294404 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.812220666 seconds)
  done (took 12.704535221 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810775026 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.812501883 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810671328 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813991047 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812775753 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811192604 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809923396 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810277899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812442059 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811373452 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810706613 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812813609 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813211471 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810638524 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813120741 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813803149 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810462516 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810917575 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812047706 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814747696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811344408 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81413951 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811276131 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811480751 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811090426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811976951 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.81417037 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811940044 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811907536 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81448996 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813894737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812255199 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814670183 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.811555769 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814849944 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813990592 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.811384223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815510208 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814148025 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812219724 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.8142322 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814858531 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814015836 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812476077 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814552137 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812134026 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811706689 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813123226 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812129961 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815173105 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814642904 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812772111 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814429082 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814572163 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815037523 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816072748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813215569 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.812215061 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815136753 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813120567 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813095527 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81579546 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.812720765 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813413483 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815461931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814044918 seconds)
  done (took 121.405680158 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813294524 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.813677979 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813986631 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814912762 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813311988 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814498632 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813353267 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814333798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813858006 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813788787 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81677156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814754224 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813284534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813752528 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814687346 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814558529 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814501859 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815307568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814094073 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817778289 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814062957 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814198141 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813668722 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814344708 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815251066 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817290361 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814770162 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814548574 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814762364 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814063666 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814193491 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815178007 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814840581 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81535727 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814915893 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814763092 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814901945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815529714 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815406331 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81754987 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815081197 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818344069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815461231 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814908199 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816287076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814822565 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81577135 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816112045 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815288311 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815527016 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815852286 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816137504 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816630807 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816213098 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816665912 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816802065 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816356061 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816494588 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817005852 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818751566 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816290104 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816687074 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81904382 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816147139 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817322067 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816425156 seconds)
  done (took 121.566093806 seconds)
done (took 2480.670779129 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.885641994 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.881952464 seconds)
  done (took 15.519889828 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.982480793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.93329358 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.821769926 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.865608331 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.822660534 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.84358621 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.820234004 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.822722083 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.822398882 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.822017828 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.82172496 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.007563668 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.824188368 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.82281423 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.82297529 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915402661 seconds)
  done (took 51.542541702 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.826109154 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.82691443 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.8345022 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.828029609 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.825840164 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.837848899 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.85639039 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.828880228 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.85908357 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.836396969 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.892614776 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.834127617 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.826197746 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874529326 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.836449641 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.840714388 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.911428992 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.897787321 seconds)
  done (took 35.03182633 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.902348627 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.825865068 seconds)
  done (took 10.49065267 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.829120269 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.827740139 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.833101983 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.848293439 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.823928309 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.844264797 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.860092886 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.846823343 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.857406566 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.855911047 seconds)
  done (took 70.194284138 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.832483115 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.827988272 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.828480659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.826593479 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.820060101 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.824274997 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.826623761 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.824656451 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.504407185 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.860743793 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.832250255 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.831935121 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.826350217 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8279861 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.823737906 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.848248794 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.952735286 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.824352481 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.823568769 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.832914684 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.827138024 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.920195755 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.840162812 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.826274981 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.855590684 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.500575843 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.834809939 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.833752973 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.964692735 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.824476834 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.827193309 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.827949726 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.830001638 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.213653439 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.152035541 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.826009866 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.836407859 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.835172365 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.824131047 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.999213362 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.829047797 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.832953621 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.810737759 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.13477017 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.911002663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.868764733 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.182109975 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.831394383 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.829460938 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.857762712 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.830502672 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.830272729 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.841769041 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.336109088 seconds)
  done (took 130.488664462 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.822935231 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.399770463 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987552105 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.823817703 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105702559 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.06452686 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.825063284 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.872901081 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.825761229 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.072183311 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.000639553 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.942067558 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824407917 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.824035626 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.825785832 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.822523569 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.976801938 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.894444399 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.826312614 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.823583173 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859878388 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089346683 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.951603702 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.825746446 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.847899872 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052424001 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.95041467 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940648517 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.350058118 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.823415433 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.892532703 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.82507484 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.823144679 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.823375985 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989616134 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.931296156 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921642751 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.824781615 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.824210033 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.823803462 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.487966938 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.047420233 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.935796763 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.962202935 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.072875433 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052758953 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.471437533 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.823731757 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.460541043 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.022322491 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.033816953 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.077912386 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.95362826 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.82674343 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.070943315 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.824798043 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824107578 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087608325 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051448643 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.939234198 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.826663576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.826666482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.824113983 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.140594724 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828127843 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.935512187 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.828360966 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828438055 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938434255 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.941182308 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.054413524 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068868993 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.856745355 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.722831224 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.334792211 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.109782264 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897771078 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088759416 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.828761179 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.826329269 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919709745 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.57693638 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.001033812 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.142049483 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.090817596 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868593033 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430035495 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.826385665 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.074115841 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.076010071 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.056160598 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07164549 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.992971705 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.129022485 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.827065484 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.825708692 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.022102041 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960545053 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.82918323 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.190680929 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076173974 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.557125521 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.85813487 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.131730007 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.964972375 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.820398447 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.454819382 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828385972 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.029083612 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.870296692 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.828453061 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.828536905 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.074199927 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.699942559 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829385961 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.614698369 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.894253126 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.830610467 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093123678 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831092791 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070099227 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831929826 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.139823703 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.565091106 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.873180157 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023520924 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.072129251 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.624006553 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097258605 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.141997399 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.952836901 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.087548064 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.657542044 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.831798246 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112723644 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.830900629 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.830090476 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.999502149 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830738439 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.98519038 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.831963658 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.089869222 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.855209331 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999105837 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832769885 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.103448742 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.875068933 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882844377 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.831203979 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.948484596 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.832523363 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.878417437 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015921935 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832009595 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831809451 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.399539733 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.831890727 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.978911311 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.128327183 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854839961 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901875013 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.357895437 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.83007111 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.925498161 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860173213 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.435389552 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.831375705 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.002273246 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.833779291 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.789342744 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.830661366 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.141695898 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.057179725 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.833288495 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.832245034 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.625433698 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.538645345 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.830739635 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.007654455 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.07905374 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.482485796 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051692103 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833212086 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963984575 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.834559275 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.91313968 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.182149597 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.832087415 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.831827488 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.832521524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.831006615 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833736081 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.059422229 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.86147824 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.516516581 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.969756933 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076039148 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.145053405 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.09459809 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.881767719 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83535635 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098725102 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.836546564 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.89994828 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.834945723 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.856836672 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081103762 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.835256369 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062226029 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.119010614 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.880315262 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.883756179 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.835112542 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.833492148 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.832835237 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.977780282 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933627566 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.835567839 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.83403975 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.951458603 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959745387 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022846776 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.428067036 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.009952033 seconds)
  done (took 895.107130144 seconds)
done (took 1210.127567082 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.832613392 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.834223952 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.82157029 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.836817164 seconds)
  done (took 29.09913255 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.841778484 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.839922849 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.840606424 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.840095952 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.842692659 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.840517973 seconds)
  done (took 12.816165656 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.89244592 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.835124884 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.835861223 seconds)
  done (took 21.336195336 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.907942582 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.241097295 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.94460872 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.280671572 seconds)
  done (took 10.145493291 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.842351158 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.842000761 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.841965874 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.843649709 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.843030808 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.844057182 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.842947206 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.844265858 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.843831794 seconds)
  done (took 18.361825195 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.902619928 seconds)
done (took 97.433798439 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.981798827 seconds)
    (2/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.655272915 seconds)
    (3/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.041476486 seconds)
    (4/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.089778136 seconds)
    (5/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.036230315 seconds)
    (6/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.941205795 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.887566848 seconds)
    (8/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.112946952 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.97909562 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.058536562 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.878530339 seconds)
    (12/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.199356213 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.862649921 seconds)
    (14/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.93658974 seconds)
    (15/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.000620172 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.134579338 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.135604186 seconds)
    (18/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.857318295 seconds)
    (19/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.492696289 seconds)
    (20/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.949244199 seconds)
    (21/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.732913983 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.930022122 seconds)
    (23/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.857190763 seconds)
    (24/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.944251388 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.91909161 seconds)
    (26/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.861221691 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.500874743 seconds)
    (28/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.761321239 seconds)
    (29/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.116629097 seconds)
    (30/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.426607519 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.212701787 seconds)
    (32/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.498200942 seconds)
    (33/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.968524229 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.944133681 seconds)
    (35/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.037036877 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.967044357 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.838066376 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.746801366 seconds)
    (39/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.827292548 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.248033496 seconds)
    (41/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.846006742 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.980324757 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.942478815 seconds)
    (44/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.822707433 seconds)
    (45/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.93842737 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.822697304 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.683049323 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.918366054 seconds)
    (49/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.177544458 seconds)
    (50/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.416351073 seconds)
    (51/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.137253776 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.221020127 seconds)
    (53/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.949900799 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.838997902 seconds)
    (55/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.988068071 seconds)
    (56/309) benchmarking ("map", identity, Int8, true)...
    done (took 3.114254638 seconds)
    (57/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.188168053 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.950755493 seconds)
    (59/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.964358854 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.093724968 seconds)
    (61/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.983981988 seconds)
    (62/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.839795225 seconds)
    (63/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.977782279 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.916924095 seconds)
    (65/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.839972401 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.230374251 seconds)
    (67/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.841292604 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 9.468787463 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.966587399 seconds)
    (70/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.320943515 seconds)
    (71/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.051736089 seconds)
    (72/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.34251031 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.919640944 seconds)
    (74/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.130910327 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.199881791 seconds)
    (76/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.974834957 seconds)
    (77/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.948101661 seconds)
    (78/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.865852019 seconds)
    (79/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.038338838 seconds)
    (80/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.973598611 seconds)
    (81/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.356829694 seconds)
    (82/309) benchmarking ("sort", Float32, false)...
    done (took 5.61679888 seconds)
    (83/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.092372948 seconds)
    (84/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.929972526 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.824923426 seconds)
    (86/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.025418367 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.911524621 seconds)
    (88/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.143997651 seconds)
    (89/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.420967293 seconds)
    (90/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.008123789 seconds)
    (91/309) benchmarking ("sort", Int64, false)...
    done (took 5.51827653 seconds)
    (92/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.792416497 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.869860279 seconds)
    (94/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.142937375 seconds)
    (95/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085119009 seconds)
    (96/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.926067933 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.96367542 seconds)
    (98/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.210949046 seconds)
    (99/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.112914528 seconds)
    (100/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.442024896 seconds)
    (101/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.971083612 seconds)
    (102/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.929741289 seconds)
    (103/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.181064191 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.081201154 seconds)
    (105/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.389766761 seconds)
    (106/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.829242055 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.784373541 seconds)
    (108/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.844034959 seconds)
    (109/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.828685904 seconds)
    (110/309) benchmarking ("sort", Int8, false)...
    done (took 6.276523297 seconds)
    (111/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.173969396 seconds)
    (112/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.141076508 seconds)
    (113/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.845745463 seconds)
    (114/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.938526039 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.845202725 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.348081856 seconds)
    (117/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016005404 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.054231487 seconds)
    (119/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.899450277 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.746477681 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.225915535 seconds)
    (122/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.278835434 seconds)
    (123/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.898588455 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.84486972 seconds)
    (125/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.97300053 seconds)
    (126/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.136999678 seconds)
    (127/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.974528561 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.506002324 seconds)
    (129/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.874184858 seconds)
    (130/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.135739809 seconds)
    (131/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.684329043 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.63009697 seconds)
    (133/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.9214219 seconds)
    (134/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.847293928 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.852207168 seconds)
    (136/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.874562845 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.937739577 seconds)
    (138/309) benchmarking ("sort", Bool, false)...
    done (took 2.293638066 seconds)
    (139/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.867835907 seconds)
    (140/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.960381553 seconds)
    (141/309) benchmarking ("sort", Float64, false)...
    done (took 5.644948313 seconds)
    (142/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.12402075 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.091132657 seconds)
    (144/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.388783979 seconds)
    (145/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.065190132 seconds)
    (146/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.038211625 seconds)
    (147/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.066771387 seconds)
    (148/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.034722946 seconds)
    (149/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.071205585 seconds)
    (150/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.108448071 seconds)
    (151/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.197768256 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.908282722 seconds)
    (153/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.027674125 seconds)
    (154/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.474763255 seconds)
    (155/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.947208377 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.869649695 seconds)
    (157/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.845346167 seconds)
    (158/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.674607462 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.174695707 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.848582879 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.065419371 seconds)
    (162/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.873048584 seconds)
    (163/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.263974953 seconds)
    (164/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.186703373 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.535298944 seconds)
    (166/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.847301422 seconds)
    (167/309) benchmarking ("sort", BigInt, false)...
    done (took 6.865381092 seconds)
    (168/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.050910345 seconds)
    (169/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.860681564 seconds)
    (170/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.866666658 seconds)
    (171/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.845547965 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.176099976 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.996587891 seconds)
    (174/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.338062527 seconds)
    (175/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.930797778 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.870534115 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.851547966 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.882033067 seconds)
    (179/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.026572555 seconds)
    (180/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.022189458 seconds)
    (181/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.25228583 seconds)
    (182/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.004574588 seconds)
    (183/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.539356824 seconds)
    (184/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.873288641 seconds)
    (185/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940746705 seconds)
    (186/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.121557478 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.226699315 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.066559054 seconds)
    (189/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.852013411 seconds)
    (190/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.935550277 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.195470081 seconds)
    (192/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.151357683 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.187193982 seconds)
    (194/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.738658443 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.873572307 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.137373713 seconds)
    (197/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.914084462 seconds)
    (198/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.880716541 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.887629672 seconds)
    (200/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.796865557 seconds)
    (201/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.354180412 seconds)
    (202/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.836112441 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.764591624 seconds)
    (204/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.995605158 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.833985199 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.997512199 seconds)
    (207/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.452218351 seconds)
    (208/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.135249289 seconds)
    (209/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.20899014 seconds)
    (210/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.730181167 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.849960507 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.899913511 seconds)
    (213/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.409200665 seconds)
    (214/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.923751407 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.174406358 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.851459966 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.901456935 seconds)
    (218/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.072789907 seconds)
    (219/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.136302352 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.03162775 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.576480707 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.049068141 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.833794845 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.933824698 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.899006227 seconds)
    (226/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.912032252 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.932980353 seconds)
    (228/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.993399904 seconds)
    (229/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.873845286 seconds)
    (230/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.929905374 seconds)
    (231/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.065165337 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.447523422 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.73365691 seconds)
    (234/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.018664033 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.890419987 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.30106196 seconds)
    (237/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.063830959 seconds)
    (238/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.011683011 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.840958036 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.880408722 seconds)
    (241/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.849988412 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.39190253 seconds)
    (243/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.136812898 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.8760725 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.08183943 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.18219301 seconds)
    (247/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.197214863 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.265806306 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.44589929 seconds)
    (250/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.851829547 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 8.922659603 seconds)
    (252/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.854213882 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.852323529 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.966763225 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.915574172 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.217944165 seconds)
    (257/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.836334315 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.27947364 seconds)
    (259/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.004535543 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.240753335 seconds)
    (261/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.044317348 seconds)
    (262/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.854189186 seconds)
    (263/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 4.390358035 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.652206463 seconds)
    (265/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.842053326 seconds)
    (266/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.819715598 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.939550634 seconds)
    (268/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.878984844 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.237430147 seconds)
    (270/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.448223424 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.151084066 seconds)
    (272/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.163478435 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.839732412 seconds)
    (274/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.246820518 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.497342209 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.842529493 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.859700321 seconds)
    (278/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 7.909635216 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.935687076 seconds)
    (280/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.866141503 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.933212601 seconds)
    (282/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.366558068 seconds)
    (283/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.853412662 seconds)
    (284/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.021662425 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.95187608 seconds)
    (286/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.853587108 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.016175373 seconds)
    (288/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.915381606 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.00654028 seconds)
    (290/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.853617217 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.897445912 seconds)
    (292/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.958599831 seconds)
    (293/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.085929937 seconds)
    (294/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.984048218 seconds)
    (295/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.1206909 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.896811506 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.861783387 seconds)
    (298/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.232701449 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.841497829 seconds)
    (300/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.878442621 seconds)
    (301/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.865832648 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.874558262 seconds)
    (303/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.867799883 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.031020669 seconds)
    (305/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.027251996 seconds)
    (306/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.937783913 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.758930236 seconds)
    (308/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.844753409 seconds)
    (309/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.370755834 seconds)
  done (took 1015.61514265 seconds)
done (took 1017.401276435 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.889318732 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880400772 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.865148648 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.885387054 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.976027663 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.896678998 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.874898393 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.86775012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.912054882 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.913760278 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.864171332 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.897892296 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.866650723 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.865378406 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.863823609 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.879131882 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.169005587 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.88771569 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.881668069 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.874460008 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.881194039 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.863745681 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.914033067 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.898761397 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.868620617 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.868292502 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.867913943 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.884692064 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.977717117 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.869287632 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.868483983 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.877406897 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.169212873 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.885652652 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.861518242 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.885689359 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.877223913 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.876171476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.869756491 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.898486036 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.30036968 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.871554009 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.868720289 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.867562358 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.867813266 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.872347985 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.868056663 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.872380086 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.880266897 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.88168273 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.297928577 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.887710797 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.870573276 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.867258263 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.878002612 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.86755107 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.870664848 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.88301018 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.887640292 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.883694876 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.160085664 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.893757351 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.870445758 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.884043724 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.87462774 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335492778 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.868143342 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.872393116 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.300416689 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.878514317 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.336059212 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.881116376 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.868984399 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.882798008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.899913491 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.170626127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.884612654 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.866815704 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.875650375 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.867747307 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.877926285 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.880916592 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.873300564 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.86913769 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.881692732 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.900968184 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.879438757 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.870306223 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.878964219 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.888359682 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.877000911 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.880717259 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.872287454 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.86537378 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.878488413 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.873625877 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.871505492 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.872017249 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.873951664 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.880450352 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.301738988 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.891181926 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.865655488 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.866262284 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.869250174 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.883851607 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.299542377 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.875225243 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.891000079 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.918541287 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.871990167 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.162366936 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.895679885 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886204387 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.878695295 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.872686381 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.865511762 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.162622139 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.322841871 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.890298734 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.873315214 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.868838069 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886071898 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.872490216 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.867953849 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.174271318 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.893157579 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884295663 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.992401043 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.88236754 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.902120382 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.869796476 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.874817007 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.900334188 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.886637771 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.903328102 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.874214829 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887245097 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.88757687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.867636486 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.883185414 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.883071943 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.872691925 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.878058801 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.868328016 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.901244745 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884425028 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.884909284 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.892859713 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.994141111 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.870218674 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.16602393 seconds)
done (took 293.642035474 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.938533986 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.864742367 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.970045513 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.867585258 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.953046701 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.953788628 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.866142997 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.866391298 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.864806365 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.24889156 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.86599328 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.866393753 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.865815599 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.865678444 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.950769024 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.868097608 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.865039612 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.210468311 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.869789938 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.940154046 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.867100056 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.866438807 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.868628121 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.254868474 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.871405923 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869431598 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.940054115 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.869367812 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.219261802 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.864378829 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.867742471 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.218642764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.961398386 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.887612811 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.879427667 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.876893559 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.954675091 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.873093717 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.95028053 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.951211071 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.971601223 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.910981919 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.869346297 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.867161856 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.871632534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.870834257 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.867651466 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.897732472 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.8653355 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.86775793 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.212153229 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.880802637 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.868608597 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.86752818 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.868106835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.902255182 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.866823138 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.871450535 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.962063828 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.872720936 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.935192457 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.256421772 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.250408362 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.870579781 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871602674 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.868262813 seconds)
  done (took 184.359833031 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.937616855 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.946933896 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.938979422 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.875584008 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.923436967 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.945944958 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.875288158 seconds)
  done (took 15.245618153 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.878936552 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872411594 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.9234831 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.922446508 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.871275866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.023422334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.871600899 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.88388995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.868966826 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.926079206 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.873543591 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872292975 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.878096581 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.874027626 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.920941572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.884472305 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.9877402 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.874410294 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.87398693 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.030393988 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.871703003 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.878847521 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.929221766 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.885162209 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.874226197 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.879466299 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.45583735 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.872743814 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870238095 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.872265193 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870537845 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.913857443 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.872962733 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.871138181 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.871066533 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.989345699 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.872644612 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870079098 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.873919144 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.868737685 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.873302373 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.873830382 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.873640963 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.871243594 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.873644658 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.898717597 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.873592299 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.873743778 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.873306124 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.874152924 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.925725088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.874468277 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.871496889 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.870736623 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.931869103 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.881056648 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.87489458 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.871137435 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.874483563 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.870927603 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.031975182 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.922527987 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.875034476 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.922504166 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.874255766 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875225563 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.873857427 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.873481987 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.930137936 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.874185331 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.92365306 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.872113219 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.032789556 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.899385852 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.875549421 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.878224227 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.879196126 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.876322565 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.87630896 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.882193372 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.872538505 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.877299575 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.882571522 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.872928146 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 2.284449999 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.983873066 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.984764602 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.873012118 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.890105844 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.883330286 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.873022294 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.9303009 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.87670947 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.873215952 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.928574869 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.991682629 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.932670691 seconds)
  done (took 206.648080071 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.88132143 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.88459615 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.878039056 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.893291669 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.877691292 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.876817577 seconds)
  done (took 13.098936948 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.879516389 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.877306784 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.876424273 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.876728991 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.877606773 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.878414973 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.878266784 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.878837899 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.880704439 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.876626742 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.878945617 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.878244086 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.878915126 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.878379586 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.878530797 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.877076186 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.87835928 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.874698516 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.877556885 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.878267128 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.021473269 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.878474142 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.877909003 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.880476515 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.882094685 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.877928791 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.886828085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.878398551 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.877093681 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.883793482 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.881415512 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.880568868 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.879679309 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.884442136 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.882540542 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.880971911 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880730388 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.880791775 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.875369452 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.880329793 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.880394236 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.879847009 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.878554248 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.879806149 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.881651869 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.884025334 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.882997954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.888063847 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.880101469 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.881340785 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.880202196 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.878983821 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.880658756 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.880401516 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.88385642 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.884924907 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.883352653 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.880609598 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.879813011 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.881020101 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.879854543 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.880837554 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.881423147 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.884696968 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.886712066 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.881394561 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.881571375 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.883788689 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.880864347 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.879982508 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.880989994 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.877342818 seconds)
  done (took 138.330681868 seconds)
done (took 559.495552655 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.124099407 seconds)
  done (took 8.934239793 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.88536927 seconds)
  done (took 8.776573445 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.349015842 seconds)
  done (took 10.159514717 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917478994 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.887023684 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.88757138 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.885967419 seconds)
  done (took 29.396718391 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.925820418 seconds)
  done (took 8.736489238 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.886442049 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.873482964 seconds)
  done (took 15.603719059 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.946480694 seconds)
  done (took 8.757814899 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.975340612 seconds)
  done (took 8.790101763 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.875820263 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.889211462 seconds)
  done (took 15.587361471 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.860486466 seconds)
  done (took 8.670861676 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.568023892 seconds)
  done (took 11.390090131 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.876699683 seconds)
  done (took 8.699751753 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.916734916 seconds)
  done (took 8.728192526 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.873294092 seconds)
  done (took 9.684948887 seconds)
done (took 163.726619222 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.87753251 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.875686619 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.874804487 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.878626942 seconds)
  done (took 29.31854772 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.914501294 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.914191869 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.915915526 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.925855121 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.917666072 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.914374445 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.907171879 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.907409948 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.925322966 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.918560266 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.917615714 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.917618712 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.914695489 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.908074413 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.918041075 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.917337415 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.927204297 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.917372361 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.908489158 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.919087631 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.882882526 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.926883232 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.918578191 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.883768812 seconds)
  done (took 47.751661306 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.081008309 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.956207686 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.038465406 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.93627612 seconds)
  done (took 9.824732722 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.934128715 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.936199773 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.947384825 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.986292374 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.020111651 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.945783816 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.909300323 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.904558027 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.89082798 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.935987496 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.011785945 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.951995701 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.018822531 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.882861581 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.068846785 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.883632745 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.882690929 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.934979799 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.986414101 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.001112009 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.883578642 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.934790883 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.938513954 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.952653873 seconds)
  done (took 48.557033709 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.882150242 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.890744165 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.889482234 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.882296833 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.882206528 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.882871014 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.889480264 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.883366017 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.904499824 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.884893134 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.881624576 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.88284401 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.882993115 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.883456264 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.88340055 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.896499608 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.897088499 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.88344561 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.887239591 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.889801892 seconds)
  done (took 39.555066097 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.879177898 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.732809101 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.231106652 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.135275815 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.878496415 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.882543212 seconds)
  done (took 31.554105875 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.897686006 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.946696242 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891265648 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.940683007 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.020921274 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.891245247 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.886232576 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.951474792 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.992538441 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954276038 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.903915517 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.910976231 seconds)
  done (took 25.001808543 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.881303791 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.883188098 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.882674529 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.898932928 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.896469749 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.893878351 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.893548653 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.880262171 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.900002501 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.904159713 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.892824323 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.898794323 seconds)
  done (took 44.525104461 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968262003 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.927716348 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.914327779 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.558640095 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261408566 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.092318105 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.485342037 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.211612371 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.885791138 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.15482482 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.832912614 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983118404 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.137729954 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.289627931 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.909809286 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.341406846 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168287504 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090499671 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907470446 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505098138 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941066584 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.965405008 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.618983607 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.933057675 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.093072006 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010303477 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.143114431 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.882433055 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013857534 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918359968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892823599 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.882662158 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.155800094 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.25459002 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987155488 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89257242 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.499598074 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.595967343 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.948766376 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.51306602 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.512485743 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990225878 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89375448 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.882077393 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.816774935 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.934684324 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253375339 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.889863291 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.595212473 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.882941866 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894415689 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977520408 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.887086701 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.698783216 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.803846667 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.888631303 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.881043798 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891181268 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458455333 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936087114 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.967877157 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.854511075 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.973722788 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587708637 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256759522 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.026264959 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.88820306 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888079944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818610044 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.510970052 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936104164 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.213775358 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.905407633 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533979298 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.174455135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.893281073 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825400203 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.150080487 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.329520369 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.852482615 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.112189089 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885299823 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821369359 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.833986958 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.820338717 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135971697 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921287336 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.659162317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924675039 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.211459664 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.896608143 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905009422 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909113882 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108930107 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.770176712 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885215546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.60216508 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027609259 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906996477 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.214469605 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821178466 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.889045257 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141951052 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.097796784 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.860703153 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.374586213 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.032496093 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363593878 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.934832893 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.944059647 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.929658055 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.147196195 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937048842 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.947587385 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937189499 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886805707 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178500658 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.384245926 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.017766931 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.8429055 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.010442644 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201188914 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913002094 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969326018 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895555998 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887338207 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.593243102 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.434644714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.887911415 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.889864126 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.855372975 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931559992 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.88823998 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832466689 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.517808673 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.835011619 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.901748419 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112864551 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.371103844 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.196282634 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822754943 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216150505 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.9433992 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.112067014 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.524106668 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.952910836 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150052075 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860451789 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903979523 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933680652 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907232742 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986933385 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910906021 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.948285527 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.179659212 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.893446306 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.893212442 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.614322716 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.922740386 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889325668 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.894320654 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.641763584 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.154169535 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908263382 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.896075976 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.779746154 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.903823441 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954203402 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896101927 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.900234512 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.431549835 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.603775271 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.899636232 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.481176583 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115006833 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90143053 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.599498884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.001936946 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.972632764 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.152577677 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.943836299 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.824754971 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.601810585 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.583863942 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89110987 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825112943 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.89117596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899879436 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903323531 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.088026818 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.155279918 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928843276 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.515716596 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.929461207 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902469805 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.89596773 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892682612 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.404621652 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.948403291 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.981581513 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.935902873 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036246101 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.906001641 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.826299249 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.895939012 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.896570057 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.891878767 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.892890911 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924433756 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.5256566 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.269329446 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155750347 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.5014258 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907432083 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.556463645 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.946125697 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.894475997 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.49077247 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.092476642 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.9299787 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922818647 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.903921627 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.596167949 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.596187464 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463245899 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196773599 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179259998 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309354133 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.004330904 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.920228135 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.228768486 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829718519 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.451119372 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950227388 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.232648025 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839380837 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.978448627 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.533043637 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226538574 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908623794 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.121600102 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.267621297 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.548392518 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.020496196 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106281352 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929293146 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.954596904 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.852550464 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.417813179 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034281292 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.510351112 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084412768 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225693329 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.500523228 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.003623415 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.894800082 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.567440978 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978841686 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.606628774 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.067178024 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.005929709 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.767310093 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.346035355 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902715895 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.120610221 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234356017 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.967298392 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.013367852 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.832781205 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90652451 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.906738078 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.89754453 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.894354104 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.76739155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.152959572 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907030802 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.830889655 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.932275901 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176055643 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.791805975 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.902213299 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.895620684 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178350675 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358228435 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057652671 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.90340651 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.413443757 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903633 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.831541553 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831189807 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.590155895 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.90203575 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.871502395 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.096180427 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.997154131 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.807525494 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.888373105 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.141543991 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154174653 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.911500459 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155544248 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.166298548 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.594853536 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921921828 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.997516835 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.49742309 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.991001951 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.897922692 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133241069 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649354579 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.124892901 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.913338565 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.846857343 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898156233 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113884296 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.89944415 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.732466865 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11064887 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621295362 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.907644798 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200724705 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966077332 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.725900081 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.926070494 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.989989383 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908972667 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97813203 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.909394157 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.909887484 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.910427044 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945159649 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.731781883 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.006704829 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.91257187 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993341932 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965004772 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.421277583 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.905252394 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.162148973 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245431264 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.209919497 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951959961 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.899782691 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901430017 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.83465981 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049101607 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.126909214 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174083626 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.029346473 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.014706407 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924327086 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.502507687 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.004271285 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136792209 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175417858 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.795585742 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.330875907 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935052534 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.900378193 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.91155529 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.112263157 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102466798 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190715785 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036781858 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.890757628 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254678556 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176187744 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.901023878 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901173782 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491123191 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.996511042 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.581489265 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.940078935 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.744617397 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159969559 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912020462 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.290619463 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.925072837 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.062435894 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.675348416 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.531244147 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.18845621 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.882523566 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.955451385 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163767778 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.263127889 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208777035 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970662537 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.914218884 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.01346644 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049698389 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.776890301 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904000949 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903072192 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.950687708 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.612831601 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.911743672 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.169997859 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.207014891 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.901235915 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.77684115 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927683183 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.914540908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127006189 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166247918 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.153792222 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.912891322 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909216731 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.719578306 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.168364722 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955412911 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837752574 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.907670469 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001863447 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.15223808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923639507 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.357014071 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.61523678 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170855184 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.902216279 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926537389 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.974583298 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.252036851 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211547281 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.433923207 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.112060833 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.489552705 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.43813777 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.201421854 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.910148614 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.974977257 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205386648 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.909065674 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.896473145 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942763158 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.162645608 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212114894 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.915223562 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.548833573 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.873795625 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.248114222 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.468547658 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.845317188 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915085389 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.96612259 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.905619345 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034997872 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916970928 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.778516504 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.976221614 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.685163774 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.178856949 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.911439438 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.898787491 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.596381456 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.088347361 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939478153 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048012255 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909082961 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.581127978 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.258115228 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163831922 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.897440708 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.913553691 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.912597105 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90738855 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.893398234 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.102888659 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.104144414 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173007508 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.919589855 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.941585688 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.911723328 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.123692131 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118358241 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.73070036 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.029648256 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900642397 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.945701784 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.849517953 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.415152644 seconds)
  done (took 1679.418502096 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.933380435 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.934085653 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.946713527 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.973882919 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937737322 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.937424963 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.977305545 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.981192468 seconds)
  done (took 57.464812645 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.908695024 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.129383865 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.918068911 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.909271864 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.918587213 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.909437075 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.072469255 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.917191909 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.917903138 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.919276966 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.91079399 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.909183719 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.216970902 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.930708433 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.910515034 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.89459426 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.919202927 seconds)
  done (took 75.078135397 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.909593335 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.958642902 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.93001394 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.921417019 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.981194097 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.917730287 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.77701552 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.917459542 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.912304314 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.049981538 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.541999412 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.920294341 seconds)
  done (took 87.584047474 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.919868215 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.917241662 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.917384443 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.91754767 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.917258025 seconds)
  done (took 11.436374104 seconds)
done (took 2188.904910587 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.164238537 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.12108709 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.126998854 seconds)
  done (took 6.093915784 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.058274419 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.107536981 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.250126399 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.250972714 seconds)
  done (took 10.514262917 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.200860205 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.296780421 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.122698742 seconds)
  done (took 8.465312972 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.307084431 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.921036122 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.015217842 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.90973704 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.912293531 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.912901153 seconds)
  done (took 22.581088491 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.913517076 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.915182493 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.913969689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.91666499 seconds)
  done (took 9.503348486 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.895700395 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.719172789 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.898255626 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.911141445 seconds)
  done (took 21.270099954 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.661377141 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.673596105 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.659561453 seconds)
  done (took 9.839280726 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.477543896 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.819087552 seconds)
  done (took 9.141398742 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.177092613 seconds)
  done (took 4.021781037 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.044070435 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.177860682 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.371847521 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.395706329 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.462130657 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.754184609 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.213919476 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.151564417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.304762419 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.334033489 seconds)
  done (took 25.054880482 seconds)
done (took 141.739471497 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.295961919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.935431102 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.125912207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.253506325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.144559054 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.126046756 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.314701542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.24042942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.769149409 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.759965176 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.25947099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.14387555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.483146588 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927027176 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.481518945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.929932039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.139506693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.319512617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.957026307 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.202727948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.314858635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.89398646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.094802861 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.911332585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.142169621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.077029351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.486985323 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.932620114 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.109979498 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.498447978 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.079961829 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.354164476 seconds)
  done (took 170.552026197 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.680667395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.91406956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914110933 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.912961628 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.35716782 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.914592879 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913159213 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.913601917 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.106216149 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.076161235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.913887032 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.347035667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.916668929 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.914656313 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.91648749 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914255292 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.230348527 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.724115323 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.914067304 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.914772784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.916566833 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.241333807 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914046653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.257755646 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.193365787 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.914917131 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.881911784 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.920427538 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.920680045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.922689956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.925325558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.914783096 seconds)
  done (took 209.181595813 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.914539481 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.915781176 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.914807589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.91536731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.916385693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.939126651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.917072363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.915310425 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.677334152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.660470606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.916993718 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.920815617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.9214154 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.915952441 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.919769746 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.914491953 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.92143838 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.921752951 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.923416618 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.924596432 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.928908679 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.636914362 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.917430579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.642740066 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.917122177 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.919500264 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.916830115 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923600128 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.927910544 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.927151262 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.927905777 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.916898925 seconds)
  done (took 222.251785625 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.11239003 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.920946583 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.922238217 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.86151294 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.922884177 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.922007198 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.921348092 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.113119597 seconds)
  done (took 19.569059701 seconds)
done (took 623.410915678 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.333605285 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.180372391 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.091349528 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.944134719 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.16663719 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.97648772 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.942306412 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.00286117 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.656056158 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.005136787 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.574855761 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.957024088 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.667437921 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.961139308 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.067394043 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.998546448 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.503021682 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589698853 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.112645554 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.006129185 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.105539471 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.899172182 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.013037933 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.691258607 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.685171881 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.939142972 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.123216608 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.51016462 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.949648956 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.104243017 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.669363474 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.325414964 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.951005785 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.940249728 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.991413204 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.97428268 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.299445343 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.949145713 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.066109369 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.707642837 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.988551367 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.545482816 seconds)
  done (took 105.017954635 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.914230371 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.913213644 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.912004899 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.913412644 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.913951907 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.912922537 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.912544516 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.912632084 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.912694829 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.912092156 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.912858376 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.914572696 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.913110238 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.914843456 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.913650415 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.912550504 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.913937347 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918870121 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.913494558 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.91345784 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.91458641 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.913095718 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.91461527 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.913725922 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.913732416 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.913998574 seconds)
  done (took 51.615812892 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.92606559 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.067910261 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.139001745 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.941495426 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.926315417 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.929408143 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.944582788 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.928879327 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.929859909 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.928836765 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.021853893 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.930616492 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.945128261 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.145011636 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.9389598 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.925820724 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.926927503 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.926999139 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.073613742 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.940512231 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.946801015 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.929823168 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.945473323 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.939595495 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.929105505 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.927365652 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.930943945 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.360893626 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.934377054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.022751319 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.970393879 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.94918553 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.331762685 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.153460592 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.978242943 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.93415644 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.92911636 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.028594747 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.933539495 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.929483965 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.945248294 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.932481232 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.143526424 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.421120913 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.937937155 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.927626813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.370838599 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.034084215 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.968618757 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.938616654 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.15028297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.941531678 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.929778495 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.9291837 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.965115039 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.938613607 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.927947199 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.23579307 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.938925856 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.946395378 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.932838167 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.930021474 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.079376101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.935686483 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.070377725 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.936121683 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.936405735 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.930338346 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.144414575 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.941783884 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.423681538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.938828581 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.928797616 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.02381356 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.07458396 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.395427524 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.939829421 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.086668212 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.335405504 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.951836934 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.936684116 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.3500273 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.954659479 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.937261813 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.931365694 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.930854253 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.929744105 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.973810269 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.946122658 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.359335948 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.424226344 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.244930887 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.956522413 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.945550469 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.931333263 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.2369339 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.936723976 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.930087944 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.14072028 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.435393825 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.941396995 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.940550047 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.413320893 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.94277486 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.949664839 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.939013253 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.150450858 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.942799758 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.974739635 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.932042891 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.937500688 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.934801031 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.949797466 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.938753039 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.932163145 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.401812027 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.040874184 seconds)
  done (took 238.456281683 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.926570395 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.94028322 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.926127953 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.927185738 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.925090426 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.93270746 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.925684644 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.926284083 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.932344625 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.926579128 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.925761612 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.929028574 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.92725842 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.931518737 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.433699089 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.938686734 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.542237777 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934225743 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.932433621 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.932470364 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.613345014 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.937608961 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.933301941 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.939073004 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.932533059 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.931799946 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.935633325 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.968493332 seconds)
  done (took 169.77061643 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.938477127 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.119878023 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.955746093 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.975296298 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.946628315 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.935532249 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.963123599 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.961600344 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.94391993 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.936121909 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.935189886 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.000369324 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.948733548 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.070900677 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.972032805 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969040581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.044722195 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.947635411 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.93720147 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.935935074 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.967458005 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.935781297 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.000436647 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.068015938 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.956878338 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.055492286 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.944638424 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.939521679 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.939520756 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.056755917 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.954038829 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.999936868 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.969055446 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.958796503 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.062508107 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.05779849 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047791359 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.97141131 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.944560304 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.939037119 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.938347106 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.928245119 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.059408488 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.958794254 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.941499345 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.048012358 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.958800963 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.941025667 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.94847203 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.938189125 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.95394802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.958710397 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.00899195 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073461607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.974414715 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.965441454 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.96561262 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.234488972 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.950152873 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.041164073 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.935842159 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.059112036 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.960643856 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.928704343 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.940141095 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.945607887 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.968909259 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.972288946 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.048407221 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.949405688 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.042588256 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.976432117 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.946055155 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.93966455 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.941931315 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.060710205 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.060837784 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.97659723 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.979021957 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.973806313 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.937826038 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.942613416 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.930509432 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.960275519 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.945863462 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.057218539 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.060791338 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.950292967 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.943211961 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.943320513 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.942759412 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.96830672 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066132174 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.978272547 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.040611102 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010626212 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.019124831 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.958004786 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.954687029 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.945391798 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.00694329 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.958029476 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.953225284 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.284466052 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.016841115 seconds)
  done (took 210.247263221 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.038027852 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.413717571 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.99854483 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.998840214 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.23388738 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.365347994 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.743765386 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.991144729 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.992174937 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.019675688 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.154431796 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.049969241 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.003981127 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.97958101 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.390064195 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.982107817 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.990046124 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.014919871 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.995681308 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.531985045 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291557147 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.110158307 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.988973833 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.109528343 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.974944098 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.2753842 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.317663198 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.380255448 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.026265066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.336065561 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.339668484 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.670141501 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.198741092 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.236575017 seconds)
  done (took 77.020200944 seconds)
done (took 853.979523732 seconds)
SAVING RESULT...
DONE!
