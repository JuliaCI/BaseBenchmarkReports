cset: moving following pidspec: 20700
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.283874538 seconds)
loading group "string"... done (took 0.623063427 seconds)
loading group "linalg"... done (took 7.581644215 seconds)
loading group "parallel"... done (took 0.155851946 seconds)
loading group "find"... done (took 1.118807282 seconds)
loading group "tuple"... done (took 1.744065944 seconds)
loading group "dates"... done (took 1.225197338 seconds)
loading group "micro"... done (took 0.33119159 seconds)
loading group "io"... done (took 0.945429834 seconds)
loading group "scalar"... done (took 36.887534894 seconds)
loading group "sparse"... done (took 11.542202164 seconds)
loading group "broadcast"... done (took 0.920234456 seconds)
loading group "union"... done (took 12.360220901 seconds)
loading group "simd"... done (took 4.35444953 seconds)
loading group "random"... done (took 8.789542947 seconds)
loading group "problem"... done (took 1.791236843 seconds)
loading group "array"... done (took 19.930494573 seconds)
loading group "misc"... done (took 1.642673449 seconds)
loading group "sort"... done (took 3.122814514 seconds)
loading group "collection"... done (took 17.157400113 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.533653519 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.129475863 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13831067 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.124875738 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153123496 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123439504 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129991686 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090004685 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.845763022 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156321513 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118311958 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410886917 seconds)
done (took 5.358083998 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.181410188 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087005415 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088231491 seconds)
  done (took 1.254891787 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071111292 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130910813 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.073922167 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072999254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073870568 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07228457 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072269003 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072426588 seconds)
  done (took 1.646629253 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07810422 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073022306 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071501593 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073251098 seconds)
  done (took 1.375226153 seconds)
done (took 5.619178711 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.773124487 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212549325 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190012595 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.395733352 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132754809 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178778355 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.651396681 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331499666 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190552382 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080042197 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112047194 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.347806526 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125974004 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.651123635 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081561015 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095114786 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142253406 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422731338 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07299818 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087359781 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094392479 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133949946 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08952649 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078909932 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.153073605 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073320637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138504216 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086041153 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071084128 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.217462414 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177826349 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.673643465 seconds)
  done (took 10.372653297 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103152653 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102799818 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074127375 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130279927 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104260285 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075187959 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080337212 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073071663 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096974151 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.133921752 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096748949 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110484069 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071636266 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074540869 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088521922 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213324884 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085164673 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08658585 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075696341 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083417369 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112513281 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083191239 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084900285 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085321588 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133928187 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.18595998 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103981747 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103128885 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072244587 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086537168 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119763674 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.135193855 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.072699158 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.071383437 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130731801 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100333346 seconds)
  done (took 4.765598183 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.981036278 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146587776 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093238791 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136511125 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070189013 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.112381952 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.07434449 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085416624 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211245727 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.439425956 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.586119005 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135467904 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115657435 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107716053 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073157638 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073552516 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072555912 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.479425363 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103827064 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111110293 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085761838 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075495388 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073859435 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070891844 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072262576 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069190724 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073390198 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116778819 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079484438 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30564082 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.124441109 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072994399 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.943108114 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.170389418 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071732797 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.243746523 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.169043644 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07317685 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094869914 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144322221 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074351573 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071274419 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162686733 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070149207 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075759757 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071670564 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089336645 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.109636477 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124610459 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.07088466 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071644731 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171683009 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070560401 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087432482 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.130153139 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15959836 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072419288 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293558866 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094828154 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075962132 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070523706 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176962679 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129145617 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.096558157 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07002027 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072916335 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07245091 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073955809 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074051479 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365296409 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071087658 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.92393639 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.076490081 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083465817 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074871347 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07520715 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078029884 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077752772 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093636526 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071368788 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081291131 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.071489593 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.072255282 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072036923 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087925497 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.480300505 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072418233 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073188542 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.07078182 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.095892612 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10030078 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072109744 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071012228 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10416891 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073712428 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071945443 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071694068 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070007214 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087992473 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074857556 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118122613 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.074594932 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.103741912 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104739143 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.073974973 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103549736 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083253315 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073031037 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.411940337 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.070341852 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073058678 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070474188 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072721912 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071465521 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085651164 seconds)
  done (took 22.137147558 seconds)
done (took 39.335893653 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244536366 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074003675 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074776237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075375616 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075340341 seconds)
  done (took 1.711378352 seconds)
done (took 2.867200969 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124693615 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102456275 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069928435 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101483404 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070166163 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107180115 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103674027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081729647 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103108821 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069903558 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.10065895 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070140225 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069930103 seconds)
  done (took 2.342838811 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088032845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089076152 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075348183 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08788134 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06896025 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087147264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086680985 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093712411 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086376338 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077877499 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06951401 seconds)
  done (took 2.059349245 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087036606 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088406697 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075187903 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086719613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071138851 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086468237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08638203 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090329501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086844729 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079298668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069290044 seconds)
  done (took 2.051050696 seconds)
done (took 7.600147038 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080652295 seconds)
  done (took 1.214884607 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.533391912 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.661797544 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084175368 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108383322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192414612 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.114909505 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.249497385 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.089021303 seconds)
  done (took 8.325167186 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093549664 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085892988 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073630192 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077415726 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074913801 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077171424 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07508759 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077492329 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076356505 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076880693 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074659964 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073491627 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074662163 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076777432 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07400826 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076981058 seconds)
  done (took 2.448455766 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096463438 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09564245 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07769473 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079368681 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077509403 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077032292 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079261348 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078634853 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075975251 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077212649 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.080063319 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077711758 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076479837 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068851667 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078943486 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081079347 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.07550018 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078745348 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079587782 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080544206 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079816516 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068423948 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076614525 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078629753 seconds)
  done (took 3.125812722 seconds)
done (took 16.260430216 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110783321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072669672 seconds)
  done (took 1.325222769 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08346769 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084847879 seconds)
  done (took 1.317748125 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084520037 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069617597 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091112081 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080816142 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070391984 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069984824 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089662555 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070179413 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070145037 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070232422 seconds)
  done (took 1.917332796 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07222417 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079215163 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.074310569 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083574484 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07713176 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068727798 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075251303 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071707228 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080025649 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067375448 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075522179 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087222671 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074689507 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089081419 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075855633 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072311215 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07512712 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071424753 seconds)
  done (took 2.524315991 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069389769 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070748653 seconds)
  done (took 1.294622605 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07049287 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067348271 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070562808 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071338155 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068067718 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06721356 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068105856 seconds)
  done (took 1.632683265 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.387826588 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120076607 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.304870364 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077623919 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086072145 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.257550132 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071862135 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076562683 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076250798 seconds)
  done (took 2.646486901 seconds)
done (took 13.816950299 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08511466 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092140974 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099879863 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380697918 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097329359 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072798299 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119731106 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.186006356 seconds)
done (took 2.30148434 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213110127 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.65826601 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404346644 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206926754 seconds)
  done (took 2.429781682 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.343523717 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092894108 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065819946 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073182423 seconds)
  done (took 1.743717223 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071692764 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074544362 seconds)
  done (took 1.310916517 seconds)
done (took 6.866215363 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.203441923 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071587304 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071227264 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.07148928 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.069041477 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071435899 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071340217 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.069202988 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069469995 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071433414 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.07131933 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068890523 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.071617671 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.07125462 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07108475 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069248993 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069527662 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071306221 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069385127 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069531425 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06897811 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071215352 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068710825 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06904147 seconds)
  done (took 3.01355521 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087333424 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070964241 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07595467 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075122271 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073309855 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075122206 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.074975461 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071076602 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075578305 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07329369 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073595054 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073238027 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073248975 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073684986 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073498538 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073202316 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075252807 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071263755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073424821 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073322418 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075587108 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071378313 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073433741 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075319862 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073312883 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072863267 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07377407 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071272978 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075427059 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073323644 seconds)
  done (took 3.396179885 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075353303 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.068739616 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068287807 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075525658 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067909492 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068725916 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068167685 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068863613 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06913622 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068119962 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069233542 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068110102 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068554002 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.069112078 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069132019 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072393506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.08465209 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068134088 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068001493 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068695517 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074515087 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068271349 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068626118 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067939889 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068638322 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067784668 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068285109 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068235571 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.069004761 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068227921 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072290401 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072509984 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06846192 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076006657 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072384575 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067892248 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07312007 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067973682 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068795181 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067945068 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06827415 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070028175 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067897778 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075859832 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068109768 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069828144 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068128096 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069429641 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069585027 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07024691 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068272414 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068111876 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070074023 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069114557 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072910925 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067662535 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069063934 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067850757 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069387169 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068274471 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068128689 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067681997 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071621514 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069470211 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085060634 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076320705 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068924154 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.070487056 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069227347 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072240493 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069972362 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083956718 seconds)
  done (took 6.237673864 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091638868 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.090857094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071022229 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070655785 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066560152 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068939262 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074722281 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069186145 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070814866 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088000042 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068976241 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07107678 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071198394 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072951987 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069173595 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071076212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077237095 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066619019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068813633 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072861748 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068924346 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07424656 seconds)
  done (took 2.805097801 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.151592226 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074555319 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109380465 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079294114 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074662671 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079535467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074582266 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075490593 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074867347 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072691667 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072501367 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074589247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074369954 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072361566 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072567955 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073107828 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075579568 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073020043 seconds)
  done (took 2.635007144 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081439943 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071189098 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092341278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070986085 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070873573 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07381802 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075346719 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079006295 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07327617 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071387724 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078760379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07353115 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073636611 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071288853 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073225464 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071336231 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074978297 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071647733 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078347115 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075722391 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075682549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078409218 seconds)
  done (took 2.83791621 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084592107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073115523 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086414734 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072599221 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06636605 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068459073 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074999811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070863457 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07507036 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07294161 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070821652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068994867 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073214279 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070960346 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07337648 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070697899 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072877566 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07161116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073032944 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066728711 seconds)
  done (took 2.6406589 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087913369 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072773046 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072515245 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078352034 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072609131 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07222385 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07854771 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072402518 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072286284 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092490137 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073334522 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07293876 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078256714 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078842268 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07233652 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078645291 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078311802 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079299985 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072196285 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072126368 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093561817 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072997575 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079150481 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072727487 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072077103 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072321865 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072184686 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076129904 seconds)
  done (took 3.324247098 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072142983 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071252094 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068967896 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068804859 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068865223 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069182677 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068707464 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069216595 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071859223 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069222711 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071571494 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071600925 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071185014 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071019992 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071583314 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.07106222 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071950564 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069347832 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069380801 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069047401 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071512099 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071370026 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071347717 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069193849 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069628692 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071496061 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069130192 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069815724 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07147427 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069805649 seconds)
  done (took 3.299925005 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079316209 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077417973 seconds)
  done (took 1.347569179 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067192166 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084523613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067529494 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07681339 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074677369 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072162535 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077875438 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074135999 seconds)
  done (took 1.780960974 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.0860607 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08025037 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071074784 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080168818 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079629652 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087777927 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.128106568 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070647298 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077780148 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069877688 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084123635 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070681241 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078070253 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07202988 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07740536 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079379409 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06864 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075153634 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07171804 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069388275 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071183794 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079717066 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074958595 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066405277 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072946046 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093694782 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081992046 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070123383 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07447627 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078768336 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0774932 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065254334 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07065786 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071176331 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068593412 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079740491 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084877038 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074586991 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079829499 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071574612 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078531682 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066674457 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075675112 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078995707 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08298383 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07078072 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071283641 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065958781 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070028695 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073615819 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066723871 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072313917 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065840419 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078949775 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075121498 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081937216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069776537 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073219419 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074615769 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074382983 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078401479 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073509236 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075119029 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070509215 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082153831 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076575769 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079328732 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06628085 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065613429 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069020078 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081030921 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094725322 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077430307 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070846017 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071782389 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068998648 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074791985 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071549753 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077160273 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078998062 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070414901 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075180933 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079443693 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072126761 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073877962 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077103431 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068788229 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073542208 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070216267 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086296652 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071921238 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068257122 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069648132 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081687722 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074593193 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069568349 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069112563 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078357381 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064551442 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069747109 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070371831 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072030238 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079699978 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073113864 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073710595 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079350145 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076646579 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071845328 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073065514 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066821086 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195743875 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072409148 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080215301 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066135225 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075365332 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.0737432 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0715155 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080242338 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069290571 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071300273 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080338912 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077717798 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069876198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068522884 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07501282 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071002449 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072718137 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079306877 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069388141 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066045153 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065899668 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07504188 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070480667 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075660269 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074236245 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074166573 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065224871 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068689505 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074682898 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078966546 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071925863 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073088762 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077597244 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072798554 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069527276 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078298259 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073819085 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071615764 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076424869 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072508516 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065682972 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072510633 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073999855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069367407 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075644973 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073009077 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073657876 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070647607 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069342797 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076500228 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071055945 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071311213 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072450712 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070021689 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081572765 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073551939 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066277459 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068327904 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077911019 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070106282 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.07041575 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071050224 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074359358 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07137179 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069030567 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070111302 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073586495 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078225252 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073544663 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071530766 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076714828 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083812998 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07018685 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074119479 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070343668 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071012724 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070950799 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.0805782 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.078121351 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074830095 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074292602 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068137494 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076514177 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079291749 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.071133821 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068885704 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.071005773 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074087521 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077465058 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074300664 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071202365 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069114501 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07237436 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073492568 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073507425 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069599073 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070485846 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074973729 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068618934 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07542953 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0703166 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081130178 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073786159 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065357004 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072844111 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06799696 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077041502 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065196732 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068968482 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07063765 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069802953 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068963483 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073021556 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064302106 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.20600337 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080417424 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07451886 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.071813163 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.07120797 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079272599 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.073785806 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075231633 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076513919 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077578322 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081856965 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07151681 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078346287 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081861371 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070752842 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065395776 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07662985 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069121454 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069472022 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069884311 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.068906708 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074434877 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077196417 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077979412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065554972 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074504747 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069345117 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071849516 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06615386 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076024678 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074434018 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07271177 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078097833 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071098031 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071321991 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074472366 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070201127 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070560724 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071790319 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07443172 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070351335 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073446823 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071176762 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073886623 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070368334 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069127275 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073013713 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070157122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071418629 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075998748 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070113687 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072507773 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074019678 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070453245 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.0727083 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071837592 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071268161 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074270216 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07273556 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07199221 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074007964 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066175139 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078741133 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070362334 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079152347 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071750019 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068105582 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076179926 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073746248 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075490321 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071344383 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070893572 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072827638 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07018183 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07434431 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078781137 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069907123 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08203284 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077835164 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07263002 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074603572 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072325477 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073165016 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.071258365 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072879875 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071330745 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072568326 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070732572 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076244719 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.074204627 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072263342 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073761476 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071837574 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072411147 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071617309 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065912129 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070737902 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070808641 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069959992 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079008912 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070090958 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070893161 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069085059 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070782863 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069068826 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067033403 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075474504 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076761847 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069945122 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076109935 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069522113 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072559596 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080344727 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06444353 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068036015 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198404879 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071181734 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07955741 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071501787 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081432146 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072516398 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071756268 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068267159 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071143139 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070394692 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065702209 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068483378 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074764527 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070702799 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069896533 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070618596 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073974416 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071058729 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079707318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070508046 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073001348 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070621536 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068589556 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070979155 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07165726 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074385539 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071016083 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069645836 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068568249 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070065734 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072832629 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.074148037 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070351059 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.074594456 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078119324 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070265957 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074540769 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073158603 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065447575 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.07483402 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070453071 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069882466 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071017474 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077541678 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074272766 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071501643 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080544048 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070367787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072464539 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070501547 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06837139 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.06996576 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.07016518 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070374812 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071141581 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071788821 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078995964 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069382057 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074574747 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072425566 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072098517 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077381233 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071108086 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07431423 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075576765 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072290423 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073298692 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079736176 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074077669 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075144891 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071429476 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072754722 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077025387 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071038675 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078195475 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072532813 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071462071 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073569308 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070043803 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071162861 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070840988 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069996193 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077194321 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071431633 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071184054 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071268011 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068823006 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07330336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072880309 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079606674 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074236582 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074673279 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066801049 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069076568 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071468102 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070087064 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073542291 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07461888 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076765076 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073274918 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071770937 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069497387 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080447989 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076850753 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074660916 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070093294 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074527918 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070166522 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072786912 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071824405 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071287486 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070709858 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074248745 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072177212 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069776631 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076233116 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073272204 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200900341 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074710716 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073786952 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073842576 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067201734 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071824318 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074477094 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077190717 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074238358 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071712717 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081853514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069985787 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072408904 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072776928 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070990331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076060408 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066095056 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073746186 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071664234 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071669602 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065987616 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071769324 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070031698 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074775893 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071352503 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066227215 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081462267 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080719373 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074620644 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069536917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069499239 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06602435 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066039155 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071488779 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071032066 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073883425 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081370744 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070885046 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070806247 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066327958 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07097927 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074914661 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.075307701 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068408441 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0660111 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071005007 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074426264 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077199126 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069230492 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071185364 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074491208 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073696738 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069341378 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073789535 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068490017 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075558801 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083721071 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071313683 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072690544 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077529021 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079745385 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071814463 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066102813 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07078058 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075177636 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072152943 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071332705 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071435775 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085934578 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074447095 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071119266 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069488848 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076532057 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071374441 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079616975 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071638338 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071167767 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076538062 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073600228 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078010664 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075178218 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07863231 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074598664 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075695912 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070002311 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07221138 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069189215 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071526532 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071856897 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071391083 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075429945 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.07768691 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.071563156 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082329153 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080503047 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073407404 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067735193 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070941067 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070896183 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066129988 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070802926 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068890148 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068781622 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068427614 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069378083 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072495598 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075243152 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071835165 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070220934 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069725067 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065048194 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073630437 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073143961 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071983466 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067155092 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069349906 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.201484767 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077010233 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073712347 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070673151 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07407412 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074804282 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073586463 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066670768 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07835042 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069942206 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074465119 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071234314 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070885882 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070965737 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075049135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075127934 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072125535 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073960498 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075460685 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0723704 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068393177 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068268263 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076548913 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069011734 seconds)
  done (took 45.423500867 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103798531 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067326177 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066088247 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066302508 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07605502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06769701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066236519 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067587731 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068009943 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069523488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06651965 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066590529 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074051033 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081212263 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076540172 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07083185 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066886868 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067326589 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066427319 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067646239 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.0741004 seconds)
  done (took 2.766384208 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07666082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081653039 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078633618 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086316798 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075265008 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074236121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078851411 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074254403 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082208068 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076949039 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082351675 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074099866 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0767003 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076808987 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076703981 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074534444 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082334205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075322459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074533052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079033655 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074308179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079300988 seconds)
  done (took 2.972347192 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070829237 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070460462 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07261022 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06561426 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069255842 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066050396 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073236109 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068509362 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.07279731 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070516946 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070438867 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.071135708 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073271571 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066068403 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071600364 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068601031 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110274687 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073188853 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070655579 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071162994 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.074261904 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072566295 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066114705 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066410504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070398589 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072941264 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07079101 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068866799 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069837615 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070595016 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.07040264 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068665453 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.07267781 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.072921397 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070088197 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070719025 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072735054 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07049561 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066099044 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.069025972 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.071477569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066327236 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071471239 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072557079 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068987348 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06879757 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073116175 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070061099 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066364381 seconds)
  done (took 4.746067148 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080553028 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111036631 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072397883 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092285871 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082971885 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.07618146 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074529757 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093219094 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067507789 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06870023 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084865129 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082357216 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069732085 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073813856 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076966502 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069813566 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070698436 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069302274 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072688772 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069622917 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073559111 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076277522 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083298837 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081759721 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073339881 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068753839 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069547301 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073947024 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080658876 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073645518 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074060497 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074620048 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084001613 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074313883 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069577896 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071810826 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084534363 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06973933 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072129975 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067931847 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072491519 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073575548 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076417345 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085075333 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070548467 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074750053 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069717077 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067409759 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081609143 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072002052 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076957174 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08263024 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073076598 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.070071642 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073501025 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083747403 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069932738 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068788337 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072763791 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080673554 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067737001 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073016245 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.0824647 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.072188913 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076306723 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082110009 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074647187 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073526445 seconds)
  done (took 6.536498996 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079801385 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100456015 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085943335 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086444971 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079757436 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080571476 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080245191 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079859661 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079857807 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084216476 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080111425 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119741122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085050021 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08201676 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096272825 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079813973 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079715126 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080081437 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080174613 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07998831 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079856799 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085612733 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080159283 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085719366 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083150645 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075957387 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079353242 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079413894 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08603641 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079782591 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082952392 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079479635 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079303789 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086128361 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083065117 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079356842 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070382968 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079490476 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079749167 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079927367 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075708942 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087071746 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079538308 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075273805 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079748646 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079420586 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087034746 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083238288 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.08191593 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083597499 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079857852 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087003237 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079816802 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080706276 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086745997 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088885618 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086713599 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086464032 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080179576 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086396311 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086709403 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088816589 seconds)
  done (took 6.434736692 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084288977 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076649416 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08805472 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066228777 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068331241 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076279363 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069011167 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068786416 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077222291 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077828626 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079333492 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077220755 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078943724 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079186895 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076396355 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07853843 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076747379 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076533578 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077202439 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076707263 seconds)
  done (took 2.837526865 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080029181 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087582802 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071518073 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075749432 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073985816 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075860804 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073515267 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07404343 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071630964 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073941046 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080127713 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080112685 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071860198 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075907929 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079534786 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07646863 seconds)
  done (took 2.514313908 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087023312 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076456724 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082321486 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070608043 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07142177 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066803777 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069883864 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066313564 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066708582 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082945076 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069876036 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081449303 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070398249 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069366869 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067339791 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.07617412 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066896997 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067873341 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070260454 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081362516 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074218731 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.069333226 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075940343 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070503399 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073420091 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074890825 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069277617 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071822882 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.068147432 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070515266 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073449805 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074021664 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067428535 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068182367 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069565519 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067996862 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070289854 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070746321 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076296925 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070162571 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068817496 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073049234 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070109086 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071581067 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067171654 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070984114 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06689694 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073369807 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068130948 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073771248 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070666275 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.073127838 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070868527 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077756962 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072989851 seconds)
  done (took 5.250376583 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084589241 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074154503 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065559751 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06858495 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07352004 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071758352 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073734165 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071539762 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072662541 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.069234083 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072424725 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073652071 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072340586 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074447252 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072677384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074583883 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066074146 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072087565 seconds)
  done (took 2.611333426 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076808826 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071200983 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078555197 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07110199 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.070754515 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073285519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066429128 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069082185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069156213 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071667559 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071028275 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073566737 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069059052 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073282437 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071294125 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07133839 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073713817 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069654644 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071269414 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066530454 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073605838 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069118658 seconds)
  done (took 2.870628824 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098263301 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088356196 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14246881 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084170507 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091199866 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076392114 seconds)
  done (took 1.882101479 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09660481 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105040127 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071341504 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073620888 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079086014 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074637966 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074881917 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074916284 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08145969 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079407254 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077900132 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082332106 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081887893 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081424789 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079715666 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080022981 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074950122 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075076924 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071689629 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086664846 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075105123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082052838 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075045809 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075270338 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075123542 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08148592 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081888104 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079954417 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075114065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082198804 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079909849 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074934588 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082455337 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080434972 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074420804 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082389039 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075540343 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086643262 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079990245 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081571752 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074040996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079713922 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082494606 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078533079 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082221992 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075250567 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078812199 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075012963 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075038823 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088511251 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080338406 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081114285 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079880777 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082114296 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08179227 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088082168 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079857267 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080989822 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080007196 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079661352 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081786414 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080185578 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081006524 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079799763 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079592077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081375194 seconds)
  done (took 6.577045872 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107546084 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071649981 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075199931 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07994212 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081269183 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074856269 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074986152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075219328 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075105502 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072083673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112017585 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075281643 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081662151 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081304141 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075625489 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074892007 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075140689 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081592089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072078928 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08811597 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075236315 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082012365 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081586527 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081318042 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079675152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079977387 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075141576 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074761062 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074903274 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075068202 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079775228 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074963934 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081449686 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07153916 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081450909 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075178686 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074811709 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078744404 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074841262 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079880727 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08187271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086419597 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074686539 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075147007 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07996937 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074960051 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074957816 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07210542 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074769412 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071984262 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079399058 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080084476 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080188797 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08198328 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075000661 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075627143 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075888009 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075049044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075049092 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079499144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081388052 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074774468 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088556183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075133664 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075237241 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08149786 seconds)
  done (took 6.503133122 seconds)
done (took 134.411358711 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197939422 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175174135 seconds)
  done (took 1.66535076 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073052578 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100584188 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08095435 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132692383 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07189236 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104863774 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103764744 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081774157 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071526883 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.07150284 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07099911 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073244833 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136637434 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071085974 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070890207 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073764223 seconds)
  done (took 2.697292782 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101679718 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.1599573 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106083154 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.07021708 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101257862 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07671799 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072630268 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079391189 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075158513 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07048333 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07693962 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075097583 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070513464 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074869826 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075652042 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076959789 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070902777 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076673651 seconds)
  done (took 2.822525913 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100435321 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094409806 seconds)
  done (took 1.50968435 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.16123669 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.138262857 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207191899 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.340226089 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.15790896 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.146075188 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146824197 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145058211 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.1172809 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140074729 seconds)
  done (took 3.011011499 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103272626 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151731497 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274146094 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120887596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078047826 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.0948197 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.122493489 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084433388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084223993 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083541947 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083297531 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080842581 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103392082 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077706004 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079719634 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080149437 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106904885 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07850956 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.080106357 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079954562 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104852144 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071404491 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07775907 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078459854 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08202644 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080794082 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071599204 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07124119 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079908328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080011842 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.0817377 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093841163 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081133343 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105596881 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076568896 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107057487 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081040577 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077887448 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079998422 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077758145 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081452199 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081965554 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078646291 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080895676 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071497734 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081011834 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071635082 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071759663 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081409061 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072200812 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081453332 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.0811012 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.106208492 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.07250666 seconds)
  done (took 6.160009989 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110923335 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110400493 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074969273 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115652283 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108319206 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074384066 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109262528 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102833245 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111669318 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075619949 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073768232 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074937894 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083347762 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08591873 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119995861 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111429565 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077453115 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073966814 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112140052 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.112002213 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074277641 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105741325 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101201442 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111226949 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072759924 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075217629 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073520373 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074768149 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080393664 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081669563 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07313762 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083041518 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.086880548 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080819384 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072394712 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073160366 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073923818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082728288 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082390048 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082712107 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080682579 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072756465 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073586453 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074340406 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074239199 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072196915 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081325809 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082724561 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081357199 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073239875 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074762274 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073387707 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074177451 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082576946 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080587926 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082838239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083504405 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073807321 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073500539 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076069447 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083062322 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082699403 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082537367 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076822879 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082255654 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073366567 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083305421 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086214568 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073247812 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074519994 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073550342 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073885477 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074807304 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080159011 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080630881 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074922401 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073624681 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073688108 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082474039 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081649877 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073060978 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080923541 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072701134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072587082 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07420912 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074407461 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079564689 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081499638 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074155499 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073048793 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073061879 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072226404 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.07167617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078367949 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080879081 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079959282 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.080159739 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072911399 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079409342 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079228419 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.207100476 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082361939 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07443209 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076058902 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074958407 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081608581 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081356498 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083264506 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074155738 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074041055 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080891201 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083724426 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073939854 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080968998 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082580271 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081856065 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072198877 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083600062 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07381437 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083180621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073287962 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082743762 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072949623 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08207108 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072983986 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072687385 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.074089327 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082004599 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075016467 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07311049 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074420614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073637075 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081605023 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084709214 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074837559 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08090844 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080505849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074298855 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081557773 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073906307 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081263558 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072915649 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074534941 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072435563 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08431955 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073776208 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07324378 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072921687 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082981019 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07344257 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083487552 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080250322 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072595143 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084244877 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082582854 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.079961749 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.082749055 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074713655 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07284851 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073520475 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073101707 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080387308 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082169247 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074784226 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072951384 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080350198 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082592939 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072536809 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08150429 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080709443 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080677954 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073562018 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073799863 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08323627 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082577324 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080958788 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081385755 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.0812049 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073817394 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080746238 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081121662 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073191079 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086072882 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073496751 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085643528 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081725057 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079501694 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081062212 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081966766 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082009585 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081782631 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08484406 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072216801 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072591226 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080230997 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072137495 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071771345 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079056333 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073699785 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073242323 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083646543 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073009249 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216868143 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073415381 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082137951 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073499957 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076093331 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.0862013 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074000717 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077181807 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082560999 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073416794 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080612051 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083219759 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080964484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073509777 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075113958 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082070616 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081612914 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073539612 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073392009 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07445995 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080867324 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081026538 seconds)
  done (took 19.484583963 seconds)
done (took 38.678814247 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196904219 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.148173872 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.160651195 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116136977 seconds)
  done (took 2.023136637 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113147698 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102001463 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.0925646 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069906941 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.098869336 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.071286647 seconds)
  done (took 1.896834102 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276010554 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192450609 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177275328 seconds)
  done (took 1.992433522 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199995813 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18640428 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.429027137 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264750102 seconds)
  done (took 2.524976262 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140437262 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089053715 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071862364 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088089137 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128786218 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157132417 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099987788 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124480643 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.08298817 seconds)
  done (took 2.377475259 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.146797108 seconds)
done (took 12.31072298 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.09625898 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09480877 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.262907042 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072858184 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.080285379 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079002563 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.1051684 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.191061772 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159327416 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.195304958 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080998787 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.092626968 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085941458 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079501823 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.114620041 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185629875 seconds)
    (17/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.136365592 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079284156 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.211735805 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119393913 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.092347704 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.201436085 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.114527292 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083387985 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133190468 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.153527883 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079146983 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07785172 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.192812249 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.237781568 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.081763959 seconds)
    (32/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077395716 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.213960524 seconds)
    (34/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17211571 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097156197 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.207163054 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.077866479 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.079165187 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.096676294 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154802087 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069924399 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.183261337 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.058228022 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.059188036 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.079553623 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146538794 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078815059 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095258269 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.157359831 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.080563051 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.077456953 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058424212 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.191323236 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058087792 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 0.071792242 seconds)
    (56/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095233315 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086927241 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145452088 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.070580494 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084232837 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078783108 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.092732826 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.151674811 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070896847 seconds)
    (65/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.173817308 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069065221 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.166819438 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192878371 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.200211931 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.077542021 seconds)
    (71/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.168794989 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080819729 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.162751966 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155896595 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070447333 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.080657206 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073984015 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079121597 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.170549391 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084003808 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069321703 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069635439 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.203796954 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.089490538 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.093612749 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.166054027 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.096502223 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083634632 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.195535074 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057368043 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.19859238 seconds)
    (92/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081668307 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074535798 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.057123438 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077342448 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082090234 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079036139 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.143270598 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095638799 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078989278 seconds)
    (101/309) benchmarking ("sort", Float32, false)...
    done (took 0.137047616 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.088660276 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076677134 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071823519 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092103038 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183433447 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.071272688 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.20904486 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173451636 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.151236069 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184729137 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082275699 seconds)
    (113/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097403987 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.093981669 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.077355859 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.11312712 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087054869 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.057268479 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079086118 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.183005348 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.08150162 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15715303 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.081264499 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070847917 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153665591 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.069497062 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.096172568 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091869595 seconds)
    (129/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.170851995 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093404806 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.108854446 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.080274882 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079956547 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.167387954 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06126734 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082793005 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077815266 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.113265654 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072495577 seconds)
    (140/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.159277175 seconds)
    (141/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.116507729 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081349964 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077095014 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194455901 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057095684 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.079032313 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073068926 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077879443 seconds)
    (149/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.118485749 seconds)
    (150/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069164825 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070022357 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056898347 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092801426 seconds)
    (154/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.115526667 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058304385 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092716477 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.192570242 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076722237 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.068876888 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069434851 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180403046 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 0.148513894 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194195654 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.158642248 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079053848 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.135035788 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057981272 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.161876051 seconds)
    (169/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078197048 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094502599 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123081872 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093351195 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071490774 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077314661 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.1749252 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116019293 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074020834 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147891922 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.266028386 seconds)
    (180/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.177518848 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.060430379 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.059453577 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.058279313 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.058511716 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.093386691 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06934745 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.109918888 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.078722795 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071494711 seconds)
    (190/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058980816 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.079693286 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.108085463 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113796873 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.057424819 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.074361597 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08027174 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.057776378 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058226087 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057459541 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079083439 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.058756149 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079455885 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.058483565 seconds)
    (204/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069806705 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077382257 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073196642 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09689237 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.071301385 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07082032 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.10490067 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075328405 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058719555 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070466029 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.077088936 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.083366489 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.08239978 seconds)
    (217/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079754162 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.058329579 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095962864 seconds)
    (220/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16053331 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084029476 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057435672 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080220773 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077954188 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096630858 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070897735 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.144071183 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070380473 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.113526005 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070757802 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073680467 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.078234516 seconds)
    (233/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058334236 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.057565865 seconds)
    (235/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069820098 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.057403235 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.074229406 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.060131965 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118438202 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091433825 seconds)
    (241/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107407089 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110688232 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077250614 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.143868622 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.059263169 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093070271 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.059057003 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072373492 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058347542 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.070475368 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059922125 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058294949 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.068843579 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05714403 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069184747 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078408044 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098815759 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078921679 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071861519 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.11325324 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056948328 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070297813 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082978448 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057091229 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.081653923 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071344325 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070490875 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070954248 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078974198 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.057065981 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.072611118 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076282042 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.05700983 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.058124533 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070565811 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.07086685 seconds)
    (277/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059377691 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05767648 seconds)
    (279/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077604658 seconds)
    (280/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.058909816 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05848432 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071471984 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.056908324 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05779349 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.056859915 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098857586 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077779294 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077691165 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072105097 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.178703069 seconds)
    (291/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.067987008 seconds)
    (292/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092118476 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.056306929 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.121287501 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070934238 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07658772 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068981728 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072914927 seconds)
    (299/309) benchmarking ("sort", Float64, false)...
    done (took 0.134764316 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070398459 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.056958817 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069281304 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072679697 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069762989 seconds)
    (305/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097079174 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.228686312 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.072658617 seconds)
    (308/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05870837 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.072248855 seconds)
  done (took 32.481331849 seconds)
done (took 33.842672849 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.086974515 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097618356 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080778799 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097181633 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085747844 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082716977 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078595354 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083231924 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085366888 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08710503 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084136894 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.061020291 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081232575 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080432607 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080308901 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095834843 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084687401 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079437518 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079143163 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070476831 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079109803 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071790735 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072495179 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.061328367 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084410941 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.077517303 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.08027446 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080062884 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070991065 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.071053779 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.075962581 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.079448922 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071460093 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085046432 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079585986 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079270871 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080801514 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082804457 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072597795 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071789237 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081241509 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071428663 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07946682 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07929522 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.0780058 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077287625 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079081947 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083098446 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095550671 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073096876 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080568814 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081430839 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082784731 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.078291511 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075598741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078994243 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076746611 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095025567 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079246418 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073150757 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.080364422 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079787163 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.0764871 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07865642 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079140877 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081010467 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082638675 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076633847 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.080499806 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077479287 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070554794 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078471987 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075128649 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073786923 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081817645 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083363116 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069775577 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077330482 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078778105 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079672794 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071029821 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072964449 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072732261 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077771248 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073246759 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061238868 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075466593 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078250127 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069823672 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079116219 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077998915 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.078929624 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072663117 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082986828 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070731279 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077100431 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.07152655 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070855807 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072415728 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075544747 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070972855 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073061634 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.08176168 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072513964 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07720553 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083942565 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070006231 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077415309 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069345051 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069737921 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084365123 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080128036 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070508098 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072781032 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069539403 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077482481 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069407566 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069933938 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069330052 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070112331 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076267862 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069762577 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07212392 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.07728296 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.224173994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07210476 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.076375697 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073767173 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071665206 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077744411 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071324002 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071131947 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072773125 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068326158 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07305844 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071004593 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078308333 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07310969 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07929263 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072812221 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08122651 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076046565 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07773783 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077095882 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070241134 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066140516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073517666 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073114174 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073034351 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070460245 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072178493 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071343997 seconds)
done (took 13.250542345 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071806338 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135580489 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096830084 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098320787 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088249572 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072489086 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079445659 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098946654 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072904401 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101852945 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092459682 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090581694 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112747352 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070008887 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071200513 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075109508 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072458422 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084543107 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100194341 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092152189 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115284838 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070745911 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095222194 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092284284 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090380616 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.096086248 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072170525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075002057 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075233502 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104286 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093229523 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075542549 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071839339 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099027036 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097585458 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.085979557 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072038729 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086427108 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072366571 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071831933 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072986451 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100169867 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083526769 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084237848 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075214272 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081320194 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072403927 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086155105 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091595116 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082515331 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088481925 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101690091 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07376189 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087375462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069968917 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088561156 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080454562 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07403404 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071911215 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079344917 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071595778 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075220509 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084011711 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083066605 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075521148 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087313787 seconds)
  done (took 7.021118861 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088196292 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101651616 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087569043 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088125165 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071688893 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071139566 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071237652 seconds)
  done (took 2.031405689 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071603285 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091484444 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092169409 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09236042 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085086469 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.0953616 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080213346 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071666189 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096409812 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072977551 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091877278 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101610956 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074984362 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085052146 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09365578 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.07203378 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094245162 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.072888002 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074563554 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094029182 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077974441 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1010789 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079029439 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072162755 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085105063 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072268316 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11717433 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075799192 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074559311 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075128659 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073610862 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110378384 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084221442 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079245404 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072075442 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086935167 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085494295 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075409842 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082667527 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080529046 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084534342 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072270657 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072767484 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.074081912 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076159308 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081493536 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073190834 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076470123 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074814558 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090636429 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.070783795 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084719305 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074645083 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077329027 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073521397 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078296991 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082020281 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072881354 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091013043 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073732827 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087062729 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086571306 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084827295 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086528713 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074450921 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084418759 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084789283 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074876211 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074277294 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075957537 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086910452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070946733 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074146145 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081815435 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074173867 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093977555 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093903908 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074096959 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085422506 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072709096 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072683447 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072300012 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093279077 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077330203 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07300052 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076857837 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075823692 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075566006 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.07150399 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.077158227 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070595029 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078616053 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074921061 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075455342 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074589212 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086956251 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075121187 seconds)
  done (took 9.279025582 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074409233 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073618142 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074985903 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072965015 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072685872 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073237418 seconds)
  done (took 1.916404486 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093978988 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074028138 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083802033 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075885619 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10722001 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.09025007 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090767911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082288715 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087784892 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083293842 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090079679 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091745258 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095774968 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077007544 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.09092948 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076189741 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091255868 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079157857 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083174854 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077353563 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090569579 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076840218 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.0769712 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085424587 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08052269 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076785088 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083579452 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08337552 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082721027 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082200547 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077251615 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080512137 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075480238 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082358647 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090770784 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075044682 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078843659 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081945455 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076789126 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080171152 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092209131 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077293967 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078839409 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081829287 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081832282 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075496701 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081566655 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083912208 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091258327 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081614173 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081288597 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075924522 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079914709 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081787646 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076156876 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081624908 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081529917 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090541478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077440939 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074948529 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073257482 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080899244 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080883102 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080375028 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081973811 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081729529 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075742807 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077093053 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077167154 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075892404 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081495036 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073583904 seconds)
  done (took 7.352476619 seconds)
done (took 29.036306771 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541858594 seconds)
  done (took 1.974296149 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.602658603 seconds)
  done (took 2.064040606 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.541115272 seconds)
  done (took 7.997489129 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.381573735 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.486351157 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.71945075 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.139223733 seconds)
  done (took 3.222100153 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728182579 seconds)
  done (took 2.192660839 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23924719 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.229827398 seconds)
  done (took 1.946130737 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380608397 seconds)
  done (took 1.837441117 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.123497449 seconds)
  done (took 2.582118094 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.241058994 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180809373 seconds)
  done (took 1.883793374 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.447710241 seconds)
  done (took 1.907147847 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.884304846 seconds)
  done (took 6.346973031 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223188243 seconds)
  done (took 1.726739755 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244182622 seconds)
  done (took 1.707919163 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.743123865 seconds)
  done (took 3.206897193 seconds)
done (took 42.067663849 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08872463 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090387431 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090222101 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086551589 seconds)
  done (took 1.798156163 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081661794 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07804496 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081195632 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077878054 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081252718 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078053051 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079268142 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080512562 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077620966 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.078181557 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07817815 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.078102908 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080616646 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079156869 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.077227415 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080131457 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080975852 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078016104 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080445546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078126474 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076349788 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079924078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080258272 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077234846 seconds)
  done (took 3.362841475 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.083617555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.079333981 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080779415 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076736459 seconds)
  done (took 1.790479848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083224206 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094276697 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.09241897 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083973613 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095308832 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091279645 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074751516 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.075251889 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075732253 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083419252 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073803885 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099898979 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093201394 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083572074 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085565776 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070720392 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072761065 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091858089 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084371302 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084316498 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076046321 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.084062927 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073756687 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094139369 seconds)
  done (took 3.483920647 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08586861 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10526855 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.084958616 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095139654 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096589434 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070456568 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084357861 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097224507 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131631982 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07116869 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076581163 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071557774 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079760443 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073763738 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085405532 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113865778 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116392474 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07496633 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102964069 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070895854 seconds)
  done (took 3.263774989 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07794497 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074905542 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075660026 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070616546 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082412644 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078060921 seconds)
  done (took 1.937514915 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074063421 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.073038371 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072479041 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071956456 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077341111 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072816016 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070806115 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073193757 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.073136397 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072455426 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072355823 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071456849 seconds)
  done (took 2.349883779 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185650489 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074031461 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073519067 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07099823 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075205924 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071477218 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086192183 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073188551 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097095821 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072045784 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072465333 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074895599 seconds)
  done (took 2.501710434 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19700646 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080194028 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227650732 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152491614 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110582917 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11544569 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114406833 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113948666 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138611302 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101616987 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162087852 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163505302 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109018425 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138309208 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093788367 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106743582 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15156195 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164077204 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109090424 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16340542 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143885274 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129217649 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14647076 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104302386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107865181 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120144793 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076234106 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083926461 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165822797 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131862523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141974916 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113737115 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093930904 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176914534 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164116303 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139085011 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14921945 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087179492 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107127456 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13210062 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189920834 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091688154 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.299972131 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113844441 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084774566 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133734 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118959202 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120978191 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106221452 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093707106 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143842885 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175763463 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133415383 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089894963 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124059912 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112592213 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112271809 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114400582 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171706891 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156373291 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128375046 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075909345 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113865316 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148747661 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135153379 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10908999 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124110166 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094572914 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133308625 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152435167 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123149923 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141598547 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117841826 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091962751 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121936891 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137037974 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127247237 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158789261 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125923991 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077538078 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122872487 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102032887 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085295892 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147753686 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079834167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171349216 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102561961 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1091138 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124856707 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109356935 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109716505 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151939937 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.28442142 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108468221 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073364325 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108553618 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119810467 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142422971 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091497452 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109983964 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117488536 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082141796 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134162921 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080800214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123868001 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082477705 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124133637 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130216446 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081695776 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12333814 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105965512 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10494133 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131564385 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155904472 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091562235 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084784507 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163414649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123382513 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104898322 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140908011 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155071682 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10545351 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101632111 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144920443 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167208831 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093188921 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159771756 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106683088 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087583751 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09230727 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124767012 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112760529 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125197576 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085605931 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119506939 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163499158 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078729922 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098813881 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13476093 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08262531 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084248503 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107306221 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105348104 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099619829 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101333304 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104246715 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134296644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273120275 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108960234 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124472056 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101920998 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161081158 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091519918 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106013247 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107003536 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.075210771 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131512656 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151866194 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082573313 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156447619 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12224395 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117949068 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120372609 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087674729 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136202381 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083009379 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075245501 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139705392 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11286641 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110410315 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.1470212 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117171754 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124005463 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119677638 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130939241 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129734383 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129667785 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109170178 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092032499 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114753348 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127983263 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07824856 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093547332 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084328897 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107720289 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097553598 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087643184 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13967137 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123152382 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113954024 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114353703 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100020056 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144913555 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080373629 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125971125 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120425708 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098428414 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14844209 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148110273 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131645307 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101104349 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28207255 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.076098792 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079370816 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090359377 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12296532 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087283765 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087260918 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115143286 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143595679 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128036561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133526837 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123602189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119466251 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15207786 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075241927 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122494542 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141754227 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12217365 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107120008 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093931696 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102000597 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139933215 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106962531 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172415453 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11576056 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125703339 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152913898 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105837253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083606473 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105444154 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132158304 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104937935 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142885732 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101522403 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091751905 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110043733 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080698651 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100554816 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127542333 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118590956 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134324798 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115162404 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133475197 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082054668 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114994184 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122284799 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120836344 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069589686 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118680847 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154626039 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098484588 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11712402 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295405444 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083438419 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.137467091 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166933909 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14244701 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087937762 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108728903 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12240142 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125738618 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120025989 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13700532 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10662952 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136260011 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112000621 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089407289 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090492705 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098806795 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106539022 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097584281 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103961892 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114347106 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099113414 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130945093 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105876325 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112503521 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119637959 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103889143 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096795458 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100619325 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170828286 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119654001 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165970204 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104849101 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139885101 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157994787 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079791684 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083742549 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082729483 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137803174 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089017225 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130646985 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113006334 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118131699 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124596426 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138938952 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098751472 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07373284 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110631264 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132249856 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123788741 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100938014 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103778562 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157121394 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100497429 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082626327 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.259953929 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118439759 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106261011 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163930023 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068569182 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108986871 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08135103 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084428994 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125729427 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148104411 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084299271 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102550189 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121519986 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112644671 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125528198 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100752573 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113338756 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125208286 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144198267 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127278136 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.09288051 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111876233 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128971563 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151599204 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105005409 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101404628 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166980613 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148916598 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155858736 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089280871 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11578154 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115800365 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11110553 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136453671 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087959007 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157868205 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086307325 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135674229 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1046705 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091195625 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128567435 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113266135 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092346721 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142593936 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117575942 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086833809 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08191143 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116430285 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119367674 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105444234 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079142923 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284814438 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.079545154 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132602624 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156351234 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084627474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106968074 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09818141 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083958082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106841175 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104336599 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090194223 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103811095 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165774074 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089309133 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144510486 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132055448 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112322747 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133006333 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104726734 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.64244639 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081801581 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147516681 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115957858 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166867306 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102275819 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119079567 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112209949 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122245796 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141873261 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104376595 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180855976 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130982375 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117522561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083177471 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104342591 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106410445 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090240978 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109709802 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11517584 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116480492 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.096215676 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117449681 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12426288 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.08657274 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09940309 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152552267 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116172526 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141740813 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136626529 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088182392 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118581658 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135293465 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231520771 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118804231 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147653409 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108147506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102732225 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084865258 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101227358 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155255589 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078902121 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153842391 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123756079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1119292 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114486718 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.126032434 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129857673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105762309 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122222755 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09520799 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109876791 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115022467 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085455705 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081218461 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107971888 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111945061 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.102629767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098976415 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103183575 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148441473 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077340007 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101010118 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117197563 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141572667 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168010755 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092866451 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087538393 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120681535 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117268257 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113749465 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122569118 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083538858 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085742835 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084784578 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08682617 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109918959 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115565875 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115810868 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111760481 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15828938 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087524259 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227377331 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097710677 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106349144 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074996034 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081405189 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098356217 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0981128 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254490092 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114610781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156176011 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099209939 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093886199 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094092125 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079708246 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087784771 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125762971 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110078539 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119084575 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103819734 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.069119578 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107822847 seconds)
  done (took 59.351512943 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111565123 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086685413 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101612334 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148239719 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125727922 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203763715 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160298425 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193729001 seconds)
  done (took 2.710370176 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073340441 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098951063 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108786176 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08729315 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072294282 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07329578 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225762805 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086106523 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072215169 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09728781 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082466868 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.074006193 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.408856221 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.0712967 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072678334 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066993247 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073503534 seconds)
  done (took 3.411086895 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.388426175 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.62231564 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345655045 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082457196 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.984347373 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09543247 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.323138382 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139074609 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083692727 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534867623 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408504044 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134527565 seconds)
  done (took 18.720644318 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086177547 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079893394 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093056353 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094416867 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.082469199 seconds)
  done (took 2.008530818 seconds)
done (took 108.18174811 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088086382 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.415881617 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059555562 seconds)
  done (took 2.074115214 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09098911 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089634672 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089469831 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087094697 seconds)
  done (took 1.936030916 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.079529106 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.081396523 seconds)
  done (took 1.737096413 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.227922016 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.169958905 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100698547 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087656974 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084013274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084496808 seconds)
  done (took 1.834451642 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076915903 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079628964 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07697791 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08060464 seconds)
  done (took 1.887711572 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080555656 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057987729 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060176011 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062521549 seconds)
  done (took 1.836621916 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091633036 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087329698 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083838787 seconds)
  done (took 1.837098699 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103517895 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.091523755 seconds)
  done (took 1.7697238 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085127203 seconds)
  done (took 1.661041377 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092914619 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102558438 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134531353 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117616478 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.141470632 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.117768392 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08909979 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09045428 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083720863 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090883358 seconds)
  done (took 2.637140048 seconds)
done (took 21.368636866 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082998912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371963758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364936856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093354367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673929902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362101732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.9937339 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097471896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.143708982 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073212882 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08932581 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65481993 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985843816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.335541022 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97127779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334766302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656149306 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07485221 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0739562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074385122 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981468549 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073752321 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07372255 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07452243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65499847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378493786 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074381104 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334780183 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073775146 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075716763 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.378051986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07406312 seconds)
  done (took 16.314197416 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075108335 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122547652 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078186833 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088810285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075675096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075446083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07679034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074381613 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125407532 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073559116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090729585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073865563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077689248 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0746214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093411946 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077160358 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074712163 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074931598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074122722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074578987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09250873 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073800162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074471402 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075299104 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074155379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086089077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075026764 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074035069 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074664793 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075964122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076760147 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074806938 seconds)
  done (took 4.168577923 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120573867 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127762057 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078509167 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109736531 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118066606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076366547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148646642 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099052225 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132513148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07437442 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090665846 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074379551 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106621674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075823465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094024239 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074526269 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07544449 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074965784 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074362226 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074320776 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092681164 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073936569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074054108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075105503 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074312047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087277218 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074707111 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074590472 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07497433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076178113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077475186 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074417003 seconds)
  done (took 4.422996957 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077501047 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079990948 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08702377 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087868372 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073896328 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077875657 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078883669 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074592744 seconds)
  done (took 2.233860609 seconds)
done (took 28.725833204 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084217519 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074601277 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078369694 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093339197 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079131152 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082511182 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.072404118 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.081374265 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078850173 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078773353 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080174368 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073124688 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077191857 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072129785 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079498873 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073409243 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084070809 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077964841 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.08443835 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084174059 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076385938 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078981645 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081451167 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083577207 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083514348 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083844857 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082363021 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078260271 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.07339143 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.075967825 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081859925 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089077123 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073285398 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084171493 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072950122 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073249101 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077049507 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073320382 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083122417 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081524728 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074866039 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082004298 seconds)
  done (took 4.904471112 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092953946 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097191754 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090189457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067809734 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073333081 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071754257 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094422877 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065758466 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066894721 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094049065 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062973423 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065394411 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069394894 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06062924 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066548513 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064096875 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06796394 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061795805 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066679367 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065755711 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.09514344 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060810509 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082921605 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.070077347 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063089789 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068128415 seconds)
  done (took 3.506376768 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079543574 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08861971 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.0953835 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146688298 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114839937 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082740637 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08392895 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096977916 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09905597 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072168337 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076252034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09857581 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092957465 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079428984 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072942853 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08958315 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090037472 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074454248 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07806341 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099992641 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091605221 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090727793 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096535925 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086729334 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071841821 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075698959 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.076743108 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085582302 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075532054 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.08198971 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075270764 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076033659 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074917659 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083993724 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075511643 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074450455 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.098423538 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083030367 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083409613 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.073873132 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.081192845 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073979529 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096144708 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128670709 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072118692 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078499234 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076290311 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083004297 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0721978 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099385188 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084340267 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073435559 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07603227 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071991806 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072203784 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075523128 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07446505 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074952335 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081848347 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078635897 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.096870639 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078056043 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089106318 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072721174 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081500908 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072066999 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.0739478 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072473114 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097544915 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074693921 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112576624 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073629593 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.075972887 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082194314 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081553005 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079445179 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072838038 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088396749 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082416467 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075924002 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081135099 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076190828 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075868156 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.1018267 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075322797 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074724267 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074118756 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077955726 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0756086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074020512 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085906603 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072614576 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076027882 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089932773 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072872725 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074514068 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078595623 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077137517 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072919875 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08493353 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076968449 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073604577 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082553861 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072872986 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074896398 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084941337 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079113995 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072114317 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076913098 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07786549 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073504902 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074108343 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074493423 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.074125265 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080904037 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079179246 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076855714 seconds)
  done (took 11.18252409 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165370074 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155271087 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075399475 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148733895 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081412961 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083246931 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151024974 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097936768 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073095761 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074217077 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073296244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112888795 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107835367 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11878118 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083240488 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073236569 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095833988 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11685248 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152433442 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147544696 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095735886 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08132093 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075271635 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074312339 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075128797 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082988098 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089972648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081853927 seconds)
  done (took 4.487677135 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084057232 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107433973 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079321771 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095298691 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094373778 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.07305016 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07504381 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075168007 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.089940525 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082957692 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07344534 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078185975 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079819193 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076335872 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07401909 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080014792 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079897016 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074501768 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.0768268 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080365503 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083608329 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096122373 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076209487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072545475 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077784879 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072413972 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068333219 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087930265 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073419561 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097793416 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070680508 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078930833 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087133182 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074302048 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073008935 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073576548 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072965867 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073342844 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07485324 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.07134005 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071521982 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063412046 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072160394 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083108815 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086025895 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062330244 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077704691 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078151269 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078459068 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070694588 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076637161 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076116134 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075916067 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080940229 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077317464 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078389523 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07447391 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081885204 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081485192 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073470632 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070383018 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07174446 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077830156 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070574053 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08875834 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078413941 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072182224 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073691281 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075351325 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086449965 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073954659 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078468148 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071303492 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075369002 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077802208 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074920348 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074303354 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072291986 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072995303 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073564391 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060864907 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073249484 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059938602 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075561724 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071514712 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071682625 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073339055 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077584164 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083582052 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074040386 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078838934 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074102726 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.072168011 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07568232 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065626756 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075516628 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.08362769 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086614985 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073407147 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071634539 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085685047 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078333184 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072744752 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062967431 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077692955 seconds)
  done (took 9.698295337 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096210032 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07506967 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087088318 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09420601 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090772605 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079449869 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083012134 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074540304 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089829188 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079715223 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082023222 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073408633 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084545965 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082759002 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075632583 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083399679 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076839004 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088760447 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087511647 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073560171 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081665196 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086005304 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094454745 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085939331 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.084347747 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085799207 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094537697 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082331785 seconds)
  done (took 3.996776434 seconds)
done (took 39.364080401 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.681886849 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.942205649 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.676513255 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.008977403 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.756135081 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.873152851 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.773768781 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.669750568 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.833289171 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.710202971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.001816259 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.733127173 seconds)
done (took 64.388260307 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.712653303 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.810288182 seconds)
    (2/2) benchmarking "String"...
    done (took 1.899426721 seconds)
  done (took 5.309977213 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.865068361 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.251789203 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.916074202 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.670429919 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.678167318 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.976243333 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.473943904 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.202200054 seconds)
  done (took 29.772449814 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.83569074 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.902930698 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.364223179 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.399441191 seconds)
  done (took 15.157407242 seconds)
done (took 61.509287911 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.683593483 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.705006268 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.682668314 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.657018518 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.732887271 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.690802581 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.963337076 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.696644924 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.672747348 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.666913255 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.674266143 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.106741407 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.685724001 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.81565976 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.674366098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.680858986 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.737910068 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.140450727 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.829529865 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.688985549 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.675880122 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.705692962 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.676718154 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.685849007 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.694448049 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.67546497 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.063607812 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.679642345 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.507688255 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.675545761 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.719213549 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.139507515 seconds)
  done (took 200.686937901 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.672529536 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.619644324 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.700309653 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.683157756 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.146008279 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.85361503 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.778819659 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.196864635 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.681215158 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.702276466 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.831744006 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.677821758 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.851612365 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.674822903 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.722173895 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.751840802 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.815111547 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.868960425 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.729696512 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.845970733 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.680901708 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.715812867 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.670016801 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.816817029 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.677455251 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.6884084 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.696909721 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.708443052 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.874374777 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.788561863 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.67966852 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.700798352 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.881664207 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.546833496 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.689746082 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.687446805 seconds)
  done (took 165.913326929 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.863045776 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.675850481 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.673602181 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.676356453 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.680898008 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.674113319 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.801358908 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.802787165 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.31005186 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.460497152 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.727637622 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.675214828 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491948403 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.67458949 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742237762 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.686128199 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.675631515 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.690708319 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.700741282 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.678794 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.675487694 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.803144234 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.687398433 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.67530332 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.683211388 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.676308833 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.681001549 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.045053272 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.674422226 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.748988815 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.680704065 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.681466869 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.916758383 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.676399865 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674732022 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.530405408 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.339666363 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.681888544 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.758579584 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.679087431 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.682667147 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.679307705 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.893820867 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.677864318 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.67645257 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.675346431 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.679933842 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825705387 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.678825201 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.803588929 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.676493895 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15901815 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.676232287 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.676940561 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.555894861 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.256049887 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.68103908 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.678494916 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.677904783 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.675843643 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.681893782 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.381575849 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.750388439 seconds)
    (63/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.677185652 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.677118599 seconds)
    (65/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.677100204 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.680182239 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.68235257 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.676794714 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.690640092 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.681506156 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.410894136 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.738684542 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.911617928 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.800193602 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.681473553 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743560987 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.770850353 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.678575869 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.677457941 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.677288124 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.677792218 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.758163783 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.678145068 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.80537434 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.686202223 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.67890986 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.729115532 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.750002314 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.679068329 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.532572844 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.681101749 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.676947929 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.970273244 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.746635113 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.67842326 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.67766807 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.678793957 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.804999025 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.804977478 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393251375 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.681714823 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.452946677 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.820527743 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.680236362 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.826954314 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.682291864 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759902366 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.683926512 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.680300001 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.711447821 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.680085106 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.732202872 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.678902937 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.050408385 seconds)
  done (took 391.636070362 seconds)
done (took 761.759743764 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.276876939 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.244508559 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.347013291 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.256249293 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.238337586 seconds)
  done (took 12.970717108 seconds)
done (took 14.579575632 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.767598493 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.774506062 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.704307936 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.771143766 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.700707556 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.769180102 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.753865833 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.704429862 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.737837596 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.704676191 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.741667713 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705008347 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.69209536 seconds)
  done (took 24.135430873 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.914459756 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.913396053 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.750078607 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.931841244 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.726226982 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.917060891 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843338862 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.830119044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.829467038 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.696550821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.69254075 seconds)
  done (took 21.654661377 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919810098 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.920754915 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.757133066 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.923733871 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.728795949 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.919278309 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.846730243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.833174611 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.836276696 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.697071414 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.692762817 seconds)
  done (took 21.685708737 seconds)
done (took 69.083321576 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.689910363 seconds)
  done (took 3.299279147 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.717272701 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.888833896 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.69634155 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.69281906 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.689040042 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.688004967 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.690816832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.686978619 seconds)
  done (took 15.360085231 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.684630703 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.68633582 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.684510341 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.687536995 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.684464346 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.686828484 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.684925036 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.686942756 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.686847038 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.686755106 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.684628318 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.684019928 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.686223679 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.688222215 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.683748065 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.687106642 seconds)
  done (took 28.583063765 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.686079719 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.685652341 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.685021694 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.685721565 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.684123362 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.685244116 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.686591586 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.685853345 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.685110356 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.685383628 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.6871231 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.685152169 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.687320792 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.685951547 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.68555641 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.68651423 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.685954699 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.685892072 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.690479729 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.685844658 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.685370282 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.685699914 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.68650456 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.686667339 seconds)
  done (took 42.076526773 seconds)
done (took 90.928809129 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.382694304 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.656406734 seconds)
  done (took 9.649346351 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.688490095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.688323491 seconds)
  done (took 4.992933427 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.687141341 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.687548481 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.687349982 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.686769263 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.68753867 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.687785526 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.687136671 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.686577847 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.686944329 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.687001524 seconds)
  done (took 18.482926746 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.687224084 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.687166779 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.683799493 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.687712272 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.687799655 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.685242797 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.687761575 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.687693928 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.68705749 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.685155714 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.686868105 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.685608877 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.686473601 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.684324951 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.686625021 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.683123196 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.684008845 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.684664038 seconds)
  done (took 31.959114258 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.687747416 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.687588739 seconds)
  done (took 4.984591142 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.684948579 seconds)
    (2/7) benchmarking "second"...
    done (took 1.685137422 seconds)
    (3/7) benchmarking "month"...
    done (took 1.68447092 seconds)
    (4/7) benchmarking "year"...
    done (took 1.683891448 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.68417839 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.685264071 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.684992679 seconds)
  done (took 13.401601664 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.684059513 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.826085172 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.888409385 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.32213856 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683814081 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.685993067 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.594513616 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.686445159 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.686695608 seconds)
  done (took 18.669144886 seconds)
done (took 103.75038031 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.54556938 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.676848543 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.902666959 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.732950588 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.72919031 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.011173269 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.702540359 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.936182441 seconds)
done (took 41.84189906 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.674285513 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.408918896 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.446619264 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.695878353 seconds)
  done (took 15.149478373 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.661964647 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.973230261 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.679916774 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.487037318 seconds)
  done (took 21.459343103 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.045632967 seconds)
    (2/2) benchmarking "read"...
    done (took 2.023615165 seconds)
  done (took 5.673769941 seconds)
done (took 50.558059387 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.675000532 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.677210959 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.676773327 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.676843318 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.675841278 seconds)
    (6/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.677364679 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.676541222 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.674832685 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.674044552 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.677765401 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.678291701 seconds)
    (12/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.673928114 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.676950983 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.676682931 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.676990145 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.673873196 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.676891505 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677480193 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.674344735 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.675019448 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.675578531 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677594622 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.675939628 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.675413788 seconds)
  done (took 41.826575324 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.678072092 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.675405363 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.67841877 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.678612807 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.67444015 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.677777447 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.679282121 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.674973003 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.677354923 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.67937376 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.675183274 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.674733138 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.67801548 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.675740925 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.677746191 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.675206946 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.677974685 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675130496 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.67675993 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.675290934 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.677474275 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676124115 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.675137454 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.677223796 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.67677438 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.675713395 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.68373693 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.674596125 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.677025495 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.67428112 seconds)
  done (took 51.904281368 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.681084979 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.684281943 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.675602437 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.675988692 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.676610078 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.676689836 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.676964531 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.676696484 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.67719402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.676885123 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.676768209 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.679833767 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.676398879 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.677066673 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.674930507 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.675266992 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.675990951 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.675508847 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.675323716 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.676936827 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.675897505 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.675699747 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.675786957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.675633495 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.675913981 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.675093557 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.676448555 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.677185678 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.675882122 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.679213632 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.6755036 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.676873126 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.676213973 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.675602137 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.675805389 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.676486725 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.680247804 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.685595061 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.675623486 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.675572838 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.674998836 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.676063468 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.675995141 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.676514495 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.67542605 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.675341039 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.675443245 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.678992099 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.676493476 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.677195108 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.675287491 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.676246924 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.676341288 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.676353957 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.677924412 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.676351777 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.676600597 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.677139708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.676763372 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.676158013 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.67710989 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.677655167 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.677535655 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.676853967 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.678015169 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.679552617 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.677031601 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.678529965 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.67740273 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.677215947 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.677035351 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.677268678 seconds)
  done (took 122.338478984 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.678114488 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.673162135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.672747287 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.672502729 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.674275538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.674772337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.67536296 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.675061239 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.672813942 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.674698548 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678310357 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.67253718 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.674970612 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.675109967 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674431289 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.67209224 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.674431208 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.672653061 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.676643872 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.673767854 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.674122321 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.671240709 seconds)
  done (took 38.43290887 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.674747232 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.674799037 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.670555828 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.673329159 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.669908274 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.676227033 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.672216403 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.674008295 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672278144 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.670527943 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.669335972 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.672849157 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.670380364 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.673626976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.66913377 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.669203711 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.672285119 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.668816563 seconds)
  done (took 31.689919122 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.669885747 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.667218889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.669217276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.667914614 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.672238767 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.670479948 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.669335793 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.669794137 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.669506689 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.667527754 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.669363371 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.669664805 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.670529364 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.667056884 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.669655413 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.667930608 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.669065372 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666526732 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.671753503 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.667131461 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.667470057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.670019691 seconds)
  done (took 38.314017879 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.669990194 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.670926658 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.666687106 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.666246945 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.667347427 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.669760993 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.670455793 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.667555095 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.669990698 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.669392297 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666928532 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.669574678 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.667388577 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.669853698 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.667500878 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.667041311 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.669952207 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.671156422 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.669325618 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.668098164 seconds)
  done (took 34.970917717 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.670261514 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.669831714 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.670897429 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.671468373 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.672170563 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.670951925 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.670244462 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.671186463 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.671041533 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.670999252 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.672909147 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.671039907 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.671641447 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.670469368 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.673542466 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.67175035 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.673463293 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.671761548 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.672031677 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.671598989 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.671644759 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.670972046 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.673085671 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.671710202 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.670621134 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.671536137 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.671037974 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.67108308 seconds)
  done (took 48.393544336 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.670050094 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.669467264 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.66679394 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.667839255 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.667233704 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.667631036 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.666949867 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.666854452 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.669461568 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.66672433 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.670094157 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.671448899 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.670033117 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.668577511 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.669301605 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.6690786 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.669593745 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.667062771 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.666694768 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.666347434 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.669656352 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671086054 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.668910279 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.668207342 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.665660443 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.669772021 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.666433751 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.666492552 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668884357 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.667276384 seconds)
  done (took 51.643649559 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.686910881 seconds)
    (2/2) benchmarking "in"...
    done (took 1.687605297 seconds)
  done (took 4.965071991 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.666043645 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.669828689 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.668282783 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.666906555 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.667344628 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.672908725 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.66911743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.668028529 seconds)
  done (took 14.939557519 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.669061648 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.669215744 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.668815547 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.669561875 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.671907854 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.668759967 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.676468774 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.669650604 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.670576322 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.669950023 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.675828717 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.675876687 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.672638898 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.670123776 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.67224499 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.670575484 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.669977862 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.669779931 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.669695055 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.669101637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.671836586 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.671530392 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.673096127 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.666350751 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.670732009 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.679094331 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.674545982 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.668987902 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.67055463 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.673534253 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.670128226 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.667601683 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.671315301 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.669570223 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.671025499 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.670517031 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.678200651 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.670420651 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.67611299 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.669643032 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.670135772 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.666756984 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.67086193 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.671562699 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.670665934 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.670005181 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.671099551 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.666962204 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.669270694 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.673053575 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.675308032 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.669169693 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.668711654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.672814393 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.670902474 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.678138917 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.670842997 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.672320299 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.677663753 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.679369283 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.681504027 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.675843834 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.671540712 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.671644431 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.678915791 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.688931803 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.67707583 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.667136841 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.669454255 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.670039163 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.678247927 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.683124619 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.678038261 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.670367902 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.670600005 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.670068526 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.670749806 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.670930393 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.677593162 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.672803891 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.670357779 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.671018252 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.67948864 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.68769745 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.669677049 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.670927781 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.672835622 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.671166847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.67177259 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.680105251 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.672106215 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.670806979 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.669455731 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.671100772 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.673189958 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.67183576 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.669508863 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.671982339 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.667275122 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.67109013 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.672521473 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.674338045 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.678328402 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.671194592 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.672650061 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.677771895 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.671384659 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.670947289 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.677858958 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.672243204 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.671740361 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.670973824 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.676616121 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.668166058 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.672759825 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.67883259 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.671994512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.672904301 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.673567876 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.671576487 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.679868637 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.693122983 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.67506152 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.672047227 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.677436479 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.684115105 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.673907966 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.674647297 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.672417345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.671574379 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.671389853 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.673541556 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.671862368 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.672864515 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.672496096 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.673586588 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.669831857 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.672639504 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.673627281 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.673582534 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.674934168 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.673478773 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.676292081 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.674700789 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.673672025 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.674548969 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.679095837 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.67388062 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.675436638 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.674018873 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.670543859 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.674548785 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.674804647 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.674351639 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.674248407 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.674705398 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.672737035 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.674259395 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.674214264 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.673632355 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.67468027 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.672919679 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.675879696 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.674594117 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.677372139 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.673825318 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.671468667 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.672923814 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.673920371 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.674191837 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.673629889 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.673909673 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.676494167 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.680343531 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.673500335 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.675393348 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.677957177 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.675937809 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.675382294 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.674681719 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.677106925 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.681320818 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.675133346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.682044535 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.675442374 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.675720993 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.675069104 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.675897267 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.675528108 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.676257286 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.676912785 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.679759347 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.686228351 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.682043018 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.676679406 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.678071314 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.676660265 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.677738089 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.678375502 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.676110054 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.675780707 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.677669465 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.67503313 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.675436345 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.677439863 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.676242519 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.675505021 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.677291121 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.675802466 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.676945111 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.67607719 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.677193814 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.678544172 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.67471157 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.675536516 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.677014832 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.675121503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.673188707 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.67481782 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.676331812 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.677043448 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.677338208 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.682578695 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.673889904 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.676270628 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.678320438 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.67626556 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.675365378 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.676865835 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.678450914 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.678576007 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.685676544 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.67608858 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.677769448 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.68414235 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.676124449 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.676575528 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.6802493 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.677117976 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.673928189 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.67882101 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.683203737 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.67752984 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.679188738 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.677728799 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.677193519 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.678512444 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.686300548 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.676689029 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.678265873 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.6777812 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.679281602 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.674571648 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.678904844 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.679163249 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.6799216 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.680499677 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.678350697 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.678093946 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.679444602 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.678941748 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.678357626 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.678264078 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.679686032 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.684967926 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.685681688 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.678472467 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.681630849 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.679035915 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.681428789 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.67834322 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.679566912 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.678918122 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.690366265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.685427995 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.684897798 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.679156668 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.679049971 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.684429937 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.680512728 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.682734578 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.679476511 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.679054611 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.681807773 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.679158306 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.67739041 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.679342982 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.67845525 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.680351985 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.680589229 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.681360293 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.682414292 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.678319104 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.679599347 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.680130495 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.679651394 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.67988131 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.681883859 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.681224412 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.681297547 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.679841496 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.680308796 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.686827201 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.681021222 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.681194449 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.680392068 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.680777391 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.679949015 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.682332511 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.680412266 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.682479419 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.687045918 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.682621467 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.687921386 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.682000859 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.688936118 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.680929863 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.682395268 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.686820225 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.6805093 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.680541878 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.680523588 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.681115829 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.687167526 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.682044696 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.680977429 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.686383776 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.682296394 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.681770268 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.681177177 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.682359947 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.679635213 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.682645293 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.688941122 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.681173976 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.683250066 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.68207791 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.678457342 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.683203052 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.681381009 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.680467043 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.683604801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.681539071 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.681534462 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.681817096 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.681677694 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.680991145 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.681780754 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.681423764 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.679490769 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.6830493 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.689457709 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.682403596 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.686454729 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.682565553 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.689759055 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.68352726 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.690039053 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.682772186 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.682616633 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.682332041 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.681569421 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.684961018 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.681953631 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.682844288 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.683019928 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.6827328 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.685382051 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.684212998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.684624622 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.683301421 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.683910857 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.683099212 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.696044304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.703602435 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.684451954 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.68599915 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.680734141 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.684313219 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.686585209 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.684088725 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.681208557 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.685512868 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.692105127 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.689387358 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.683581866 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.68559949 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.683176331 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.684876165 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.684231866 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.685105889 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.687798269 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.684757455 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.684522762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.684501178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.686640933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.683455834 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.684298985 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.68632096 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.684355371 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.694214143 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.684975839 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.685416522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.685498904 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.684196367 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.684692529 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.683724841 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.685408865 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.687464859 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.686193478 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.684576712 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.689294054 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.689590542 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.687549681 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.685865127 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.688199942 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.687126161 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.687287317 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.688673274 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.68717399 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.688388547 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.690240661 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.688037035 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.688719677 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.686342983 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.687503759 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.690117645 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.688889781 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.690429264 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.692779072 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.687480612 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.684439259 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.687044243 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.688804295 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.686641871 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.687762721 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.695651624 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.690886628 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.695959813 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.694718809 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.691426841 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.687667092 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.68993795 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.694052378 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.686241279 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.689282912 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.688456966 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.690066108 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.688932352 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.690861949 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.688972891 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.695515843 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.687840901 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.688399782 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.695813977 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.691198112 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.688191691 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.689424524 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.691091357 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.688530331 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.685384223 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.688560446 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.689977927 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.697231849 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.690244806 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.689529612 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.690525238 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.687241906 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.689902954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.69310498 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.688992116 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.691006224 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.685961273 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.689889356 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.689752302 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.694008465 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.687287301 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.688067164 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.68946538 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.69341526 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.697894883 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.687395101 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.690811103 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.689246134 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.69078127 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.690944078 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.691197748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.687192358 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.687091434 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.689771369 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.691110957 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.690755922 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.693552493 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.689319059 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.691077226 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.690589402 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.692108529 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.694785943 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.701103875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.695868248 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.686921454 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.689792789 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.691005859 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.692961639 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.691559377 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.691001165 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.690765493 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.69155717 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.690809543 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.691033607 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.69178836 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.693596502 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.705297394 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.692010983 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.691044504 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.694412368 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.695975553 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.690719824 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.688198275 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.690979403 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.693855136 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.694486461 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.698978312 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.693066618 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.698312479 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.692002036 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.692863604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.694928023 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.694531778 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.698622758 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.694404189 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.692616792 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.691955473 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.698860353 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.70847704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.69198459 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.700256318 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.717374137 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.693090939 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.693044411 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.692622299 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.692008543 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.692445508 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.694708429 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.694087641 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.69456301 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.692539226 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.692452196 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.692837312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.697230135 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.694587118 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.696690668 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.692939299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.692555853 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.69450751 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.689899173 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.693502582 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.69469774 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.693726822 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.694073827 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.693513168 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.693760176 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.704316086 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.702848146 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.693037962 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.694385534 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.691486303 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.696926403 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.698648858 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.704653412 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.698858345 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.693940955 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.693846578 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.695047045 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.693986244 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.690960471 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.694369935 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.693778665 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.693651337 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.690974335 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.705908626 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.701629469 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.697978874 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.693828231 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.695058251 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.694872627 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.69771853 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.695722677 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.694794664 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.696548832 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.695779339 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.697338414 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.694240172 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.696166684 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.697123659 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.700254301 seconds)
  done (took 1004.312656671 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.693098989 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.693220788 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.693660089 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.692921746 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.691705166 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693211138 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.692583257 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.693592759 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.693455953 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.693596517 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.692421192 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.694418142 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.693267689 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.693748961 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.693205611 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.692849888 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.692432796 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.693038737 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.693195159 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693690226 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.692771554 seconds)
  done (took 37.173362721 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.695291208 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.693403372 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.693826855 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.697512799 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.692774588 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.695475633 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.69311006 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695592162 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.695750604 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693749263 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.695872498 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.695619964 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.694363816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.693390457 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693362096 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697366368 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.696318756 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693823586 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.696453701 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.694156396 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698724433 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.693802646 seconds)
  done (took 38.907682348 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.697296204 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.697366975 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.696462076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.694085972 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.698335241 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.694498582 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.698922158 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.696571261 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.698404275 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.698182975 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.697205986 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.697335336 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.702245286 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.700665786 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.699114007 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.698244822 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.840725386 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.698808783 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.698201137 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.697841056 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.695525073 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.705047289 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.69550871 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.695086337 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.697044296 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.699219825 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.698615539 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.699285881 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.697884189 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.698905072 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.702013929 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.697549918 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.698682399 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.703842491 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.698601451 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.698439516 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.700850478 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.699072802 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.696211012 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.699326076 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.707099131 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.713462341 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.699663251 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.706530325 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.698625377 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.699844468 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.700701651 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.705797387 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.696481699 seconds)
  done (took 85.025104852 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.69944239 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.701187635 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.697401229 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.698467291 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.6991363 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.699337195 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.699962769 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.699538812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.696179703 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.696344579 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.699626297 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.696626578 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.696094393 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.699423242 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.699664322 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.696882104 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.69642566 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.697244423 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.699176436 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.696996243 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.699111999 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.700004346 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.700348411 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.697957225 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.699130985 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.697628363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.697707074 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.700638443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.698441807 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.697384704 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.699591924 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.700307754 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.700711725 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.69863152 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.69729747 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.70037991 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.701823702 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.697697741 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.701414843 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.697966081 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.700519195 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.700830205 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.701318896 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.700956576 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.698412417 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.698157675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.698700929 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.698867114 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.69818176 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.70081089 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.700325203 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.698228372 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.700717162 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.699710311 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.700636698 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.70098266 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.698698704 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.699269649 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.701391898 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.698554638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.698777026 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.700191099 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.699205051 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.701182765 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.70183459 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.698919191 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.699559651 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.701260302 seconds)
  done (took 117.167418262 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701986497 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.702425405 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.705197151 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.702826857 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.703014195 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.702808886 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.702505016 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.702598169 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.7027332 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.704331337 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.702143547 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.702326009 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.703411067 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.703474299 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.705317748 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.702917324 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.703251058 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.703559146 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.704269834 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.703540387 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.70531346 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.702847066 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.703838645 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.704152527 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.703958831 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.703318114 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.704014902 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.703972983 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.703610131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.703572703 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.704530844 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.703584764 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.70410768 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.70399871 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.704282871 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.703697892 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.703662005 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.705401438 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.705040071 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.703999836 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.705191522 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.703999667 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.704189374 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.704589047 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.704230138 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.704384042 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.704538462 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.705440705 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.704498593 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.704531417 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.705764253 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.70506962 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.704532777 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.704678442 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.704862183 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.706079626 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.704574645 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.705897129 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.706689401 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.706470724 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.705889327 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.70523074 seconds)
  done (took 107.282002855 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.704506805 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.704290395 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.701783312 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.701343308 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.704176456 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.701481869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.704447482 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.704101796 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.706981476 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.70436619 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707855919 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.704208827 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703797171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705898637 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.702721649 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704838047 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.702986274 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.704358571 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.70593247 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.70281191 seconds)
  done (took 35.709759618 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.702910483 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.705350852 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.703018998 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.703079234 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.706014496 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.703535214 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.706760684 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.707725827 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.703528756 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705799485 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.707386817 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.705494519 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703205201 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.703726119 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.705523749 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.70366069 seconds)
  done (took 28.90411271 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.703346626 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.705599122 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.70743892 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.707007859 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.704582037 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.703871737 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.706122846 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.70550189 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.703271504 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.706658001 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.706120071 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.706979851 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.706760016 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.707844704 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.703327718 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.707021687 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.704084689 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.704353176 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.707026954 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.707831283 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.705043841 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.704275489 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.706229663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.707111126 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.704426129 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.707093032 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.704145732 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.704672068 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.704748657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.707725679 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.704749443 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.704772853 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.705561345 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.705280994 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.708256549 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.70577964 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.708289625 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.708063741 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.707587442 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.708184106 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.708673239 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.705176157 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.708905015 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.709784352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.705572624 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.707625953 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.706308622 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.704519879 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.705841142 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.706047576 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.708186269 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.708853633 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.707523615 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.708390078 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.707896306 seconds)
  done (took 95.474721351 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7094496 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.708327758 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.706459871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.709113599 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.710245694 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.706172956 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.708460724 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.706101239 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.70639945 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.708050257 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.706405501 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.709099327 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706614232 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.70901708 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.707461167 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.708158217 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.706225684 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.706735563 seconds)
  done (took 32.368045679 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.707368433 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.70626503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.709881443 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.707322389 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.707513318 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.709577837 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.708288677 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.709481046 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.708829743 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707597948 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706520417 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.710014849 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709853895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.710171551 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.706733566 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.70718528 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.709033514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709972371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.708116135 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.708501497 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711062237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710413647 seconds)
  done (took 39.220836693 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.709712066 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.709311729 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.725065378 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.725644923 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.729470545 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.7368504 seconds)
  done (took 11.96824847 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709197798 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710374771 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.708522653 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711646979 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711215438 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709168471 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70889264 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708688079 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711801759 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708193076 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708254781 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711129026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710691273 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708160783 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710954608 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71105084 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708490899 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708059421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708975242 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710899551 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709637399 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71159793 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709135946 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709549978 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709100544 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709335227 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712216531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710031299 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708861445 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712200817 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712228975 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709009995 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711595254 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708992462 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711858833 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711517113 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710553055 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712502253 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712000684 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709133073 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.711971587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712036662 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711619246 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712819774 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712684062 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710852985 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709740235 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710455281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71092983 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713305811 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713771661 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710393048 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71367018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713412825 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713285818 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71364254 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711610188 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711218897 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713174011 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710626188 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711575928 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.716224909 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711126509 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710995438 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713448621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710319863 seconds)
  done (took 114.554417507 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711631139 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710746085 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711405128 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711339449 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711564209 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710418215 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711113473 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710943924 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712029363 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711360543 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713791293 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713043928 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712692011 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711597261 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710903429 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711773275 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.7116946 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711497044 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711611751 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714740924 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711332128 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711354705 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711431143 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712158941 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711547121 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714111014 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712490371 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712259753 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712305946 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713087283 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712676335 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711485406 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712523588 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.712286282 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.714167645 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712826389 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71238665 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712465926 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712964321 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.715309083 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.714021854 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.714520074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713356358 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712802643 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713715822 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713015192 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71526254 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71600689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712624191 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712512465 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712687556 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712110229 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712443867 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712513978 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712783154 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.713406021 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713130119 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713303728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713766395 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.716207924 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712681197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713542293 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.715933146 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713273162 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715659621 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.714087376 seconds)
  done (took 114.679702172 seconds)
done (took 2343.771340987 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.719953166 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.744138642 seconds)
  done (took 15.100446676 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.875048034 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.829924782 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.714846933 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.723696138 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.714857979 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.735871492 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.728009815 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.716346068 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.715871301 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.715510803 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.715859737 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.902567494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.711044896 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.715635832 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.715857245 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.808756886 seconds)
  done (took 49.682197837 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.718218852 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.720181276 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.730088996 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.72257475 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.719793759 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.73131064 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.751609177 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.722068059 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.752050859 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.730416658 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.787242713 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.729842273 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.718035236 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.767786063 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.731426033 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.732334699 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.80778571 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.791763562 seconds)
  done (took 33.005065563 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.794365339 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.725079582 seconds)
  done (took 10.163414017 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.734147841 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.721730895 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.76237641 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.718775649 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.742226 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.749851468 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.760708788 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.723517115 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.750960571 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.743482168 seconds)
  done (took 69.050954771 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.72629257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.721413584 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.721507628 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.720799716 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.714405879 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.717687819 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.719852285 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.719249021 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.371232367 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.75588145 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.726183421 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.726627438 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.720935163 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.722918972 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.71991186 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.744271311 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.826960601 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.720662139 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.718493047 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.727526669 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.722462537 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.778046665 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.733522097 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.723152387 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.752964057 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.375168829 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.727996262 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.728301483 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.825367849 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.720385796 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.720929282 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.722080522 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.723917881 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.128478374 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.988410995 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.721435695 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.736007659 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.73090149 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.720748193 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.828394456 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.723764776 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.729808759 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.473711949 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.964999244 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.827237388 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.764429049 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.026191274 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.737653875 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.723177042 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.751056472 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.725072346 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.726381656 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.735309636 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.212231335 seconds)
  done (took 124.118918864 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.719489372 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.06899825 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.887148605 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.71971157 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.006766961 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.925356596 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.71990847 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768256322 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.721471473 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.952493378 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.974267275 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.825359131 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.719034434 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.718143317 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.718130087 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.718016964 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.877854467 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.793491783 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.720737694 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.718423684 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.749450967 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96267748 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.841700323 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.720529133 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.748749284 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.931660562 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.841222068 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.822894257 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.503520713 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.717892618 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.783553265 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.720565575 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.722253914 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.718400258 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.8760688 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.815222737 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.804312882 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.721703388 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.719878627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.719727794 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.392507239 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919594486 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.81766101 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.861617564 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.920372203 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.925410599 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.503026552 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.720010403 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.472739312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.88606907 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.95036949 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.954459987 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.843015298 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.721223345 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.255409147 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.719396577 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.719167673 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.971060869 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.867124431 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.818588561 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.721755953 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.721486222 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.719509229 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.967143221 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.723385317 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.817478879 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.722046782 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.720421797 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.819125257 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.82230158 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.859481676 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.933635117 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.754926036 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.609759494 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.262520457 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.968919898 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.788512505 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974356484 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.722391688 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.719598663 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801014043 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.562820189 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.975508213 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.971007729 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974281574 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758438685 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.446979263 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.722477382 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.950455561 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.943955708 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.983503481 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.957897981 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.960187911 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.063893255 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.721661024 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.722842014 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.942283623 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.858216317 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.723744873 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.067290351 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.955943323 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.269032535 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.743909094 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.029384049 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.855760859 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.724072438 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.364361986 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.722728949 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.954718904 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.764083794 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.72266526 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.721784362 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.944478324 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.713753355 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.722126529 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.370746592 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.786001405 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.723981514 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959882469 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.723672062 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.993942669 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.725097107 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.963149951 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.782598267 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.757313046 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.955419872 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.957942917 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.724884407 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.969711093 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969008288 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.839316948 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.945310842 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.423134427 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.723382522 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014144528 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.725902277 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.723291302 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.895850655 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.723954933 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.870879526 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.726023792 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.018350242 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74703416 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959355437 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.727835226 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.98377012 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.7590543 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.77598224 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.726458074 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.858286702 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.72509555 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.553836746 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.884402026 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.725637348 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.725536637 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.535363268 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.723538205 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.876084945 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.372101618 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.747304001 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79918116 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.395532617 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.724401678 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805964852 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.749185148 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.114993874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.724813289 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.977570681 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.727108896 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.724410799 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.724529506 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.967456611 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.911918721 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.729140783 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.724815956 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.637918793 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.726642824 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.72563197 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.911018334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.080804347 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.725361545 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92874973 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.729413337 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.855014499 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.729150845 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.807608186 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.067867634 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.725096798 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.725203693 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.725858803 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.72647242 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.725105323 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.9901062 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.754855213 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.247118551 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.865062356 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002975108 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.039040486 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.976426663 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.773368725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.729583988 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.983849885 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.728817126 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.790441403 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.727791657 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.750220599 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.957924233 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.730486375 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.937185142 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.008360744 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.576149439 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.776411148 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.728031949 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.726608373 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.726796784 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.87340141 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.815224388 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.728420706 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.72782946 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.844548661 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.850721647 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.937240809 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.728261695 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.809138414 seconds)
  done (took 870.86916167 seconds)
done (took 1173.629228104 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.727086461 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.726345683 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.717245734 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.72862999 seconds)
  done (took 28.553498399 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.735873013 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.733206884 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.732873181 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.732565395 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.733952265 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.731517782 seconds)
  done (took 12.052082906 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.744409193 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.727475083 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.733700121 seconds)
  done (took 20.859874761 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.800745529 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.11491073 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.833694845 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.149825018 seconds)
  done (took 9.552274607 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.735265451 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.734451288 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.73419875 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.734754078 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.739057272 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.738688375 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.736943679 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.737732712 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.739722056 seconds)
  done (took 17.286951628 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.804956781 seconds)
done (took 93.7639599 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.80697331 seconds)
    (2/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.748049706 seconds)
    (3/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.715868322 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.930996126 seconds)
    (5/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.714903235 seconds)
    (6/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.960849013 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.991777233 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.656931713 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.826795635 seconds)
    (10/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.859629719 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.751735874 seconds)
    (12/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.824391205 seconds)
    (13/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.732084092 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.923139686 seconds)
    (15/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.27068281 seconds)
    (16/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.963976385 seconds)
    (17/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.951182403 seconds)
    (18/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.76217128 seconds)
    (19/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.033826221 seconds)
    (20/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.721729319 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.234925145 seconds)
    (22/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.903941386 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.530794024 seconds)
    (24/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.822810891 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.100818147 seconds)
    (26/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.866744063 seconds)
    (27/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.761101432 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.821497053 seconds)
    (29/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.734864742 seconds)
    (30/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.718666604 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.185938192 seconds)
    (32/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.814307301 seconds)
    (33/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.128089266 seconds)
    (34/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.129933967 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.734270347 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.734599814 seconds)
    (37/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.064040018 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.905141655 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.951827015 seconds)
    (40/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.809900593 seconds)
    (41/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.840166265 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.084383083 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.639788209 seconds)
    (44/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.701959115 seconds)
    (45/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.733752436 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.611142983 seconds)
    (47/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.833066412 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.080116681 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 1.957243488 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.825755746 seconds)
    (51/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.967296878 seconds)
    (52/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.156644005 seconds)
    (53/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.90436349 seconds)
    (54/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.722191533 seconds)
    (55/309) benchmarking ("sort", Int64, false)...
    done (took 5.557653118 seconds)
    (56/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.622396104 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.990818112 seconds)
    (58/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.731772087 seconds)
    (59/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.889590682 seconds)
    (60/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.74329601 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751051234 seconds)
    (62/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.746621801 seconds)
    (63/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.78845155 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.080192541 seconds)
    (65/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.967066432 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.828763084 seconds)
    (67/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.837486822 seconds)
    (68/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.026171366 seconds)
    (69/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.895810708 seconds)
    (70/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.926853017 seconds)
    (71/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.162941997 seconds)
    (72/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.738858994 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.381832273 seconds)
    (74/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.880484145 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.749319252 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.785335494 seconds)
    (77/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.804009217 seconds)
    (78/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.012807393 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.937065927 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.922081118 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.045702351 seconds)
    (82/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.145821253 seconds)
    (83/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.031094144 seconds)
    (84/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.580010741 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.092374922 seconds)
    (86/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.88877516 seconds)
    (87/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.022565611 seconds)
    (88/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.922313637 seconds)
    (89/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.196261729 seconds)
    (90/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.052572321 seconds)
    (91/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.317513429 seconds)
    (92/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.880300573 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.805020732 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.845785661 seconds)
    (95/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.760495205 seconds)
    (96/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.75927075 seconds)
    (97/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.767422032 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.744128012 seconds)
    (99/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.404905589 seconds)
    (100/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.994959765 seconds)
    (101/309) benchmarking ("sort", Float32, false)...
    done (took 5.450564169 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.582379072 seconds)
    (103/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.770393199 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.744077451 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.970494718 seconds)
    (106/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.749421799 seconds)
    (107/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.09169581 seconds)
    (108/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.827442459 seconds)
    (109/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.205718445 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.74980765 seconds)
    (111/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.747239589 seconds)
    (112/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.455159322 seconds)
    (113/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.778681791 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.434871505 seconds)
    (115/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.906197845 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.008530322 seconds)
    (117/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.072691626 seconds)
    (118/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.973772201 seconds)
    (119/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.777119021 seconds)
    (120/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.708780729 seconds)
    (121/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.756389106 seconds)
    (122/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.922771212 seconds)
    (123/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.753149824 seconds)
    (124/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.853805416 seconds)
    (125/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.951109679 seconds)
    (126/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.984960161 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.564629204 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.690643381 seconds)
    (129/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.198003864 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.793414075 seconds)
    (131/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.833314759 seconds)
    (132/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.780652174 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.744843059 seconds)
    (134/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.768432424 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.111919716 seconds)
    (136/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.837707144 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.063582642 seconds)
    (138/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.85690128 seconds)
    (139/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.832328268 seconds)
    (140/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.923750872 seconds)
    (141/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.198419048 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.762841124 seconds)
    (143/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.998903244 seconds)
    (144/309) benchmarking ("sort", BigInt, false)...
    done (took 6.745871836 seconds)
    (145/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.122463019 seconds)
    (146/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.835005472 seconds)
    (147/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.745202706 seconds)
    (148/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 2.332723761 seconds)
    (149/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.969228449 seconds)
    (150/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.82692622 seconds)
    (151/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.966007373 seconds)
    (152/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.119944417 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.732600511 seconds)
    (154/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.887111492 seconds)
    (155/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.026985515 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.910838208 seconds)
    (157/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.739423846 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 3.092095154 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.73673054 seconds)
    (160/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.771866523 seconds)
    (161/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.747203381 seconds)
    (162/309) benchmarking ("sort", Int8, false)...
    done (took 4.655129296 seconds)
    (163/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.73532391 seconds)
    (164/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.045671449 seconds)
    (165/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.891219477 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.838800376 seconds)
    (167/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.146430274 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.737025026 seconds)
    (169/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.852604602 seconds)
    (170/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.748025757 seconds)
    (171/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.859181234 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.682311539 seconds)
    (173/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.763708544 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.7719811 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.747339979 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.920569859 seconds)
    (177/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.864925634 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.77890052 seconds)
    (179/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.868630102 seconds)
    (180/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.218062199 seconds)
    (181/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.714395918 seconds)
    (182/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.830006362 seconds)
    (183/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.179604003 seconds)
    (184/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.054744539 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.734735915 seconds)
    (186/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.890379634 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.85271156 seconds)
    (188/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.006594588 seconds)
    (189/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.846745951 seconds)
    (190/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.190594737 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.935029416 seconds)
    (192/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.843613078 seconds)
    (193/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.739291975 seconds)
    (194/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.981847351 seconds)
    (195/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.892639782 seconds)
    (196/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.769543054 seconds)
    (197/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.93058317 seconds)
    (198/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.029179686 seconds)
    (199/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.07085081 seconds)
    (200/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.787288399 seconds)
    (201/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.032760067 seconds)
    (202/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.779952384 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.196312138 seconds)
    (204/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.899996817 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.817489448 seconds)
    (206/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.990110834 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.511891538 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.381404564 seconds)
    (209/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.752844802 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.969851556 seconds)
    (211/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.830478469 seconds)
    (212/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.735140833 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.504424275 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.998235789 seconds)
    (215/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.449282684 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.111644079 seconds)
    (217/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.764591674 seconds)
    (218/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.817399508 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.473803205 seconds)
    (220/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.868565018 seconds)
    (221/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.341856966 seconds)
    (222/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.939274491 seconds)
    (223/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.610705911 seconds)
    (224/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.956621644 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.860720655 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.10886257 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.753763841 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.164384209 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.740114957 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.812537473 seconds)
    (231/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.815935932 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.774632003 seconds)
    (233/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.818238062 seconds)
    (234/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.910559866 seconds)
    (235/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.745168499 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.63353141 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.75480801 seconds)
    (238/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.8313476 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.945978731 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.920267313 seconds)
    (241/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.853068155 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.867377837 seconds)
    (243/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.771538191 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.751258596 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.036844699 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.697609207 seconds)
    (247/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.079453072 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.904726451 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.331954165 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.052074405 seconds)
    (251/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.742289772 seconds)
    (252/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.137301611 seconds)
    (253/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.279968577 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.117472935 seconds)
    (255/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.862688256 seconds)
    (256/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.775960153 seconds)
    (257/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.772850521 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.777869597 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.752361419 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.968483969 seconds)
    (261/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.843382185 seconds)
    (262/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.092445836 seconds)
    (263/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.270860025 seconds)
    (264/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.964252714 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.016917427 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.076595257 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.163072058 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.755013491 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.530971257 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.128664082 seconds)
    (271/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.891866952 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.769654981 seconds)
    (273/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.320752543 seconds)
    (274/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.057236843 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.067014436 seconds)
    (276/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.031475473 seconds)
    (277/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.742184518 seconds)
    (278/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.330307002 seconds)
    (279/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.241691009 seconds)
    (280/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.184975413 seconds)
    (281/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.264338972 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.845883652 seconds)
    (283/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.952684383 seconds)
    (284/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.855785638 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.001765719 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.880654517 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.778725932 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.527766053 seconds)
    (289/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.910022642 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.653021939 seconds)
    (291/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.920791967 seconds)
    (292/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.779240901 seconds)
    (293/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.852635165 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.775118049 seconds)
    (295/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.756172438 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.83422737 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.890588463 seconds)
    (298/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.816066501 seconds)
    (299/309) benchmarking ("sort", Float64, false)...
    done (took 5.510272861 seconds)
    (300/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.142175995 seconds)
    (301/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.829252458 seconds)
    (302/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.014073286 seconds)
    (303/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.863236025 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.971272796 seconds)
    (305/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.798857107 seconds)
    (306/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.911649706 seconds)
    (307/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.006251141 seconds)
    (308/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.835832723 seconds)
    (309/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.088452848 seconds)
  done (took 972.363488157 seconds)
done (took 974.086373862 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.786393538 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.779736227 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.762050008 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.783671383 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.874634896 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.793082957 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.773244704 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.765392124 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.810851582 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.811907758 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.760042944 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.790161213 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.765112797 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.765485049 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.763038011 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.7776817 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.079793611 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.796702895 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.781438312 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.773472206 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.780269193 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.7615631 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.816992872 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.7899932 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.767997614 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.766484437 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.766440713 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.78431611 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.87602125 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.768001054 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.767264321 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.775658694 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.078684998 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.795429373 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.759580921 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.783727442 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.776042322 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.773312798 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.771107174 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.797261669 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.16525463 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.804369208 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.766091091 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.765142896 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.765582373 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.768775974 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.767033389 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.771882102 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.77890541 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.780323609 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.156145711 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.822104861 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.767593062 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.765207428 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.776238128 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.768375252 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.769398633 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.78270442 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.784421081 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782071208 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.062872596 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.802438744 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.768343321 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.783521267 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.773386275 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.191628476 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.801283003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.770749236 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.165871103 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.811170749 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.192867038 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.818900071 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.76718635 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.781503808 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.799324753 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.079587581 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.792629571 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.765979716 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.775559482 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.765280672 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.776382577 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.782115609 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.771961988 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.76702245 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.781495341 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.794430871 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.77675785 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.770024836 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.7781374 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.786201724 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.775234174 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.779137006 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.769742882 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.761571991 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.776814334 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.770499286 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.769019189 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.76945667 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.772264968 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.777117932 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.164180779 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.825688679 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.763877484 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.763566663 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.768952291 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.781669516 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.164764079 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.810295749 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.790755006 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.81508604 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.770158082 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.064298535 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.80117357 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.78386681 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.777400179 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.770791965 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.762934439 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.064906034 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.190507675 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.824198026 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.774006416 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.766017551 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.784879661 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.771264732 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.765448264 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.084123094 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.800738145 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.783325702 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.88989663 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.781821611 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.800978324 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.765126519 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.772421468 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.800990861 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.785272191 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.800235639 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.772126982 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.787691009 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.785420198 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.767266319 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.78060417 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.779791792 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.770145932 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.775288008 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.76486839 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.800496752 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.782634701 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.78329299 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.790538971 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.890612232 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.768474681 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.066417455 seconds)
done (took 278.172344426 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.843824572 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.760537254 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.865404489 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.768938835 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.854638948 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.856865293 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.765656044 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.765148395 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.766430939 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.142305951 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.766524252 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.775086908 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.768253377 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.765695589 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.853895511 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.768700643 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.766053822 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.106531525 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.770742302 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.840002239 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.770035668 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.766863775 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.76875649 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.143498457 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.765655744 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.770282249 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.843363224 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.769578066 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.107618618 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.768907936 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.765536779 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.109143505 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.861673004 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.786804775 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.779618666 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.775978547 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.853374203 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.774850447 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.85072983 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.852013323 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.869220397 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.810040807 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.76951916 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.772112933 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.773898616 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.771264933 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.766768847 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.797018975 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.767575236 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.76815071 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.108054692 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.779921553 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.777770734 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.76757053 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.767447339 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.792897149 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.768053912 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.771843489 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.862156512 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.771421804 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.835845901 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.144942126 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.144143745 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.770293933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.766487741 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.768362623 seconds)
  done (took 177.605201361 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.836532893 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.851115597 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.837384238 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.775738783 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.821168522 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.838025045 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.776394203 seconds)
  done (took 14.424088174 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.776892166 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.77107925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.821696969 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822168273 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.770803561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.925534227 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.772184896 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.78171744 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.768412069 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.82172998 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.772591414 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.772110765 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.77790362 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.769671995 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.822376421 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.782225296 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.887308827 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.772394624 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.772794267 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.923250977 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.770064314 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.779074769 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.804842458 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.782376266 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.774054317 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.778405762 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.364872006 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.773003357 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.770295382 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.772053313 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.77029099 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.812901977 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.772247791 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.768231916 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.770494756 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.88922334 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.7733056 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.770435289 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.774102777 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.774714861 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.773326837 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.772757497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.774143461 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.77038561 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.772353234 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.796457912 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.773853101 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.772599186 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.773726854 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.773502306 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.806503605 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.773634797 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.771292791 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.771400805 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.827118643 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.779907119 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.774538846 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.770364086 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.773367307 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.771323013 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.924338015 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823660222 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.773122324 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.82416939 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.774291457 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.774397806 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.774307808 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.774711084 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.870826857 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.773299618 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.824044292 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.770709636 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.93073225 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.797216077 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.775151976 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.7767827 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.776737612 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.774709482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.775639116 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.781234852 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.771821881 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.775939824 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.783506971 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.773799873 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.773451371 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.886900507 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.882357434 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.772520725 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.78824932 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.781866538 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.773084853 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.810831013 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.775347547 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.7721446 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.831106688 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.891610547 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.83030978 seconds)
  done (took 196.339064613 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.779840496 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.786543686 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.776362498 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.792644871 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.775160359 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.775484474 seconds)
  done (took 12.378522797 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.777645548 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.776537606 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.776151702 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.776021946 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.776019427 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.776635696 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.776307636 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778181815 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.779755314 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.775780315 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.776977701 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.780225719 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.778163066 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.777962738 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.777676495 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.77538664 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.778183903 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.773744887 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.777108424 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.777319499 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.921930828 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.777776063 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.776420801 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.778067873 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.782147073 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.776074312 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.784744593 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.77800247 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.776302473 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.785846297 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.781588441 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.777862338 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.77877062 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.783626325 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.782531845 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.77912469 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.780950741 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.77883782 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.774863764 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.77875598 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.780057213 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.778017126 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.777344893 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.781258606 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.781927376 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.783008365 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.783430673 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.784747443 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.779092591 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.779332759 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.779763063 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.778331884 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.779282923 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.778747157 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.780604529 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.784366026 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.783984781 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.779905501 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.779078164 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.779379199 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.78003015 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.781286732 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.781248895 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.783686252 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.785337366 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.780943377 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.779600671 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.783718541 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.779538489 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.77853382 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.780644804 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.775624267 seconds)
  done (took 130.95320592 seconds)
done (took 533.404567171 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.951585823 seconds)
  done (took 8.647269954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.880523984 seconds)
  done (took 8.62366481 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.261615216 seconds)
  done (took 9.959359643 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.850365023 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.802371624 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.785432253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.78208899 seconds)
  done (took 28.943365822 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.904382901 seconds)
  done (took 8.599422021 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.796099998 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.772552452 seconds)
  done (took 15.306292636 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.815180638 seconds)
  done (took 8.510662022 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.832294442 seconds)
  done (took 8.551346677 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.788791689 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.805696695 seconds)
  done (took 15.304498097 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.75891798 seconds)
  done (took 8.453408583 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.526881768 seconds)
  done (took 11.324741386 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.797091159 seconds)
  done (took 8.607363338 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.849603702 seconds)
  done (took 8.549855723 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.878316224 seconds)
  done (took 8.577286234 seconds)
done (took 159.656153488 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.782069728 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.776647142 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.775589165 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.777921803 seconds)
  done (took 28.814289242 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.819047022 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.815478058 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.817112777 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.826829961 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.817878988 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.816067872 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.809197818 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.808582737 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.826821128 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.819223051 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.817759118 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.819582505 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.816506517 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.808604547 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.818612042 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.818062498 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.832938793 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.818702459 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.809595483 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.819341168 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.784889923 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.827577436 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.820450734 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.78429454 seconds)
  done (took 45.274278787 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.977663769 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.853686405 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.937144002 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.837473345 seconds)
  done (took 9.306515495 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.83595791 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.837129887 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.848728671 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.889702188 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.912863256 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.845798554 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.809793121 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.804890379 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.793304614 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.837386373 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.912976516 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.831126539 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.92410645 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.783702773 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.963043349 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.784386585 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.784387313 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.835489145 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.887852735 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.902793816 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.785825197 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.835563217 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.839671658 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.834516335 seconds)
  done (took 46.022898805 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.783328277 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.791509396 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.789678064 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.785908839 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.786355114 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.78483392 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.790110226 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.785144995 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.805295483 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.785325289 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.784714081 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.784831004 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.783842485 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.784320453 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.783048401 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.796589839 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.79726773 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.784752962 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.787563152 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.790277903 seconds)
  done (took 37.467222565 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.779322584 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.631571706 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.132090009 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.035815531 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.780205074 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.779472803 seconds)
  done (took 30.842096759 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.799247167 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.79274829 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.7852253 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.842776064 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.927736618 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.793613697 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.786507693 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.797575609 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.834420681 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.853129449 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.807473015 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.815327484 seconds)
  done (took 23.539282499 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.782996412 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.788979627 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.782672154 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.815090992 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.797373677 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.793528394 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.793725409 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.781765412 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.798835445 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.806752902 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.794147637 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.798590358 seconds)
  done (took 43.242034517 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899529813 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.669137221 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.437044788 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.504627175 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.317381649 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992334989 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306600909 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.959843366 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.785498303 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055203538 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.429195611 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045033514 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035483881 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783204914 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.859810178 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.256709819 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085597883 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.021699644 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.813762158 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551947777 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911288053 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329624159 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.545424373 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.918192098 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992658075 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.913651942 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.043133341 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.743164243 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928173807 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821179595 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793429295 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.785072999 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.057227545 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004692957 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914562014 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.795014393 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.438338355 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.501580166 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.77225184 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.517055788 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.534101395 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929851491 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791891429 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786300033 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.716587338 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399356169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977798958 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.788917285 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.486474215 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786421543 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.795236506 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8753914 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.789112264 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.598932378 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.741477469 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.062521277 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.784257728 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791398314 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356733682 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.924970554 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429959448 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.73194203 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.877133 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.514264552 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2743333 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.94394846 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.789014144 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.790183203 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719119451 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.555962684 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.917091738 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.929574561 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.806617483 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435445666 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110872263 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.487971076 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881318259 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087089931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.688124905 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.732624328 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011982742 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.742030149 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719083159 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.622938543 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.721237476 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065211833 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827528356 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.457847602 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.832360413 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960505743 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.796945258 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807742107 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793957021 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.010897211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.668775705 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788687963 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.365457618 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.086115314 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.809139904 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96346073 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719494546 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.790911667 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.041846976 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.99751501 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.051366709 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.273419615 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954184355 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.788620552 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.879544707 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.732701283 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.810873903 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.07954399 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.854670702 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.914289253 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9256225 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.748127548 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097771021 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.82131755 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.968333682 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.43384984 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.066868375 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.124324776 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.043097962 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872886701 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.790546334 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.79266379 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.582246357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.420574538 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.011367939 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.789918175 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315213103 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.810658935 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.792163221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722171318 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.418010465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.458393487 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.906114467 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011758361 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.765980853 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.075622363 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.722069677 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.932665256 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.903121204 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.0104993 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.451131644 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.876816833 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04747565 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315626086 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.073952407 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812712376 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808915699 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890423176 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.811262638 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.244303507 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054312294 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.793462972 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.794528144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579350887 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.867372209 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.799797325 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.795068298 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.620920379 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085990946 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.823858823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.799138341 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.725883777 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.804776121 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873601427 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.795779158 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.800311107 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.314692448 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.544147777 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.804251051 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.469237247 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020315603 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.800427568 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.512076052 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993485857 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.879596374 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.080141123 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86057169 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.723736127 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.494534519 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.49469454 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79387039 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.727727121 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.792791049 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.800902396 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80238967 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.988044068 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.090353737 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846774134 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.561704937 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.914624393 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.80672079 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.796537849 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792723631 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.316583011 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.916301796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445227284 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.813134241 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.927205581 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.805824484 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.728785262 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.796013944 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.79664722 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.793689508 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.742573657 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.844903733 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.509171383 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.136261786 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050319171 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.439743793 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81098746 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.585403756 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.930958402 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.823327244 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.393460396 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924427537 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.809546334 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866186576 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.805835515 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.51365293 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.569776627 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363229245 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129973408 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.12889575 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.275307633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.323221514 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.026719442 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971229791 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.027334812 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321828542 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.854013019 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.9742702 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740551042 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883140958 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.45690142 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157625743 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81006487 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.021918181 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201611282 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.451018701 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969173907 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.004407076 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.829609718 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.747728168 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730419978 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.317600381 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.949075887 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.426066544 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028586224 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970205847 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.386837474 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.924760491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.79617562 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.271910905 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886703635 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.505645314 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.155047846 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35317169 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.45143318 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180804855 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.798891403 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.242704058 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161573542 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.155801374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.898486113 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729476138 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.807538096 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.80626352 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.796302277 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.773862298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.698676875 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.072854957 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808463924 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029481972 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.098480611 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086562056 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.707620491 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.801418795 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.798659456 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106507608 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.617998027 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943952436 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.289090044 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.276767087 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.803710926 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.729597862 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.729817175 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.500551219 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.808383158 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.770337794 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.0339498 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.924719388 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.750234419 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333165357 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015399029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.05188064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.812147944 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.087949865 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.081628098 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.533996891 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.826487917 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.897915758 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.374897444 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.541976114 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.019613553 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.032693698 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.603473955 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.027452013 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458681849 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.779657213 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.798840486 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011883259 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.019982514 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.457195129 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.070703371 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.524039274 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.808601866 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194708363 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864595606 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.443875431 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.025534221 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.897416658 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809855806 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880146766 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808129464 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.810178091 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.810022179 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847719956 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.456409925 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947753126 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.813789822 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890129808 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.930338962 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.39138357 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.809971535 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093559511 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196357705 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.148560458 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868385661 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.800344194 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802532429 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733649709 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938230539 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.244628324 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.07335009 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.929761416 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.938038046 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82603363 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.377975522 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.24974745 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014397636 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.077130338 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.693538454 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.802040862 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.89536193 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.02414305 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.810244102 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.010375981 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.039410278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.134384958 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274989815 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.082324533 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.980972732 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074287176 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.172336426 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.802898969 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392273904 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.808483367 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.336808535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.846600657 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.444279161 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102370438 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81211673 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031022981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.824826277 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.000105145 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.254562926 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.526148871 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.173970345 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.808192171 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86820095 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093778031 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.224814148 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123034112 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.884982405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813703911 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.500426007 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942139046 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.746467821 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.066917424 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.805077706 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013154412 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.515427271 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.811166381 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101345067 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120347291 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.802080367 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.776773945 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855924344 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.812715008 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.025389066 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081495209 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058111971 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.813692472 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.813871913 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.620040069 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097589038 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.869920452 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.736041241 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.808015784 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904035231 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052149568 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.823881982 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.321798868 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.506047767 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.113629302 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.726862238 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82616599 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.232691614 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.29014128 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159435767 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.334237425 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047988441 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.365631939 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.668245337 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200985962 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.810591438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.255402796 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203575951 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.807880271 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.33884284 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.922369924 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.088896447 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.136288878 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.816691845 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.581059878 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.8575874 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028027084 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397509994 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.746817917 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.815638637 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.866918138 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.805775537 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.934826688 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817137093 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.789429528 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.69022055 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.649209891 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298154599 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.811527047 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.795279348 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.356065373 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386827093 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916963652 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96081136 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.81657691 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.527745743 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.096472871 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.061893042 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332472346 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.88294218 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.810398299 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.807511559 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.733366588 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.006191112 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.001788802 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116528966 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.180842476 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.923159981 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.811201912 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.021084372 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016898128 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.403107833 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972692862 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262603368 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92510224 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.736334019 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.51893597 seconds)
  done (took 1645.370688927 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.843270893 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.82435969 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.817764515 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.885525424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.869444527 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.902223413 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.878939151 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.885431499 seconds)
  done (took 56.636881556 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.807196727 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.003433419 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.816784182 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.809079085 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.865948426 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.80772858 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.030967956 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.821249371 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.868000472 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.817830604 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.856582943 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.811021907 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.134398634 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.833578315 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.808866407 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.799246328 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.818842109 seconds)
  done (took 73.491864075 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.809760634 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.993692044 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.831146712 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.826828072 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.692958075 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.81869565 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.808718267 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.837108644 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.814973844 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.980264395 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.145520928 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.812643459 seconds)
  done (took 89.103631682 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.823857151 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.814618727 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.815901878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.815529924 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.815513085 seconds)
  done (took 10.823436643 seconds)
done (took 2141.662575242 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.152227708 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.993007813 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.029937755 seconds)
  done (took 5.753991919 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.952118093 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.001601528 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.119738027 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.126265695 seconds)
  done (took 9.931280198 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.095144465 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.176443727 seconds)
  done (took 5.999519738 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.130194024 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.835802 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.193308701 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.80610405 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.808011081 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.809488546 seconds)
  done (took 22.157131651 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.809592595 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.812326831 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.809373894 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.811861365 seconds)
  done (took 8.970456926 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.792103784 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.497649049 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.79349614 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.80872686 seconds)
  done (took 20.619399338 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.559367426 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.934155604 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.552934986 seconds)
  done (took 8.775396025 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.37479806 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.730768044 seconds)
  done (took 8.834208843 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.971294911 seconds)
  done (took 3.700055192 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.839001716 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.082163581 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.314779824 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.335632932 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.408784364 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.623933872 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.109665215 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.039145638 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.258821519 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.260827135 seconds)
  done (took 24.002599043 seconds)
done (took 133.787227579 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.15236874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.831175985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.010960424 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.163344624 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.038536096 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.013018342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.027843058 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.154977002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.844377597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.83450066 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.173901444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.034922547 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.976235738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.820667259 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.980849088 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.819302507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.029292439 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.172054614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.857361918 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.092424006 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.038382512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.814604971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.009864254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.830419257 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.036685238 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962511437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.358952116 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828511628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.996495653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.373218837 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.968027228 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.235210266 seconds)
  done (took 166.212418265 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.812294311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.811888283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.810677289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.8113586 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.243905046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.812353324 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.812093584 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.812321002 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.240491457 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.237603729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.812267238 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.233250057 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.81294723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813629781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.812093335 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.81223715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.394001855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.812952813 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.812349903 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.815079974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.816625805 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.087313725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.816937413 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.113814945 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.420571472 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.825547592 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813564069 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.828380785 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.829767827 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.828871956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.830691601 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.811854882 seconds)
  done (took 207.293799526 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.811926656 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.813047427 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.814556983 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.816818317 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.815457168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.819576772 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.812474765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.813466408 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.61460314 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.585455368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.827735097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.814849736 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.81656838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.813614955 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.817356651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.813668535 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.817652491 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.822472658 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.823162305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.826516925 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.830403332 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.594910119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.833961782 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.631062737 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.828715096 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.824987937 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.813981059 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.827271742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.830917304 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.826712956 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.833175461 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.81529426 seconds)
  done (took 219.155669008 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.06806948 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.819874038 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.820520369 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.735095599 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.820873651 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.820334031 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.813013175 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.072169507 seconds)
  done (took 18.726498997 seconds)
done (took 613.127158787 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.291213588 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.139935328 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.997882887 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.843719382 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.097971976 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.875832283 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.839714191 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.902981462 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.468937812 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.909001779 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.513605468 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.863306514 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.596642889 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.865990841 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.963858704 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.895814041 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.384217708 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.474462197 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.016175716 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.909284694 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.01002533 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.771954176 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.921806657 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.503284595 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.619509947 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.837155803 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.933272417 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.390864882 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.851530226 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.000915378 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.594198671 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.157910462 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.855314095 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.838779672 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.894066948 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.873367078 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.146822683 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.856580897 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.961363505 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.583122885 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.915623538 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.37805993 seconds)
  done (took 100.482963007 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.811943913 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.808966491 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.80972541 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.80973513 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809451506 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.809415533 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.809094736 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.809885224 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.810870365 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.810542406 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.81316531 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810868909 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.810239246 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.81040726 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.809731664 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.809742396 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.809595332 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.810234176 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.808631624 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.80907915 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.809905852 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.810083021 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.823112498 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.809051204 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.810745558 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.812649522 seconds)
  done (took 48.82382603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.822802033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.971964854 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.062772194 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.843216897 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.823392195 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.826706311 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.841904795 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.82794789 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.825532149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.827909305 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.915109802 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.831217222 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.843371739 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.058602065 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.842037706 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.82376616 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.823560826 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.824678254 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.97865504 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.840384293 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.84349131 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.828691864 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.842840677 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.837700803 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.826922151 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.825769634 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.828750336 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.271619878 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.833994908 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.915649346 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.868816299 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.84808849 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.204264584 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.072230373 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.881074153 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.834172112 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.824690046 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.919044804 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.831926466 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.825078124 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.843063443 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.831503677 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.058164748 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.317334788 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.843276427 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.828683769 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.284140829 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.931751975 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.870129776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841217155 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.066819261 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.847152843 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.830858749 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.829833828 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.865578832 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.835764417 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.828685657 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.121467919 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.84254298 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.846263064 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.833104469 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.830638835 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.989804485 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.838949814 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.976387957 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.840179662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.835691492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.830581181 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.064068182 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.847701949 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.317442867 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.844263609 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.829414273 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.918937925 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.981327836 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.308391323 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.843843327 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.989259345 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.225223318 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.856233531 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.838066458 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.263511038 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.858243899 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.837211568 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.832863088 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.833055142 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.830569241 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.875866132 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.846478325 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.25297183 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.325019378 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.14089557 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.858383412 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.845333839 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.832045652 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.123115007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.839666466 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.830846334 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.061092471 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.329461781 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.846223711 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.837657495 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.307300934 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.847321776 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.849742329 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.839528549 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.070284838 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.848877574 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.877680288 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.83119695 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.836992126 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.834113651 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.85001023 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.839358255 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.832143115 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.301820698 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.943004935 seconds)
  done (took 226.777572994 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.828723522 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.831091664 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.82693799 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.831394488 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.826389776 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.830562796 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.826253857 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.825956639 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.83094419 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.825529505 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.82591108 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.826708175 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.828990802 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.826673264 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.523032157 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.833500864 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.432186465 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.830302958 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.828551442 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.832909648 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.515752237 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.837738428 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.827982006 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.836426143 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.829802064 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.829652568 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.835823231 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.845668594 seconds)
  done (took 166.981771741 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.834322443 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.013586792 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.853645686 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.875160344 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.842883422 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.831735404 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.857253439 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.856424855 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.840241566 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.831117328 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.831813934 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.894919225 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.845901032 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.973902123 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.868182084 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.865149707 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.93957302 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.843438903 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.833594786 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.832539828 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.864090908 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.829249229 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.895490281 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.96239089 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.855606419 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.950638642 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.842225041 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.835752817 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.83523689 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.95371207 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.854453912 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.896481396 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.865347382 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.853201168 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.956566061 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.954222729 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.942510944 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.868172919 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.840926906 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.834056047 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.833904865 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.823668671 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.952663173 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.857790467 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.836833929 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.944204699 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.855962684 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.837284501 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.844575327 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.834453362 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.849157947 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.853729246 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.903157237 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.969591319 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.873188454 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.860891758 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.860050126 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.12035702 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.846189704 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.93563915 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.831520205 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.956200315 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.858722463 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.823272573 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.837544393 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.840768312 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.864821443 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.867454716 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941825915 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.846400209 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.934732994 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.873100601 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.842889737 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.835841264 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.838276372 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.952697853 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.956499063 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.876311974 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.875316943 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.868035166 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.833591699 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.836954559 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.824294178 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.85502081 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.840650112 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.953457108 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.957129901 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.84760483 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.838531513 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.838990041 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.839300569 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.863040614 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.962554382 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.878238074 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.931249243 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.907876341 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.913938847 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.853404257 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.850628357 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.841240571 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.901743734 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.854370946 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.847862777 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.168267068 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.909027029 seconds)
  done (took 199.17321467 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.292737181 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.891235565 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.894428043 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.157659406 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.186252793 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.809795275 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.887287288 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.886218147 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.909305279 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.072450899 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.961696462 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.906005841 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.874000981 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.861359038 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.886133268 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.907201864 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.897345708 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.223713347 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.995115095 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.006527056 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.869710923 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.181571425 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.165936045 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.280951595 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.922611557 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.218544723 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.552924259 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.032484401 seconds)
  done (took 60.491598209 seconds)
done (took 804.470460001 seconds)
SAVING RESULT...
DONE!
