cset: moving following pidspec: 21822
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.588926227 seconds)
loading group "shootout"... done (took 1.180636956 seconds)
loading group "string"... done (took 0.405116978 seconds)
loading group "linalg"... done (took 7.574056499 seconds)
loading group "parallel"... done (took 0.150980357 seconds)
loading group "find"... done (took 1.413947965 seconds)
loading group "tuple"... done (took 1.851258545 seconds)
loading group "union"... done (took 12.234361319 seconds)
loading group "dates"... done (took 1.249883716 seconds)
loading group "micro"... done (took 0.193160236 seconds)
loading group "simd"... done (took 4.11271157 seconds)
loading group "io"... done (took 0.989356401 seconds)
loading group "random"... done (took 8.203816713 seconds)
loading group "problem"... done (took 1.511899431 seconds)
loading group "array"... done (took 18.34971913 seconds)
loading group "misc"... done (took 1.427733702 seconds)
loading group "scalar"... done (took 37.468249122 seconds)
loading group "sort"... done (took 2.869034589 seconds)
loading group "sparse"... done (took 11.195783437 seconds)
loading group "collection"... done (took 16.279420315 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.495112217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125979505 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.128863486 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117653675 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145359946 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119160796 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12457353 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085214922 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.893977145 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.141063276 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.113865125 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436958562 seconds)
done (took 5.230429511 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161299574 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086711868 seconds)
    (2/2) benchmarking "String"...
    done (took 0.075646264 seconds)
  done (took 1.255453641 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063193642 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.124213268 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063208924 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064902686 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.064342087 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064310956 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.063569644 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063716802 seconds)
  done (took 1.602001382 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068609703 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065605972 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.063291641 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06561601 seconds)
  done (took 1.35761781 seconds)
done (took 5.547285669 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.232975249 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101563363 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285099345 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.392032924 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.457556701 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089533444 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.07283271 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.068276912 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.127485105 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.33626668 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.107526547 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184200792 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090699177 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.183657123 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.996006103 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.116195039 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082450939 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.120142947 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089238366 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127322444 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.415497056 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076007983 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071619725 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.067679343 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.065761519 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.641578449 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.658221833 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.130644189 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08209079 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099872026 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11242427 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.630640305 seconds)
  done (took 10.443925626 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.090060676 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088977048 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065781614 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123265705 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093049705 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067744868 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073368619 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065137701 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090705167 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.123767166 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090195286 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099702522 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064380677 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067263144 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.074640331 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.197455389 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078562557 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078772552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066595523 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078587277 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106580037 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077398838 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077941997 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077864031 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12722462 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.168693256 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.093927817 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.095911775 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.0651846 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080104869 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.113029778 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126143574 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064942615 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.064217857 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.119800798 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093397279 seconds)
  done (took 4.478059376 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.948596137 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087409718 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.101072109 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.616616066 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062942469 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.150168105 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238566114 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.073688137 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.435823652 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.142310706 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.137022483 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.142290253 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110840007 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067045023 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.236674513 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.113008943 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.399932443 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067533395 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066360837 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064320409 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067810084 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067201299 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062312514 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069514301 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.090884524 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086659848 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.177696166 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.949842413 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.254796528 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067151882 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162853613 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.084438027 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357839628 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.066582176 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.08122951 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.399283886 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.12295279 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.06495946 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172282794 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.117131998 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068973232 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.116274003 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07892885 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.069540337 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068319038 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068228412 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.072030364 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.082416001 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.102862034 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.068072725 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064365315 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165198748 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064576533 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067020021 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067814005 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148278809 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064951207 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.147001254 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063780472 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067952379 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096591008 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067922685 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.094791971 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.109832495 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087159419 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.339173879 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062144804 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.025077562 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065384723 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.211267442 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074777182 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064142351 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07031203 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06418432 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065817355 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.06213482 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065404164 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073522776 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.06748781 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06597692 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10664126 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.064178581 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06689291 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064650102 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069813011 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.099381509 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.062710174 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.465283955 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096661016 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.064162169 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.075678028 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103504051 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064690158 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.07123631 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.064884081 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064615911 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063009595 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.065076381 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067959845 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063330735 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.091609804 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06905194 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111859417 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.052823629 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064817491 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063181534 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068918552 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067183025 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066095961 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062795538 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066700977 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06507581 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.063374848 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.115626646 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066341693 seconds)
  done (took 21.62806392 seconds)
done (took 38.593320944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254994845 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086150539 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086787161 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086133214 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086124781 seconds)
  done (took 1.799540814 seconds)
done (took 3.015608279 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107043504 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.077236531 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096932747 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.096639669 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063824574 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060993724 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094735907 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060898258 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094529081 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096732548 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.098573504 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.098066526 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060835579 seconds)
  done (took 2.298863837 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065399077 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076383848 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.07977223 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059281749 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.068951213 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078497287 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059227509 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077719494 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.084222446 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078595184 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078236024 seconds)
  done (took 2.001106552 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.06494631 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080339541 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080444668 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.059464733 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070625281 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077878011 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.05927249 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077967969 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081869782 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078459153 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.078355559 seconds)
  done (took 1.995288778 seconds)
done (took 7.461059521 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.064202062 seconds)
  done (took 1.233989465 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.52224222 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.590591518 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.06619796 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.085493791 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180215404 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097349949 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224955664 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071476697 seconds)
  done (took 8.180524005 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.094305174 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064267942 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065802154 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065932676 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066044611 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066667148 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066905518 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066639822 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06581983 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.065514393 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066725715 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.066937888 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066293887 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.065155991 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066805864 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066111856 seconds)
  done (took 2.354664477 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.091920867 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09030468 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.069690266 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.072106007 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.06940697 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068440252 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071343577 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070279186 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067391619 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069204157 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.072893452 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070857003 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070543402 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06129572 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071275584 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07362993 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.068083029 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07187805 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.072384965 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073210145 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072338793 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061334493 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070313457 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071476086 seconds)
  done (took 3.009072383 seconds)
done (took 15.96444298 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110108352 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.074127549 seconds)
  done (took 1.360336304 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066948543 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.067604417 seconds)
  done (took 1.323845822 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074304772 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.057550476 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083270008 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071754384 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.05960975 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059690875 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081419791 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059541137 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.059509505 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059366443 seconds)
  done (took 1.856274867 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.060298058 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068475367 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.065460321 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069716814 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067536652 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061122855 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.064265051 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06175619 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07002228 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.05996978 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.065990327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.080407061 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065074584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083039759 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.064710826 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.065743051 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.067829623 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064786756 seconds)
  done (took 2.399223024 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.058779552 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059296754 seconds)
  done (took 1.316288913 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.062837471 seconds)
    (2/7) benchmarking "second"...
    done (took 0.059323075 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062834216 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06357975 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.060563191 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.05937031 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060218265 seconds)
  done (took 1.621432942 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.344679408 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.115904758 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310722949 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066581518 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076975034 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.244790214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060709453 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065752953 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065704432 seconds)
  done (took 2.588458466 seconds)
done (took 13.667229268 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075588946 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08082107 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087672767 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420944591 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090009579 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063893997 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110121956 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164103114 seconds)
done (took 2.306022541 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209044727 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.441434413 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.95203038 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.063990436 seconds)
  done (took 3.654242732 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.315945998 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.081965505 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075022307 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064521471 seconds)
  done (took 1.748127179 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06102403 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067357615 seconds)
  done (took 1.331327087 seconds)
done (took 8.151334979 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060565449 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.059721307 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085987094 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06146297 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060627178 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.061327794 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.061247153 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.061057764 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060691256 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.061183147 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.060965472 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.061095216 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060991498 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061009423 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060978638 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060817011 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060939599 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.061018964 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060734105 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061066189 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060973301 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.061010517 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061001136 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06094934 seconds)
  done (took 2.716951859 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.076728639 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062180778 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064045405 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.064335199 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.065932003 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065156174 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065026073 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06362817 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064984 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063101774 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0650584 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065339079 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.063026994 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.065323391 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063545617 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.065501012 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064808837 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063613234 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063142996 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.065134427 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064742834 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06367774 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.06515213 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065108996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06522764 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065003674 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.063027195 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063284258 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064865283 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.065551625 seconds)
  done (took 3.158839963 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.06073877 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056841305 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.05870258 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066513131 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.058769851 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058295641 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059092526 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057775901 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058045728 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.059420737 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059117925 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057890982 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058961235 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057889354 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058126179 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058688298 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.062197976 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075254285 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058333054 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.05777991 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061299519 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057745381 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057595802 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057465359 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.058762705 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058532726 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057450474 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058202474 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057906728 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058545876 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057809237 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061456813 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.062304982 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.05822453 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066895976 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.062087294 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057878474 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061329391 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059349815 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057696114 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057685481 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057634422 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057955216 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.057846452 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067099568 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058657178 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.059535589 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058422904 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.057930281 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057357438 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.058377559 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060047323 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062882817 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.059868905 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057522894 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059696265 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05730699 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.058817489 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057552728 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057551563 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05802621 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060647509 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060015115 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058741347 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074993759 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059656944 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066293586 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057755271 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061504171 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.061045061 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.058341231 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073406022 seconds)
  done (took 5.531400053 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084223464 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084657965 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062664469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06254347 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059208685 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.058548467 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066815733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058833777 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062744132 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078249408 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058683992 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062519436 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063157214 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063017226 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059050739 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062877963 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06744979 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.05889966 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058473576 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.062050305 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058926526 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066687833 seconds)
  done (took 2.651073169 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.135802518 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063189546 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.101269497 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076123589 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06740461 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076036597 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064645281 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06469919 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064824508 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06502955 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06481692 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064670813 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067046589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064807218 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06462401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064700935 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064884737 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064742767 seconds)
  done (took 2.52148118 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.073534385 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063641294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086241412 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064289732 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063845119 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063862061 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06849596 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069500177 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063465318 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063800573 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069338305 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063289114 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.063489549 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06368519 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063904992 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063748715 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.063728916 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064250925 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068976124 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068087273 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068734186 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069383344 seconds)
  done (took 2.695237651 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072909673 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06187009 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075949523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064669134 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058934219 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058925471 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063965492 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062899005 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064230223 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.062679949 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062856182 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058639691 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064676176 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062783407 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.064801987 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062891658 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06307309 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062774092 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062498151 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058366795 seconds)
  done (took 2.499345158 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083305451 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059973178 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060728624 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079957815 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061253187 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.061769379 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080147413 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061361674 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061658932 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083299844 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061508836 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061882622 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0796576 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079791281 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060236427 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078094859 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07853594 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078235797 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06010385 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060403788 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083830509 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061733977 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080451883 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062067022 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06188157 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061960123 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062142913 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080377752 seconds)
  done (took 3.178138682 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060087722 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068588105 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059749235 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060196832 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060042043 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0602296 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059941527 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060489132 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061449593 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.061380184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060670884 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060812429 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059580864 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059870291 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059922432 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.059998168 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059992613 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.059812237 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.059957338 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060006677 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.059695299 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059675161 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.059678591 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060047249 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060197762 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.059678402 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.05973134 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.059938563 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060365055 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061204451 seconds)
  done (took 3.048033996 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.070663367 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069061032 seconds)
  done (took 1.374559465 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.059499476 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072832623 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05711407 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066553859 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066260548 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060445372 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06852253 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06726346 seconds)
  done (took 1.748488142 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.064715053 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.086101877 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.059292638 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.060341935 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062911206 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.116257988 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.074067015 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.069415658 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07476163 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061216755 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061134436 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072634889 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.05967438 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.070935543 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06198295 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067980888 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066897686 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071304865 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07069364 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.058173249 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073312387 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06295097 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059001049 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061256294 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060043022 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065508422 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074297869 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070541362 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067288833 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057298672 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.080480434 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058979404 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060056347 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067249802 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.064103277 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059413754 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.094945018 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059875954 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.06563843 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058554353 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070372509 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081242647 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071803488 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.076501487 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.06105341 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061805808 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058640366 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061318983 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061679736 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067307232 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058703508 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064868689 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058140965 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.061164537 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068249392 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.059038815 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.066003227 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067169355 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073395283 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068617545 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066102784 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072640448 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066577481 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.068842035 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.059690997 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077342412 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.060444636 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069625922 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071450569 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.059992439 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072575757 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.05815823 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057231473 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.05845157 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090841427 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.060589807 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060216205 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.058449592 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.058681229 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060529248 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067629544 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.065625679 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064504968 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062887238 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074993948 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068520677 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058625888 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.068216907 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.076219791 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061109954 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059278984 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.074051339 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060707762 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058471063 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075341513 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.066681341 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.06117402 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060676259 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061677984 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071123325 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.060538792 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057143623 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065537122 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.060774106 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061833359 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.064798646 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064638502 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.058402628 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067607539 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064103256 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059909556 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056492345 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061184177 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.058733304 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05672385 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06565993 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057698971 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071783164 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063838263 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070616188 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072755377 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.067076797 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074253395 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058331486 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.189823253 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.07925501 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068263501 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061664707 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078490161 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059065245 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068790839 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059016042 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061487959 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.068179132 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05876374 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061152095 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.059444508 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066054548 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061368356 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061184149 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062273603 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065768978 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.068744058 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059551173 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065091989 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058203193 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07180496 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066352371 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062443171 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064071674 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060004933 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069975862 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064942648 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068813595 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058774834 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.059787475 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059278963 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069144559 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067209403 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060950916 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.06871103 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062858897 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.059758122 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059468378 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060359909 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061424926 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062824273 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059692926 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065981646 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06812198 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.072087165 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071238157 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.0665916 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058972251 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059001751 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.061001296 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058538124 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06335099 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068210263 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072613862 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069989954 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077590377 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.059368934 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.067573268 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060921733 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074915594 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070114083 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059830071 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064996989 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05767172 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060778821 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.067564009 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069639049 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.07216443 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.072095078 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.063276273 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061919957 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058584865 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072397018 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.059999926 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06588977 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.068511845 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065024327 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.059228664 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.06098153 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06715189 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062377175 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059025361 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074613909 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067489573 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058505803 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071523934 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.05894946 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.06939511 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058652912 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061442979 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062798852 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061712173 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067394982 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076250421 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057337373 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.05970979 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076099262 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060971152 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060948368 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065110213 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.072455156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.061969163 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.064724529 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068358677 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067242465 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06235473 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066909429 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059827027 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.068369776 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062730863 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.06884918 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.058976565 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07507658 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056938846 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.071338272 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058396531 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.06766345 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.058649395 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066214674 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058720988 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073278915 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.060004744 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.058940943 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06917853 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.056411536 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067093037 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.194353209 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064226361 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065746737 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.070027245 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061944819 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067976482 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061249733 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067031986 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.062668602 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066755367 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.069068022 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06237293 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059321191 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06727538 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.06940751 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067083587 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.06082595 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.061160228 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059682873 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068710288 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061412384 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060892204 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067794875 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.063813975 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.064046403 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061353899 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060844669 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061558171 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068437544 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067665636 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075880575 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065405261 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.065271087 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068379777 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058176635 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07663861 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058943702 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064756099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.058215797 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067502287 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.06840103 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.059581539 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077272114 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.060938661 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.065799775 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071640963 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066054171 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.061483154 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076013695 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.06373008 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066982941 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065498942 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062312637 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064732795 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061034022 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066286274 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068886523 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068672564 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060301551 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064968062 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066576457 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061355325 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.070051344 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061369258 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066893905 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06156375 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.058172348 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06373911 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.069444477 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063051933 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.063543742 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059223901 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057671536 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059437087 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068104391 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063240024 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.06584003 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072604744 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058014822 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060267773 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058790532 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064486204 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075697189 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067934721 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065859913 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063609882 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.058187566 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061190883 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061439552 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.059153814 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063305465 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058047715 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.05872134 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068700607 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061364268 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.062722386 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059688035 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060582796 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06757863 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065098291 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06003112 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06426792 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059012713 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062748896 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05796256 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.060710192 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062276058 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057952585 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061148279 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067807851 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.074354504 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064030168 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.0669189 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.061274877 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065726507 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073581627 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068108783 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060872124 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.066074286 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.057321746 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077766564 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.06679643 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065156768 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.066988603 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.06046823 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.073901124 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061645438 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.067023295 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074798238 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059775243 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.208131074 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06015621 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078545572 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063668225 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059829834 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067205372 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065715654 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064166791 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071062881 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060271116 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067337538 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065964687 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06292708 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.061842378 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060991251 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067621038 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073852519 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059676743 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065648721 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066076764 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066531121 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063002397 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070518802 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.066617262 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06160993 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.061660515 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061833671 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060574615 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.070304838 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060299266 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06370534 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062593796 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.059138386 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064561299 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073470541 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069060189 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067869932 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059063743 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.059279511 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077242901 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061409323 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.061811023 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065089969 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.065880282 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068786313 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06684982 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.073261678 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059037591 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.062814998 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070448658 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060232503 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058904317 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061992244 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.061274532 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067327648 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.068268143 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065364361 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063867631 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064971916 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071047015 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.060906435 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062836886 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065825858 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060235454 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068425431 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066152933 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066604815 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061325193 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059055933 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061494284 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06838773 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065360411 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069106604 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060560943 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068677859 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.072749268 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.064855978 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064243002 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.058873939 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063293311 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.066046659 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064437422 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057838554 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062658381 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060915598 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068714074 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068651517 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06292588 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.05878245 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074836377 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066532001 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.067138218 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061421614 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061384402 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059807397 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058426269 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.069623821 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.05885966 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061188475 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.063663158 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.06143694 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.075534112 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.066376936 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.076947084 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060673366 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062654232 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058477322 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067037843 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06254965 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.059060822 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067474735 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.058230943 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075434648 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069378021 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.069008536 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.057331225 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061925447 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065469413 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072414635 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066576424 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067718825 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062064187 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067105902 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060126715 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.067790226 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.057923915 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.056586639 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06681425 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.205340573 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071923868 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0596967 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069138424 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.062119071 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066824976 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067358704 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061777964 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061553039 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061530993 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067864305 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063095257 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068736878 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062926547 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075745395 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060125624 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068908532 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.067410544 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069551534 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072592837 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071904384 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067047771 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059630057 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064720944 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.065721892 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.059172564 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.061459372 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062389805 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081432657 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.0617692 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.061141187 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.073563158 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068318055 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059439035 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068997615 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.063185404 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068346556 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.06099918 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.069222471 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064878852 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061309797 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063808567 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063326845 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.058088617 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.058609993 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059441072 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067946389 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062621463 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059055334 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076871036 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061180362 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066359328 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069627349 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064405495 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.06145937 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057897368 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061576199 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069634135 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072733308 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.06200487 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066407636 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.061520403 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068272427 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.05835341 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06645753 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066168036 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066099405 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058927332 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059271913 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072549342 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072692088 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062711183 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067313124 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067354174 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.061555669 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083075929 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06721712 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060628566 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.06936189 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062476644 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058593877 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059633116 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062171853 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069672543 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058959852 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062108567 seconds)
  done (took 40.536232146 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096681087 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059195259 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057982284 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.05844372 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069484998 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058621252 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058596152 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060175155 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060173427 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062333511 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.05901067 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058644208 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071487639 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075183738 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070765436 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063914024 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058907151 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.059813406 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058908379 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059905328 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070743008 seconds)
  done (took 2.691513133 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.065948281 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.073238156 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071904068 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077439138 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067907361 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064869354 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072063333 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064612997 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073098871 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069749918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073072692 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064524427 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069563042 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069937311 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069686036 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064656731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.072456722 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067900058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064258627 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071757049 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064723316 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071795717 seconds)
  done (took 2.841257548 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.059806499 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05842783 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065006784 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.057802782 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.058400612 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.062684674 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.058114034 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.062006264 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.06185764 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061358265 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065623708 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.059833413 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058652305 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.063093191 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.058252787 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059438751 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.102797842 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059478155 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059321898 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.058212085 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.065192897 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069097059 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.058121553 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.0588511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061686432 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062567345 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.058368707 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061755043 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.059523862 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.0619518 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.059841139 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.058195531 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065880902 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067569078 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0621988 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061614046 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.060602518 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.05970673 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058430847 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05808967 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066887607 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060288292 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.058951354 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060694026 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068228046 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059137006 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.058192562 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.066268828 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058490122 seconds)
  done (took 4.356158522 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.071541363 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106634168 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063852395 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088837461 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07423951 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066972936 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.064760885 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.08953812 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060506009 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06123402 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075311175 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075058952 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062758165 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.064391188 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066107344 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062791529 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063780059 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061913825 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066428937 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06273796 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.066568012 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066175678 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074247312 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.074334073 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064096345 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061610517 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062534899 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064803578 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074295568 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067287267 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.064761952 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065877115 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075094583 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.066539564 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062509891 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0624658 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075584138 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062101226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062878475 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061240046 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.062192377 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.064625496 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066509929 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075932648 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063214483 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067207659 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063146512 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06022624 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.074814621 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.06301582 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067037915 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075695182 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063519027 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062093956 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063447047 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073096668 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.061606566 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.059733534 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.061756477 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072347587 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.059217234 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06255057 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073337649 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.060748696 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065516376 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073356762 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.065295518 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062638934 seconds)
  done (took 6.055152697 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068322138 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087528608 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069183414 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069976529 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068688038 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068903839 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068763688 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.068528117 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.068744179 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069168126 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068909681 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.107630561 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.063797317 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07416998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.068284651 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068513605 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069087859 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068888664 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068850353 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068649739 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.068861265 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069323445 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068504978 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.06932779 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072328561 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063970958 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067999139 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.068600559 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069536279 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068554887 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072440687 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.068678543 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.068712102 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069356878 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.072544568 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068365185 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.058241687 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068385453 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.068772204 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068494622 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064120612 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069492301 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068524534 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064033388 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068870395 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.068749727 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.06969311 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073542882 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078016807 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069713954 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.068829444 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070219984 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068704301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069014624 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069915132 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.078767489 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069994897 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.070219328 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070059952 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.070966932 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070227573 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.078126016 seconds)
  done (took 5.71548035 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074614556 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066401732 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07797327 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060472206 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.057438617 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067723642 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057131585 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057417182 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066145321 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066488627 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067999243 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067549462 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070504839 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067907644 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067266804 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070173703 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067579917 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067469282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066058124 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067327187 seconds)
  done (took 2.687410107 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070268828 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075911076 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063308601 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067850373 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065116416 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068780264 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.063957844 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065050899 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065159201 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064821192 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071057436 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071205281 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064014445 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067851169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069708004 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067599507 seconds)
  done (took 2.422967285 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064482742 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066642491 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066702533 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.059488019 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06289793 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059753067 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060426428 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058827986 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059374638 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073436024 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060571535 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071519479 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060174437 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058345286 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059471343 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064998915 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058414927 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.05919882 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058991773 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.064577034 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065240238 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061644834 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.064298777 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061121937 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065768293 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067599924 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.063153926 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063659217 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060569858 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060992604 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066158069 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.067226947 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06033109 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061025904 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059196873 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060313914 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060625204 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060951796 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066347676 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.061045938 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058908225 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065159747 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06097096 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062216319 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059554518 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060901617 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059488339 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065854817 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060894874 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.065928525 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060519979 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062766046 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061219738 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068667839 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063835862 seconds)
  done (took 4.783460724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073203841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062966 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057113873 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.05892684 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064675819 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065155429 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064854061 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064622803 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065167312 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058820977 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064818565 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063706535 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064481183 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064623026 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064467707 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064629097 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058504541 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064320846 seconds)
  done (took 2.501694663 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068788285 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062448279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.068971019 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064573035 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064226664 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063202637 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059662901 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059616022 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059471888 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063827179 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063689744 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.063192329 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059523519 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.063384916 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063675142 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064051216 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063178263 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059089997 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.063740099 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059262683 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063735441 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059575103 seconds)
  done (took 2.729328464 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084455362 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08130724 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.120772843 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076522433 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085130698 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.06942867 seconds)
  done (took 1.867230815 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086591241 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100907537 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064059005 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06427513 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075563512 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068058599 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067782711 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068620292 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075474963 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073793187 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067913435 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075860828 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075604136 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069392431 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07476615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0786499 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068197723 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067970828 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06413048 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078940643 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068905722 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075946361 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068103839 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0678009 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06794991 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087952228 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078428671 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072117446 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068430683 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073547636 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077022418 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066920742 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074009511 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072828966 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064274818 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075991741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068108022 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078828295 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075661961 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07077094 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06399234 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075461291 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074135048 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070113392 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077191954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066645342 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069161347 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066981401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068130972 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08121242 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074341609 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069453033 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074071391 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07826049 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077382927 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080480878 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07214747 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068693519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075082832 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07251996 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070965087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075752929 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069351429 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07206672 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077030116 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068562501 seconds)
  done (took 6.161921587 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094925795 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06344119 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067669887 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074141904 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070761914 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068444147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068376952 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068298119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06879159 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064715016 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103810593 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068852493 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070900904 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071140518 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068541907 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068240362 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068536489 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070520445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064933282 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08296547 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068296409 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070910097 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070659693 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070936725 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073971047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077745163 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066723627 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066435392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066544343 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066510883 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070188424 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068379768 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070817047 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065061903 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070190717 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068500557 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068169886 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070968415 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067841543 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074262668 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069366055 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079612458 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068190532 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067996193 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073996621 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067967364 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068271962 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064400318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068403047 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064507597 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074227752 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074493912 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07426153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070914642 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06861803 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068702372 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068403081 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068448989 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068466815 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078018059 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068860406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066635742 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080095844 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066130425 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06630554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068649764 seconds)
  done (took 6.039631857 seconds)
done (took 123.714724208 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.205594891 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.18039682 seconds)
  done (took 1.723266851 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069566781 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.093361553 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071059818 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129507864 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067066336 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101326021 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.100111383 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071453119 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06654828 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066780553 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066657997 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069170871 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131720789 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067190974 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066514102 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069149349 seconds)
  done (took 2.663785193 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099756101 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.176883592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104239237 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06446374 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100219872 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072367611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064648285 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075679355 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.068760755 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06868771 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072407466 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07063351 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068031724 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070767798 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068711313 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072020614 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.06725206 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071822647 seconds)
  done (took 2.818405512 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08944524 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.08121783 seconds)
  done (took 1.533737077 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152355679 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.102160724 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141398174 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.322306646 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13949531 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27785441 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.128449817 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125983134 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106964571 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123202922 seconds)
  done (took 2.976861976 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097479237 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161353139 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294688452 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117059266 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072534738 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.085347759 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118720935 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078719301 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077720733 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.076626859 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.075833645 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075401311 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.09292779 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072560818 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.071941971 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.072244652 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.096135258 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07138157 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072473049 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073694256 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097936359 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066645666 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074183753 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073207138 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075655112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07610972 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067940702 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066831475 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073849275 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072597237 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07678549 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.082065904 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076287036 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.102438533 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07091942 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.103483478 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072668713 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071455471 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073155207 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071636133 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075811037 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075414481 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075647211 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074486003 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06842751 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073220969 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067942776 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066494195 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077220874 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067838874 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077584381 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076565404 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10221706 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068546072 seconds)
  done (took 5.933821643 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105831148 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105647772 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070125651 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.1153338 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107877942 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070834329 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106323691 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099765808 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108591309 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070426265 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068482311 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069911774 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08072751 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.078223229 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11623391 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107459007 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071445734 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068831259 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106016089 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105657174 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066804272 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100282593 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.09453996 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104530612 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064843161 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067988764 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065360557 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067877885 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072308847 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074444301 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066961032 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079683202 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.081153992 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074204251 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064795656 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065794494 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066301795 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075857194 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075828499 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074402677 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.073401791 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065230088 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065678122 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.067510869 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067748262 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064992161 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.074307739 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076357408 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.074250759 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066361433 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067891969 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.065929748 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069057454 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078088492 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075557807 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07946555 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076596021 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066045885 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067030355 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072403798 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078560145 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077740952 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076715847 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068217712 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074363617 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066123687 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078797618 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083660669 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068200424 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069311879 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067461016 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068110876 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068763153 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07474019 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.074889162 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069368873 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067972979 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067384586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.076861109 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075895209 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067542651 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074293266 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066322074 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067298878 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069525479 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069184075 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074774948 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078334463 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06979587 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067358613 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068038766 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066507948 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.065406876 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074281142 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077826178 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077083563 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075819853 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06856612 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.075729952 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074667589 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068513648 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.075672073 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066091795 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068772962 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06732073 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.074741061 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.072985209 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.21141736 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069690774 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067470479 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.074753342 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077313206 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067282193 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.076908368 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077966216 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077637877 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067092511 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082293035 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068950056 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078284201 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067888342 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078358978 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06685803 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.075300321 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067169895 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.065277665 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067043024 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075391286 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068787688 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06669208 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067804093 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068149779 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075845446 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077713263 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069869371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074450048 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.076166911 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068855519 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074980998 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066945713 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074770272 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067604759 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067845796 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06487834 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076837187 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066444517 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066060323 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067077901 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075987788 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066360115 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075816619 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073318348 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065144534 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076853795 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075886818 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073340306 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.075965263 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06831602 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066493381 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065869222 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066707992 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072892565 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075073459 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068491109 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066257951 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.073700874 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.074858923 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.065067596 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073599606 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073367021 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074337114 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066427075 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068621319 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078952083 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07615924 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075072125 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073999841 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074590032 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066277117 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073383501 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073766785 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066343693 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083741233 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067830607 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081256445 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077501583 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074712547 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076770084 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.078220066 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.076554017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076024982 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079412855 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065232076 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06542943 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.075366248 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067554511 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068217877 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075732706 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06915432 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069568387 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081373401 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066052588 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074692141 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065271546 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075643435 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064479968 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06766458 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07889876 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065555831 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068556315 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075404376 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067218115 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073420215 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076595991 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073570995 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065877275 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068574634 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21484223 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.077574924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068568569 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067732774 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070543851 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075927747 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.074945239 seconds)
  done (took 18.214121624 seconds)
done (took 37.238122787 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202413358 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154695688 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190668893 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111653197 seconds)
  done (took 2.12942472 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096860824 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094532797 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.079481844 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062723314 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.085134689 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06275609 seconds)
  done (took 1.887965905 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.27755892 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.195825743 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173374909 seconds)
  done (took 2.047305223 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210757074 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.195634776 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.451473057 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284608395 seconds)
  done (took 2.64076653 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131345333 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.080690055 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.062055774 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072780976 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.115120042 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148089493 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.090574754 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.116236598 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073193316 seconds)
  done (took 2.353109553 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.135788977 seconds)
done (took 12.604813922 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.095198494 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.47074298 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.069791726 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.22555747 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.066079196 seconds)
    (6/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.069906137 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077138369 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.0755376 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.20705343 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073886025 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.083452544 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071934783 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.120132246 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072275146 seconds)
    (15/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.16847192 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169876967 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072949166 seconds)
    (18/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.19803967 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.230834612 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175907663 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.075464899 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071631594 seconds)
    (23/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070790938 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075750435 seconds)
    (25/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.217092276 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.083354526 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074860277 seconds)
    (28/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.160262123 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.074884192 seconds)
    (30/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.237356681 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.060526349 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.144456059 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089311342 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.095500943 seconds)
    (35/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.229018119 seconds)
    (36/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.062604466 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.097115881 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071275354 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084176516 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134415299 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072691021 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061978041 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.118280336 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13519692 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.12204824 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12564318 seconds)
    (47/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.101341858 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.165237115 seconds)
    (49/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076243011 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 0.151440534 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063605289 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.168170329 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073136394 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160343246 seconds)
    (55/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.074443853 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076008366 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.064259653 seconds)
    (58/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.175085421 seconds)
    (59/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.138249871 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073524114 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.062404561 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085938597 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.071682127 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084598409 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061572283 seconds)
    (66/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.170239106 seconds)
    (67/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.075544034 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143605047 seconds)
    (69/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078124143 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.162642523 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.193811844 seconds)
    (72/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.144211036 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071933606 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071308207 seconds)
    (75/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091476771 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071274991 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.158591934 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.072716514 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.137619087 seconds)
    (80/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.063361029 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 0.128044778 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122787187 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.330994101 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.201983937 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206657102 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.065364186 seconds)
    (87/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.082256014 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170745552 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173907079 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071195971 seconds)
    (91/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075315263 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064479002 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064181037 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086326818 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115521247 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071258507 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.10854177 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072224776 seconds)
    (99/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.231455606 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.141455003 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070134573 seconds)
    (102/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.062982001 seconds)
    (103/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.062904048 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.158514188 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.138770187 seconds)
    (106/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.064373026 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162246271 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.1552112 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063556028 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06413052 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.062712604 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.062348081 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.131396432 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.184697968 seconds)
    (115/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.075954184 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079599878 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202219155 seconds)
    (118/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.063705086 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.075995254 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08500637 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071600773 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171471016 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.185960019 seconds)
    (124/309) benchmarking ("sort", Int8, false)...
    done (took 0.168934691 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.064181616 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120228357 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.136482902 seconds)
    (128/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063223834 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178058614 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.082896748 seconds)
    (131/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067323284 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064356666 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073658183 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062813214 seconds)
    (135/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138343334 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.136851485 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061915277 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182650581 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.07463179 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.17147851 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165652449 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 0.240443562 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062748352 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.062496365 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074804244 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.204509592 seconds)
    (147/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.065188113 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.06328514 seconds)
    (149/309) benchmarking ("sort", Float64, false)...
    done (took 0.129021588 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063333301 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184161898 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063725621 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063979419 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.076913428 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063867218 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.070916961 seconds)
    (157/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.071612776 seconds)
    (158/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071504671 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071507437 seconds)
    (160/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064071208 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.080525267 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.076950908 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067455823 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086202818 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088713927 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063992072 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06313676 seconds)
    (168/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.134760561 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061376205 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.134445467 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.061894885 seconds)
    (172/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.062975751 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.061592672 seconds)
    (174/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.062023846 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062172967 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06380208 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.070828028 seconds)
    (178/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.070523848 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063981831 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082900212 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.132994535 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139368211 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.070872147 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064640685 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062291229 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.062857589 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.228772065 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072355112 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092805739 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089012444 seconds)
    (191/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.168035033 seconds)
    (192/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066003464 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.063784743 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063592507 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066175786 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.158803108 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09262331 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.062626618 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07008318 seconds)
    (200/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.140657614 seconds)
    (201/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064694613 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.207757791 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062670414 seconds)
    (204/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119855501 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.066370487 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062402289 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063428392 seconds)
    (208/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072285455 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132457643 seconds)
    (210/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.064656418 seconds)
    (211/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.064501237 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071918543 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129815306 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063288354 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.089386931 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062829716 seconds)
    (217/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063951774 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.071106579 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.062366091 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08788778 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.069759089 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.062515806 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063954404 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.074662259 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.062265992 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063049361 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.12226193 seconds)
    (228/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.063920775 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070381309 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165516788 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063050545 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064004267 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.062980546 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073910032 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074886496 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08864265 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086674921 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137830128 seconds)
    (239/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.065933765 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062986988 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.063502358 seconds)
    (242/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.065378019 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071414404 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.13761457 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.076525157 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.062651947 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.06229355 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.061836835 seconds)
    (249/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067742776 seconds)
    (250/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064130256 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089021992 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065206309 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073774942 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085077102 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.062228181 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.062205916 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064283741 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062161231 seconds)
    (259/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.069123958 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.070966121 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061959689 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067159163 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066335035 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069245814 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.062196018 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.062250326 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.110952266 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064183811 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062746357 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086676527 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204373023 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.085888448 seconds)
    (273/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.067591178 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06289911 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088209388 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.075421881 seconds)
    (277/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.064544049 seconds)
    (278/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.064002759 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070079562 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063270367 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064686835 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.063561781 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064116445 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12219866 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071648493 seconds)
    (286/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.062104995 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070780072 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062532521 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.130024222 seconds)
    (290/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.063069782 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066305734 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1165379 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06524929 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062362005 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06245087 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073886969 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071302544 seconds)
    (298/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.078225706 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064218154 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069848069 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06299574 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.06288201 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076527867 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062410838 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06340862 seconds)
    (306/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.074076134 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062541891 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.062376583 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.062179064 seconds)
  done (took 32.026399119 seconds)
done (took 33.446580464 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081438276 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08572806 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.070689815 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084556621 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079164782 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095672405 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07090807 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.075679075 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078561026 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077833658 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077536437 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.07007696 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072420545 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07309433 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070942426 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087294286 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077100517 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072142049 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071757409 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062964332 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072095468 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063486722 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062813907 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069705088 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.075222773 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070940564 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073737772 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.072334182 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063714858 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063127703 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068083059 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072635457 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066014941 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07661728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072599517 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072489616 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.073892706 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076056307 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063225327 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064341617 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073265695 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062986222 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0712806 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069602188 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.068209683 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069685107 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071418646 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075776584 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087132271 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067359639 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072780813 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074599391 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075307441 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.068790289 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068224353 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072172899 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.068940479 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087036183 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072493035 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067040802 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072633141 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07270509 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069060854 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07167698 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071476922 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073951224 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076261537 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.06968216 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073608566 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069947131 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062639237 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071759795 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.06786678 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063337447 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074428125 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075684181 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061929766 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.067521543 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071370926 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071871505 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062566063 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06760689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062769255 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.067564749 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067349125 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069512862 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068299502 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070408948 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062314457 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071899534 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070353274 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071247137 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062529655 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076793427 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063014201 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069313732 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063091883 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.063325706 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062533242 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068008928 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063314226 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066948101 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071799861 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.0624133 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067771645 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.076571493 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062611179 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070847333 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062451146 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.0633439 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074832194 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073864517 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063206373 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067203235 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.06271742 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068291609 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062820705 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.063024188 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062481874 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062700204 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067688807 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06282981 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067106041 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068266737 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076404721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062899723 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06728106 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067088052 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062698149 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069822781 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.063022655 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062406555 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06159253 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.076348247 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066385873 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062372885 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.06756212 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066224543 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.070153449 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061501571 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.215093911 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070621446 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068309174 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070495651 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062838648 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075672562 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067647639 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067607649 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062695773 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063637704 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06283413 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063306899 seconds)
done (took 12.293664197 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.062470944 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.106879151 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072805799 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080874648 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076058343 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063916973 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068665578 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.083085395 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067229119 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.084215818 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.084964654 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084303045 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091993733 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062831232 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063395101 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064532585 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062366954 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.069944711 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079229861 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084560283 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.094457888 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.063722689 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.073514079 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.07916861 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074878425 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.081496753 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064857647 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064760638 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066854662 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.083088333 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086967455 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063015472 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.064228803 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.07943063 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078769061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.073324465 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064224285 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068858813 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.064389752 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.063135401 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065053207 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.079302801 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068224861 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.071067211 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064439911 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064468131 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064704358 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.068203347 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077803474 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068371187 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072304501 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.077129196 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066327571 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.06351864 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062380985 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068976203 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063682957 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064663922 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063580324 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063433437 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063697331 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065524079 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064207478 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.06401933 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.067101532 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.068097788 seconds)
  done (took 6.194783521 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.080700666 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092096689 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080323398 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081074461 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063520194 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063902791 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063677865 seconds)
  done (took 2.049550365 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.063410291 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077177695 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080682126 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080680485 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.072825863 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081911546 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063882908 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094167454 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063094673 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.076418054 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.111739432 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081572351 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067249708 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075759953 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064282907 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072368215 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063559929 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07171572 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072790065 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08011657 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068571463 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091415834 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077295755 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063991066 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084882873 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069424491 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063666874 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063969616 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065244524 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065094511 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065076977 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103886939 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.069009529 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076313839 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065189042 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06401002 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070307723 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067327261 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067617269 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072632877 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070217445 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065810611 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.062876839 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06574893 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06664294 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068153385 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062876282 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065434118 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065355383 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07653608 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.063401279 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.069146698 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067550397 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069808613 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070312346 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069180026 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072120248 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065481555 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076457654 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071946444 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065173597 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073741279 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07313144 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070648966 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072852455 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068297261 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068861678 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070006695 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064981626 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066334007 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065570944 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073058436 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06401848 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.066126314 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067677549 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065854609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068624869 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.080838985 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080779394 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077250367 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065560815 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.0657582 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068794597 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080934798 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069285162 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065284143 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06762096 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06357584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.0682933 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065482754 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070197316 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065379238 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072427997 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066697097 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067667727 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073478927 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063883951 seconds)
  done (took 8.388197447 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065624566 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066017922 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067176328 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065651718 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065166604 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065661054 seconds)
  done (took 1.952792004 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.086573639 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064934751 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079591022 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066127527 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10016802 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072616121 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.073384571 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074805957 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.078487327 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078557493 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.073235515 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.076578598 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.072055283 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.067467393 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.072557827 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066781955 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.072867921 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069277684 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077972748 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06791422 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079449239 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067488359 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067853651 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077257568 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.067960558 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066654987 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064823581 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.077320338 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07715238 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077621818 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066829771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067954582 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073038339 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074592002 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.072913095 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072972967 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065803823 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07106557 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067446593 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068433239 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.075167874 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067809394 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.068431461 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071338129 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.074606636 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073158837 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.07123425 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069783852 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.072838904 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.071195486 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.071162718 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.066312071 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068155266 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.071030457 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072779795 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074785951 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.071239886 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.073124958 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.067474339 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072667495 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066288719 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068310693 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074246187 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068271299 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.072341548 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.071245994 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07296818 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067805492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06796443 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06581424 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071360989 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06571616 seconds)
  done (took 6.69483586 seconds)
done (took 26.790962658 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.988457114 seconds)
  done (took 2.486961128 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.57099655 seconds)
  done (took 2.10523209 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.620476428 seconds)
  done (took 8.153653104 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.302785476 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.342644599 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.714283775 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130675792 seconds)
  done (took 3.057107841 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.706605182 seconds)
  done (took 2.248743326 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.232620958 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.220627442 seconds)
  done (took 2.008924879 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346622156 seconds)
  done (took 1.883708312 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.078986961 seconds)
  done (took 2.611912978 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.23351896 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165351613 seconds)
  done (took 1.942494966 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.454144402 seconds)
  done (took 1.998290432 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.276549446 seconds)
  done (took 5.823671461 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231852122 seconds)
  done (took 1.811856159 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234798845 seconds)
  done (took 1.773477101 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.72140515 seconds)
  done (took 3.261288076 seconds)
done (took 42.716218301 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078960108 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080955214 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081286933 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076710925 seconds)
  done (took 1.834610065 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.071815729 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.06877166 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071755921 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072731792 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070058562 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070679269 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071216508 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068066658 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069647154 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067965355 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066650008 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068202688 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.071002652 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067909411 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070705837 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072127891 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068700636 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068132712 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070689842 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068051322 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.07134991 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067894768 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066293496 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.066999568 seconds)
  done (took 3.211507985 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07378197 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07077197 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073176285 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069800752 seconds)
  done (took 1.838280298 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074117093 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.084660803 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.086225606 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.091335089 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074743313 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074651593 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.083192065 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.084264095 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063287065 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.086940318 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066106276 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064534336 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064580437 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.085469655 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.082024936 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061151324 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062961888 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.075249174 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074147092 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076554462 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065832059 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063415937 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074435347 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074214004 seconds)
  done (took 3.340584857 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077562189 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061885326 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078001343 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091513198 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093119739 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063493673 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.079430643 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092610814 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.140111288 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064003584 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069072314 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063712452 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105537617 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063543979 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.080109126 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10957323 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112970916 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067546679 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097490029 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063549089 seconds)
  done (took 3.232423199 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073261249 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065903563 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066390083 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.063381373 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074884857 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07128812 seconds)
  done (took 1.972337127 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064533789 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063654914 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06546007 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.064335148 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07072583 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064847182 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.062939519 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.065413166 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065901241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065171856 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064613328 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.063898911 seconds)
  done (took 2.33269568 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157454676 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065716557 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066209186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064938674 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069350318 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064630568 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079830426 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066983 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.083796957 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06443832 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064177697 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067167939 seconds)
  done (took 2.46570291 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09983429 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13186359 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096948275 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071765124 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172767106 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095487868 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.090451811 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.122882538 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093368126 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068456291 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.093425049 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135347489 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095236748 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.096957698 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081492741 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127233985 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110207153 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087349563 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114732145 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081434381 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.06936908 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134489332 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.0690316 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092300195 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102049405 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.097578071 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110840852 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132805304 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084053315 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.089199072 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082049606 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073981062 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104976196 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.084204258 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097369973 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093331027 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098264543 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085607601 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.085316264 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120046205 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159835549 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099891576 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100585552 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133946887 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07860845 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.109165971 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081147223 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099669081 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104673441 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093554528 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075410208 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091644022 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.105311567 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099592512 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079949629 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081361332 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11824032 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.097095721 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095677694 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079096423 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106517406 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086403154 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255386393 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122574602 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141829361 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103208732 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139348273 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124158122 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097142235 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090139937 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.091739308 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076274313 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112528685 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09821884 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137536414 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10887295 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097976781 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093127222 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082325069 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108411061 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115536076 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09566701 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095564433 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149004197 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113974962 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091450922 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092956876 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.140918767 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070873138 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1496796 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08929696 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121665505 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098894765 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138395367 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091049984 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083445103 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107147272 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105695278 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090142342 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103648288 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084804219 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115106433 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092617337 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102658241 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.081918052 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091016022 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087015609 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.097299985 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075067417 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105291782 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11650317 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115542973 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074804871 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109725022 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086248688 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076717911 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093041221 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140159157 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083071762 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074608485 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149747191 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.092161607 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116298014 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259775033 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.086662387 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119362626 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139283418 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093261975 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091062257 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076749523 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15444977 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073861928 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116754204 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079444681 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100683431 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106235651 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136738967 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138973696 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096115305 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078533142 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091991725 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.10697689 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087644365 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085954572 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076419543 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.110212554 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126887858 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.101570557 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080418001 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.092298823 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.06908957 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115647643 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076670537 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084190483 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097591788 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.088314737 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.090181215 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145171059 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.084690826 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109749944 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098450402 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066935827 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092764431 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159775621 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083077234 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111259049 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117894562 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084140385 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067597061 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.096387532 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.073525094 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110097056 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.09368506 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108284791 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078239039 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107684086 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067927745 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074330311 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134416381 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10154058 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088806174 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132557652 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102290783 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.08572942 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.102188637 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.244282886 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101721964 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105390194 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.108665468 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108125354 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.074329079 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131145887 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092874708 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077738109 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088543462 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079457691 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.07776329 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100678949 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116356877 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089666684 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101976838 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103475791 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091983525 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.109968927 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089257364 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079055427 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132910632 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075896929 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075150944 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088078126 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.106379033 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088212612 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.135943439 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.079357544 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138580509 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093526637 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081533914 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116727864 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.068215002 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.06998712 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082573589 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092831204 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118368113 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079723978 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078532024 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120524493 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133040248 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097419658 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104409098 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068270578 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091400129 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137679286 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.113245914 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081884759 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111685124 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08587837 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131775545 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098297249 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121435303 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107513671 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112017682 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092532837 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082018711 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074028881 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087722145 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112413132 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085865791 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082002943 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067263303 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073906425 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093806286 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091151811 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111471644 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087874826 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289123966 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.074075553 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104528688 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109864171 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107974434 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092335892 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096298425 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.0929101 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091954007 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092152114 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092889622 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073934579 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128604574 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103526516 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077572164 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087467686 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094239791 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107303122 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108506181 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109072368 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091210128 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105964485 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120358405 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098941675 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082329148 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084760175 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.096196125 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085367377 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082189701 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106382611 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113690141 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097438706 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108126022 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.094893215 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.09211368 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108938064 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0941148 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089395813 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.119203547 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155199408 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.103408972 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104577004 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084815145 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10735164 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107125705 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114268894 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.11298475 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110209874 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071515452 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.075476386 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070387364 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107096232 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078986905 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119577569 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077013721 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108391891 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098923165 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080522483 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06670807 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10242597 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094184602 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082320613 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122520909 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112033792 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0723913 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090753192 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105770425 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.237352791 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127397554 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.105240508 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103723664 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072563894 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093529433 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.074931372 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111358227 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.10172426 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077966119 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.076530339 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06993682 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107398385 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085879422 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111551468 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088271794 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098932985 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.118216741 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134453898 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085140084 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095033654 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117597923 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11129036 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.081408865 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111872717 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134577973 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.119265833 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.081417127 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.085746561 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10722103 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107592258 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101466323 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07502465 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076979752 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107778156 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114842123 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.06610424 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083037293 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068623823 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.083057463 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112739339 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096944551 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082198849 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11781937 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074755183 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108241056 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09516937 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121984286 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121204059 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145297432 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095664647 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08503437 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077808013 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127183049 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.071659357 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118882746 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114088298 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086278398 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.06685039 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082225586 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093538889 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.627844048 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10778468 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075421518 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13215873 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.237278121 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115130301 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084881481 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117800357 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089958597 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102161551 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090533637 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132271679 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080568164 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108186695 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.171121104 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112133112 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109265301 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074415541 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086613106 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.072841816 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07775702 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.082470882 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087912489 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108459936 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084204051 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10463036 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077956141 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.105424515 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090305096 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087344292 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.096636646 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078933281 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137682155 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085628638 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122011813 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105138236 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076644444 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073217243 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085445316 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099750372 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080819935 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09334602 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076954011 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.074919765 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153949046 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104668268 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085384224 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103905137 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.091252861 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088605068 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089947653 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116899369 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109405063 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071541443 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.087199992 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105011551 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079487404 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075276577 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097632394 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069476294 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091000133 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101735284 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098301727 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090547995 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.103927418 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078236904 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088556053 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110903739 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084579045 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074109172 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074179497 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074107985 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073474609 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25567134 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107879672 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114676515 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109137911 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09109872 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094347961 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.07784504 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.217634938 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078868082 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095833307 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.102844012 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.073273727 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.129661219 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086861019 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088113528 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095766313 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098758151 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15274929 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072200943 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108277931 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092491855 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108116944 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084913996 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106461703 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094226035 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091240086 seconds)
  done (took 50.636796693 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091373177 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144906079 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.151407765 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078558358 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.092137343 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116859121 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206368411 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189415681 seconds)
  done (took 2.758132774 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072887169 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077884565 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.102604871 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081490554 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064945771 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073211937 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.206945149 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080136882 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063662753 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092699841 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.072578061 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063640687 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.409578785 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.062056955 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.062653324 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.070989496 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.062714534 seconds)
  done (took 3.384186489 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36382149 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597131052 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.343299517 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071107755 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.041653841 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085367687 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.231310609 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132552187 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076906751 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.547614351 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371876646 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131423724 seconds)
  done (took 18.666458376 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076523898 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073796057 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.080396343 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.079825806 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.075682014 seconds)
  done (took 2.050546027 seconds)
done (took 99.281501898 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07748128 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.163321719 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.06564617 seconds)
  done (took 1.925384671 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.079560342 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.07744925 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.078684813 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077297959 seconds)
  done (took 1.982775547 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070143485 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07314958 seconds)
  done (took 1.81080325 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.228815401 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.163761422 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.092359506 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079571165 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077908341 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.078312345 seconds)
  done (took 1.913606183 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068307271 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.068373358 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068466643 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.071755586 seconds)
  done (took 1.945270949 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.064394665 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062885152 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.065800197 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069603593 seconds)
  done (took 1.934158701 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081223376 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079890372 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075556942 seconds)
  done (took 1.908820748 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.091577077 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093473724 seconds)
  done (took 1.857532967 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.076853171 seconds)
  done (took 1.746314676 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084461129 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094413123 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.116649588 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.099734178 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.117922789 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.098054585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075336177 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076080194 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071269087 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068776416 seconds)
  done (took 2.573929204 seconds)
done (took 21.829475922 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07426941 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367653243 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355324641 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081557058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667681819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.35300708 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.98727617 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090367444 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097876402 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066856136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083614701 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.645411426 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.978423525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329238843 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.965370643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32090981 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.645000325 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064128975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063466027 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064191672 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.968839675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063662542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063999062 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.063960901 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.679518922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.36862974 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06515146 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32060644 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064482884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067360963 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352315119 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066199343 seconds)
  done (took 16.090654322 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067795579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118935835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069073534 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.080291863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066540488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065051048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067537353 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066340103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107218486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067293861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083838669 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066127592 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.0711112 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068610903 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086152175 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064800502 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066022993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065197096 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064449222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068540665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082329532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06447559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065517511 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064957516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064971191 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077509646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066405184 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064548665 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064762453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067089526 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067874747 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066051567 seconds)
  done (took 3.983138778 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116267988 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124499964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072204277 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105896022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118755947 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.06833422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147784242 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09045689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110023093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064472336 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080891714 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064066202 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099079422 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066300318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084876022 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064661552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066458887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065242062 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064553178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065745416 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083242325 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064474663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065643496 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065119148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065610617 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079479253 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065889359 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064831391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065162847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.06763127 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.069072503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066316809 seconds)
  done (took 4.244351742 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065915193 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.06895961 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.078103654 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079650479 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.065206841 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067235441 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070215746 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.065227772 seconds)
  done (took 2.246395364 seconds)
done (took 28.240902515 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074438801 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.064217953 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.069557878 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085474958 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.071740024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069233709 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.062722423 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.07234791 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.069603537 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069919927 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07090124 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.064902607 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.068412085 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063755324 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070491473 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.063087574 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069339623 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.066910311 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067777125 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068572398 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065123233 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068236779 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070437568 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.06763217 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068213767 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067770126 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071903207 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068323911 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063298415 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.06612879 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.065062869 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.076309461 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071225617 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.071977391 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.064884715 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064912562 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068933789 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06720618 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.071752676 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.074323317 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.067067661 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073414271 seconds)
  done (took 4.55097123 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.080857183 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.085483796 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.078128954 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077579183 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.09466798 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077767967 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082521041 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.073894175 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073196745 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081476699 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068934198 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07612812 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07383646 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.06796958 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.072238097 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06977878 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.074525456 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.06963815 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.072813598 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.0734464 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082791317 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.068039116 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.07588287 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07456662 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.070392345 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075872096 seconds)
  done (took 3.669210992 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068660697 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080693522 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088094195 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145795804 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108235152 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076854608 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078653525 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089707218 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095520725 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066369871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069672409 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.091301707 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090150388 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.071993203 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106141708 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081023221 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079433376 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065661628 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070301935 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09198051 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083624159 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080651868 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089675714 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079649411 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063184517 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066235854 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069370442 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.076949361 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.070559379 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076748987 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069885551 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068835497 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066427522 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.076995254 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.06923226 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064286326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.086976736 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075840005 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076709258 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104904031 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072799715 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065272209 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.092898093 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126498228 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064956353 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069127026 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068767678 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077385633 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066562834 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094038283 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079737524 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06496355 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06594333 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066113662 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06625495 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081119143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067251894 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066981772 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076721268 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071620487 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086637731 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070496073 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085092365 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065469769 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075566342 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066297581 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066400328 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063669468 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096281457 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071465871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114034749 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066062905 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063995715 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076739472 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075871625 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.071533794 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065216236 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083157805 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076169949 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.068733068 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076830815 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068127227 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.068086593 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096735079 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065574192 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064683456 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064141939 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068519378 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068415709 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066361567 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079117197 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064536248 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068130784 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080159525 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063596954 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.063832587 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.066658581 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065453093 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062939229 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075839377 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.067433518 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.0647714 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075033002 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.065373242 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068423497 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078345226 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072568792 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.064415955 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066803875 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068283652 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.066524652 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069504247 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.068178118 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067590391 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.072464675 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07267423 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070789487 seconds)
  done (took 10.520337595 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.158201482 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152004211 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067707752 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144692453 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072700127 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071329901 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.14513852 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084920789 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.06623838 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066519758 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065160277 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095476622 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091505307 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.102934652 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068564416 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064714567 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086755212 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.096499407 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.144790818 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142789238 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089318299 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073019745 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068267888 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067295564 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06850588 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074493006 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083648069 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07411178 seconds)
  done (took 4.32202508 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.075814304 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.087943102 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.06949587 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.076777201 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086689683 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066614072 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067836803 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067523986 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080024297 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.076619705 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066722637 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07056334 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070240633 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068711078 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066452663 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072693157 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073348417 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065318152 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.069742105 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.070951965 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.075894214 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092575084 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070584118 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.065265214 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068023702 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065323454 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.075613396 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.078918824 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065733563 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.080596947 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063311878 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070150134 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079486783 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066554156 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.065155225 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066106355 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.065576639 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065917876 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066309345 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064004194 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063687257 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.06959169 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062964424 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.074643169 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077874391 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070469154 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066210071 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066460615 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066592687 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061629351 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066505291 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066452887 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066303055 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070761329 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067193019 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066873763 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.064732813 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.091634912 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069546633 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063593235 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063474638 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06254848 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.06637514 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074613927 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081275848 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.06811244 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064578234 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066218945 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07146334 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078418667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063726722 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.068630998 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06135209 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.064334653 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.066141013 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.066263105 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06475148 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.062395627 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.063428801 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.063813986 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064228411 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.063519664 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.06414355 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.066219916 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.06196038 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062976295 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06460278 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066071952 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.0736768 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.063401215 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.06730852 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.064493477 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.062470137 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06630616 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069541295 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.066924295 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078016052 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078001726 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066527195 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064820576 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078678757 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068575293 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065702207 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071924479 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069792751 seconds)
  done (took 8.992544532 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086065374 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065853964 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080068475 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.086739413 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074106686 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069318611 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076774641 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067077632 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.08215394 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065600313 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074585941 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064694086 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077031542 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076174362 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067660324 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076588524 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068805085 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082932774 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.079350829 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.063235099 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072649845 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075393245 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.075964918 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079558171 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079328048 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.080246978 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.077828249 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068739979 seconds)
  done (took 3.837333492 seconds)
done (took 37.577567258 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.756676006 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.930006971 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.755707712 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.974489635 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.811305863 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.866735523 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.871003368 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.75319424 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.952412956 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.811612979 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.048566468 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.263948677 seconds)
done (took 65.545457601 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.776098815 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.915409628 seconds)
    (2/2) benchmarking "String"...
    done (took 2.02296169 seconds)
  done (took 5.629470803 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.026149976 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.401178707 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.033491522 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.752310254 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.758270771 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.285681109 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.543601919 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.24719306 seconds)
  done (took 30.715034121 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.914057137 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.993212349 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.434483885 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.46794261 seconds)
  done (took 15.54516842 seconds)
done (took 63.477452354 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.788187414 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.758052021 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.800473811 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.780875737 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.765746678 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.754342461 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.752975375 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.756225811 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.792544755 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.823694711 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.755225215 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.762513091 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.755712785 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.788757279 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.462148493 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.815447934 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.770383081 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.757409342 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.76560755 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770206076 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.75616299 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.755800822 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.233639728 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.941025327 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.368951745 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.900554241 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.157977019 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.164168528 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.760020287 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.753936463 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.83497513 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.900146058 seconds)
  done (took 203.39421739 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.75668399 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.760564275 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.823820889 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.774585369 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.17002191 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.934752577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.851427939 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.207260166 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.758835426 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.767170143 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.098841356 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.754451038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.084435124 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.711919921 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.797981721 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.79169207 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.015352458 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.083884556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.798654503 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.913931968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.760609222 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.061138039 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 4.032609243 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.042830051 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.780342886 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.763156904 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.754265218 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.786383075 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.939889627 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.996867393 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.798375842 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.794363807 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.922099655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62511022 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.777241514 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.774245364 seconds)
  done (took 170.158757378 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.951856954 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.762501805 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.758211483 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.814043908 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.881036768 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.760692136 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.418201919 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.766277759 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.529283956 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.760476868 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.757423763 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.754852058 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.76007819 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.76856651 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.836771605 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.760322027 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.775063241 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.761100985 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782394134 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.757548829 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.756871177 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.759021497 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758137372 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.758611065 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.757449392 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.757504825 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.149894373 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.001041204 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.758044109 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.759568532 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.62509183 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.772416471 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.887014242 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.762447219 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.851254868 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.816140356 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.879490176 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.760414108 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.973360666 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.830918118 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.758654245 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.759401841 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.819953876 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.772200664 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.757551176 seconds)
    (45/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.761102924 seconds)
    (46/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.763693724 seconds)
    (47/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.824655327 seconds)
    (48/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.003483896 seconds)
    (49/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.759138315 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881243742 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.24624458 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.762675281 seconds)
    (53/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.759201656 seconds)
    (54/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.76452925 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.361232128 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.759838734 seconds)
    (57/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.759575213 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.768913522 seconds)
    (59/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.764947188 seconds)
    (60/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759830551 seconds)
    (61/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.758107991 seconds)
    (62/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.15033476 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.831247556 seconds)
    (64/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.758934108 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.942255709 seconds)
    (66/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.757499205 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.078653957 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.762059766 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.151541328 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.00411279 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.760621617 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.761065301 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.759315788 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.763065107 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.760323704 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.760025092 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.762532717 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.885197212 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.769749347 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.890773922 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.845024361 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.881079902 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.764066329 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.77445744 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.586423141 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.830065011 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.795982059 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.586130059 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.764674594 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.133655355 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.546602517 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.761462392 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.760685711 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.771810875 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.759214139 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.759811321 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.762925598 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.842854716 seconds)
    (99/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.760928133 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.761702792 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.884543245 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.466318043 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.084285182 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.942870524 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.758282882 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.770229903 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852524882 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.922182994 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.760689323 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.828794707 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.767094681 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.764959484 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.903926818 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.763761307 seconds)
  done (took 399.809483388 seconds)
done (took 777.067668767 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.340819854 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.308674017 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.424295033 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.33232038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.307473304 seconds)
  done (took 13.41085558 seconds)
done (took 15.109704458 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.775963671 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.769877628 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.824465573 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.845331859 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.7772481 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.780302001 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.842883777 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.78034887 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.811975662 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.820204019 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.848499514 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.84497383 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.786183876 seconds)
  done (took 25.204121706 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.769957514 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.915143908 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.018347342 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.803622571 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.773399166 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.031642904 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.828351884 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.909513298 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.913134538 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.998710121 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.007540221 seconds)
  done (took 22.668083665 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.769285073 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.920070239 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.989508666 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.805969102 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.772731751 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.005829782 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.835293915 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.910720854 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.918864529 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.004303174 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.01230697 seconds)
  done (took 22.653847423 seconds)
done (took 72.225056785 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.765876645 seconds)
  done (took 3.462535968 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.79365209 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.930304777 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.767455908 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.764442025 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.7684332 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.767404717 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.765879878 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.768750942 seconds)
  done (took 16.027392027 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.768522064 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.767097186 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.765744254 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.766888485 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.766700185 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766551003 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.767357448 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.768679253 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.76894344 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.766986151 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.769381288 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.768511532 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.769386495 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.766323569 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.768595262 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.766616937 seconds)
  done (took 29.984245117 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.768555746 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.766897257 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.770119705 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76839267 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.767470189 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.76970777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.768748142 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.767574489 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.76730503 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.768829684 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.768081778 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.773620235 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.770906598 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.768250296 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767255794 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.767713693 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.768622377 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.769518687 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.774925914 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.766763545 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.769155894 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.770870401 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.766516361 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.768535698 seconds)
  done (took 44.154427592 seconds)
done (took 95.339073138 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.523122157 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.510667476 seconds)
  done (took 9.735323039 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.771209475 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.77183265 seconds)
  done (took 5.25046127 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.770208579 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.769141286 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.771403708 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.770268886 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.77135256 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.77111719 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.771464382 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.769974151 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.77103944 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.770587875 seconds)
  done (took 19.407882004 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.770626744 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.770697239 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.769945284 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.773753409 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.772246019 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.769949587 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.769442565 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.7693106 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.772371645 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.771506064 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.77314388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.771565597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.772428818 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.769087145 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.768949862 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.771026303 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.772437186 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.771637177 seconds)
  done (took 33.586417277 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.774584231 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.770303868 seconds)
  done (took 5.250140325 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.771159025 seconds)
    (2/7) benchmarking "second"...
    done (took 1.770809933 seconds)
    (3/7) benchmarking "month"...
    done (took 1.773392733 seconds)
    (4/7) benchmarking "year"...
    done (took 1.772557122 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.771646881 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.77308232 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.775100574 seconds)
  done (took 14.111491168 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770768551 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927087075 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.991417087 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.630010843 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.773938773 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.776056411 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.090055157 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.774823602 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776036405 seconds)
  done (took 20.215933633 seconds)
done (took 109.260030419 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.621976477 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.775674345 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.047911596 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.874735683 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.791525033 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.067370075 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.785896365 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.054496225 seconds)
done (took 42.727085123 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.779098396 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.774044369 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.798246096 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.799887443 seconds)
  done (took 22.080825368 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.771783178 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.137426624 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.799422944 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.625172793 seconds)
  done (took 22.057779082 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.155835787 seconds)
    (2/2) benchmarking "read"...
    done (took 2.119488208 seconds)
  done (took 5.986262187 seconds)
done (took 58.612903793 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779807452 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.775759302 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.77562186 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.776589726 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.774510628 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.774583392 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.774474454 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776887954 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.773947779 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774618632 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.77352467 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.774501736 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773341235 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775151834 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772221999 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.776644192 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.7739369 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.774290811 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77447253 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.775495733 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772406646 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.775948154 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.774363884 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.774687709 seconds)
  done (took 44.306063249 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.775715699 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.775566009 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.776445893 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.774309849 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.776635064 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.776914649 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.773694032 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.773664408 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.772730233 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.777177566 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778301567 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.776882067 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772633559 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.775104218 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775624126 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.774387757 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.77329286 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772972586 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774626787 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.779674827 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.776384791 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776751113 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.775302007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779288153 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.775376455 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.773311404 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.776092921 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.778134965 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.777961333 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.776099445 seconds)
  done (took 54.981857889 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.775501933 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.777080116 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.777185794 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.779561262 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.779441235 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.781299089 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.777151639 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.777174425 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778434643 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.778340709 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.782319375 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.77729036 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.77643893 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.779369983 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.781193002 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.781760261 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776735068 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.778526348 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.780369884 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.777363394 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.782375486 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.780413557 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.783214108 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.778323473 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.78039458 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.78003974 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.775910495 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.779775103 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.781372659 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.78104763 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.781866016 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.780881235 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.779975169 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.785026192 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.780493604 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.782488186 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.778569737 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.779611265 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.780057253 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.78238793 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.779818801 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.779466746 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.779577864 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.779709082 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.778847836 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.781880049 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.782999692 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.78071796 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.782365714 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.781612262 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.779605947 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.776359649 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.783105109 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.783964264 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.779523338 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.78140842 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.782080924 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.78142167 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.779321789 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.783137147 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.78508351 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.781344847 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.781470381 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.780305047 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.783822583 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.779807652 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780473139 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.780843284 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.782100367 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.779746324 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.781030351 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.780340455 seconds)
  done (took 129.894053854 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.780097364 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779241565 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.781425013 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.780824871 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781467203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780442891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.781955316 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7813618 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777733962 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.779622339 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782467711 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.78528295 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783086187 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781135453 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.780533886 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.782317684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782204253 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782456756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.779674355 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.78070299 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780992804 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.780158277 seconds)
  done (took 40.901649051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.780310121 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779484945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.781961874 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782851513 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784415098 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.783411512 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780644885 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781700999 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785377777 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784521402 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.781832922 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784634033 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.78502698 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782449755 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786125968 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78565329 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.7829222 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78367445 seconds)
  done (took 33.812835484 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.785079566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.78782417 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.785357142 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.782917379 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786871994 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.786009213 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.787545976 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.78789258 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.783202255 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.787301918 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.78395267 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783824494 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.784764939 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782606061 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783906291 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782735884 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78359445 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.784479706 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.781664313 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.784071061 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786657918 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784862398 seconds)
  done (took 40.984713462 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785525891 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.781899127 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786964905 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.783766763 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.783109246 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.783821284 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.785626599 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.785920339 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.786659245 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.787697157 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785719668 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.785011834 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.787051468 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.787529862 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.785087088 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785268795 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.78250727 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782642768 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784462233 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786292771 seconds)
  done (took 37.421065533 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786165492 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.783777924 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.785728059 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.784078086 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.783320437 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.785194857 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.784637468 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.785893826 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784365492 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.791155567 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.783198482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784897654 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787765328 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.785278443 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.784100999 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.786259803 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78579205 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785687597 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786173238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.786292264 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.78894998 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.786993604 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.784532446 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786854873 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788365371 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787040991 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.78609891 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.785516491 seconds)
  done (took 51.722598676 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787434856 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786288537 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.789478619 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.784481077 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.788444186 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.785761508 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.786180128 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783995077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.787531207 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.789696755 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.789733574 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785141192 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789105173 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.786435037 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.786448931 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.789141898 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.785008411 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.788129386 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785728705 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788131678 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.788168431 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78851678 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.789513201 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.789932078 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789050494 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.7887024 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789769446 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787860233 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789875278 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.791948064 seconds)
  done (took 55.358114471 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.806196859 seconds)
    (2/2) benchmarking "in"...
    done (took 1.810567704 seconds)
  done (took 5.339283223 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.791456357 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788940071 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.791374327 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79120271 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.7912267 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788740246 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79079577 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790748655 seconds)
  done (took 16.048874023 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.791604115 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.797678767 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.792224984 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.79331645 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.790684049 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800039428 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.794761622 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.793488168 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.793225133 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.792919741 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.796212683 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794849555 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.800510162 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.79284039 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.79259504 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.791356548 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790203817 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.796773967 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790293702 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.790268091 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.798132826 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794335484 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.795443723 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.789010948 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.793836729 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.796443245 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.802015563 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791492773 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.792552946 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.791655788 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.80186468 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.792081144 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.791149841 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794769635 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.792579999 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.794757893 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.803333099 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.793321436 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.794632823 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.796225286 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.789224655 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794330367 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.795417112 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.799973625 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.790699822 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792821883 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.792362857 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.797261767 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.795420273 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.794635414 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.805479978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795740262 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.793329757 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.792769178 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.79303562 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.796482171 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.794078169 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.792784683 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.799587968 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.795241074 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.795262249 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.813391823 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.79952627 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.796008949 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.794745511 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801200994 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.819373445 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.795997229 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.797081544 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.793846371 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.797641052 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.795800831 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.794378463 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.795341096 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806672582 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.80046519 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.792561885 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.791779992 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.795515429 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.791691122 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795967746 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.794221279 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793482727 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.792745781 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804566065 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.816610356 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.796111379 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.790901977 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.798601697 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.795316212 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.800991057 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.797247897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.792702123 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.793246356 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.793851705 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797949401 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.795339153 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793825569 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.798410711 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.80381513 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.795319704 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.79456061 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.798095059 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.807051917 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.794978254 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.797256791 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.799230731 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.79372489 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.80190756 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.796415115 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.796769249 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.799751597 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.800267513 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.80291875 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.797135105 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800367059 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.805785217 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.805682318 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800114593 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.801380986 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.801333412 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.802524292 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806704981 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.819319131 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.796362304 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.799708555 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.801369942 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.810488392 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.800924163 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.803572934 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.801061767 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.798299653 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.798416056 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.799336609 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798040585 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.796396687 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796496793 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.798524744 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.796394564 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.79580079 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800765043 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.800435113 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.800102981 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.800214028 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.803771553 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.797689547 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.800700054 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.803023763 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.797906167 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.797598873 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.798980186 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.799099484 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.803435101 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.798457762 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.797923917 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.800944654 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.799784977 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.800171105 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.798503075 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.798658107 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.803545463 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.799280875 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.804827685 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800308838 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.798064951 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.798691285 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797752986 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.79919586 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800658418 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.802365949 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.798788343 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800628112 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.804937457 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.799686438 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79766794 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.799350085 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.800036226 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.799313377 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.799173157 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.809022261 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.804812064 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809137587 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.79582384 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.804225538 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.798280048 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.799877315 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.799851913 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.802116153 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.797842507 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.800657702 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.800483409 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.802364802 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817962224 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.810441055 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.798725694 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.802982122 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.804607429 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.803320052 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.802382506 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.797627955 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799184486 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.801006015 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.796145793 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.798509814 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.798425019 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804523694 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.801959844 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.801706485 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.802498674 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800736013 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.802611842 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.802135258 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.805664442 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.803141039 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.802291479 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.80478785 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.801677778 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.803702223 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.80652653 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.800557458 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.80166193 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.80180839 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803128767 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.799016669 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.801739445 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.801644219 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.805491565 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.802655483 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.801650513 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80909986 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.80175174 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.804481511 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.801579145 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.802192395 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.803868905 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.803799588 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.807853935 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.813206016 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.803468419 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.803627665 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.809317645 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.805100949 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.803759371 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.803248087 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.804714297 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.804616535 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.803877469 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.802935479 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.806858126 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.808665099 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805969314 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804400359 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.803768396 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.803564443 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.806757864 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.807453235 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.805220493 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806493299 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.810041979 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.810711079 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.806663412 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807311563 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.805241489 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.804636897 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808591305 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.806737544 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813865782 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.810898836 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.806795428 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.808550278 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.805452484 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.809311894 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.804461441 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.80261559 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815571074 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.805891985 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.807717973 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.812941782 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.808669754 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.806254625 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.81241324 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809879874 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.806638187 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.808485548 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.808354225 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.807359095 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.805700179 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80895489 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.805739302 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806196912 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.810840266 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.8064222 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.808709211 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.807947452 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.813354702 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.806991743 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.807263418 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815392384 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806295428 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.810234773 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.806404579 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.804701963 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.805816145 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.806123588 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.80461024 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.809706826 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.806838041 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.808703064 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.819699481 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.808440996 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.817824734 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.811249467 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816917727 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.803911255 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.809323202 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.808394745 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.812111286 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.817790762 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.80782935 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.807194022 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.813291883 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.811920854 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.806782738 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.810619585 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.808717281 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.806962191 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.808778028 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.808250153 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.816608362 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.809256668 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.80935861 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.808022967 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.807768726 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.80931702 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.811392485 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.809948607 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.81141564 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.811733493 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.811901899 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80741855 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.810310171 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.810364487 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.810780862 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.808095637 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.807646407 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815633016 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.813429684 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.810928866 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816113295 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.810987565 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.814529267 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.809164705 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.810051351 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.811513101 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.809067575 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.813677219 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.807803241 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.811799562 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.808426838 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.807948296 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.815226471 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.820928658 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.817911257 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.813249551 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.812424807 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.811396946 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.809673253 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82042971 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837007322 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812591801 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.809142333 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.818242446 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.820324909 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.812670998 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.814478734 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81338229 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.817323406 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810270309 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.809386909 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.811901398 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.822071322 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811828774 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.809962313 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.812250703 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817885578 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.813032654 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.81113154 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.812680152 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814439856 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.813098979 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.821690305 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.812802415 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.814064585 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.813276895 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.811739326 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.808960065 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.81309245 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.816357641 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.810748376 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.81065067 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.811473952 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.811884126 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.820167052 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.815221797 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814893671 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.820375925 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812789336 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.812594042 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.818819375 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811692869 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.815477667 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810386009 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808392562 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.814871415 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812629917 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.81271007 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813964062 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.822453975 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.815663375 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.812693089 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.814487945 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.81537886 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.811342239 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.814890578 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.81483108 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.822917122 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816354098 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.825507523 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.823993234 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813840931 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.817037057 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824541956 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.826282388 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.813682049 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813065351 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.813131523 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.813642958 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.815336057 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.812376259 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816024355 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.815867823 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.819587259 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.815186057 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81512165 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.813044879 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.814762385 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.817151276 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.815595339 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.819315259 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.815821086 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.813794501 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.81341917 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.814535806 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815467624 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.818481715 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813526675 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.817875419 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.814712307 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.816600461 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.820634882 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.816757885 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.815081425 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.816343412 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.815195698 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.814147717 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.816221895 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.813620157 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.816375745 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.819105418 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.824720036 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.816312566 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.816368657 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.815073644 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.819250659 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.816007668 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.815833736 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817212347 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.816473222 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.82372741 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.815991882 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.818290228 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.817987918 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.814555629 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.821360481 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.817086205 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.82228449 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.816534636 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.817937097 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.818426535 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.822273526 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.826202903 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.820065185 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820392403 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.827546074 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.821016183 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.819003626 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.81859971 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.818345702 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.81572476 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.817739053 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.820585496 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.818238725 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.820468024 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.820715931 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.817094958 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.814055858 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.817445916 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.816573008 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.818819387 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.818561676 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.827043299 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.824273223 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.817220295 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.818174897 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.814222819 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.819848031 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.827327875 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.817570808 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.814158597 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81676337 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816973196 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.818549481 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.821732066 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.82609056 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.821305181 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.817091469 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.822217772 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.834941021 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.819018122 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82517265 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.848849866 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.820637745 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.816614547 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817701582 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.819894592 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.817098942 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.819715598 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.815325871 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.82554659 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.819290128 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.817160347 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.824316752 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.818677722 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.818689817 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.816293119 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.820253582 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.824860082 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.816570513 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.826154285 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.820821023 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.819992303 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.819223965 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.821741643 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.817812885 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.820030702 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.82091175 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.825081088 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.818668625 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.819807181 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.825671041 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.8192425 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.819142278 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832523078 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.83073027 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.82085944 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.819039116 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.820202134 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.822484634 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.821981986 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.819066894 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824082589 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.82979918 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.821263323 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.828714776 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.819686224 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.821121549 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.822880378 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.820258082 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.819797113 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.831273242 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.829495905 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.82160524 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.822642533 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.825727221 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.820137143 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.82785335 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.826813917 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81786161 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.821923173 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.820123022 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.820508228 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.820441133 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.819948669 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.823698978 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.829320959 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.821415467 seconds)
  done (took 1079.709973659 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.821976943 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823503714 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82066664 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820517952 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.820081581 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.820638195 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82114663 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.82263612 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820791355 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.821258629 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82270024 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820927018 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.820623865 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.822186506 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82129068 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.821821074 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.820079392 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822814247 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.823797629 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823191232 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.822020339 seconds)
  done (took 40.008416836 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.820821994 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.822688921 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.820314167 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821332474 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822288473 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.821201757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.821768743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.821986865 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820285113 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.822024221 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.822045565 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821550437 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.821920708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.822268336 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823315981 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822534647 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.822096003 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823422593 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.82220572 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822469639 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.822395378 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.821211643 seconds)
  done (took 41.836237195 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.821457563 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.821708005 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.821018191 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.823854348 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.821722471 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.822304709 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.824018127 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.822940089 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.823424836 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.825102817 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.82956152 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.831198327 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.82465319 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.825062944 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.822940365 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.823482358 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.970962083 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.822752285 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.821984805 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.824075533 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.823423371 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.830124798 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.824531554 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.824299504 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.823570855 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.824292523 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.823398339 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.824341558 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.826047928 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.825820817 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.826273217 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.825251286 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.825316662 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.827448488 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.825054133 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.826115403 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.826904745 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.824650582 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.825779901 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.826173179 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.83540262 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.847749303 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.826211091 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.825358589 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.831917818 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.824391862 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.825724306 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.828858972 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.832913929 seconds)
  done (took 91.367223934 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.825149428 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.823498375 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.823197035 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824832357 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.828283771 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.826106576 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.824558945 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824919079 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.827071461 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.825778631 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.8245729 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.825932278 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.825042743 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.826121983 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825518853 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.826799472 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.825205606 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.826197622 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.826687348 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.826513347 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.8276704 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.826115585 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.82615221 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.826038504 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.827545332 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.825618334 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.826193989 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825027151 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.827082074 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.826155417 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.825882405 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825895434 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.826071216 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.825187793 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.827087849 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.826910376 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.827292391 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.825513521 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.826004158 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.826268586 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.828350911 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827283912 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.827233126 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.825162905 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.827433912 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.826949312 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.826618532 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.827026151 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.829141558 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.827034143 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.828901898 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.828270932 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828759489 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.827858573 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.828505283 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.826020069 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.829603365 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.82912072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.829397336 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.827978733 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.827282564 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.82722105 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.828636218 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.828679031 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.829598421 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.827690383 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.828195739 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.828636167 seconds)
  done (took 125.979047255 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827566058 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.828703502 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.827705229 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828686958 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82706941 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.829005181 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.829072109 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.830037706 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829749836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.82778778 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829283876 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829339927 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.828687304 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.829066263 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.831700835 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.828574329 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.829291988 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829975629 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.827884927 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829532228 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.829070901 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.830524061 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829247793 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829162774 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.829857566 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.83105795 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829361397 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.831160963 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.828952394 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.829325083 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831930453 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.829727561 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829765115 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829743482 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.828790113 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.829847522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.830486124 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830059784 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.828489143 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.829444936 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.828740699 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.829079495 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.831800167 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.830015008 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.830302046 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829030814 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829031365 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830967308 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.832240577 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.827937787 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.831030186 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829719271 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828962246 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.828808577 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.83077244 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.831634569 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830736061 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829941065 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831526636 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833560713 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831581973 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.832436644 seconds)
  done (took 115.207384454 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.832260808 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.833122085 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.831478441 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.832211397 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.832198971 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.833097385 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.833252055 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.833155663 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832163606 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.831563856 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833883145 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832877423 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.832895452 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833623344 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.831623088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836053947 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833166266 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.832850624 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835903023 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.834100947 seconds)
  done (took 38.425552886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.831306347 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.833450456 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.830700138 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833635731 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.833931733 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.835130553 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.831509839 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.834149345 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833207255 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.834515096 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.833797681 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.832664327 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833483939 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834829557 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.833145477 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.833678483 seconds)
  done (took 31.097697459 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.833367996 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.833487388 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.834598701 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.832134276 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.833181349 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.832623433 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.834119938 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.834508874 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.83272086 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.832722671 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.834105764 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.83260284 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.834829875 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.834860203 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.834294704 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.834930106 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.833670592 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.834325655 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.836300435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.833515139 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.83342693 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.834448853 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.836137736 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.833960892 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.835458521 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.834965062 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.836176536 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.835845436 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.835690319 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.835455871 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.836633509 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.83488784 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.835675425 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.836136222 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.835334948 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.837785457 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834269927 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.836078191 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.835967254 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.83602876 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.83709601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.83547011 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.835166141 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.83659132 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83783485 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.836009951 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.83696252 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.837004489 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.836627846 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.835757458 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.836731261 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.837903692 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837498774 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.837100971 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.836556286 seconds)
  done (took 102.705013828 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837595327 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836619387 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836195944 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836212711 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836246636 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.83796268 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.837573808 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83861089 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.838391968 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.836615234 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838497999 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.837798852 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.839329331 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836309532 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.83680705 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837521718 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83762796 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839233754 seconds)
  done (took 34.843876777 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.837384339 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.839384429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.837130025 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835812086 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.837427562 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836385425 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.838143453 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.838314866 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836702013 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.836641544 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837809966 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.836045258 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836427718 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.838894324 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.837296024 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836624009 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.838295117 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836647923 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836072225 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836354208 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836144906 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838077141 seconds)
  done (took 42.18853507 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.837057965 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.835703498 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.847489782 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.859580417 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.855096849 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.874857681 seconds)
  done (took 12.877752226 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833759227 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837608589 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.838175622 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83604487 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837092782 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836166184 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834375208 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834540742 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835620262 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835932646 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839382552 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832452193 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.831725692 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831622175 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832203592 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831838872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835759808 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835962089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.830604445 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832080009 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831788316 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834068716 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833418793 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831273498 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835921335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834288317 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832638594 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.828272394 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825671921 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828262935 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82497627 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825658437 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826297404 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822772739 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822914684 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827182134 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828266465 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.827823392 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824809806 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.827584764 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829831517 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823368572 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826286347 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825995545 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826019551 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827100764 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.825277485 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825433735 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822930384 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824971118 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826630954 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826011567 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825783248 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825328088 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827931149 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.827274941 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825081012 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824171035 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823674596 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829979469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822723137 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825093168 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826211548 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824718036 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825499931 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828974852 seconds)
  done (took 122.50388642 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.829326688 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.826059326 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829022915 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.828637703 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821583189 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822778575 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821753609 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821600516 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821617377 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827348508 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819935567 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821450159 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821716477 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821679711 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824765712 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821965829 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821697092 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823677493 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818632768 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820600952 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827412792 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820801541 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822897667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82101597 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821097218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823227751 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820618545 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82211598 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819582598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822020884 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823234198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822829113 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819836572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820972117 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82237161 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821685292 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823076125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822855085 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82012678 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821963883 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82068416 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820930875 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822672569 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823336187 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821007357 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821545442 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8221613 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824005098 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821325894 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822764344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823304365 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825012683 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823782412 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823906401 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824900759 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825035852 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82390002 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821694866 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822955582 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822011177 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823098752 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822574845 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82164048 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821901789 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821294263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822882858 seconds)
  done (took 122.054273614 seconds)
done (took 2513.288164752 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.875543189 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.8594809 seconds)
  done (took 15.485525239 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.984664195 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.938515409 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.825908887 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.873726082 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.822116331 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.838017508 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.844747546 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.82311179 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.826379394 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.825259416 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.823694699 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.009026771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.884557022 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.822189537 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.830365493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.915411773 seconds)
  done (took 51.644392176 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.829832283 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.830209885 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.839331587 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.833405091 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.827026436 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.839020174 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.855785539 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.831439998 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.871297081 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.836560146 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.894362954 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.833578079 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.823058313 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.874138636 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.837866827 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.836440615 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.922194116 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.902568397 seconds)
  done (took 35.069519376 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.905309947 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.827537567 seconds)
  done (took 10.483986521 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.84437329 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.82160619 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.830663931 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.836301859 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.813563786 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.83908122 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.846447054 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.840747057 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.823983208 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.834727331 seconds)
  done (took 70.076708745 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.818363941 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.814566175 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.81519731 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.811102465 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.809729963 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.81205653 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.810999129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.812772271 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.502776136 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84819669 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.818883116 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.818617792 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.811157956 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.814300597 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.807749529 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.835781279 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.94239983 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.807985606 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.806912654 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.818923085 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.808932529 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.861405462 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.822330333 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.809764466 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.847327807 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.493203913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.818296042 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.815027592 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.916895711 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.807277546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.80887049 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.020103992 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.81475392 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.278168069 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.091606072 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.813371576 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.818203237 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.81836706 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.806388879 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.920298469 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.808195193 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.815224961 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.794153188 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.062860373 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.906552117 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.855075872 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.158629962 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.80897217 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.810972864 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.843593932 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.814265058 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.809374303 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.826978107 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.326258861 seconds)
  done (took 129.711396708 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80651139 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.148616845 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.971797797 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.807301573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088113018 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.010148677 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.804516512 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850936152 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.804659488 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.031366581 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.05972445 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.908190613 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.80529429 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.804111424 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.803782448 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.801053495 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.955939767 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.872196633 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.802650794 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.804123084 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831236392 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.04543275 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.923459109 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.802395291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.827194451 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012670595 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.922586087 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.905197388 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.594858721 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.801418796 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.866604555 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801570268 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.808355258 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.798801777 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955575411 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.893487492 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.884270297 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.80261589 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802012839 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800248604 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.458446989 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.999871529 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.895293865 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.93000897 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.050180576 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006046239 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.5754766 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.80317004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.537520563 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963369731 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028689589 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.031481297 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.923665527 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.802015088 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.330412545 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.80305334 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801395998 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049619158 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024047232 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898971994 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80420485 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.80756759 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.79952613 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.039224321 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803013374 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.894091429 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803803373 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.800705925 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900250638 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.903454753 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.029427661 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012079775 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830469892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.153569271 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.304145594 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.048364951 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.86579048 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055494722 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.804757459 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801946881 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.881130762 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.643243905 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.057012731 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.044008532 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.045049326 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834625665 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.525152187 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.803392615 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.03243728 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.020574019 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.05930441 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051449591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.040209823 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.130740806 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.804527147 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.802937508 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.024931841 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.925106105 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.803880173 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.147210297 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.035829666 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.37087009 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.83190339 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.108371232 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.930983648 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.805376738 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.433465232 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.805102054 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032554957 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.844022392 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.805863095 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.805694703 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.021778688 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.791058986 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805935887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.44396649 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.86421936 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.807492247 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.035439344 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807623586 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.071790395 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.806042059 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036868357 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.385549153 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.838868623 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.035077966 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.051480291 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.806181618 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048035422 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045947412 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.917986544 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.023291712 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.423175059 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.806369481 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.092026478 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.809394229 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.805431217 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.978129606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.80681013 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.945091215 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.811149152 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.097344058 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826550126 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.036616094 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808702584 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.0618798 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.835726748 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.853427587 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810445513 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.921418808 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807891773 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.72672117 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.962941814 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.808550018 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.804699115 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.581747029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.805989599 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961008709 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.032793822 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827091682 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.879458199 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.475549372 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.806281257 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889443109 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.831421698 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.201402044 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.807352053 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.058261906 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.808376347 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.806915285 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.807868461 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.039648144 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.983993107 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.81207768 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.80419354 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.711872003 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.805674826 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.808197312 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.986665981 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.334254647 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.805353166 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008365237 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.809513582 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931306671 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.809734497 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.877874983 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.146911406 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.807466106 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.806800121 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.808840844 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.809242461 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 7.222287096 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068412144 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.831787237 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.338860546 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.947477575 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.079798072 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.114601502 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.048497305 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.846936705 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.815005081 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.060152317 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.809914768 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.869118285 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.808716729 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828174459 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039630298 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811728478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.01456785 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.075610837 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685470508 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85560799 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.809424541 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.814219455 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.807975083 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.95231598 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.890493073 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.809790708 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.810352352 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.924672957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.926858894 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.015425568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.810918524 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.872268036 seconds)
  done (took 889.221841038 seconds)
done (took 1203.447365281 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.80841084 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809210886 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.810661333 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.812167973 seconds)
  done (took 28.980727821 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.81352401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.81115449 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812429889 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.811549229 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.811519408 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812775861 seconds)
  done (took 12.612620099 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.994324437 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.808563869 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.810344934 seconds)
  done (took 21.356797498 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.886896715 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.219198766 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.949885727 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.243988256 seconds)
  done (took 10.040616992 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.811823339 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.812140598 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.812678458 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.817350819 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.813146337 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.815392739 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.812711462 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.812455169 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.814600304 seconds)
  done (took 18.065785948 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.588201864 seconds)
done (took 97.3846779 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.91237017 seconds)
    (2/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.693506815 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.963634319 seconds)
    (4/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.812585211 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.630687183 seconds)
    (6/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.907292068 seconds)
    (7/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.812006465 seconds)
    (8/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.999155526 seconds)
    (9/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.021890852 seconds)
    (10/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.828479211 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.197425781 seconds)
    (12/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.264281917 seconds)
    (13/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.526515677 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.977486439 seconds)
    (15/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.745403845 seconds)
    (16/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.904317571 seconds)
    (17/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.225623981 seconds)
    (18/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.278446781 seconds)
    (19/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.808472935 seconds)
    (20/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.842749806 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.133440176 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.83893517 seconds)
    (23/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.888801111 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.811738816 seconds)
    (25/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.096086483 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.138359595 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.051868037 seconds)
    (28/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.665487531 seconds)
    (29/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.897803621 seconds)
    (30/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.151262051 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.057264505 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.40138517 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.564546242 seconds)
    (34/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.83563087 seconds)
    (35/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.209908353 seconds)
    (36/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.55629281 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.785409755 seconds)
    (38/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.985940632 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.122545903 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.849699092 seconds)
    (41/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.828412448 seconds)
    (42/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.916655698 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.348503427 seconds)
    (44/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.21136613 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.953183595 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.944355407 seconds)
    (47/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.690585388 seconds)
    (48/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.956519249 seconds)
    (49/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.234341681 seconds)
    (50/309) benchmarking ("sort", Bool, false)...
    done (took 2.028718285 seconds)
    (51/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.222298948 seconds)
    (52/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.814553153 seconds)
    (53/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.176664422 seconds)
    (54/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.93463772 seconds)
    (55/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.203075506 seconds)
    (56/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.469301956 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.535158821 seconds)
    (58/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.913426523 seconds)
    (59/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.910565048 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.088088267 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.967864214 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.759962714 seconds)
    (63/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.838955469 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.752783938 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.912864883 seconds)
    (66/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.957938582 seconds)
    (67/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.946668308 seconds)
    (68/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.815145549 seconds)
    (69/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.820541618 seconds)
    (70/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.952159812 seconds)
    (71/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.102060012 seconds)
    (72/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.017289099 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.252187894 seconds)
    (74/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.91335806 seconds)
    (75/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.848341558 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.823353993 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.941926164 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.830770894 seconds)
    (79/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.927862543 seconds)
    (80/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.329390534 seconds)
    (81/309) benchmarking ("sort", Float32, false)...
    done (took 5.543057682 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.918080766 seconds)
    (83/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.917293432 seconds)
    (84/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.054375775 seconds)
    (85/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.813206156 seconds)
    (86/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.680287045 seconds)
    (87/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.511430722 seconds)
    (88/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.81319182 seconds)
    (89/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.894119678 seconds)
    (90/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.973104822 seconds)
    (91/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.819807811 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.646947275 seconds)
    (93/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.660846636 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.762944745 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.947899641 seconds)
    (96/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.912742905 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.939161467 seconds)
    (98/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.89365802 seconds)
    (99/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.136627231 seconds)
    (100/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.897570308 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.834694949 seconds)
    (102/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.569645381 seconds)
    (103/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.721696518 seconds)
    (104/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.914112025 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.285592997 seconds)
    (106/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.617914023 seconds)
    (107/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.969348536 seconds)
    (108/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.915892475 seconds)
    (109/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.903700176 seconds)
    (110/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.996244325 seconds)
    (111/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.029013184 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.139443943 seconds)
    (113/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.942759538 seconds)
    (114/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.202217902 seconds)
    (115/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.945582419 seconds)
    (116/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.298427626 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.113029232 seconds)
    (118/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.443876485 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.112783831 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.941786891 seconds)
    (121/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.840335277 seconds)
    (122/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.816734692 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.982891429 seconds)
    (124/309) benchmarking ("sort", Int8, false)...
    done (took 4.709630092 seconds)
    (125/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.196442732 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.816479061 seconds)
    (127/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.96627722 seconds)
    (128/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.945689162 seconds)
    (129/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.816840523 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.819710777 seconds)
    (131/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.882545473 seconds)
    (132/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.815331682 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.85545676 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.207663402 seconds)
    (135/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.065439071 seconds)
    (136/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.025249573 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.073090873 seconds)
    (138/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.12513793 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.0609292 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.818922429 seconds)
    (141/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.817169235 seconds)
    (142/309) benchmarking ("sort", BigInt, false)...
    done (took 6.81972493 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.003452983 seconds)
    (144/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.124231465 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.073152563 seconds)
    (146/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.13404058 seconds)
    (147/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.613723341 seconds)
    (148/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.902786701 seconds)
    (149/309) benchmarking ("sort", Float64, false)...
    done (took 5.568732524 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.368645138 seconds)
    (151/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.321203031 seconds)
    (152/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.356518103 seconds)
    (153/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.167483895 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.127782362 seconds)
    (155/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.302943509 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.8400216 seconds)
    (157/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.842171835 seconds)
    (158/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.946166837 seconds)
    (159/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.841524121 seconds)
    (160/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.820388102 seconds)
    (161/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.869530474 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 3.879848201 seconds)
    (163/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.83845869 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.714640992 seconds)
    (165/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.442638078 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.919379473 seconds)
    (167/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.00202533 seconds)
    (168/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.069625066 seconds)
    (169/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.840575622 seconds)
    (170/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.965515797 seconds)
    (171/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.135716604 seconds)
    (172/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.322318689 seconds)
    (173/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.377638304 seconds)
    (174/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.212697988 seconds)
    (175/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.067579997 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.082038893 seconds)
    (177/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.913495093 seconds)
    (178/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.84377002 seconds)
    (179/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.075295513 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.650976764 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.964319477 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.818897548 seconds)
    (183/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.903913491 seconds)
    (184/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.820375683 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.140173361 seconds)
    (186/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.896675557 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.006402394 seconds)
    (188/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.056643665 seconds)
    (189/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.821785403 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.91663223 seconds)
    (191/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.280414481 seconds)
    (192/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.099019116 seconds)
    (193/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.509904763 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.13439678 seconds)
    (195/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.902912892 seconds)
    (196/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.079237513 seconds)
    (197/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.845752894 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.082682761 seconds)
    (199/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.838873734 seconds)
    (200/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.00616077 seconds)
    (201/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.621916015 seconds)
    (202/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.155084263 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.930540671 seconds)
    (204/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.822956066 seconds)
    (205/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.820098081 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 3.583207352 seconds)
    (207/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.930933847 seconds)
    (208/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.971008775 seconds)
    (209/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.825104345 seconds)
    (210/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.897717991 seconds)
    (211/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.138018114 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.849701879 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.844357259 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.10915358 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.194333956 seconds)
    (216/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.214770743 seconds)
    (217/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.093497844 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.886654298 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.009809116 seconds)
    (220/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.610428784 seconds)
    (221/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.844800152 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.824871206 seconds)
    (223/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.035282854 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.48872676 seconds)
    (225/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.944264793 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.172823305 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.952055932 seconds)
    (228/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.898627229 seconds)
    (229/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.051161798 seconds)
    (230/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.824389154 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.0775067 seconds)
    (232/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.823338602 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.85597498 seconds)
    (234/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.499406127 seconds)
    (235/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.148994484 seconds)
    (236/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.836261329 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.977633273 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.823667992 seconds)
    (239/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.905078906 seconds)
    (240/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.214985156 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.159403258 seconds)
    (242/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.828034333 seconds)
    (243/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 3.860901561 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.831823433 seconds)
    (245/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.388813445 seconds)
    (246/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.159319421 seconds)
    (247/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.910158041 seconds)
    (248/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.958112476 seconds)
    (249/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.903077638 seconds)
    (250/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.143354275 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.445834709 seconds)
    (252/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.379052232 seconds)
    (253/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 7.20422239 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.963681865 seconds)
    (255/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.970110186 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.390133386 seconds)
    (257/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.106691464 seconds)
    (258/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.00089034 seconds)
    (259/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.846899877 seconds)
    (260/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.861398452 seconds)
    (261/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.972980438 seconds)
    (262/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.899238148 seconds)
    (263/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.900539819 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.843788531 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.995479254 seconds)
    (266/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.028436961 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.975212599 seconds)
    (268/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.251883896 seconds)
    (269/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.019342404 seconds)
    (270/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.85544438 seconds)
    (271/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.881993547 seconds)
    (272/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.773321436 seconds)
    (273/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.93730482 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.239624003 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.627237261 seconds)
    (276/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.845754064 seconds)
    (277/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19266346 seconds)
    (278/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.137154731 seconds)
    (279/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.86251232 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.841765872 seconds)
    (281/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.973527946 seconds)
    (282/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.841445708 seconds)
    (283/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.208451451 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.966995534 seconds)
    (285/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.862242342 seconds)
    (286/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.053771817 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.861843335 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.969787036 seconds)
    (289/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.843554906 seconds)
    (290/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.013530269 seconds)
    (291/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.901225105 seconds)
    (292/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.844498569 seconds)
    (293/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.882735101 seconds)
    (294/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.062557741 seconds)
    (295/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.111751772 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.691411106 seconds)
    (297/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.86065484 seconds)
    (298/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.761095314 seconds)
    (299/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.158394287 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.887502154 seconds)
    (301/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.842016243 seconds)
    (302/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.153366445 seconds)
    (303/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.667312373 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.064670409 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.842606671 seconds)
    (306/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 4.077887736 seconds)
    (307/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.849695077 seconds)
    (308/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.88530847 seconds)
    (309/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.199874272 seconds)
  done (took 996.646804032 seconds)
done (took 998.465599275 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.874296759 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.862751636 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.845934849 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.868930487 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.959851377 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.888098632 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.859372699 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.85053682 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.895937206 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.896095698 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.844661845 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.888130474 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.84687072 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.849752323 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.847421854 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.863285345 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.164597855 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.877623939 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.866490589 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.861295473 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.866505847 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.846015983 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.897804079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.888034037 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.854395301 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.852192453 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.85084661 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.867296903 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.960501712 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.852709687 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.852378034 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.860531677 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.160082755 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874465651 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.847073127 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.867812486 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.86156612 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.860998596 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.851998591 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.881420291 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.317935351 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.856872391 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.849360381 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.848681834 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.848545843 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.858371078 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.848926867 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.85672933 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863141837 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864365769 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.302685461 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.872649865 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.853021223 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.849434199 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.86381871 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.849556747 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.852292446 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.866634764 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.869506766 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866987262 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.147536811 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.888275185 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.853704498 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.868510478 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.859463389 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.335655439 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.852872914 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.856527432 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.308916669 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.861889415 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.334160576 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.866711413 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.851672184 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.86711356 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.882580288 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.161444664 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.875963146 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.849615317 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.860199802 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.849211869 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.863708968 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865359621 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.855306406 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.851173267 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.868340946 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.89541763 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.863807172 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.852200781 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.861917926 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.870280842 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.86114974 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.863858067 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.856159923 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.848844754 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.864057933 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.855632283 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.855628678 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.856531574 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.857122687 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.864689885 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.310262987 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.875977236 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.848414735 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.850528098 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.851216084 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.866740264 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.306589315 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.856129075 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.878288167 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.903045057 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.854375935 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.151103222 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.884564414 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.8717347 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.865399812 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.856064447 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.849717094 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.150939067 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.327762866 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.875461478 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.852344008 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.850612301 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.870454234 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.857556137 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.850655889 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.164901971 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.883199886 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869485502 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.978718905 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.867473472 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.885629162 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.852003015 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.85626848 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.899594076 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.875290388 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.887388451 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.857273667 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871370062 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.871488859 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.852259705 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.866970376 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.866974458 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.852820119 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.863375807 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.853402515 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.903502736 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870526807 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.869802881 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.874886163 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.977474154 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.853809244 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.152951719 seconds)
done (took 291.470093756 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.929040785 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.853177421 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.968714981 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.852154177 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.940690566 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.924330798 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.850824149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.852060059 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.852137714 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.355038433 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.853348394 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.857697543 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.850149114 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.853590651 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.921657758 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.852474404 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.853691809 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.300766207 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.85411664 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.932195823 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.85227789 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.853411801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.853286399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.366530238 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.85773974 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.851297578 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.934129951 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.853527262 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.299551329 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.854147185 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.851644864 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.313772194 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.933035362 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.881030473 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.86512171 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.859180071 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.941774241 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.864402722 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.918878354 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.919928548 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.975007179 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.88627295 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.85231765 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.856022267 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.857787929 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.85714794 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.854577963 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.883220811 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.852156867 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.861043026 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.296170516 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.860187468 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.862378724 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.854114729 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.855873802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.882516645 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.854616533 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.855872545 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.934333383 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.856403689 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.92089862 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.352882094 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.365150862 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.856837673 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.855560566 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.855928239 seconds)
  done (took 184.267389583 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.921547095 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.928991818 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.922706721 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.861024317 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.905203942 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.925260811 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.861977018 seconds)
  done (took 15.110430491 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.862669253 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.855545238 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.904867541 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.904831493 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.855378065 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.035640306 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.867762616 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.862681968 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.884280281 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.857466754 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.524088384 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.90636561 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.864310371 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.855476909 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.87037675 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.916315467 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.860532691 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.858388291 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.973094398 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.005187594 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.861749572 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.864908942 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.884426596 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.867773561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.857440997 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.858470733 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.859148992 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.864353131 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.855689224 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.857680521 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859859195 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.908665769 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.858125017 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.856685245 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858827193 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.858298187 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.856918613 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.858542414 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.86138694 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.856906654 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.859346022 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.86126469 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.859315896 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.858766164 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.857794741 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.882413333 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.858847186 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.856572968 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.857788707 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858410322 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.885155521 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.858687778 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.861172901 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.864416619 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.90198046 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.86705127 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.858255796 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.861857733 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859297293 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.859411999 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.859869391 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.009479687 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.911090567 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859514583 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.911573866 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.014420851 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.860534709 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.859683466 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.861901229 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.948706363 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.860515773 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.908285236 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.860799207 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.976858 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.86007241 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.040794816 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.883931647 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.863694321 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.864956588 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.860522634 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.866819951 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.864081181 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.862736973 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.868375529 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.865821678 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.86138958 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.862499571 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.863373794 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.867449874 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.860232633 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.908695378 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.864390517 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.861330754 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.002032331 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.860631101 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.976343643 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.889277298 seconds)
  done (took 204.945549556 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.86898773 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.867873931 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.862300282 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.876712649 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.862072719 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.863205454 seconds)
  done (took 12.990113163 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.863947867 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.864669374 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.864679311 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.860913022 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.859883839 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.861055256 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.861974748 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862504203 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.866221132 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.864149799 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.86096145 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.862974138 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.862484963 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.862966169 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.863178824 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.862971756 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.862960336 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.863197407 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.862198323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.863215222 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.068565677 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.86237736 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.861083997 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.866712818 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.867658312 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.863174311 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.876402324 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.860975128 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.862799643 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.871482683 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.866275927 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.862214656 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.865418973 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.869650852 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.867717296 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.8671346 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.867283999 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.863049458 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.863927531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.862275327 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.865070394 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.865935262 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.863692138 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.864939843 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.86388073 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.872273611 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.869131987 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.876381048 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.862341133 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.86441731 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.863786273 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.86303056 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.863846828 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.864065443 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.868589171 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.870975403 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.868765319 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.864299277 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.863954922 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.86887908 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.868901804 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.864894608 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.868063002 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.870327366 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.872417915 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.866495137 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.869299278 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.869589157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864438085 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.865113658 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.865496213 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.864537349 seconds)
  done (took 137.299361526 seconds)
done (took 556.412401575 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.874387138 seconds)
  done (took 8.66364109 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.009430199 seconds)
  done (took 8.895177441 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.625083904 seconds)
  done (took 10.4165863 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.873522133 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.879336817 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.87126415 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.869407827 seconds)
  done (took 29.298748843 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.154452027 seconds)
  done (took 8.945929687 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.881501256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.870158438 seconds)
  done (took 15.616325013 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.994243186 seconds)
  done (took 8.786183111 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.254224583 seconds)
  done (took 9.061581376 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.880631263 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.873471604 seconds)
  done (took 15.5689457 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.870723897 seconds)
  done (took 8.661322849 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.186350905 seconds)
  done (took 10.052511805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.883932813 seconds)
  done (took 8.721577445 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.887318697 seconds)
  done (took 8.679595098 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.920338338 seconds)
  done (took 8.710802801 seconds)
done (took 161.869273796 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.872826131 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.86679074 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.867082257 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.867150601 seconds)
  done (took 29.264292023 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.900339423 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.901555301 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.913187878 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.901620621 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.893526583 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.891141461 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.901913138 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.901172463 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.892002977 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.900785536 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.90202141 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.899932322 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.902549575 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.913094064 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.912210408 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.900439147 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.900368499 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.901986004 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.893411542 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.910128471 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.899703143 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.903239901 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.867463625 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.869954852 seconds)
  done (took 47.367661891 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.05972469 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.940695986 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.022477371 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.922842194 seconds)
  done (took 9.738086866 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.868577874 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.931406204 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.919080936 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.914595483 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.917767194 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.971998829 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.92030621 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.007080432 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.997000477 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.004380195 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.875628782 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.890052943 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.893895375 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.916409182 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.972835366 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.869324764 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.870113597 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.983479213 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.9303315 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.052301279 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.868754067 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.92449461 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.919299606 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.921848688 seconds)
  done (took 48.132145241 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.869856932 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.877031989 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.876900836 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.870689305 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.870557048 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.871993191 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.876446139 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.871571141 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.891018835 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.870491038 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.871009625 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.870064006 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.877035525 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.871277557 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.869431947 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.883838403 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.882572098 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.870603643 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.876085193 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.878489134 seconds)
  done (took 39.290855404 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.868839866 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.715528618 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.214776602 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.121385812 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.869176787 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.870402457 seconds)
  done (took 31.453242521 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.882281918 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.877410842 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.870800204 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.928703852 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.009721818 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.874409181 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.871841052 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.880964808 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918886959 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.935438361 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.887800679 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.902167948 seconds)
  done (took 24.636197261 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.870688659 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.871142394 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.870854725 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.881570296 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.882033681 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.879030152 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.879376336 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.871213441 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.884112352 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.892365882 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.880440111 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.883557045 seconds)
  done (took 44.347617794 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.578260669 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942250732 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871786901 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.745110221 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334073158 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.42184393 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.762822332 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.559940191 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338915002 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.797948538 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074874462 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.870219285 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.957404299 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.872464012 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14218137 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.216512051 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06719349 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.114820753 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.680855667 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.910992306 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.073929967 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089469057 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.161134598 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87195636 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873697189 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.922776378 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449952206 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.612425071 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.908934625 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.351147819 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12468172 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.827058333 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928583697 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.877683714 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.887201335 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876068504 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877180681 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143705684 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.918013019 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001921606 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948207055 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.121356093 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878128951 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.294088341 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.577525003 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.157301372 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.990075009 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.872406622 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876867867 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87225533 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.797996769 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956139067 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.876755758 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.878320184 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.574687119 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.874723129 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947666568 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.873993598 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076100977 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.67956546 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564376443 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.874583652 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877446024 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.449319355 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.9562441 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.990176916 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.6250648 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.254377803 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.291902026 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.972575117 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.875953922 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.876715095 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.169568167 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849899522 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.565707835 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912714852 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.010026528 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.887929946 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.514046647 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162428791 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.280474747 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.435676496 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.795981259 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146597313 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.796866957 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.867038816 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091506515 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.704984507 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.802131852 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.088743181 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908189715 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878233928 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.139675585 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.626249653 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.988440801 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.888694391 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311863031 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893224883 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88104778 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878958677 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.08978092 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421335031 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913057114 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997451812 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889339834 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96162737 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802340475 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.887610247 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.877452741 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.780431185 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.883551454 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.87831512 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.918309574 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.697212025 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.924867693 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.817053087 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881465581 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961871592 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918206922 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.834897027 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12513426 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.173667603 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.549605705 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904496288 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.00465433 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.235803628 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.106404566 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.88049266 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091956722 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418483351 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.28836632 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.923740966 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.164480148 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.935972661 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167396502 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304415529 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956857589 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.643176187 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.50642466 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.093329431 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893029245 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.877102445 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.881527646 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882561459 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.812385424 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.521721167 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.237661857 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.048662562 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.0925051 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.372068263 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.86943333 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.878312369 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178339075 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017965155 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.878962679 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.524801225 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.446864312 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.673806674 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.90124335 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.168596876 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.221342933 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.845883732 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892143963 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955242236 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89666166 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.885327001 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232017479 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.242703811 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.880046397 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.881564497 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.834466277 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.887679554 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.883223794 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.414907136 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.846006559 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87951602 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.891642436 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.75463859 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951826756 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.882050799 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88289301 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.420310651 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.384928526 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.886983366 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.546122164 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.939129652 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952555583 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.15048496 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.233749136 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008534848 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.579954407 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.297427964 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992449155 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.582928827 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.806215295 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.882481762 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.829361728 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8830635 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890468709 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88543712 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.07053134 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150306029 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182629164 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.33570169 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947113352 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084906776 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.598834927 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836509691 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.881545127 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889470401 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.885136605 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881443435 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396671772 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.17391309 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968053624 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.911392569 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.886604448 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009161642 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.891975298 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.811776424 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881528097 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.884913427 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455214154 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91516901 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.83010829 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.172023811 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.756512147 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.009204495 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925968359 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.894817288 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.889633363 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.588174336 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.985628112 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.81080862 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458560869 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926138185 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.647197222 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373029411 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467722406 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178428075 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.202531001 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.207567406 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.95278202 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.096509293 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.96791478 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.939891335 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.970626003 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817741045 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.80950629 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.535607414 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.217502105 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152585666 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889281896 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099933432 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.584634184 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11213893 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914210265 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.718113446 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19279086 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859830271 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900734107 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.376258946 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.998749455 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96757248 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889104273 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.832318056 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.23245258 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928397022 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.590977619 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901481028 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.239177173 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450572182 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.107880033 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.241313769 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.101815195 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.886552818 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233303012 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.242458474 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931312978 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.890612609 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.878231071 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.09851974 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.463182758 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.746553269 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.888890778 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.191049037 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182090814 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.792785206 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.8868575 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.190353594 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15012237 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885812484 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.233791412 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261535334 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.993366306 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949201518 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116586091 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.722513655 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.194964998 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.445391373 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.37726925 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.889970652 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.81572032 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.589306409 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.092662852 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890095587 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.854714959 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.102285993 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12742381 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.574049632 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.109039604 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.135313356 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.902127813 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158569577 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96595157 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.987138966 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.192567737 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.324791453 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.137247212 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.115980449 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432137276 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.107405635 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.361348428 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.059032383 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.89367437 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.098250225 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.107519674 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.1078599 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.260896264 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066314177 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.601541409 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.897092753 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.099683258 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188692076 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953063421 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.265284999 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.064731402 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.975648088 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898794115 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957872441 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.897079892 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900898241 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.259143075 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.422261946 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.908887992 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969241611 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.079212049 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.39921793 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.892667584 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.896646946 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163100229 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244672279 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.220479599 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874993923 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.890504194 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898120216 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023184876 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.819433053 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897573664 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164593227 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.898341193 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.45711699 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049882535 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907129277 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.20188015 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.283550166 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.707413967 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.858527765 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899503286 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113612131 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200386834 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.227040665 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013358627 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165192004 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.247222192 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.928457377 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.274368858 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.137964219 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903269771 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.768935386 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.897083719 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023731436 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.100460774 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167598654 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.403417159 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.657534704 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.159713453 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.762991272 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.900223559 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.754801829 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.166040087 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163744566 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.947746959 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959309023 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.901272702 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474633479 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.618766523 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029118249 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.791377422 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820327467 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.041627749 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.113275983 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.136640733 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.605778549 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.897237824 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.170126233 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1988244 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163009334 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.945725509 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.863924162 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109299083 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897480099 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.912575756 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162342696 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113379579 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141838345 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.900280477 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898448899 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.703913469 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824338405 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.896986109 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950098575 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.121570068 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916627172 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.411355116 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.597589358 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177658087 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944352892 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899656044 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.165148862 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.4116051 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.454610183 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900397947 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.115305708 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.9256296 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189843929 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.89968958 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.467337543 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203387155 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.898169411 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.57650978 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.14561328 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166739736 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.828129437 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905206114 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111972434 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.836626768 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.89470517 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.880786715 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.478040297 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133994726 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.632324557 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.457942877 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.89756121 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.901603442 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.515795415 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931959011 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.48524799 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93382015 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918294463 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.41624967 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.610751133 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.185947825 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.142185547 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.577726169 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.488461707 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.900917437 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.898191972 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901220691 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.817438712 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.081551422 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.08685578 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17768292 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932206037 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.537789155 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.936716432 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.266184835 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016739969 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.216676722 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941001148 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.420061267 seconds)
  done (took 1671.569457733 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.909608089 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.97296228 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.934393885 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.903280471 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.912922641 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.925980744 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.990082319 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.914594057 seconds)
  done (took 57.28874246 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.899758109 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.913086213 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.907801854 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.902887024 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.910691167 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.90262266 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.064507906 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.911046838 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.903446435 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.906573781 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.90297821 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.897390038 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.188864892 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.920292258 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.917125576 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.901516713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902525495 seconds)
  done (took 74.68426962 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.903680779 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.146368468 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.960087353 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.902571552 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.854775417 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.913837499 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.873721308 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.946771693 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.90766035 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.143333209 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.198849638 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.940005091 seconds)
  done (took 90.515929 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.905150791 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.904096844 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.90413627 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.901482008 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.903943134 seconds)
  done (took 11.347996435 seconds)
done (took 2181.498129627 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.129475236 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.962167177 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.996259856 seconds)
  done (took 5.782905203 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.048624679 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.093565694 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.205794002 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.971062043 seconds)
  done (took 10.151131212 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.201863595 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.266806924 seconds)
  done (took 6.292985932 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.262115382 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.90658855 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.313214145 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.900774615 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.905233218 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.901526128 seconds)
  done (took 22.537969473 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.903072108 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.90353052 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.903544861 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.903660762 seconds)
  done (took 9.441960862 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.901779369 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.62425888 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.900208548 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.90739541 seconds)
  done (took 21.159077177 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.050153434 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.019270005 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.045094735 seconds)
  done (took 7.941771616 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.042031124 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.736001285 seconds)
  done (took 6.605397189 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.047366976 seconds)
  done (took 3.87211373 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.930140868 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.173161359 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.386038865 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.438012054 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.566141999 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.706067721 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.219593768 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.14262364 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.318544897 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.346257893 seconds)
  done (took 25.054328732 seconds)
done (took 134.278357103 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.248822795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.916224157 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.105828603 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.264790953 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.124757042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.104595662 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.126617304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.259012138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.932301503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.921927137 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.260824135 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.123349455 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.074156509 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.916589672 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.080320118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.916429193 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.124331148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.260375175 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.94364074 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.159334995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.132347708 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.911263494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.107298461 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.919414355 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.123738168 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.058289867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.453054458 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.914122448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.094698022 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.456989838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.057715837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.307161432 seconds)
  done (took 169.229701853 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.905090516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.90437676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.902359013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.901438776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.394970458 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.902339613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.899580495 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.900768649 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.348044687 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.335063723 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.89341892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.373593074 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.890110737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885720496 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.885754551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888254624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.512473322 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882386837 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.883086406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.878934109 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.879666259 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.195737644 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.875587731 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.206781702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.492472137 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.875137112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.874304744 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873643073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.871652574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.871684523 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.87134507 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.87310519 seconds)
  done (took 209.966219394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.86445426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871021354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873248121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.870584699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.870409027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.868212035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.866175735 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.868019419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.688277026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.674100476 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.861606279 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.854517071 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.856029047 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.85812739 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.851002101 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846305018 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.85162291 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.847237097 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.842265362 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.842473398 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.842705423 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.519460679 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.839110548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.52810421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.837950476 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.836515961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.835555736 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.836026926 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.834464528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.834643481 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.831537069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.831192941 seconds)
  done (took 220.03590415 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072574667 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.83447571 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.83367525 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.828737135 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.834011915 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.834781684 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.821331693 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.08129249 seconds)
  done (took 18.904531737 seconds)
done (took 619.98179917 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.207353196 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.038843244 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.015079127 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.857799166 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.107984402 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.906048106 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.853867271 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.921203796 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.692748349 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.928700943 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.512262372 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.876042847 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.604152388 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.880506302 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.983182173 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.910079106 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.424967463 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.517428119 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.997263661 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.915470992 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.040687218 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.782776486 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.931702174 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.722927464 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.527591423 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.828931586 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.912362888 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.42658924 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.863266614 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.022372716 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.542380732 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.173479654 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.865207281 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.859488197 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.904243517 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.884211738 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.112210432 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.86070918 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.97658612 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.566919778 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.9186908 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.592656045 seconds)
  done (took 101.229270372 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.844303127 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.838828031 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.839870067 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.839863385 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.848290641 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.840276905 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.839353798 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.837293959 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.838303858 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.839350175 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.839007343 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.847147891 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.838322185 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.848327089 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.840220541 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.839929758 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.839104425 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.848824644 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.839361412 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.838917521 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.839380966 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.839209104 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.835552962 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.841547504 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.840322841 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.84163898 seconds)
  done (took 49.64050765 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.834476268 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.986188565 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.081600657 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.853820167 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.836754292 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.838195737 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.853581453 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.837961033 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.836532913 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.839169827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.93488605 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.839641819 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.851046631 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.077575626 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.849057704 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.833920006 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.834361191 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.833420861 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.99505886 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.849203264 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.854050165 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.835866738 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.853567773 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.846541897 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.83831178 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.835681333 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.837780948 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.314974752 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.843481792 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.936340001 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.877449469 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.854541474 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.258769091 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.087784944 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.885605597 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.839077102 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.833544714 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.943486795 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.840094901 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.835424632 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.852442753 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.841893856 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.084635492 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.370580571 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.850925319 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.833348048 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.32737143 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.951666785 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.875144003 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.841895778 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.085450528 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.84919535 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.834221218 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.83607085 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.8738282 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.843535803 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.839328321 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.207855116 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.847108264 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.852256236 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.838837413 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.83638314 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.002125804 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.843681064 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.989312737 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.843194187 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.841209061 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.83732029 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.084086358 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.850425199 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.393103681 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.84998146 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.834524241 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.939406548 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.993763672 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.350696506 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.847994403 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.002668587 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.274920915 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.85964644 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.843701094 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.302722116 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.862996611 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.84310036 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.838209268 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.837530549 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.838139934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.88327583 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.853580847 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.294132904 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.389616717 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.225513693 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.862479479 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.846601758 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.839762765 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.208531151 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.843703818 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.835868639 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.077492582 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.397218404 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.850904074 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.842931286 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.370005168 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.85188579 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.856483567 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.843871746 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.090274673 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.852437215 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.883211236 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.835174689 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.844198734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.840893241 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.855327877 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.841158929 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.838276011 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.359123291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.957683671 seconds)
  done (took 228.663645856 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.839080739 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.834557183 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.836125252 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.834565366 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.83594742 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.835550211 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.836129279 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.83632126 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.838037049 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.836165167 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.836320433 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.838765485 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.839405104 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.844519126 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.893096898 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.840767024 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.440787321 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.838377364 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.837888791 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.836948264 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.475846261 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.837595187 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.83558782 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.835608716 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.835199463 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.840296513 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.841825621 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.889826513 seconds)
  done (took 166.568619256 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.837326129 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.952093056 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.851246422 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.865411864 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.84222044 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.83695528 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.934439431 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.849105348 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.84215526 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.838715109 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.838002131 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.898533986 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.846177136 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.935132189 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.865128734 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.940053064 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.937909049 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.840445716 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.840077918 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.838492981 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.867316738 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.844710489 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.899921503 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.959905203 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.853787745 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.950516353 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.853755697 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.839430197 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.840573125 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.951160557 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.855566539 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.897590123 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.865339161 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.856128563 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.955671759 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.951414972 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.938940319 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.937702279 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.844130071 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.841744018 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.84085427 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.840890218 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.952965621 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.855192945 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.842076351 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.95518252 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.854353003 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.84056085 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.840047936 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.84071304 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.854458197 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.8578957 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.906029468 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.96622912 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.873543891 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.863930934 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937284661 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.967190367 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.843331006 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937658971 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.844382074 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.953107631 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.857066333 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.844661463 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.843730866 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.84576603 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.870653476 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.94288774 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.941387729 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.844833928 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.937718067 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.873522348 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.84693493 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.844047727 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.842747269 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.954262685 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.952286853 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.874177935 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.875593141 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.869506168 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.849177837 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.842920152 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.846471003 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.860064914 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.844788365 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.95674464 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.95502698 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.844904247 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.842786805 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.844871377 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.845265803 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.868475801 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.962703646 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.875146538 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.944035574 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.905611015 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.913253492 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.852902055 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.856358021 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.847185573 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.90531858 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.853150043 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.85257592 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.148645972 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.900534376 seconds)
  done (took 199.551820425 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.233839291 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.886012679 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.898429277 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.172844613 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.201258972 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.817421425 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.886885958 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.893643731 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.922032095 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.115324052 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.961521188 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.91985767 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.874993532 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.863781474 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.88989206 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.923494006 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.900312093 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.239072957 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.091661434 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.412292122 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.88353414 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.150818456 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.205796542 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.461504442 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.937582939 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.303020801 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.490012696 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.05333983 seconds)
  done (took 62.366861652 seconds)
done (took 809.784096425 seconds)
SAVING RESULT...
DONE!
