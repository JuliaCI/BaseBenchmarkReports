cset: moving following pidspec: 30097
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.349475141 seconds)
loading group "string"... done (took 0.480265731 seconds)
loading group "linalg"... done (took 7.920908739 seconds)
loading group "parallel"... done (took 0.177183324 seconds)
loading group "find"... done (took 1.295432815 seconds)
loading group "tuple"... done (took 2.054475133 seconds)
loading group "dates"... done (took 1.456292186 seconds)
loading group "micro"... done (took 0.254094232 seconds)
loading group "io"... done (took 0.692176446 seconds)
loading group "scalar"... done (took 43.047668985 seconds)
loading group "sparse"... done (took 13.250988542 seconds)
loading group "broadcast"... done (took 1.038475472 seconds)
loading group "union"... done (took 15.002589041 seconds)
loading group "simd"... done (took 4.976822648 seconds)
loading group "random"... done (took 9.961302842 seconds)
loading group "problem"... done (took 2.059230066 seconds)
loading group "array"... done (took 22.90578117 seconds)
loading group "misc"... done (took 1.471220392 seconds)
loading group "sort"... done (took 3.659724605 seconds)
loading group "collection"... done (took 19.870623764 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.467821349 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142433572 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148287071 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.152971397 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.18819729 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.139085469 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157809199 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.111587801 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.962583608 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178925945 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144546361 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520622792 seconds)
done (took 5.056504612 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.227182288 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082756007 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095069253 seconds)
  done (took 0.865396149 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.092045234 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144970196 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.091064364 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075849576 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091750536 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076790827 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.075901478 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.092678686 seconds)
  done (took 1.340639601 seconds)
done (took 3.219512091 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73609573 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278476535 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205221068 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.508724248 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.177901093 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.209825638 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.671095158 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.364378832 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251465727 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102236406 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.130577122 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.398534105 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.115606126 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677804646 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.086482596 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125442057 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.170899521 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.451983647 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.090860711 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.091179602 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.114741246 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.15140049 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.111406438 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.083829602 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.178094197 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.080953466 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191801258 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10799215 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.077567154 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285294796 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199076372 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.688095004 seconds)
  done (took 10.840619994 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.114870739 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138617357 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.094743262 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137054927 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.140417112 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.083142274 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.100909469 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.07805454 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123980597 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178468375 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.13288837 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.14040417 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075356441 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.080323357 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117821411 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248526109 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104296444 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.122063964 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098176998 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.090319674 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137069198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097018701 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108238482 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.091811197 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170320194 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.219722076 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11076589 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.124831388 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095154005 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095972705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142736452 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.158958964 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.077326274 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094300098 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.178301499 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.106716735 seconds)
  done (took 5.112463593 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189493396 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.102721553 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.189310437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.14341772 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139899423 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166108366 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095663135 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.265431716 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.124352172 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.17710728 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129550486 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.113009473 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078043493 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098423163 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075334513 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753138604 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.164841886 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110525452 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113487231 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095302685 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083542148 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368111449 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.082537991 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.090833162 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079127661 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.086783032 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.156423669 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080731859 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.223202598 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.098719949 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097247152 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113576039 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.109308008 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20636639 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109442512 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135974147 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077989629 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.093051174 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179292739 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082998961 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095323959 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.107421128 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135378158 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138428094 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.091041906 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079481942 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.212663166 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094005781 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.093802235 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.01962338 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178408569 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091954593 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075172539 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.342772953 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.114022006 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075836805 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.123859913 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.074315122 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277544992 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113554111 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097394012 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07694535 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09788801 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079948194 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.390880197 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095496878 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.733078248 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.079865734 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.086733784 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096626101 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.094851521 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08461497 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099590433 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096090382 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.092342889 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.074371958 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077879037 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.094028817 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076013911 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.094408713 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096274739 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.09959736 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.075808693 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.160665294 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.077910283 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11420572 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124778644 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.081679175 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076458194 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130990394 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098335002 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.078775807 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.136524896 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078970028 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.116269897 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07522794 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.095726295 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.139274372 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079515886 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.179904517 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.076567465 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123289347 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.081674319 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125931271 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110283575 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07935626 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101856125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075089518 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.091872738 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145497804 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.092726041 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07937448 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.096212701 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.090049739 seconds)
  done (took 22.491372041 seconds)
done (took 39.133962207 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.357018627 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.109923646 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.109996932 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.106640015 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10468648 seconds)
  done (took 1.547612626 seconds)
done (took 2.282578395 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.276677178 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17356471 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073344735 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186501045 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.073399054 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.180295118 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162179932 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.109371955 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.184964444 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.090647609 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164384206 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073562101 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090968121 seconds)
  done (took 2.599994662 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.092869022 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112929195 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080855039 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.091981451 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090016576 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090881047 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107066637 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098246227 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108219996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082469584 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089981366 seconds)
  done (took 1.777478639 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.091986623 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111217733 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.080344758 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090915459 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089985975 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090892901 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.108008189 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097183002 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109343632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083967313 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092192696 seconds)
  done (took 1.776336164 seconds)
done (took 6.879471756 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093279537 seconds)
  done (took 0.818949341 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.044388854 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.0380903 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117755888 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.163554697 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.329182424 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.20791547 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.584184097 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.13010252 seconds)
  done (took 15.54488348 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.128748668 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100989136 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.082049022 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.098940275 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.078122592 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.096658424 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.078790703 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.093790435 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.078423836 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096955718 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.079126542 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.098144982 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.080943936 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.097424824 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.078190644 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.079163578 seconds)
  done (took 2.238441901 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116309317 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114253173 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.102632006 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.087168554 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.100546432 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.08337864 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.103160018 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.100254586 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.081902486 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099029595 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.086586779 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.101797851 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.084625351 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.097403345 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.08481616 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10487366 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.082528341 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.101556701 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.085908105 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.101334808 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.102916161 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.08374591 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.101022467 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.087048783 seconds)
  done (took 3.136095683 seconds)
done (took 22.472269471 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.150419035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083865271 seconds)
  done (took 0.972146163 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.099351372 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116570417 seconds)
  done (took 0.960177572 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.105072602 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094881964 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134378952 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.096925855 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095712033 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.079357227 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.128425161 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.096036131 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.079846393 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.097171115 seconds)
  done (took 1.752968837 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082992589 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099811247 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.088324564 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.116524268 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.090769685 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097455273 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085000408 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099635447 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.086071581 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.094443872 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.087615456 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113346108 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.102102572 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.098539484 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.10013431 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10251452 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.089814876 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100616443 seconds)
  done (took 2.476286612 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.07809803 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.081220058 seconds)
  done (took 0.900957029 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082073232 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093732663 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082334335 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098043872 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.077673493 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.093741166 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.077782025 seconds)
  done (took 1.34889808 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.487434764 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139725168 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.268500166 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083067974 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121205517 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31418217 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.094809304 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.082462723 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.099865995 seconds)
  done (took 2.490780411 seconds)
done (took 11.646662625 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.090089008 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115276207 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111061557 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.471241228 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.113596719 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.076967321 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.156453398 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.264321691 seconds)
done (took 2.148973039 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146855126 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340730991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.121883098 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085686461 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.077234993 seconds)
  done (took 1.377448394 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.076240238 seconds)
    (2/2) benchmarking "read"...
    done (took 0.080152872 seconds)
  done (took 0.909006967 seconds)
done (took 3.189806788 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.109853358 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095129261 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07478876 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094823227 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.074880293 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.077581197 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.092713334 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.074984912 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092976133 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.077124532 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.077227303 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.093654283 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077342053 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091348261 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074574771 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093121102 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.074186164 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075136921 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091069273 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.077350736 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093675318 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076641407 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.075187389 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.090917789 seconds)
  done (took 2.811269934 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106951021 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.094305284 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.084629361 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.101366807 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.082224374 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.100219512 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.08346906 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094536654 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083939494 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097065404 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097793557 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.081670284 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.096708828 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082479954 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095628712 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.08229038 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.099443913 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078193831 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095922999 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.081905722 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.099890181 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078073194 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098033083 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083659486 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.097177321 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.081240006 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096446734 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.078035908 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098999232 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097745817 seconds)
  done (took 3.484839547 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.081857705 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.074164656 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.092045607 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.081487651 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.091504396 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.07985566 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.092184083 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.076050252 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.076543519 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.092957691 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078302138 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093938442 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078348585 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09528975 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077937452 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.08048563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108382999 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077340076 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.093939156 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077795378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09686953 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.076254981 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.079065821 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094199165 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.076329572 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.092899298 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.076922093 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.093584713 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.077398676 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.075619107 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096761867 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080089874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.093635806 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.083718122 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.097360826 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.186971442 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.080284224 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093463638 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.077404118 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093156952 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.076001941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076225906 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.094106089 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.083920122 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.097171429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.078969486 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.094048608 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.078215978 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.095132538 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.080283245 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076049141 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093868171 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0800587 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095287959 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081475226 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093257244 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.07755199 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.076855572 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.094782825 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077225102 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094438617 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.076326624 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096549841 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077724283 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.093655242 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.09956431 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.075015514 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.093301613 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.079733902 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094002507 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.077423992 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.106699038 seconds)
  done (took 7.043527404 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.080200559 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1034339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.078045518 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.077259302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090814928 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.075061004 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.096913111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075370051 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093253014 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.093319192 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092789432 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077897707 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094212112 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079776321 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09332643 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078916741 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.104025569 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075480986 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095462432 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081289223 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095334771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081984275 seconds)
  done (took 2.674837229 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217300691 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10311963 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.142597944 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095122473 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.117186343 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113386945 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.085075317 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.104018746 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08450454 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105775414 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087961315 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101816221 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115563041 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088604515 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104817181 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089516094 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099918948 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103394083 seconds)
  done (took 2.72560837 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.091843598 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.095804177 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100010248 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095083053 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.079205641 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098429399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084598085 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110843081 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081055621 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094848904 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088152235 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097469387 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.081038151 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095833622 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080377939 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.095815326 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.080702265 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095286326 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088599207 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102258659 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.101760038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08880713 seconds)
  done (took 2.790056185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095601893 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097238121 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.099127644 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.09902377 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.077519739 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.096391095 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.086265547 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.095960828 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.088128278 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.097040748 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079292098 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097005897 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.086681861 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097018434 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.086232567 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09885415 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083714445 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.097516945 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0827153 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096517044 seconds)
  done (took 2.60599112 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117773877 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109592896 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092649731 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121066769 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092550415 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.110563884 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120972069 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.094946756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113215483 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.110070409 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.114397528 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113895209 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.107326928 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119608559 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.095405952 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.124966111 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123949987 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106030642 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113169238 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.095325689 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.128468801 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.113224195 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106403977 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113736634 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095739847 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112863055 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096024569 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.119356842 seconds)
  done (took 3.851598863 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077547023 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077150375 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093280492 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.07534555 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.094644112 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.077843694 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.076836102 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095237981 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080067822 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094571342 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.080016664 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097801764 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080455991 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.080226645 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097938066 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.080695237 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097891403 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.077926924 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079633154 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09604426 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080751908 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098052981 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081162388 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095701314 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077374594 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.080019043 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09524969 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078146874 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097276131 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.077665428 seconds)
  done (took 3.344741423 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089823164 seconds)
    (2/2) benchmarking "in"...
    done (took 0.103397053 seconds)
  done (took 0.966773189 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.07583307 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112952397 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.075399965 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081260718 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102573671 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.078245358 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106282729 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101282396 seconds)
  done (took 1.504500231 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096448567 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115589513 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083965095 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.107666028 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.097558314 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.11396948 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160210458 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.086348565 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.085858767 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.095806624 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.095858847 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.096590086 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.084696841 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.097234048 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.086592613 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10451851 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.081696617 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.109103622 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087886744 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099438919 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086593183 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107628463 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081345768 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.092831646 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.079941319 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107763227 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.087884694 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.097154692 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081999035 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.105368844 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.084237851 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.072038363 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.100991808 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085098828 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099405475 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098701802 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112255149 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084187158 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107968054 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087001406 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108737981 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.079041512 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.104824182 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087178672 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109584273 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.086293819 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10486091 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079581218 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096303598 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084037308 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097423301 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081335055 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.073024127 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103995007 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.082787336 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110224116 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081568432 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.09757336 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.081379867 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101816922 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086021826 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098028068 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08101279 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099484365 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087179763 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.099581334 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086631132 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094349933 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.072910695 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079206852 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.105277926 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.119701031 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088390178 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101572928 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084929018 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.09756805 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083345772 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102250563 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086608477 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104994477 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084282696 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103350343 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087445084 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096924167 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082875234 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.103931227 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.080864118 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.081866088 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.093994676 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.094765261 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09835257 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.08112077 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.094262642 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.088096499 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.099723728 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082722736 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.094875129 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087037894 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.073087295 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102851679 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084527177 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097394085 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.088506292 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102139044 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085002887 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104210497 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089738424 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099352005 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084691694 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096271816 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087097611 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101835339 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088751505 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093099025 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085202606 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.101021223 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086662735 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.107490828 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08330967 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085347837 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108980352 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.086659042 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.099353189 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.075348535 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09952276 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084108752 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105915122 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.086784832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099045039 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078387829 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095932976 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084212459 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10140588 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085393042 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10257138 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083390971 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091005368 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080389291 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.084749717 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108091237 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080817196 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099750098 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.086803275 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.100475454 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084903649 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.10533355 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08413732 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099012349 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087053641 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101672642 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080392903 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108794202 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.0845975 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083148566 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104087458 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090762757 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102672695 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085404463 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102386208 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08457368 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103005872 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.078441208 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.096087895 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081785225 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10648759 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.081632816 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094978797 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.076817282 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08523174 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.095024408 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083237922 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.095842507 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.081929344 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102525618 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.081313897 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100344728 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.080791969 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112661686 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093336295 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102420501 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086372774 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.107611226 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082994627 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.099891206 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083546461 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103554806 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084700316 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.106494009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.085571935 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084692802 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104147634 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.078102849 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106964412 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090219481 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.099713645 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083014337 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099822088 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086822056 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107585642 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087486984 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106036408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083814457 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081769198 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110995538 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.08383904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.105161879 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.080324266 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104693993 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081577632 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10575555 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088347836 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109929662 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085749036 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09820128 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091204706 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102186853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088709457 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.098465972 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080545564 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.078920287 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.107203644 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.084379214 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.101764089 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.074225943 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105199392 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088699445 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.097488208 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.078753733 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.10150697 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089823276 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099273468 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083944362 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.100330437 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.085944098 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111608477 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07822456 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.10048186 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.089832757 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102328524 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.073685393 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086799649 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103081419 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081473115 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103369777 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.084606057 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103625421 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089003152 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105025145 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076157368 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102814891 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08415562 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079576068 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099066461 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.089034483 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104761064 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08400366 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109667546 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08811561 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105972285 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087467169 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10480194 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.088102024 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.106318232 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085554603 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.102964813 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.082287102 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.096310334 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.082796417 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.095611353 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.081140065 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.0814008 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103025891 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07915699 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103297971 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.083003632 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097595414 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084900048 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102735398 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.081295699 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.097212526 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.078889255 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100999408 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.080656705 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.079469893 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.100749345 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078100376 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104777285 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083695618 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10631397 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.079989753 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.093878253 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.085063886 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.099691766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.085819907 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102732874 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086054187 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.080373335 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102524663 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.082761897 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107913708 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.077150982 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109202356 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085994543 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098544105 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.083067438 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.098394083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082059933 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.096644791 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082134174 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.103437454 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.080300772 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083408462 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.103290518 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08210398 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.098390952 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081193538 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103517173 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.079785379 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104048572 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.075052381 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09657629 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.079548983 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083348155 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106060846 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102690187 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.083337325 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081453702 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104326881 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082408837 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.094430801 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.088101015 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10501627 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085504982 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106554132 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.079293717 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100057458 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090497027 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.091584298 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081465238 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079963818 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096123286 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087646054 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.103472645 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097208501 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.097722649 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.079422249 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.094994001 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.085000329 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100067109 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.075294014 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079542608 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101761841 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081917621 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101177025 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084993063 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.100522023 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086385341 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105989945 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083005812 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.100699454 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085698764 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.094897059 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.079343369 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.078256233 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102081891 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.085043612 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.095257063 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078194247 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101296742 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082300889 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.097637366 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084277117 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.098967857 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088139085 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083023578 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102363286 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.088396567 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093589969 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.082149691 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101803901 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084665809 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.096784201 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.084420611 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.101438063 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086243917 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.105463548 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.084276203 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.098161378 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085026637 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099283681 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084589022 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083620776 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103823972 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.078935519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104544932 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088222394 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099153937 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.082182462 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098250737 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.080656554 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.102595233 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086441914 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.100522428 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087929684 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100767 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.081688659 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.086412943 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104336072 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083381675 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105155048 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.081904307 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106035424 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.078783096 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108262435 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.080285862 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10393567 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.081801753 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.095532965 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08430741 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.102205537 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083394303 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.103773255 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.085850504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.078195587 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.097465609 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081897218 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100790694 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089328495 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106681915 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08297298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.101943302 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079670535 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.095412272 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085918198 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.095769431 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.082126261 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.082103007 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105863413 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.082051356 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.098582978 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082490756 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.106607218 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.086886336 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.103314744 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.077790384 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.103839574 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085407674 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.100984462 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.082062289 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.098365706 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08708272 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104523194 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.082434893 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.078839803 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108010714 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.102580337 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086263482 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.080479414 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.098971797 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.080092364 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097620097 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085336337 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.101301477 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087372165 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.100933468 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084110521 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.108370984 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.080846766 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.097917299 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08997857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10190852 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.087481978 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097182206 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.081168787 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084871183 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105890712 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077934872 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.098167817 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.078896624 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.101202087 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.079969303 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097189759 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.091904213 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10617424 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.083862025 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100860933 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083009381 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078049659 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097632259 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.079981404 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104260276 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.082369556 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.108626891 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.079516382 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.097953236 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078819779 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102123218 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084186281 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.102573084 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.077650961 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078418849 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.097532922 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08251743 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106340022 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083223947 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102983805 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083881676 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.100401185 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081390852 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108212647 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.07740149 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.102164213 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092645403 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103373811 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.081862798 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.084898776 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109415047 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084850199 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097933707 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.08652031 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.102602975 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.080717957 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.10538386 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.086678332 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114401341 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08322955 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.098816005 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.084185077 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.102251117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08026207 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.107075282 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087140135 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104639694 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.08554033 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.101116162 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088085873 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10122744 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086777988 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.101793342 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.083153032 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083867447 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099359036 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082296383 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.097576445 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.087150067 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104881408 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084578409 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.106152511 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.079821329 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10927103 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.090063815 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103917233 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.077897174 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.079366205 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.09931761 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079149845 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105376037 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.079534056 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101564473 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083086989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101720671 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.081688421 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.085928529 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.101942455 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086064465 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103773319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.074692389 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.101713752 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.083124566 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100159674 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.078068838 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103000228 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086420581 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.105250738 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090901978 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079314066 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103998557 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.081732642 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09967652 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080072529 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.10568374 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084503198 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.100947427 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.080531582 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103568762 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.086951534 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083148813 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105799654 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086382568 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.102490015 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.08947181 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106777614 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.077385662 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.097386641 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.086893282 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100561705 seconds)
  done (took 55.847031064 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147402541 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08666486 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075037134 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.096896723 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121910766 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080501036 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095339723 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080766288 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099682059 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091063354 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.095133201 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07653345 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117038992 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125187574 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120013648 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0921299 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094354134 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080994662 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094161602 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081467993 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11613043 seconds)
  done (took 2.889966738 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102486404 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.115002287 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112316775 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098218116 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107168892 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113420764 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.094193742 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113754437 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.117288406 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089181956 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.116921265 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113222522 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089308233 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108341094 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088539309 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111388784 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117618128 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.086624303 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114624696 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111935132 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092496247 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.112081895 seconds)
  done (took 3.147489669 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.089695288 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.082882908 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.103809458 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.076062614 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.103271978 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.076331319 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.108304601 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.079127892 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.107578728 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.079779871 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.078124353 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.098695818 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.085289399 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.095013379 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.080030002 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.097083029 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153363713 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.088666578 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.104220275 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.085426603 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.097738619 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.082753202 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.077523785 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.099176109 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.07843674 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.113041857 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.08571094 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.103995645 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.084359281 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.097737048 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.084939167 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.076951832 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.101851702 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.080601751 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.098111799 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.079238153 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102673785 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.085026305 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.077360868 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100789141 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.080714803 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098797564 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086176122 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.100858547 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081279315 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.09747792 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.082281703 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.082930505 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.095650309 seconds)
  done (took 5.311538919 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.114654138 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.133509402 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.103534974 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.144114027 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118759648 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093625463 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.104284697 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142666037 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.078827694 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.103404424 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.100910813 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119259612 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105089185 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.090574321 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104092811 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083735361 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10548121 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080255812 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.10944962 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.080016216 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110445322 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.106675635 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.097993964 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117090575 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107786716 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084058207 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.099587633 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.090227238 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.116453357 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109716832 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.091087966 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110606581 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11917805 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.087111807 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.099345185 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087216802 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120675368 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084277495 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107620856 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.078244666 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.106681405 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109405339 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.088960922 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.120315084 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.084528956 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.106320256 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083424345 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.098144024 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116044596 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087540286 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113152448 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118249868 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089363914 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103937958 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089599887 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119985793 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.103411513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083121339 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107947836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.096336721 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098727047 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089534839 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.117185278 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105111978 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.094351059 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11832762 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.105694833 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089612556 seconds)
  done (took 7.950450085 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11406651 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110280407 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100675011 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121103546 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109522928 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.090369948 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109267967 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090085382 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.109094689 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115953719 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090101659 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.158912786 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.106490011 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.09542667 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110326033 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.090278767 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.109899909 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.089644106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.110218885 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089415353 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110539016 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120553712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090410066 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12029484 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123694291 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.086918271 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.109637927 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089008555 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121560612 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10927426 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123415922 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090319506 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108941122 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101599403 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123240957 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.109704076 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.084639531 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109167506 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.090796807 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110249865 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086904991 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121723645 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109420941 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088071184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110378963 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090217671 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120694908 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123408658 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095570538 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117339006 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.109231395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100706925 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110156464 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.110770481 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.101209146 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.128406983 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121444172 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120288899 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090400788 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120846312 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12106207 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108784409 seconds)
  done (took 7.494472806 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113987837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.116795679 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122453299 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077342298 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099476127 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.090348289 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098709581 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.079720226 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115311381 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095897181 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11926988 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109156069 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093748029 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119202008 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110070792 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093955293 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.110142864 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109544328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096570655 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.110331428 seconds)
  done (took 2.916826945 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.090965732 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122240088 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083406951 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109577277 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.086038379 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.110262968 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.08389799 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105411319 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082407148 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105135809 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09498226 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115578315 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102092026 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090943432 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115122184 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088852835 seconds)
  done (took 2.420467906 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096062241 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123838204 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.1221809 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082895315 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.100328322 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.078692426 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.083901806 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099425085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.077552579 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118983958 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08128197 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109608354 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.084207359 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102043223 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.078511916 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.108595513 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.077802483 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099888479 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.084596951 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121055144 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.092212488 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104605531 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085096723 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105828095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.081006873 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10997964 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.101979034 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080630059 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100174955 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.085951897 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.102003997 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.090422714 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.09754824 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082176538 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100147485 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.080283135 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.084420524 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.106427431 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108074881 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.085780808 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.079404313 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.102477441 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084419361 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104159402 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.077501023 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10567341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.077905196 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109046252 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.080546178 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102361295 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.084619401 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.105805595 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.083697542 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.114350336 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.085983414 seconds)
  done (took 6.053608158 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098353197 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.1062336 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.078501995 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078384109 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.107168763 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.084015452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107391628 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.084258358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104699899 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.079136505 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104885446 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087461889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104178 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086122145 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104501284 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086903744 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.097279119 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.084206595 seconds)
  done (took 2.525836805 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089071061 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080954251 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.111041224 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081372744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10313414 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.084751515 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099330807 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.081384982 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099888148 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083112393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101577608 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.085506457 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100038857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.085855587 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.081327185 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103640868 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.083584713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101196985 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.08215246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098374757 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084377395 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100289272 seconds)
  done (took 2.865436151 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119996946 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.123003475 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091073605 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.20988435 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.122469638 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.107849963 seconds)
  done (took 1.615062254 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107592176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138924031 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.083841552 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105645155 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0953067 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108410696 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086552173 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108209748 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118796688 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121885686 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088062306 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119195067 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09890861 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119066015 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1148432 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095150507 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108209521 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106864529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084204074 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127294734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086771581 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120848991 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10624725 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087962935 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107247788 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098270544 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121182157 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121790748 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085949583 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121146825 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115227606 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087403083 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121222456 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122349122 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085059028 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119342966 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107246416 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10893913 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116108851 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118312648 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085211369 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114750816 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098651049 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114984451 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119822579 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087085378 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115148263 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107035084 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087988263 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13591095 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114935102 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116851218 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119738806 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098990613 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136607041 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121520268 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118817661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114967574 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101794005 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118932782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115605615 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098376104 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121205876 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115381554 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118050687 seconds)
  done (took 8.041120226 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122129672 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104408818 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087759673 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12327258 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119852575 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087033241 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10850374 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107692074 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088346682 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104396377 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153399801 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087457593 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119510664 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118750623 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08854171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107530536 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087563971 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119056267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083900849 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13580552 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108597768 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118944521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098767649 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119620018 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120982837 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115208669 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088169974 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107041739 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088370633 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10751216 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095087442 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108798315 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118747239 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08480609 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118718675 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087028901 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108186045 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114079027 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088027875 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115154985 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118786089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109459674 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108517047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087255187 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123251176 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107996779 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08725342 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104991668 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086809075 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106082387 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122623464 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101575688 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121673726 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120067553 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107270997 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087410041 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107806531 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08800205 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107586314 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095688504 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119822882 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107445743 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13657401 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088322399 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108167669 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099121135 seconds)
  done (took 7.875669809 seconds)
done (took 151.511774902 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099253014 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136776139 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096856712 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165465457 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.083702804 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.136109714 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.115721324 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.117965951 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.083204554 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.081907946 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.104330292 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085495715 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.168212971 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08315337 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10287642 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085556759 seconds)
  done (took 2.59469788 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.181273094 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.294481429 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10069932 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.101827195 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08801801 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.103773191 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.081739492 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.089705599 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.105921756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.081222481 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104463372 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.083242328 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.102436023 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.083960998 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.103552126 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083265619 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.080982511 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.104569803 seconds)
  done (took 2.836085817 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111857806 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143897771 seconds)
  done (took 1.113813541 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118398405 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174790746 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272699558 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153744547 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.133683964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097155279 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.154146991 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.124372068 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206529459 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127170424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1272351 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.090097122 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137349116 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.09214817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113078138 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.088712122 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.139680542 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.110272419 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091784957 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.110955425 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11542851 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103786809 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093021224 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111671696 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.188083298 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.125147133 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083343688 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.081168853 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.112685854 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111214728 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.08971354 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.118039067 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104173769 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.169585318 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.09622779 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.149805628 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.111007751 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.088421894 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112479684 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.088715361 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.114759792 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.113919162 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.099221411 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.110508583 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.082696209 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110083553 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.085324114 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.081533726 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.112369163 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.091188511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113014255 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.10988026 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.149365492 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.09197052 seconds)
  done (took 7.238325318 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.818430377 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.151754069 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087995656 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.917665903 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136872134 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101551624 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.810901797 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134374618 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232826602 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.80005264 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.128337849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119095614 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207109446 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.248488269 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898453695 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311341032 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.693533415 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.342038051 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.137792662 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.14726634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09475442 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.134679311 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12663013 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.40291105 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.110588057 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086159675 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115206205 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.117158554 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157991603 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087594264 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.110690817 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.175857913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.240705447 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203946814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.088291556 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.107306377 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087088384 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162671225 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267229725 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215296502 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.152406602 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105779483 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.085816124 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119781211 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126730196 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084118094 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.159904294 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.167672496 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.188071383 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08963329 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117789177 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094850721 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118081405 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.158604291 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083344861 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316626881 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312165902 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107432733 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094948142 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124637504 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.240876806 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108576177 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223314248 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113815193 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213108383 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.085502108 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775549932 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160596738 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.107841147 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.092802248 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.114898746 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090421242 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.117045498 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162653669 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386567654 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099154469 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111218413 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085465214 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224452401 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087296677 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.106726605 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160818814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.088089403 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116248855 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09860108 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119639708 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165103274 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.221516123 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120721963 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114826251 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090851188 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.119235288 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.088049438 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.208418277 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220105688 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.156148581 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205777989 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119477136 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.159057785 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160592201 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117285177 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164465061 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.114837835 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099515935 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119537719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217090453 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.137900917 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087476529 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110789 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0926491 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.141741226 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088119073 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.115878987 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.164272614 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479226289 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.161455071 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.083012068 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.110566564 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095545255 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.158855091 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115246297 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236151145 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118293573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161898863 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114714695 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.083270233 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.116134008 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.160412077 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119317994 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095147393 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119184707 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.093006706 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.245983222 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198933829 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120371452 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216896519 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.178083988 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.115746823 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.168670274 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115339008 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.165699435 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.094785466 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117422431 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.087303059 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.782436793 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120730015 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.093487409 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11251821 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18171994 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.08649823 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084991517 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108985692 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.082692298 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775845486 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088260159 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.107053746 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087295978 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115406388 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.0928013 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.114922268 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.089379776 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.180586603 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.206896301 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118838189 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.113865111 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.087953581 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.156984863 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.109593401 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.087816336 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.108877887 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.088695309 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.115667321 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.091308429 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108047181 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168683938 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161789709 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220794494 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574943182 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.108653633 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.088016518 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229226108 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086399819 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290953475 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115640919 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203277275 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.183822076 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.085022472 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309774178 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.16446667 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.182778724 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089666072 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16630236 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.106836428 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.091875269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.17985911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087651679 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114815819 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155999088 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099130694 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121863931 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.924084576 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087347648 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224730111 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106552744 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165706215 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.087912587 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118957058 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291864827 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087103288 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126469333 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.158776559 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111750859 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.088366371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.734289713 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.11062893 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.095644724 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116749973 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222032542 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164759266 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115041464 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095001717 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11921435 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159628805 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206031914 seconds)
  done (took 42.666712596 seconds)
done (took 57.305751153 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.282498099 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213340669 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.26593482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.167109406 seconds)
  done (took 1.891935885 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.179725991 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.123780418 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14634831 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.103736493 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.130260774 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105487321 seconds)
  done (took 1.673231775 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.377164028 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279488305 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242798839 seconds)
  done (took 1.788836342 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.254898864 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.279015964 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.336534038 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.418917869 seconds)
  done (took 2.27740076 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.206070012 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.129153977 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.103163706 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.143856725 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.176006803 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.194991024 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.148459055 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.160343383 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.134920071 seconds)
  done (took 2.33197153 seconds)
done (took 10.857323865 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.255154499 seconds)
    (2/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.157888789 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.183253476 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.108168647 seconds)
    (5/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.128706941 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.111922209 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.130799729 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098013935 seconds)
    (9/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.237747256 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124982535 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.2353496 seconds)
    (12/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.088461829 seconds)
    (13/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.264216884 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.096034493 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.234405701 seconds)
    (16/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.27836208 seconds)
    (17/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097431013 seconds)
    (18/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.185439469 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.245870879 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.124059312 seconds)
    (21/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.230756762 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.099836192 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.139855085 seconds)
    (24/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.162803162 seconds)
    (25/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.216402623 seconds)
    (26/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.154661164 seconds)
    (27/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.104912868 seconds)
    (28/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.19915864 seconds)
    (29/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113708376 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137841399 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.231227775 seconds)
    (32/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.231518346 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.097959698 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.183595772 seconds)
    (35/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.149970456 seconds)
    (36/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109789016 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.179944609 seconds)
    (38/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.110733087 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.134412892 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200164743 seconds)
    (41/286) benchmarking ("sort", Float64, false)...
    done (took 0.176056512 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.08972389 seconds)
    (43/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.109582984 seconds)
    (44/286) benchmarking ("sort", Float32, false)...
    done (took 0.155242078 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.252078189 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.114323867 seconds)
    (47/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.090040138 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.131589603 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07454844 seconds)
    (50/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.200760344 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.136659344 seconds)
    (52/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.135540912 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.237185913 seconds)
    (54/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.113235554 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.110501253 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.105651084 seconds)
    (57/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09192348 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.0989079 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.168056439 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.135837192 seconds)
    (61/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.109517775 seconds)
    (62/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120278414 seconds)
    (63/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.149626864 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.171081214 seconds)
    (65/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094174875 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114143122 seconds)
    (67/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.120644885 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.118427676 seconds)
    (69/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.195038662 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.096406555 seconds)
    (71/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139085007 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.134486674 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.083801417 seconds)
    (74/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.200560641 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094706664 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.236146642 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 0.112289133 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.116253648 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.101270212 seconds)
    (80/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.211828306 seconds)
    (81/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.142278123 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124481533 seconds)
    (83/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.14457242 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117138667 seconds)
    (85/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.099783619 seconds)
    (86/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119418904 seconds)
    (87/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087462319 seconds)
    (88/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.128721425 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.115329996 seconds)
    (90/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11443748 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.091138181 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.094063593 seconds)
    (93/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08506049 seconds)
    (94/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120046775 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.085696525 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093915869 seconds)
    (97/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.109560502 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.085049856 seconds)
    (99/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.156652573 seconds)
    (100/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.183823742 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094020659 seconds)
    (102/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116008913 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.107403279 seconds)
    (104/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.117377637 seconds)
    (105/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.127868643 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.213338352 seconds)
    (107/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.190259631 seconds)
    (108/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092246915 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.207056296 seconds)
    (110/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.177278447 seconds)
    (111/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138698599 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 0.187515327 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094275208 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.105318325 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.091686124 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.088287593 seconds)
    (117/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.177280718 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.118136611 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091172081 seconds)
    (120/286) benchmarking ("sort", Float64, true)...
    done (took 0.238781729 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.071918807 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107170617 seconds)
    (123/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175289605 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08387526 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.176636982 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.092689042 seconds)
    (127/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.106939216 seconds)
    (128/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.17601403 seconds)
    (129/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.096730818 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.073898488 seconds)
    (131/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134420096 seconds)
    (132/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.242757203 seconds)
    (133/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.16489974 seconds)
    (134/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.122211085 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12218631 seconds)
    (136/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.088546767 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.082733411 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.121446125 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076633586 seconds)
    (140/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114783619 seconds)
    (141/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.133459577 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.110206331 seconds)
    (143/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.085904704 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10291787 seconds)
    (145/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.100716517 seconds)
    (146/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.099281841 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124436858 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.095867195 seconds)
    (149/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.102822589 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.089662351 seconds)
    (151/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.159830728 seconds)
    (152/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.13436073 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.107177585 seconds)
    (154/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076514505 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.094038574 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.103068481 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.095560062 seconds)
    (158/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.103007892 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089586926 seconds)
    (160/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075276148 seconds)
    (161/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120710533 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.078782253 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.111731453 seconds)
    (164/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.076924987 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098720326 seconds)
    (166/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.12268936 seconds)
    (167/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.095029664 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.113221457 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.080378914 seconds)
    (170/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186683858 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.183202336 seconds)
    (172/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.075164264 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09477423 seconds)
    (174/286) benchmarking ("sort", BigInt, false)...
    done (took 0.250615643 seconds)
    (175/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.071431687 seconds)
    (176/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.072302119 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.118595611 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08308315 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.118257203 seconds)
    (180/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.092773976 seconds)
    (181/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.069376468 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108630568 seconds)
    (183/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.079290982 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.120260678 seconds)
    (185/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.086013973 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.106956636 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.230242641 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.082731735 seconds)
    (189/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18743304 seconds)
    (190/286) benchmarking ("sort", Int8, true)...
    done (took 0.229867792 seconds)
    (191/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.075437038 seconds)
    (192/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.076639917 seconds)
    (193/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.117036497 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.098549448 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122544805 seconds)
    (196/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.093466842 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113248458 seconds)
    (198/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.089204324 seconds)
    (199/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075487209 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114994828 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.088732483 seconds)
    (202/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.110232254 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.088417262 seconds)
    (204/286) benchmarking ("sort", BigInt, true)...
    done (took 0.253648975 seconds)
    (205/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087168426 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.113298939 seconds)
    (207/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097717806 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.120118364 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.090106406 seconds)
    (210/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079067845 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.11443895 seconds)
    (212/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090240929 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.100798783 seconds)
    (214/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.092439415 seconds)
    (215/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.187855092 seconds)
    (216/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085729716 seconds)
    (217/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.126831959 seconds)
    (218/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088933857 seconds)
    (219/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.114018849 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.09066312 seconds)
    (221/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.194245565 seconds)
    (222/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.102550259 seconds)
    (223/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11940256 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.077888782 seconds)
    (225/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088820112 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.115652186 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149173239 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.084685564 seconds)
    (229/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.080737548 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109629717 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.127975568 seconds)
    (232/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.107942824 seconds)
    (233/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103856906 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.099125053 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.073205788 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.094631071 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08444856 seconds)
    (238/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.08376011 seconds)
    (239/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.095912278 seconds)
    (240/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171761695 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083004182 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186877171 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.090493152 seconds)
    (244/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.121795642 seconds)
    (245/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.072432922 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.070926377 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136517083 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.091288027 seconds)
    (249/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.095257045 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082281017 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.113500974 seconds)
    (252/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.074366394 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.107469225 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.077002956 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.073560394 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.095980962 seconds)
    (257/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.137683919 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.110542048 seconds)
    (259/286) benchmarking ("sort", Int8, false)...
    done (took 0.196328036 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.082751358 seconds)
    (261/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.094841214 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.08535202 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.073307013 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108442894 seconds)
    (265/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.096992897 seconds)
    (266/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.106507933 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092365376 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.105698154 seconds)
    (269/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.086441997 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.081417202 seconds)
    (271/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.110206095 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.091930344 seconds)
    (273/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.17047057 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.105110955 seconds)
    (275/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.081815553 seconds)
    (276/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08576009 seconds)
    (277/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.104438819 seconds)
    (278/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.072606411 seconds)
    (279/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109003695 seconds)
    (280/286) benchmarking ("sort", Float32, true)...
    done (took 0.219233317 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.100156119 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.086370275 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.103105276 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.086742165 seconds)
    (285/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.075936912 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.178182182 seconds)
  done (took 36.636318094 seconds)
done (took 37.530431848 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098042163 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150091858 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094609482 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135463572 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.097546226 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.121792463 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.093491207 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.119126007 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.097298458 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.121623397 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096815935 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.096706695 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096368227 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118225953 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095198447 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138340528 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.097883937 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.089747855 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.112296222 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.081673757 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.112428298 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.083132101 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.108235763 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074353244 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.094334966 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.116281619 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.089283042 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120472264 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.082865895 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109274549 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.086764517 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119828037 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087883974 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.102474153 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.119807807 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.089871321 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.12452707 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.094590601 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.109788028 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.084555513 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.115357902 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087010843 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.089951832 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.115546725 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.0851361 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.10679215 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.088630824 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.121520069 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.116751085 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112089456 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.092995497 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.117229964 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095096253 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.113660578 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.083920519 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.085981242 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.107983149 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115705177 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.115317663 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093165872 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.120414921 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095115798 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.105867208 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.088404309 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.1102285 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095337108 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.094459881 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.107295218 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.094416395 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.113080104 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.083757488 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.111159273 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.083748745 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.082611901 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118397204 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.094464311 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.107120205 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.085588436 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.114864628 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.090378291 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.105966164 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088027315 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.084925744 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.109988516 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086896559 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.096861023 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.083925497 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.089877412 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.108335622 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.087721015 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.113589421 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.091335295 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.108966735 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.096080531 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.082653418 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.107506492 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08376095 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.107407001 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.086706548 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.081605536 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.108868994 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.085713663 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117225994 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.085879288 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.108121694 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097645912 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.106898646 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.091153725 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.082498953 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.107658821 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.099821239 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.117871247 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08411919 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112543969 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.084427362 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.084536155 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10718318 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084413455 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.106978099 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.084594155 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.084690865 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.109268336 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086370953 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.109475375 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.09819047 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.107127375 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.084812116 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.086099426 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.109425012 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.089243022 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.108568333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.084856873 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.108546653 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.083359733 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085931682 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.110126517 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.085961502 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115118455 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094705973 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115629754 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094809664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.093241905 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117864956 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.089514209 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.112951835 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.085028854 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.095279216 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120136515 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.09079886 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.114562362 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.092455585 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113713229 seconds)
done (took 16.206824461 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.085441095 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183772517 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.144068712 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.12037318 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.137310026 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.089963095 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.127903445 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.147670073 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092449425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143527608 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.107823638 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130018358 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147713971 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.084584669 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.083279815 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.113511982 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.085709315 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.125733931 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.1453066 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.106308919 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.143161246 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08407844 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.140322279 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13260727 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095159762 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134270355 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08567573 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.087641896 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.112286192 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.09981975 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130997685 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.087663308 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108667347 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.107723122 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128145914 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.091943316 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.108869061 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.091756745 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10777604 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08556459 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.13032596 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.106386787 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.114826583 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.090070344 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.112180464 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094136621 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.109125502 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.094208281 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.119213775 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.089352789 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.1244141 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.114560303 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114403706 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107947093 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115037941 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.100869209 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.127068705 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097265833 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116048174 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.099234535 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.113747835 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.095036039 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.132859211 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.116561604 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.121062489 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106663317 seconds)
  done (took 8.373865022 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104215471 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138346912 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103576247 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.127499438 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.085211191 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.109470459 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.086813643 seconds)
  done (took 1.717206681 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.086628872 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.129640103 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.140239634 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.143552025 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.116808141 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.143848893 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097679491 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.116281397 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.110122266 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114138743 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.11265407 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.159699351 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.093345389 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.126681273 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.121190859 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.116826387 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.12089248 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.116798724 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095793584 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.145277661 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095927454 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137150825 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.094641474 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.116607649 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.109459295 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.090689951 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1693214 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.12215988 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087385097 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.11688281 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.084863621 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151100327 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104827122 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.119207403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08577937 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129212498 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.105280808 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108313916 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.103811108 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122499909 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.110733664 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.091568275 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.119937338 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.090669212 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.12240066 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.106806884 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120548293 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.094050628 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.093918722 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139114587 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092178043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137267165 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.091340089 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.122311054 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.094598828 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120932869 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.102799719 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118683396 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.11606994 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088255905 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.139921255 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.138327112 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.110561913 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.138663704 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.096060364 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136031991 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.111189011 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093964261 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121429351 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.096238405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135455953 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.089202623 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.119794352 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.107210752 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118645321 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.121792414 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.14633599 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093898542 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.129031397 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.092944624 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.091727255 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.116905062 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119091461 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117834318 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.085508965 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115148409 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089389229 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.108171504 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086170676 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.088631911 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.109140921 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.08726799 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.114057089 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.088186542 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.113331066 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.108148786 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11843041 seconds)
  done (took 11.894277122 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.087756275 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.086383026 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.115827332 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.088432608 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.111506329 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.088141386 seconds)
  done (took 1.542081182 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.117062635 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112388856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.100893083 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115654563 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.128357893 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137570464 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111806036 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124194514 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.134630333 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105373958 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.148532777 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.120178553 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.152666531 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.097938875 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.145224154 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097184853 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.146001348 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.09844283 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.131520458 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098315771 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13851342 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.097462067 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125655447 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.113714616 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.130666968 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097347022 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126613204 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104379979 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132104757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.102307728 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.126055981 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.102392003 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.126607777 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.128374671 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.119252923 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124044302 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098547162 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.130683933 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100538262 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.128749809 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.120715641 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123795865 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.105034104 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.131354374 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.103300865 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.126014278 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.10499647 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125430484 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.118582623 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.131072134 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104735981 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.124587022 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.103570501 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.132049529 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.099194224 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130076522 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.104909909 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.14705984 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.098500642 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.126623061 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095215544 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.130942998 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103213344 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.129794106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.102792959 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.131892069 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.125047847 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099413971 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098431344 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.125896363 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.105217566 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12248951 seconds)
  done (took 9.481221108 seconds)
done (took 33.958964622 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68412029 seconds)
  done (took 1.647303664 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.824899096 seconds)
  done (took 1.793677824 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.59930139 seconds)
  done (took 18.594075568 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.47731082 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.560326821 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.986868303 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.163129373 seconds)
  done (took 3.157592486 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.971080169 seconds)
  done (took 1.958874221 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.287347601 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.238106879 seconds)
  done (took 1.503569642 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769657486 seconds)
  done (took 1.75436499 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494699316 seconds)
  done (took 2.473422283 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334320872 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.165384505 seconds)
  done (took 1.496503996 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.581682471 seconds)
  done (took 1.570616744 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.144144481 seconds)
  done (took 11.135237083 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.243404989 seconds)
  done (took 1.241387772 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.289427537 seconds)
  done (took 1.278530576 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.570458264 seconds)
  done (took 4.559067724 seconds)
done (took 55.140705475 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097131892 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.098663853 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.124959452 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.095863552 seconds)
  done (took 1.40018015 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102840428 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.118153433 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101803033 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117133741 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.103385882 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.118508658 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.096088754 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.128185107 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.094132076 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.118710511 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.094005047 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.090888786 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122417886 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.120068422 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.090598118 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.095462401 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.126541796 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.092777254 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124086015 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.093190154 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116074625 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.094652154 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123306048 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.091821166 seconds)
  done (took 3.572127436 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.097548557 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.091904186 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.118691795 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.09008181 seconds)
  done (took 1.396853287 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.096768978 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129107438 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.104173644 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.121586369 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.105597033 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.127974854 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.08974166 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.087950281 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.117253317 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.095857458 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.112802026 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.111593261 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128937333 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.096394843 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.124662276 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.085682251 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114002982 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.104149982 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122820606 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.098119612 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.115042362 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.09750428 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.087121413 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.131152797 seconds)
  done (took 3.606946068 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170705246 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125717566 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.110098755 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.119555859 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.131824062 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138341213 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.084506126 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139292675 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.084139242 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.126972322 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.088563445 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158787353 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.124395946 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.085216122 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.08420234 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.110317803 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.097134677 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124184146 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.088486896 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125267733 seconds)
  done (took 3.319786009 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.095620774 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.088724891 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.111424178 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.088389964 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122111381 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.093866508 seconds)
  done (took 1.596879416 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.09430318 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.087218882 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.116719211 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.088081847 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.117288918 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.08609834 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.110841971 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.087437507 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.086763361 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.111598148 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088472872 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.110759436 seconds)
  done (took 2.185476855 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.538276963 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.125942072 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.088807414 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11188567 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096879381 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.116757014 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.109882927 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120859154 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116168696 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.11146777 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.087240552 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.114565882 seconds)
  done (took 2.734942616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202568357 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096599925 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263377204 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.361778361 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160291988 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167416892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.284556055 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167947888 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.185282738 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147801725 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203958242 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164069318 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133268212 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182829612 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145742079 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.16094402 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179167996 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196949299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12798618 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235127648 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165826102 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145784565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187654661 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158102029 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144881561 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166597422 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099642094 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136449301 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17733031 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175496184 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181188717 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128063824 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14845039 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.472894487 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208460555 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182387423 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29479493 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143076374 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.184283769 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.148307935 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255070978 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119239663 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225003443 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132794264 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139275844 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186518463 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.331736918 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177253048 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.138866991 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149391033 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187479341 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185912578 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.186122163 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117493635 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337928488 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120216207 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.141901139 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184586777 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183290828 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196767445 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172965653 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.126046098 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187483748 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192376976 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186641521 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.149652319 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.143916532 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126643445 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169876623 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195301259 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180274507 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170585131 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.190181904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140046918 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169212601 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179948445 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160812976 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148086817 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159523021 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12710739 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129476468 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146057292 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137742592 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.17366107 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124972629 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203766995 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141118823 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.152298609 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238026564 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136288107 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162926704 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162852476 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169992566 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152930305 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.095816528 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15425015 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.158766311 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134821554 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13770223 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164858585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148434174 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.100271571 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152918045 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097777777 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158727959 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.125960014 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.328676796 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1602479 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.123969053 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133962306 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148289225 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149022497 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165754372 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182798709 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104859104 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131334398 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191588687 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156794865 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132347169 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145843068 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.20721398 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126715734 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136368416 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162992361 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185190164 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138509431 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184151234 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114450107 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134010565 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.138608863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130029649 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156369362 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.157363107 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130407149 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12277179 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217201534 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.096397705 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13534375 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169954009 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099191318 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127377947 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113552351 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135805787 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.132427301 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.111777852 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135168536 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152179962 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12815752 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151630111 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150771208 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139873671 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18570329 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105257286 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.146919097 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145793588 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.091411677 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.170353253 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181804172 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129729576 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192372079 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.16235165 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196137246 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162216332 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130951737 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175215903 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100052897 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118894735 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160850543 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128449447 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159182715 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176725054 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220012358 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161143617 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120517347 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147840938 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162136172 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163390685 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149069637 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.107882495 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158841511 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155544942 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.092683045 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123823756 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.097990134 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138386047 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129971827 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106435686 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175588837 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162256332 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216801284 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131806703 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139392568 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180268744 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124280437 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132483947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.394631552 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139938647 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.179942916 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179802002 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163035238 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139466768 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138909515 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118474124 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095345009 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.13338748 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162850943 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105873872 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133954858 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140249701 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179752418 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.325570314 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147267671 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226962572 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136830159 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217463632 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.092943743 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167138606 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166271361 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12899976 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.173956309 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105618512 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.145600876 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176173849 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144909895 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181455157 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159791475 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162589254 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187801083 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.146079531 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102361292 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147027527 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160816056 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109879437 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164289375 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14525432 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134463159 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310177869 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.097180468 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125488891 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170751529 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143936248 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172286038 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116946811 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189748893 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098185195 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139364427 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156922236 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117301689 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.113027707 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327665209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179250568 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144027306 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.31190663 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169996827 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129805927 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306332593 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186683487 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.358691354 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10771267 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141836006 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158218988 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158681565 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316921257 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176593459 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144029502 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173942367 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127233934 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.134957071 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135336771 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119066946 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149281939 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13941459 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.104027049 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.149765834 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.133398188 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173294106 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111745221 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155026796 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161309508 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148291735 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.114471879 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143638188 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197765683 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158169709 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174131887 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.118006573 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.16205546 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220087746 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096746462 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126316325 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.09879446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175873476 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131430134 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128710069 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.210686621 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195634424 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156884678 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160440324 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109229052 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.116910424 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129954183 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145838132 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196181502 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138763458 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134939297 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185974563 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141456277 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101564187 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159119087 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285742696 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141285226 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172694841 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.084362407 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280746105 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122772871 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103352548 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160165227 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169333851 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.134176722 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.144856091 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160813527 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141875879 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132247782 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136130554 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188314422 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200261001 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164949898 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168803719 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131912051 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157386786 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315080699 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173938255 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144495829 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.105069591 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161037095 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181273683 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.183201235 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.1323674 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159946382 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132282737 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158315224 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164500325 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136867368 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194252127 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130133918 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134808723 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137653438 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122762957 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128544133 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.211012302 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104073854 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17036553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15650172 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130431547 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098276836 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149088962 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156366617 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113922251 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1258769 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171215885 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.094495667 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160173532 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175774062 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131037406 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126029128 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145129731 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134283449 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113601165 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143088903 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135326269 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.135484457 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177613649 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.128168292 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174969098 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169621444 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161497856 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31267981 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139962447 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637494829 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.127428466 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180299272 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117118986 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17713603 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147189085 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164948414 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159785979 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147622724 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134071898 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148365647 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230591177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163826485 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156206612 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10219262 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143607814 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141847542 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.101865118 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151083365 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160463787 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110167824 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134961325 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155827672 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14212013 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.104116124 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138019828 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181846209 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118346627 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171635371 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176138314 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138498299 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164040648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165270963 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099558648 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.158528196 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169695633 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142259968 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147147326 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.10449566 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.133365827 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177338412 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.094484111 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157749589 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157546324 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159887753 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132689405 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132991363 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157736604 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111806432 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160853265 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130413464 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.14987885 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12749844 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132341611 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126253575 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126374071 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153159599 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148797651 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096689862 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163655054 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18018799 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.092854301 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132417363 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283146474 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156743205 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185762022 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.113578521 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134991393 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141521076 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116407268 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.152046107 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158093287 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.099077623 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132716165 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.127443265 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.137030577 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141667013 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155783238 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157497615 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344997444 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195738248 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135784907 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.251808513 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138077016 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153727713 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.092315182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.129627007 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118993461 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139814843 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146765401 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190629885 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179183894 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.144562676 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.104818962 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125342874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.095763484 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131457155 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132762771 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151003747 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157370845 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141519464 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.085265544 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142972064 seconds)
  done (took 77.058111147 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148503721 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132188686 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145921129 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.199485464 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.164975547 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.250646702 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209319237 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.236030112 seconds)
  done (took 2.573288437 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.090065988 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.141535837 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.126090685 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133035492 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.11349739 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.114053815 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.306564129 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132104436 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.113551202 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118296184 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.13257113 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.115491851 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.532648961 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117612534 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.089278403 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108919707 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.114570982 seconds)
  done (took 3.681868269 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.22645917 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.473864688 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.013853754 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.191062461 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.175695076 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.092174993 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.705841184 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092176128 seconds)
  done (took 12.062266708 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.124255573 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137691655 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.131076838 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.157096816 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.114485281 seconds)
  done (took 1.771962647 seconds)
done (took 117.949127011 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.100521291 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.124447529 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096293332 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.126929551 seconds)
  done (took 1.526967985 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.107605477 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.081394335 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106911495 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.07904486 seconds)
  done (took 1.469064957 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.192310404 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.168754082 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.40852153 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075267943 seconds)
  done (took 1.610049837 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112142745 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129499119 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10243142 seconds)
  done (took 1.446051313 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.10295403 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.098521171 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.127490637 seconds)
  done (took 1.427244304 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.101730283 seconds)
  done (took 1.196293895 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107787742 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137236806 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109894899 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136319381 seconds)
  done (took 1.590025125 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.095093108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.096290066 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137905234 seconds)
  done (took 1.426958739 seconds)
done (took 13.155859185 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104158315 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.42188352 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.387538492 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136365587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.69548995 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.407155158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.06915717 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144239311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166978161 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.088982013 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135399225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668837164 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.050694483 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.339888763 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036541961 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.340203379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.718710961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089664314 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116906315 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.090160861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.081036281 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090021429 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089409099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.11742422 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.689433788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.422578127 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.089821089 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369221578 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089133717 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12485145 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.376331042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116631571 seconds)
  done (took 16.954650078 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103635319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.181933024 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.101095343 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.119773071 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.097709521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.119264563 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.093764827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118231288 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154087047 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.118872712 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.107112713 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.117997522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.093828513 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.119140873 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.109500575 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.117980747 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.090156025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.118333974 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.090344899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.089967592 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137983915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.089427838 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118910069 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.088912893 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.117829751 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.102505269 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.119081572 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.090010353 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.11818707 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098570122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.091415344 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.118635151 seconds)
  done (took 4.651129821 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.144338102 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.187469592 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129816207 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125353893 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.172489686 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.091330698 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198180873 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145748662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183850529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.090059593 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135673233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.08968558 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.152478032 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090442267 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138613592 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.089634796 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.118465185 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.089971832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116348909 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09103403 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.108640503 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.117793098 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.089694242 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118171829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.090648437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13292942 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.090205915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.118326332 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.089592005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125790635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.092796022 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.117660384 seconds)
  done (took 4.981199824 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097747839 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.094626455 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.13492674 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.105514973 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119579542 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.093445528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.122540245 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.091665796 seconds)
  done (took 1.962699602 seconds)
done (took 29.653441141 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113429171 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.095147185 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.133525551 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.102850806 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.129122158 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.102472153 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.117746623 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.101099423 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13153031 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.098897354 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134312682 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.08880436 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.091008774 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.11734259 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.103913158 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123278012 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.103088786 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.128325664 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.103647177 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132980433 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.090960635 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.129979704 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.100877353 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132085648 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104852997 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131998478 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.106963384 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.1247254 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.090712973 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.091572794 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.131877845 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110677892 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12117272 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105350588 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.123402867 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.093998819 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.120401996 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094991125 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133153355 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102777203 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12513043 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102970508 seconds)
  done (took 5.819046211 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116274534 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.154210197 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.111938961 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.113425289 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.092237129 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.112857182 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.116302748 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.086018207 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.114872724 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.11391428 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.109527896 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081064204 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.111150321 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.076882839 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080008271 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.108233693 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.08290715 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.107212635 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080940118 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080927818 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.112572262 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.076799579 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082873777 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.111391125 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.078440449 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.113621974 seconds)
  done (took 3.746318913 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102274668 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.104549009 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.140344626 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.17513508 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.123764696 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.127123374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.098402477 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.138583067 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.106169272 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.118082279 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.092391218 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.147420486 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.107543757 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.125824312 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093059247 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.104547955 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133679332 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.090983448 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124835517 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.109832816 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13529597 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.099619032 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.139054435 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.100907555 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.118808149 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09182547 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.123169547 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.101238005 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09646963 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127680599 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095963659 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.121709504 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.091098803 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.131051263 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.096186084 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.120800999 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.109804828 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128659179 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.099373348 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.119648286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.097735273 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.094952999 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.141628697 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.158681383 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090755603 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125398434 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094078785 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.099719347 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120633897 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108949854 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129200706 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.089400874 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.122431088 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091102508 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.090417345 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.13550799 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.091709101 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.121832467 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102321844 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124587083 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101817262 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123794401 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10524327 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.120841916 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.096603334 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.090655121 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.119718466 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.088860946 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143149113 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.096163413 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162184476 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.090932387 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.120875404 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.098652067 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126147407 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096110404 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.119216279 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10486882 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127801213 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093941485 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129890632 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.092034037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.092101604 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.138238613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.091547356 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.120466724 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.090276676 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.125823197 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.093470485 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.090349661 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134504464 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.088987735 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.122476004 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.10421134 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.11908306 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.091001472 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126067161 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.094241822 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.117951776 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10391994 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.124915804 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.090635958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.129758823 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.091595807 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.092727377 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.129174044 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.094255992 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.119367476 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.094546244 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125542618 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.090242535 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12269797 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.093506258 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0920334 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129257315 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.096840949 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.124381802 seconds)
  done (took 14.198102265 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239735368 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217615595 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.191261979 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.299354544 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.10358004 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145918463 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212370652 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.126355965 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.120634893 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159675718 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.171309763 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.184852283 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.142429958 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181312181 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.172627162 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.119402062 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11091944 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.166248406 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.216037157 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.26224426 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141623257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.098615455 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161576915 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160368466 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.134170591 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.099505591 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138399651 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.102457001 seconds)
  done (took 5.708886719 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108717846 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153798739 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.096237892 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14289339 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.11650901 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121139586 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.094492591 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.122220778 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.103362157 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135524696 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.089629836 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126763729 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.097019731 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129695786 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.090824359 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.129315581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.100305804 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.121334066 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.09408464 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.0941054 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130687967 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.137571713 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.095121617 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.089296525 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130733726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.088883883 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.123747442 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142350731 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.090467023 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142760945 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.088830472 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.098626294 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134893048 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.091164245 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121081586 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.092828431 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.122538151 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09314129 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.092136414 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.119533778 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.089412933 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.112761307 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.090235752 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13669533 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.096953204 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.115037875 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.097500706 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.125638326 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.092005366 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.087749705 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.123774764 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.093612394 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.124959932 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.099583129 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.12273363 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.092936347 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09390445 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.120944022 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.098048323 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123472631 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.088215326 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.089394914 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125607673 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124302416 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100348618 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.094888386 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.119547569 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.092337682 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.125082466 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.097807839 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.122279035 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.097622254 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.088247291 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124018316 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.092791732 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127296343 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094177304 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.119734195 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.090654363 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.091057077 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.110396482 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09081385 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.107647556 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.094990014 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.089018308 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119307257 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.092865787 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.127478641 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.10752331 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.122850857 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.099128853 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.122109186 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.089348877 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.12336672 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.087721251 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.093442884 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137844023 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141143106 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.08999937 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.117979053 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106109335 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.093097916 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120261515 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.080285906 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129792765 seconds)
  done (took 12.575067533 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135026494 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.151939414 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.092888951 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140206531 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.124730017 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157184978 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.097558717 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12911169 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.092801515 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141191491 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.090409744 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.130425967 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.091533272 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.135831539 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.12626229 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.132128276 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.092818698 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.136647332 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.095836626 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169043753 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.110014407 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.141589121 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108889961 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.121576536 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097071513 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139273264 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128972636 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135984884 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10514066 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140802585 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.105533604 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.159957525 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141434225 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.096696864 seconds)
  done (took 5.335255028 seconds)
done (took 48.495729085 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.22422386 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.423919389 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.204429757 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.13884585 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.258309664 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220271565 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.212873887 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200862978 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.811158859 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.196275174 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457204619 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.786803596 seconds)
done (took 60.264143558 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.231457786 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.36466643 seconds)
    (2/2) benchmarking "String"...
    done (took 1.494899506 seconds)
  done (took 3.989155736 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.816725066 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.150106066 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465156275 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199765718 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.205399494 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.488726308 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.876510638 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.579210033 seconds)
  done (took 28.092006347 seconds)
done (took 42.261473551 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.224097197 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.251254497 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237353019 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.207584916 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.315531468 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.247272461 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.525126587 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.243242381 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.226364169 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.194090167 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.206957048 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.203514008 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.227408113 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.537822548 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.21529475 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.215868695 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.236485527 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.742438365 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.603791598 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202723502 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.216766592 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.247321639 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.220526261 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.209812852 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.224387135 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.195419306 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.196317473 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.209737818 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.701454911 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.20431748 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.201752924 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.687907081 seconds)
  done (took 190.709703315 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199106947 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.072185367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.217447024 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.249015628 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.560913107 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.399808723 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.343478913 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.695517488 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.215642298 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224734963 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.385542131 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.195606685 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.437182179 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.170314844 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.229276582 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.281252592 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.411330263 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.459653058 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.231492223 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.347433176 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.225206856 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.258106029 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.185968376 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.353350886 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.252089749 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.223239381 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.233360893 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.222880056 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.390434299 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.342017034 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.234829349 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.248281092 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.799046084 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.052206779 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.203245252 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.227868021 seconds)
  done (took 148.90359155 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200285274 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200947388 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200886953 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.232830646 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.200952119 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.76441547 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765298463 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.72361394 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.433426716 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.54180107 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.491828104 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.20208367 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297108311 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21335693 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198929636 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218238883 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.229108889 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.203313072 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202360859 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.766061151 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.215869239 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.270109067 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.375099428 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208997287 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.234118662 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599754061 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20138988 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.235032836 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.530244386 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.245920463 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20374706 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.578271373 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.203565059 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.67377251 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.314742499 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203474259 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232630987 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202447479 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.483285603 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.202263296 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.201602474 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.205614761 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.876781413 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.2012566 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.759904113 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20280614 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15645235 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.202027925 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.201785653 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.33577979 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.873047105 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218403287 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.2010533 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.204966814 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203430151 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201506484 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202484812 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233350025 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.311403946 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314097443 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.203678695 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.205119038 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232346133 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.202032344 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.282183101 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.197093561 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.379695279 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.276407859 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.304210319 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.754422541 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.202791092 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302164345 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323881433 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203773057 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.202775001 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.203200774 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.202834198 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202197954 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.312758506 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202895429 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.59977289 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.37056015 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.21080332 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.522698921 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.302232979 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202799736 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.596683946 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203396728 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20246935 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.924764466 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.294580819 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202845384 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203434218 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203311955 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602479415 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198233615 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.754451916 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.438528567 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204431863 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.573706994 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.204673413 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.606959951 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.718246765 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.853370557 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202979857 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314669395 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.371591907 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.211134012 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200830711 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.490384128 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202821119 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.262563217 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.195384252 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.598637352 seconds)
  done (took 364.784766598 seconds)
done (took 705.531343167 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.821706945 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.812443439 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.920362817 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.80694382 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.767002042 seconds)
  done (took 10.253938835 seconds)
done (took 11.38283405 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385582759 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.385254988 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.259377306 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.38783228 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233141015 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.402785068 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.362761807 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.223582962 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301973563 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.280389122 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.30225499 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254057185 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236423547 seconds)
  done (took 18.141781522 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522087935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.523319949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263833237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.526070825 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.238511037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520274011 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403477989 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.419027079 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417029554 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215956706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.216365831 seconds)
  done (took 16.394409075 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526074035 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522414206 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27065881 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.529503223 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245109122 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52991654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.415562003 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.421113822 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431358089 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.218323791 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.215669712 seconds)
  done (took 16.453975156 seconds)
done (took 52.11924681 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212295716 seconds)
  done (took 2.339873105 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.251386246 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.411021639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.232410976 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220790009 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.215100777 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217670683 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.222865954 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215833654 seconds)
  done (took 11.116754376 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.213141867 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213886827 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.212679565 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.212631677 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.209900637 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208757649 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.210545166 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210145031 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.210236473 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212909257 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211250096 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211340392 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212945207 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212654642 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.210614256 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.20885996 seconds)
  done (took 20.512494856 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213757214 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210619325 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.210290094 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.212369457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.21209794 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.210670086 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.212282876 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210185482 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210898528 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.211615841 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212204691 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.211892971 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.211162102 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.211087412 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.210736072 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.211834586 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209941282 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.209451418 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.214078233 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.210318465 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.211721186 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.212655461 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210884335 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.212506033 seconds)
  done (took 30.207671387 seconds)
done (took 65.307091056 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.829935709 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.823089426 seconds)
  done (took 6.783584222 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.272704958 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.27159486 seconds)
  done (took 3.677501655 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215849783 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.21484319 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.21517011 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21529861 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.214797576 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.214199684 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21435385 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.215089185 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.214829277 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.215602612 seconds)
  done (took 13.282224482 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.216424489 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.212772227 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212871204 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215717708 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215475154 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.213130473 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.214019429 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.21476204 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.213634518 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.211979271 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.21687279 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.211627133 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.214945083 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.213159821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.217761016 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.212769518 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21347271 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.214415143 seconds)
  done (took 22.988154674 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.230243112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.238841438 seconds)
  done (took 3.60118008 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.34510476 seconds)
    (2/7) benchmarking "second"...
    done (took 1.25520729 seconds)
    (3/7) benchmarking "month"...
    done (took 1.322620159 seconds)
    (4/7) benchmarking "year"...
    done (took 1.311922637 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.253019928 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.234793775 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.256611239 seconds)
  done (took 10.111824547 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.218563585 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.410458689 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.504743533 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.811402919 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.219961118 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.222553549 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.136131712 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.222928588 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.225050149 seconds)
  done (took 14.104703329 seconds)
done (took 75.682464921 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.218011532 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.211795057 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.469804493 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.218230473 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.228952389 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.555533681 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.227230327 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.353463744 seconds)
done (took 37.619904399 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.227342712 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203434921 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.958809065 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213286824 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.263197813 seconds)
  done (took 18.772717715 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.228506615 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544645526 seconds)
  done (took 4.907918511 seconds)
done (took 31.045611481 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.217282498 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218258087 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.215073088 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.218308384 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.214652034 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.217726294 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.215572499 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.216379996 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.219171954 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219405696 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.218433727 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.221766147 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218640725 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21741113 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215727046 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219713913 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.217958809 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217645324 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.217659509 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22218199 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.221099485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.220067203 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.217689592 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.218306305 seconds)
  done (took 30.370960872 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.221546513 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.219600225 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.219116547 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.219502423 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.216336356 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.220009321 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.218973058 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.215842748 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.220948819 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.220650248 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217547975 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.219199086 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.222184287 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219967922 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220877689 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.217892763 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.221912296 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217988387 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222170268 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.218919189 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.222083852 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.218675343 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.219426106 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220067207 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.217907096 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.218472318 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.220167222 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.217204816 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.219737968 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21727654 seconds)
  done (took 37.719133718 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.226164059 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.221325185 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.22032968 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.219692445 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.222893411 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.221647551 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.222531382 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.221963415 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223259935 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.2224871 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222431729 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.220249382 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.221458002 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.222916648 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.222564015 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222588422 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.222711848 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22223499 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.222737759 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22339704 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.223929232 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222609629 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.22355285 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223832067 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.223380737 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.223674602 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223602333 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223226513 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223971742 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.223110162 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.223714393 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.224211723 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.223628384 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.223409226 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224015229 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.223770426 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229307753 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.227395191 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.223949744 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.223360489 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.224704289 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.223757333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224905309 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.225523836 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.223970983 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225138427 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.223091676 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.223650918 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.224041921 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.224101029 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22412706 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227745353 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226028335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.224403462 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.226174161 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225536381 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226075896 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.224911966 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.225053243 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225033594 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.225659295 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226160741 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.226147737 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225486573 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226824934 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.225567063 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.223716635 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227250193 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.225004839 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.225938941 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.225211337 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.22760858 seconds)
  done (took 89.276146198 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.225876398 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224049657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223221373 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223788343 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224758801 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227372055 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.225601134 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227457994 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223815024 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.228208691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227853132 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.223645498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224511045 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227426839 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226587317 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224289465 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.22614613 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224443225 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.226726668 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.22688236 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228725562 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2258046 seconds)
  done (took 28.110496354 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228016389 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229252905 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225380778 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229881768 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.226607134 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228302801 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226518566 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230526958 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230113617 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22703393 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225177137 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227397757 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228274569 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227158575 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226844509 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228157784 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227942042 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228090415 seconds)
  done (took 23.245209798 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226291203 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.226292709 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.227511345 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226134973 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.224843475 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227162393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226594532 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.227958118 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.22753672 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226173376 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.227507984 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227534855 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228909586 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224775445 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22835231 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22733997 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.228040044 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227197187 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228776689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227550538 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227484342 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228201596 seconds)
  done (took 28.143072387 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229134304 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.23088266 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22575516 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.228053615 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.226243928 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.228503618 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231531023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.226878431 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229581041 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.228727385 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22782119 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231794709 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229966825 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.227873099 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.228362158 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228287318 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231314231 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230209549 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229622984 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.229134991 seconds)
  done (took 25.726730721 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231911101 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233630671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233044225 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.23295966 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234251056 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.233163555 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233168506 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234044476 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23492234 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234434441 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233752883 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.233527809 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234419613 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235339658 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235212239 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23422285 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234572683 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234328803 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.234306543 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.234130785 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.23623129 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234742825 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234881193 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.233687436 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.236338434 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235593734 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.232687241 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.234504675 seconds)
  done (took 35.705414909 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233277669 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232109529 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.229514665 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229454367 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230238312 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.230953248 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230152866 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.663290855 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.235677177 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.231629283 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231963242 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232782745 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23386678 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232204551 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.234065454 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.23242561 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23128289 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229814046 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229815605 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230204762 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23465086 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233447321 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234066157 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233490645 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231486113 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.236191829 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231011907 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231659661 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234524934 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231428634 seconds)
  done (took 38.548234401 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253972016 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255190624 seconds)
  done (took 3.660908551 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.234125743 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236318229 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236748342 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23282251 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234781648 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.238050414 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.235999447 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232036841 seconds)
  done (took 11.030750001 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234228325 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.236694316 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.236526281 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.235015116 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.236511239 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234871406 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241489748 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.251465881 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.236939473 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.237313198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.240185688 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.237815961 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.236518865 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237051399 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.235329607 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237198028 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237069754 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.236532866 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238900175 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.236068894 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236539557 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237277752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239120659 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23564516 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236961509 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.244335056 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.239843895 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.238458667 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235377973 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.239026841 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.237343597 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234241926 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.237360995 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.238722919 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.240148796 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.236485039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245692617 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.256002182 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242188707 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240419641 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23788486 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.235359476 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23815456 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.238355084 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24037735 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23781337 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.240115735 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236670117 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237258029 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242412622 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.240073366 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237332319 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.235249168 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241565352 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.240241274 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24591711 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.259715 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243140021 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.250682916 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.247972942 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.252664363 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.2605232 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.240679403 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240214775 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.252217146 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.260676378 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247609648 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.25221512 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236504398 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240865934 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.245581469 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253298785 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.261777888 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241350216 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240868405 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241307134 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240918959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240913491 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246870648 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.258658606 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.240695401 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.23998506 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.250111866 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263203338 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23899302 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.239975949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.241365259 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.240989394 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240981559 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251463839 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.261417696 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.240764043 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239237719 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241657008 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.241489649 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.241508899 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.24079053 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240905688 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.240788856 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.242086672 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242171346 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.245489044 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.244526151 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242441326 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241762769 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.248284721 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.243012808 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241206998 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.247033734 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241050482 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242175096 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.244634801 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.248400105 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23785804 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24403337 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243257102 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.242437916 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242500517 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242765595 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243862766 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252138772 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.264707468 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.244210789 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242133471 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247600866 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.250993189 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24354473 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.246946848 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243712793 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240360682 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239242901 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243901581 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241594539 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.243542044 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.242995991 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.243650979 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242380046 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243847972 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242568723 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.24557177 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243276896 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244111891 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24439561 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244430929 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.243961144 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245890732 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.250688439 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.245315667 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246129486 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245045311 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242266958 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244557638 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.24642018 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245649258 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.24345528 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24550786 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.247637483 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.247130048 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.246436912 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246657555 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24632655 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245464252 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.250120119 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243954577 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.248318069 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.248217103 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.241984728 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245871142 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245279493 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.24476639 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.24574763 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.243797925 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247337702 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.25361908 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.24530118 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.244514937 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.248267204 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246049939 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248036159 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247587074 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.248358279 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.250591427 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.247789134 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253473542 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.250096869 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249001937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.249567805 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.246702634 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.248066176 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.249052582 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.251703769 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.248991411 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25769586 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.270282765 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.248712768 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.253582042 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.249800201 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.252554916 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.250536608 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.249059858 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25119965 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248813412 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.248938284 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247932359 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251187774 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246858291 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247420709 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.248811273 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249461987 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248719352 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250029907 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.250079738 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.248774923 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245309424 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25009166 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248914009 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.251415815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245662987 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247289628 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.249587359 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.249790675 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249280937 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254155634 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246639396 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248889392 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250984227 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.251633562 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.250021749 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.253585667 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.252437006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250729723 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259197708 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.264172385 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250624164 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.257576014 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.269950783 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.251634371 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.254312211 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.252241131 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.249156902 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.255800507 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.25557312 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.252191403 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.252981153 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.254131423 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.253913579 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253966071 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258569924 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.252060374 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.253149725 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.254165774 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.254105648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.251025864 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.253065545 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.252928509 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.254641346 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255588708 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.255704431 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.254027568 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253279971 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.253999464 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.252881705 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253442175 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256567709 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.257667027 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.255836143 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252623464 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.253770356 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.253926565 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259198745 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.253058411 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253043854 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251548181 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.262988221 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.27345029 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260268831 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.257021139 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.253359812 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259087016 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.257028649 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.260188833 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256119758 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.255744819 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.255516777 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.254914194 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.252637037 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.256098736 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.257743664 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256221338 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.257234977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256585022 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.255923167 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252486794 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.254225468 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.25466045 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25618826 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.255055537 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.256471261 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.255318045 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256457947 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.255377578 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.25541041 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.263446527 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.271329977 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.256273599 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.253342848 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.256313548 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.256437334 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.25570258 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.256864741 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.260600139 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.26575703 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.259782318 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.260366608 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.258948483 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.261879048 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.258460743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.260315359 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257809355 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.254977904 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.254949439 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.257009226 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.258969787 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.265199154 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268670559 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.259985884 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.263087986 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258586382 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.256963366 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.258421015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258299453 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25828742 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.258203437 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265492526 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278690984 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.2643378 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259287214 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.255620847 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.258662499 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.259255917 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.257565777 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261090295 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.260984617 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.260015774 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.260932548 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.25862383 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.259342481 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.260141802 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.259823273 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.255921418 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.258963671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265312017 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273095007 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.265378175 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.26053009 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.266252805 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.260352607 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266598169 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.275865845 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.261271664 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.26120968 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.260644124 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.261959156 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.259769231 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.260702427 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.261661048 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.2616633 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.266675124 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.259291428 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.262344919 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.261774748 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.261142921 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.261405786 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269875252 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286086766 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.261937672 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262750816 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.257996114 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.260547737 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.266841892 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.261993269 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.260386578 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.264402082 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267905985 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26825612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.262041065 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.263374187 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.261812717 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262838626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261222129 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.262711173 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.262985731 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262971448 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.263190778 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.262665374 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263480208 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.26350036 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.260915992 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.263917158 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.263447333 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.273010591 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.264972307 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.263112807 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262088692 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.2629742 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.261748552 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.260471788 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.264595116 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263538196 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264173472 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.263308609 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266777126 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.266578265 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26551917 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.261230382 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263850671 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.264405848 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.263741267 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265086449 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.26370029 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.264470132 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.266260085 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.26492691 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.264129307 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.262476251 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.264590735 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.264256582 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.26527139 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266345216 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267513409 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264214862 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.261236009 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.263653645 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2664296 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.263969613 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.265706087 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.272938041 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268676424 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.276975138 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.275680414 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.271506275 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.264847428 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268770114 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269330725 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.264375712 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.265834535 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.266554098 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.26656824 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.265751246 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.270000679 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267028813 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.271273349 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266895675 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.266770633 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274795768 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.287715282 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266270102 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.269135778 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.272805122 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268098596 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265352876 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.267889967 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.266303426 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276037095 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.283860131 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268024879 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.270017931 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.266793775 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.270377967 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.272896791 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.26704548 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.267540886 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.264951362 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.267097593 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.268214181 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.26811686 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.264612356 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.267486453 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.268154116 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.270770519 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.276036769 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.265848932 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269760071 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.269714484 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.268984174 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266496363 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.268730052 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.265580231 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.266512593 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267674887 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.269010293 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.26900141 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.272070371 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26906545 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.268714922 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.271291561 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.268750762 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.272648724 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27648231 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.277469183 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26653676 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.268281576 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.269424923 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.270206328 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.268864258 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.270171906 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272249701 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.271603803 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.270854039 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270955871 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.271260157 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.272973935 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286693206 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.293336546 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270988475 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.269634105 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274196049 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.272342642 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.268696452 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.271258897 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272860485 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.274484815 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.279786821 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.271960686 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276657128 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.292781092 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.271824555 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.277029053 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.274729663 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.281213405 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.273373531 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.272919784 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.273813589 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.276595396 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.291066476 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.274687277 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28162583 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.303732479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.291010187 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.273895609 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.272976284 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271313376 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274118931 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.273463972 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.272824103 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.274026235 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.271568957 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.27240559 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.273394548 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278976838 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.274864145 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.275752423 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.272920674 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273409814 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.272740222 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.268964519 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.273380811 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.274407306 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.273899679 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.273805151 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.274305598 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.274297363 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285055121 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.298408488 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.274633102 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.273732886 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.273099711 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.276087395 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.27719985 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.28529018 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.283432338 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.275087749 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.27524806 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.277083121 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275750451 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.272975626 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274276042 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.274502715 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.27589339 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.273207884 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.285937619 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.300995253 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.27815217 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.27610661 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.276536994 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.274943187 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.274849932 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.275460174 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276361604 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275545013 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27803627 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280303746 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.275350225 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.275223106 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.279401597 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.283873268 seconds)
  done (took 750.867019531 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274934347 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27385053 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27357326 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274042627 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.274774233 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273066261 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274837419 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273527288 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.274819121 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.274270052 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.273048329 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273790662 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.275592619 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.274652263 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274670119 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274837942 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274290744 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.275475713 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.27390837 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.274545141 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.275097967 seconds)
  done (took 27.947869608 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.277426748 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.27494157 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.274120076 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.277054038 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.275257369 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.276783789 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.275531019 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279342081 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.277875018 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276437739 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.277660426 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279098016 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.276542026 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.276480697 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277113058 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.279855513 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.278440097 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276298412 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.278734304 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.276059926 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.279798451 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.276156474 seconds)
  done (took 29.284989714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.279754492 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.280099044 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.280202038 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278637026 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.278932505 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.276796958 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281379193 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.279738435 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.280400046 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28040137 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.279352784 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.281063378 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287758949 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.285744046 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.281122639 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.279830701 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.423883825 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.280480045 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.28323382 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.280577327 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.278385002 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.285816957 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.279377242 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.278841828 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.280226577 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.282192242 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.282151106 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.281035019 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.281631992 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.281648131 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.28604769 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.281684904 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280444699 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28319371 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.280527763 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283629435 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286854714 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.281822362 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.280509712 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.281227401 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.291121199 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.305230043 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.283075108 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28674498 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.282999243 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.283351452 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.28542091 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291180393 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.280170524 seconds)
  done (took 64.175845369 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.282377507 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.282156771 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.280223048 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.282930457 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.283039116 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.282805716 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.284673325 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.281500103 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.280190889 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.280964502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.282115329 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.281717992 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.280195113 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.283058507 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.282327496 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.280482916 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.27995065 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.280275466 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.279931573 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.281594101 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.281334082 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.283516835 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.283688769 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.282300078 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284144877 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281269307 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.281383087 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.285459148 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.281703462 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.281970551 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.285244373 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.286893477 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.284528318 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.280932175 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281864375 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.284399105 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.284696854 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.282486541 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.284210043 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.282819688 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.283521897 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285446208 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.2838302 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284467402 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282254428 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.282563469 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.281432369 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.281957932 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283335282 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285667366 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.285765492 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284038744 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285835701 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.281220188 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286168307 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.286816946 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.284135792 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283850143 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.285450389 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283213348 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.28356456 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286363907 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283823504 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287444238 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.286723745 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.284027187 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.283688206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286755053 seconds)
  done (took 88.454323847 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.28677126 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.287034575 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287235683 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286089595 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287567621 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.287162761 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287509378 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.287609241 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.288591522 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287247485 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.28810019 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.28803392 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287590419 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.28794548 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289001174 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288568655 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287542265 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.289221794 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.28992014 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289627793 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.289003364 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288017924 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.2891816 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289389291 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.289406599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288942752 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.288247534 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.289482579 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289032068 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.289573117 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.289625903 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.289496161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.289494294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.289802964 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.290774385 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.290309593 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288644126 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288906688 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.288469112 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.288714677 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289747051 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.288648372 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2885424 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288805088 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289316041 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.290463181 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.290498438 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.28989967 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.289870863 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289123672 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.288036809 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.289918594 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.291717099 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.29016123 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.290177347 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.290268217 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28938685 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.289876048 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.289643537 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.291248406 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.290366844 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289035218 seconds)
  done (took 81.115586335 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.290762258 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291091638 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.288439719 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.287097785 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.29004668 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.287997522 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.289915875 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.290921515 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.290876169 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29131036 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292637951 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.290495216 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291743683 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291630349 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.290591461 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291100305 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.290619543 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.291384006 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.291151939 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.289528296 seconds)
  done (took 27.008925103 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.289040195 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290790461 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288630336 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288134668 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.290687115 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.288938175 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.292147195 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.291794836 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289731068 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293557468 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.292306226 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.292592443 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.289170379 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.291052099 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.292661154 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.290954337 seconds)
  done (took 21.851788603 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.291310075 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.292382092 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.294058343 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.293213388 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.292157703 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.290987392 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.29357885 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.289619402 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.291562614 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.292042938 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.292093868 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.293151702 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.292884472 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.29390377 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.291900513 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.294350115 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.290662408 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.291349982 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.294009933 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.294480119 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.292426257 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.292359391 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.294061785 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.29372988 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.292926388 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.292628094 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.292469277 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.292431876 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.292905869 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.295562107 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.292779666 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.292932979 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29181256 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292101082 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.294563731 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291989143 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295333421 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.295209776 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.295565753 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.29557995 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295507763 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.292121334 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.295412291 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.294744294 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.292864079 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.296050632 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294539868 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.29350013 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293092429 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293781869 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.296763669 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.296402153 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.296251857 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296313467 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.295631971 seconds)
  done (took 72.345529002 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295667749 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296914231 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29483027 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.296003678 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295416164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.291918934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.29674739 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.294069208 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293466554 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296195307 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29303624 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297288227 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294094679 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297635348 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.295501862 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297394879 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295156748 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.295362471 seconds)
  done (took 24.520880951 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.29602219 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295377653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29831198 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.295474632 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.296407106 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297067526 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.295870464 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297666335 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297652563 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.297315187 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295826823 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.298742112 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296966336 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.299072598 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296846628 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29653595 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298966555 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299536503 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.296047926 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.297114902 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.300591159 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298458452 seconds)
  done (took 29.748477695 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.298592106 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.297961675 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.297771663 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.316641888 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316515167 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320151389 seconds)
  done (took 9.054621382 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304502404 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30078998 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296106819 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299070812 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300343741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296855416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296982021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296875521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298940225 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29820911 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297352924 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300569214 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300781021 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297549055 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297517503 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299573502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297032012 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297143889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297636587 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299630112 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297706287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299869533 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29883476 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297312339 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298536022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298854022 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301059738 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300036611 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298415792 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301508946 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301560754 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298822759 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301206392 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.299740408 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302854251 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301656297 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300292501 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300165706 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302285741 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300082064 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302119116 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301402381 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30109322 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300025899 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302166686 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29928058 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298581711 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301030322 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300647428 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303017669 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302494477 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29961857 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30367244 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303826804 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303237086 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304508992 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301272323 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301335613 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302791516 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300501404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301743397 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30299183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300752444 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301347969 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304238162 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301348161 seconds)
  done (took 87.053462672 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2999215 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302144416 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303282427 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302807639 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302349799 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301128004 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302645788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.301748899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301884428 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301630855 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303830932 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302448218 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30403729 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302507297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302251519 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301687141 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302748421 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303303709 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302321631 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305057704 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302007838 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302648909 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302051474 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303329333 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303445882 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30527297 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303922189 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303887716 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300717565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302903372 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301445395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303338998 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303194888 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.304456923 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304045549 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302001634 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30346383 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302439041 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301727108 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305486512 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302517941 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304001189 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301466462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302512749 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302272396 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302437605 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303067494 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303307543 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304524645 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303379091 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30483192 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304082167 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303313756 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30414711 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304343573 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304534023 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306140202 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305897136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305574939 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.307894971 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306123183 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304743224 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309211859 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304246723 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306584266 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306217622 seconds)
  done (took 87.242675058 seconds)
done (took 1753.346816972 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.469909027 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.422970547 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.307198795 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.336632919 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.299505582 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.327546915 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.312975774 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300131149 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.306607304 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.30679718 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.306146021 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.492899039 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.360405792 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301442037 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.306712684 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.401182171 seconds)
  done (took 42.774458403 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.335225747 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.313193342 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.42649276 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.326422714 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.333721 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.496565071 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.363858399 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.312462388 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.485680449 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.351804887 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.866707016 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328420914 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.311446489 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.422860545 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.323056225 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.495797149 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555791275 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.867916754 seconds)
  done (took 30.132938346 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.760380587 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.304674091 seconds)
  done (took 9.281904785 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.331555558 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.311492314 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.314201802 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.310371649 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.302679134 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.297315859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.311845764 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.309104485 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.983613064 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.430677094 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308266913 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.322826722 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.332707002 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.313768903 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.311822302 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.350264995 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461086189 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.308229012 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.310607542 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.317614079 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.312351866 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.416752005 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.348136937 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30996107 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.436322054 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.991422542 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307990628 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.319708718 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.444806427 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.304825533 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.311202481 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.313850181 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.313809413 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.197609438 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.814787015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.299881796 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.331361641 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.315584555 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.311303295 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459340866 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.308887966 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.321327378 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.307161594 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.796216488 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.443881522 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.422738209 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.544589888 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310150961 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.31791485 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.3777763 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.314282019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.318442308 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.360032087 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.126084675 seconds)
  done (took 110.614535614 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.314598497 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.698623686 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477788149 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317302812 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.014546827 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.884599821 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31580129 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.59492799 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.340033348 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306336741 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.59373155 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.804692299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318542447 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.357642913 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.49782583 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.329523092 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.308531742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.982724189 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.317360199 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.307582693 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.813589539 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305065257 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302823282 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47189487 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.347026757 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.762191079 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.674598856 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.649030558 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316622213 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.304008906 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772978981 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.325208216 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.384327723 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302729295 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.573178496 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.659818107 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638192806 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.303233917 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.306897779 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306690793 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.334377076 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75746573 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64634152 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303676244 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.304508641 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755301926 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.305465528 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.311983478 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.315920755 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509655823 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.927831284 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304855205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.677194456 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304358498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.593157657 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.403973847 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3245329 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.794064038 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.305603793 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.340152749 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.319123525 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.310220682 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.313370642 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314906089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.309583042 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.653154462 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.395724225 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.309277983 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.65611661 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764002111 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.319412154 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.829193791 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.189259635 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319978333 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.36521856 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311211342 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.853292572 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.794988206 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.316002779 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306992316 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.644640643 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305792882 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.591973442 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320115003 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.308966209 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821771094 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.30900264 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.328670131 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.325854454 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.307231008 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.001072696 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.311755562 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.575440195 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.347182937 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.313405408 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.312824127 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.346376872 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.307746368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.309590501 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.319890154 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.833604165 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.323839541 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.430625996 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325716804 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.308192684 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.315517582 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.31276129 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.314822461 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.530793988 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.880826505 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.323507798 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.315930382 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.313828473 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.315869231 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.487092738 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.314388285 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.617693841 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310224425 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310094118 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.320599654 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.921680032 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.347344373 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.309783532 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.312728465 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.22612532 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513021602 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.330796317 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.328603175 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318108155 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32550938 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.541913227 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328039396 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.369800689 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.318331728 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.019645621 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.333473137 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.344755318 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.601667767 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.308741692 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.192915885 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.327303055 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320569472 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.597103929 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.576466608 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.523698389 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.310000219 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.323684371 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.989812505 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.326814544 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459757762 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.335399258 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.357023894 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52012844 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.458156353 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.318467282 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.896434448 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.318819761 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527926937 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.312229328 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.609086363 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79822429 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.328039085 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.322223675 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.024106177 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.039276219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.997937674 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.321803037 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.588991335 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.256350429 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.797802059 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.32054978 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.319457436 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.814544479 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.321161732 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320447572 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.322148647 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.318767808 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.471011658 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492646751 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.478784615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323673546 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.769403147 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326257403 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311838516 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.313366128 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.319261004 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.669876968 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368784833 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.321053335 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351729594 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.322218693 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.325711063 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.790000465 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.215048833 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.311986841 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.473634979 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.947699662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.327634663 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.32198921 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.052650078 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 7.003514438 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.82420746 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.372859978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.627836384 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.322471889 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.358999167 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.926737329 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402336338 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786608351 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316273566 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.315079246 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.913091229 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.329735059 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393810083 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.319103484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.320081874 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847886192 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330763755 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.325108386 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.628340586 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.342130786 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.561712098 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.319623695 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.350047557 seconds)
  done (took 1104.676954723 seconds)
done (took 1298.697964065 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.323727372 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.321786507 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.310964012 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324355923 seconds)
  done (took 26.514642557 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.343027164 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329943168 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.330526215 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.329540855 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335183627 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.330272271 seconds)
  done (took 9.233874687 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.351278369 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.32396673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.324547687 seconds)
  done (took 19.235413289 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.535807967 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.608723949 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.654089116 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.503245176 seconds)
  done (took 10.538641523 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.330707033 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.331483036 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.331041543 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.331834093 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.343850858 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.343582359 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.333519947 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.33353924 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.345514653 seconds)
  done (took 13.259724614 seconds)
done (took 80.01852028 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.328178353 seconds)
    (2/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.325514033 seconds)
    (3/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.764201135 seconds)
    (4/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.742232868 seconds)
    (5/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.382235489 seconds)
    (6/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.895480896 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603761399 seconds)
    (8/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.359111613 seconds)
    (9/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.32187341 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.364485156 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.309612607 seconds)
    (12/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.342880641 seconds)
    (13/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.71501913 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343930684 seconds)
    (15/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.309944552 seconds)
    (16/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.974924475 seconds)
    (17/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.450113667 seconds)
    (18/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.145518612 seconds)
    (19/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.342107814 seconds)
    (20/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.409101744 seconds)
    (21/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.316555248 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.443129317 seconds)
    (23/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.341784543 seconds)
    (24/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.631878917 seconds)
    (25/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.314081779 seconds)
    (26/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.190626418 seconds)
    (27/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.548998792 seconds)
    (28/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.841674225 seconds)
    (29/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.403203528 seconds)
    (30/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.829982307 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.318491898 seconds)
    (32/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.331384564 seconds)
    (33/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.453093782 seconds)
    (34/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.311966316 seconds)
    (35/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.348345071 seconds)
    (36/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.417750139 seconds)
    (37/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.32750048 seconds)
    (38/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.353835856 seconds)
    (39/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.294440227 seconds)
    (40/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323871889 seconds)
    (41/286) benchmarking ("sort", Float64, false)...
    done (took 5.62501545 seconds)
    (42/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.344447815 seconds)
    (43/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.334680313 seconds)
    (44/286) benchmarking ("sort", Float32, false)...
    done (took 5.32812017 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.730420532 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.457904421 seconds)
    (47/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.539270374 seconds)
    (48/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.6165365 seconds)
    (49/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.3124194 seconds)
    (50/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.125706858 seconds)
    (51/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.737105775 seconds)
    (52/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.683163359 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.916378665 seconds)
    (54/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.347446084 seconds)
    (55/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.879589753 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.38586183 seconds)
    (57/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.41028521 seconds)
    (58/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.208080021 seconds)
    (59/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.363923415 seconds)
    (60/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.941393673 seconds)
    (61/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.709545803 seconds)
    (62/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.320755957 seconds)
    (63/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.186585445 seconds)
    (64/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.738116201 seconds)
    (65/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.577042699 seconds)
    (66/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.326995342 seconds)
    (67/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.4383937 seconds)
    (68/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.324187851 seconds)
    (69/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.473668989 seconds)
    (70/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.348976051 seconds)
    (71/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.32213048 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.206520138 seconds)
    (73/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.546962269 seconds)
    (74/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.520958201 seconds)
    (75/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.355343618 seconds)
    (76/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.316276534 seconds)
    (77/286) benchmarking ("sort", Int64, false)...
    done (took 5.522677655 seconds)
    (78/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.172330359 seconds)
    (79/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.333646304 seconds)
    (80/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.308643924 seconds)
    (81/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.637208444 seconds)
    (82/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325109549 seconds)
    (83/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.112401225 seconds)
    (84/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.387825194 seconds)
    (85/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.330190391 seconds)
    (86/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.374969695 seconds)
    (87/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.751531673 seconds)
    (88/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.333058826 seconds)
    (89/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.732428771 seconds)
    (90/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.404130385 seconds)
    (91/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.355288326 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.325478525 seconds)
    (93/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.384557363 seconds)
    (94/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.416103529 seconds)
    (95/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.340203737 seconds)
    (96/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.461278328 seconds)
    (97/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.340051162 seconds)
    (98/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.329528317 seconds)
    (99/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.535720537 seconds)
    (100/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.224249536 seconds)
    (101/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.685564639 seconds)
    (102/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.356893616 seconds)
    (103/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523657939 seconds)
    (104/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414689774 seconds)
    (105/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.961273052 seconds)
    (106/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.318286942 seconds)
    (107/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.43420145 seconds)
    (108/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35721104 seconds)
    (109/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.318075852 seconds)
    (110/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.327604947 seconds)
    (111/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.570039015 seconds)
    (112/286) benchmarking ("sort", Bool, false)...
    done (took 1.842063369 seconds)
    (113/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.355733993 seconds)
    (114/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.588618024 seconds)
    (115/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.597032071 seconds)
    (116/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.099298888 seconds)
    (117/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.312374787 seconds)
    (118/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.146897764 seconds)
    (119/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.608269985 seconds)
    (120/286) benchmarking ("sort", Float64, true)...
    done (took 6.33183867 seconds)
    (121/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.568472144 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.270291434 seconds)
    (123/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.313405181 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.280864484 seconds)
    (125/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.729910851 seconds)
    (126/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.455229325 seconds)
    (127/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.341574152 seconds)
    (128/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.817475207 seconds)
    (129/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.847400085 seconds)
    (130/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.3114634 seconds)
    (131/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.341800656 seconds)
    (132/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.333093415 seconds)
    (133/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.313403458 seconds)
    (134/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.609717167 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.629174185 seconds)
    (136/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.920179986 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.09642984 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.352304502 seconds)
    (139/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.286810088 seconds)
    (140/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.328211093 seconds)
    (141/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.645275411 seconds)
    (142/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.314383366 seconds)
    (143/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.711578307 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.719788222 seconds)
    (145/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.518257034 seconds)
    (146/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.43366312 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.355431058 seconds)
    (148/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.807179072 seconds)
    (149/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.335963871 seconds)
    (150/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.284213828 seconds)
    (151/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.71247993 seconds)
    (152/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.314744959 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.430722343 seconds)
    (154/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.576603784 seconds)
    (155/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.099782185 seconds)
    (156/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.313664495 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.195742884 seconds)
    (158/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.758717934 seconds)
    (159/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.741352095 seconds)
    (160/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.943641057 seconds)
    (161/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.354652403 seconds)
    (162/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.321483827 seconds)
    (163/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.353328041 seconds)
    (164/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.964813976 seconds)
    (165/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.419986617 seconds)
    (166/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.458783747 seconds)
    (167/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.104083482 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.787929395 seconds)
    (169/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.327648941 seconds)
    (170/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 3.029380633 seconds)
    (171/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.314758372 seconds)
    (172/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.314893549 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.353032448 seconds)
    (174/286) benchmarking ("sort", BigInt, false)...
    done (took 6.335077768 seconds)
    (175/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.957963512 seconds)
    (176/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.325731998 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.93780111 seconds)
    (178/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.683302531 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.385425661 seconds)
    (180/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.391974861 seconds)
    (181/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.548246736 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244318597 seconds)
    (183/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.696344521 seconds)
    (184/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.414970233 seconds)
    (185/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.465858318 seconds)
    (186/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.337500216 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.35548986 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.402723093 seconds)
    (189/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.158144296 seconds)
    (190/286) benchmarking ("sort", Int8, true)...
    done (took 6.353710833 seconds)
    (191/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.232835506 seconds)
    (192/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.33220021 seconds)
    (193/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.48312183 seconds)
    (194/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.338979928 seconds)
    (195/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.546757971 seconds)
    (196/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.390831142 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.330800729 seconds)
    (198/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.324785776 seconds)
    (199/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.938454764 seconds)
    (200/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.981428193 seconds)
    (201/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.047419419 seconds)
    (202/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.864963603 seconds)
    (203/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.368297161 seconds)
    (204/286) benchmarking ("sort", BigInt, true)...
    done (took 6.338171549 seconds)
    (205/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.199984026 seconds)
    (206/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.370193064 seconds)
    (207/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.363141985 seconds)
    (208/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.363034894 seconds)
    (209/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.979494066 seconds)
    (210/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.317830826 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.224987625 seconds)
    (212/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.431247439 seconds)
    (213/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.935365303 seconds)
    (214/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.331017059 seconds)
    (215/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.35530075 seconds)
    (216/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.899574646 seconds)
    (217/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.068093051 seconds)
    (218/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431777821 seconds)
    (219/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.388979179 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.028567707 seconds)
    (221/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.319952263 seconds)
    (222/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.361219438 seconds)
    (223/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.354060937 seconds)
    (224/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.299930286 seconds)
    (225/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.345203023 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.441964682 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.151002508 seconds)
    (228/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.752062681 seconds)
    (229/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.704812013 seconds)
    (230/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.394498906 seconds)
    (231/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.328085814 seconds)
    (232/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.339747082 seconds)
    (233/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.557830058 seconds)
    (234/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.427807563 seconds)
    (235/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.436165199 seconds)
    (236/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.625551007 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.555056926 seconds)
    (238/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.455468721 seconds)
    (239/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.326246128 seconds)
    (240/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.118174287 seconds)
    (241/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.341275914 seconds)
    (242/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.439084589 seconds)
    (243/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.366106946 seconds)
    (244/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.86231179 seconds)
    (245/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.327050263 seconds)
    (246/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.391935499 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.345874176 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.724042489 seconds)
    (249/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.728349078 seconds)
    (250/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.438179875 seconds)
    (251/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.368118061 seconds)
    (252/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.355296118 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.337860376 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.332033727 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.3300984 seconds)
    (256/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.321137645 seconds)
    (257/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.461027384 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.447058541 seconds)
    (259/286) benchmarking ("sort", Int8, false)...
    done (took 4.364590709 seconds)
    (260/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.754975713 seconds)
    (261/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.006072777 seconds)
    (262/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.469014094 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.328574359 seconds)
    (264/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.111618072 seconds)
    (265/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.058858186 seconds)
    (266/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.446540792 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.433841868 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.424731204 seconds)
    (269/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.351205783 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.456978812 seconds)
    (271/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.389952086 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.169905034 seconds)
    (273/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.321239184 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387119775 seconds)
    (275/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.135700667 seconds)
    (276/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.401276613 seconds)
    (277/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.84157014 seconds)
    (278/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.644893535 seconds)
    (279/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.338445471 seconds)
    (280/286) benchmarking ("sort", Float32, true)...
    done (took 6.344655776 seconds)
    (281/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.139355459 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.376619977 seconds)
    (283/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.836662845 seconds)
    (284/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.32214958 seconds)
    (285/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.616615831 seconds)
    (286/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.344406727 seconds)
  done (took 942.334785412 seconds)
done (took 943.573760856 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.37578524 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378198519 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.354029938 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.37619493 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.473439137 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.529045652 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.364493092 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.356845341 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.402120456 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.403720803 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.359606967 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.529207826 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.362821074 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362751259 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.354304138 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376771243 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.485195466 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.361873505 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378513143 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.362539797 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377422533 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.361000708 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.405069878 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.529560414 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.359684888 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.358200584 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.36493215 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.382517423 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.474681766 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.36725799 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.35904784 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.373347205 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.486179752 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.350104744 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.351196003 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.38242677 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.373174753 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.365473159 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.361127813 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395779716 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.856860882 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.354554471 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.366310256 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.358202334 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.358136339 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.361925042 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.365625982 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.363553781 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377734735 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.379950221 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.843246908 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37203839 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.367902617 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.358714532 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.36890672 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365958764 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.362272779 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380896125 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384905185 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384178025 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.477167228 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.363560209 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.36118363 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.380670042 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.373181678 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.882888565 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.347223888 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.362915109 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.862419264 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.358323416 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.880869022 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367235389 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.359905217 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.380469292 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.399238415 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.49540503 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.355425496 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.357378269 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.373844134 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.365521629 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.369616891 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381133871 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.364748473 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.359399055 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381493248 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.536691133 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.370423426 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368543197 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.369032048 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.387277542 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.376911414 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.377855577 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.364488149 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.35564791 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.370651257 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.364608739 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.369859959 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.372312959 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.367018625 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.372117829 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.861008321 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379222215 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.35901533 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.359640042 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.36048003 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.38197771 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.86230953 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.361177169 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.383169365 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.410486526 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.363024659 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.436458461 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.363934794 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385738755 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.370034744 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.364423348 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.357400904 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.440025941 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.842067004 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.376668647 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.365353269 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.366131524 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388532855 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.365075385 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.360617191 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.452417736 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357285309 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385197632 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.490753246 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.372998676 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401584386 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.367648239 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.368382617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.393249412 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.38820138 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.401712435 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.366550565 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387157039 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386495132 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.358545863 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.38140375 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.37595464 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.362862326 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.369512976 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.356302597 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.396421754 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.383844926 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3837566 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.384167965 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.490476189 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.36168395 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.438986432 seconds)
done (took 231.431780171 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.423351025 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.354968105 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.4541661 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.361703461 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.461797717 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.462501898 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.357874964 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.358028459 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.35764483 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.739199807 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3589797 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.359079353 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.357515546 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.358275515 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.446644614 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.362933388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.360323871 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.703146787 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.363804601 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.432878737 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.360945386 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.359709563 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.362490992 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.744152036 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.360634422 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.36116208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.43206085 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.361789809 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.71107454 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.362111477 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.359397701 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.71080776 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.453179636 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.378883916 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.370924061 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.367769324 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.464702965 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.380122223 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.443988447 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.444614795 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.456202554 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.402340091 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.35986851 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.357263321 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.364832897 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.365348985 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.360959517 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.390553714 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.364921024 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.360459434 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.706271398 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.375587225 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.362482244 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.362533285 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.362000472 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.394410086 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.36332316 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.36559765 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.455318254 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.365551242 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.427741134 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.74729161 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.745206627 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.364512027 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.358583914 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.364059224 seconds)
  done (took 150.391350868 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.431736174 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.438777618 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.4832734 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.365498574 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.416702986 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.487217209 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.36788999 seconds)
  done (took 11.257846101 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.371529152 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.366996166 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.413890922 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.415171024 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.365320207 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.544046267 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.365207094 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.375636923 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.362985959 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.416349378 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.367493668 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.365968245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.372379508 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.357970252 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.412495909 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.375911418 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.479586343 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.365847606 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.367665548 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.528147647 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.364413384 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.373738218 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.417422799 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.377544121 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368859355 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.372160234 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.193060108 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.365972958 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.364291517 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.365175237 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.364117347 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.445606484 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.366215135 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.36317248 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363063456 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.480617557 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.365789262 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.363393083 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.366235006 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.364252833 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.368589151 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.366281957 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.367371505 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.365040038 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.367341949 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.389539001 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.369332112 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.367755978 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.369278502 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.368974592 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.418659622 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.36950679 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.366931488 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.366162757 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.421097066 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376937458 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.370130328 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.36623302 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.370843707 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.36740843 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.527713513 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.417461208 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.369782644 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.417062279 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.371123593 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.369895418 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.370325717 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.370427436 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.423784963 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.370569522 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.416948325 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.366258796 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.547427462 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.392111878 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.371728394 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.372294926 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.370675043 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.368763399 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.365510642 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.375641843 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.368778848 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.369973511 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.375671682 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368397359 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.370134902 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.540012103 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.476238656 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.368150967 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.383504905 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.377430916 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.368558739 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.42432916 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.371955205 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.367587995 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.423382164 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.487012881 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.42369129 seconds)
  done (took 156.979614559 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.376468931 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.380357314 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.375155265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.396336837 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.372326151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.370192751 seconds)
  done (took 9.542755455 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.374213445 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.373972481 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.370924579 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.371468556 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.371962736 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.374912643 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.375083079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374223199 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.378461031 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.373617994 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.375843983 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.378538254 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.375740825 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.373859053 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.37492583 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.37350756 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372640939 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371733961 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.374951869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.373058953 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.479396308 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.373597919 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.374159529 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.375874499 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.382167784 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.375703755 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381760648 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.375877564 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.375471973 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.382471908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.392681908 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.377422484 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.377793347 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.381650403 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.381328442 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.376360451 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380065143 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.37988075 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.372619339 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.37812281 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.379630686 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.376056879 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.376273187 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.380361751 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.377561884 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.381238222 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.384120933 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383696477 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.376410298 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.379640832 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.38088317 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.376384406 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.379598318 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.380942254 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.37909565 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.396842866 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.386960407 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.377410975 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.377877659 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378843523 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.37896604 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.378751813 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.37970594 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.38234911 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.376063845 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.382850569 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.379061882 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.382597307 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.380185301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.378422735 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.382716102 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.375385119 seconds)
  done (took 101.600519062 seconds)
done (took 431.03536417 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.381670444 seconds)
  done (took 7.658409428 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.521429828 seconds)
  done (took 7.801738193 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.042147443 seconds)
  done (took 23.325058885 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.432955305 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.453090859 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.405638458 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.372766067 seconds)
  done (took 26.942473634 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.964191682 seconds)
  done (took 8.243183091 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.377440996 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375676976 seconds)
  done (took 14.033251031 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.476909538 seconds)
  done (took 7.754084908 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.53278599 seconds)
  done (took 7.817817427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.391673902 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.390288399 seconds)
  done (took 14.07579689 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.374665242 seconds)
  done (took 7.653753553 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.022603461 seconds)
  done (took 12.302664453 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.38302343 seconds)
  done (took 7.663895043 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.434462696 seconds)
  done (took 7.714012255 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.767149562 seconds)
  done (took 10.047326477 seconds)
done (took 164.313092944 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.3731879 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.373196347 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.373613711 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.371864523 seconds)
  done (took 26.768986907 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.413338863 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.413135276 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.414615171 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.423176785 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.416623616 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.411855016 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.404841157 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.423059983 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.422944774 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.416132366 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.413870107 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.41334896 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.413144231 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.404556274 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.415733614 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.414996933 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.423461915 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.414769825 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.407440866 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.416297409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.382755172 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.425780953 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417959199 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.381221285 seconds)
  done (took 35.187265127 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.901397866 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.452226317 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.535847753 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.433623021 seconds)
  done (took 7.604153221 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.435442473 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.435337737 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.446453494 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.485984606 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.512345514 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445313945 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.408012919 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.403466994 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.390255144 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.436287698 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510672219 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.451192986 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.51770596 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.382979826 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.568290967 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.383591973 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.3815947 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.433996662 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.485613905 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.499396306 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.382601462 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.433492561 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.43697984 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.452019822 seconds)
  done (took 36.001357684 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.381675842 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.400072036 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.3806029 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.381061084 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.389013986 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.380797492 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.38076964 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.382051746 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.380520534 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.386055261 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.380824508 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.393419502 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.380541671 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.38176702 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.389009496 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.385037247 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.389859884 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.38292498 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.383411983 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.387629458 seconds)
  done (took 28.979621574 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.377209128 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.2285563 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.727514037 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.633008418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.376657976 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.368976384 seconds)
  done (took 27.994730357 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.453624181 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.608767854 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.385155898 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.765623185 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.84835893 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.383809315 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.383306101 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.641719447 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.977531248 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.958632068 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.442522476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456011246 seconds)
  done (took 20.591079486 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.377273885 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.37803444 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.381706889 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.39618778 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442225597 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.388906082 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.389679128 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.376133852 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.443973228 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.447632666 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.389104739 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.444302059 seconds)
  done (took 38.141603387 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471973649 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421960711 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.379494813 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447686634 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.090707846 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584029557 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444693681 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.130964452 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.402470203 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654012116 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379895119 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491948887 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.637108223 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383995865 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382978797 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.424931726 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607830056 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870717688 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383597018 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.64585158 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408877523 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394502072 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.721595992 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.623029361 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594642008 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.358697289 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.642511577 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.158121309 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.680397726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.396041569 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392542772 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381306257 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656988161 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.45212228 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478346614 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606736766 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401149356 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920529582 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.391435345 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.638002134 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385418934 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387434918 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394293802 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382613659 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318100125 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395917429 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516582588 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.38103847 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.094642595 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382977149 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.656225903 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479783451 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.386883359 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.952382638 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429828968 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.400071741 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.387193459 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481751333 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957687305 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.911347117 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400091666 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.318980875 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386189008 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.644307733 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024686083 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.38282571 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.38599442 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388788301 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318151768 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.637526762 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.40305771 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.533038649 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.401768739 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.03534363 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115010135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.384440535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.315843371 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938767625 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379926318 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.322483137 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611438341 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162048405 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32075225 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.326929602 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.318744665 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107904436 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395118028 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.839982648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406878034 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.151426952 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631373617 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406198997 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409690029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.60803082 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.271308353 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385364372 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.395316392 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513744464 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402005498 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157277633 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338972103 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.382196375 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641657743 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.598116511 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386036018 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.436993982 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.231926921 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381160593 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.401871623 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385155569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.615524885 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.990052734 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402112125 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.927454132 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403826698 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.166045212 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145643429 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391588281 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.390835409 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.386538504 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692166782 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.197079349 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.272163813 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454326604 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393676692 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388210406 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.669178981 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.240564534 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.548156949 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.60632462 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.418901368 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.399341541 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.38874857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.338580918 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.386258696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391169435 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.182944181 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612447038 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387888605 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679378268 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323452246 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536948655 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.391758893 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.60388704 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.67216064 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.396240533 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648530496 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396797747 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.392569141 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402495125 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407813603 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488586243 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409165954 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.403707371 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.648727391 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.39460107 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.394843723 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.7002039 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.171755707 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391113938 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.394012476 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407061049 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992075513 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370147035 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.386982558 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.281788006 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.403926071 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45942286 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396654909 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618006647 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.744172031 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396981139 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.388777839 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.389871478 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615434722 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402473916 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.666870275 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474205027 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.908162132 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.018668195 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.407253472 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.328452897 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.104585735 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.085191854 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39337768 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.582336303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393542427 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619493639 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.409032377 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403495738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.992078377 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395843326 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.696993301 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.40075394 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.405559173 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.689425809 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394867122 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.741713672 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.943494922 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397926845 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.403179953 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539859713 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.407735671 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327128344 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.910480543 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.398794479 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.394694288 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.168410884 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427624785 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.689438121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.781413547 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.677191791 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391646525 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.676512977 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.674839228 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.417372315 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.400802338 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393852874 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396114906 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.416500263 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40437478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.404934945 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.664157085 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.833617863 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957183932 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.125667821 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940050557 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.800410445 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.396714118 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277867609 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172372265 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348180389 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.051982935 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648272043 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173217446 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359235697 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337697351 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.682176353 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212857976 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67392698 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.625482563 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.7976655 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.399847917 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675586123 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610842033 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431507532 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407102927 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.326499213 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.912329124 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.4845278 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400219607 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479002668 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589972819 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389032181 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.177038133 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.449862928 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.153485649 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.173647505 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.941653327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.783623648 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.393124695 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410043489 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772915643 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431115034 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.921478336 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035577252 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405168477 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.914786191 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353226908 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627103547 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411045551 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.403004766 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.03183118 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.388281665 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.644220521 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.673573414 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334945161 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.413210666 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94906013 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254349427 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.403933946 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399316123 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.161367549 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400618719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.70040718 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.400774695 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.719750848 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397676604 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.333070638 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332994459 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.091641746 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407748423 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374831033 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892934104 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.399180769 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396300801 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395289739 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.245674718 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.654450639 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413723504 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005186361 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625431227 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416144494 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415920064 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.402867503 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410846118 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.389341633 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298188866 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.63517937 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.505159062 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.617141531 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.44803791 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.312550677 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400414077 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.605282903 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.298036358 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.403632212 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642780619 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.112681298 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.420763739 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116752784 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419834977 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.412165603 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412877185 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410311212 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.41482518 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471466511 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631139223 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.413622546 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.411532407 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.169157576 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412130724 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404242244 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.41541999 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494455304 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.987252353 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.766593906 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.175121229 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016001337 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149726258 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.010513297 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.680616786 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403750727 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408976666 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336689367 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544573868 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928284257 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676933582 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.532192395 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.411122165 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419056738 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.416785279 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418908914 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614019511 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677906238 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.273718378 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41073279 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06262671 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.284920882 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414529397 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.613881773 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911650601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981168408 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521003338 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.417896995 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183594589 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69584268 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494286077 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.403669472 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993879525 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.407140993 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.194641743 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.411469001 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422058262 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552589618 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679261616 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.478589286 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.416649569 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.561393195 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.177797837 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.735816562 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.662719888 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.912571911 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.636685118 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026158306 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144584444 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669434071 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473396549 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.636385514 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.509628764 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553583398 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.412078207 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.290291691 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407518891 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25004801 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.117340904 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.415431285 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.023628359 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670252725 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.409037213 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.414368839 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42970342 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.415559908 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.630288326 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141828191 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632877587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415380682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.415854779 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.977299062 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.02492903 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688475407 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34398368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40494589 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650119222 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646675544 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.434392209 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.860501164 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.11891604 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979085307 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.382041002 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430422126 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414585327 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.148947008 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029228475 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.783147279 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90607956 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.067759993 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407848127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700282467 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.413878831 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419075943 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685020752 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.412553781 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423042486 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642491918 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.027915809 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234309901 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.431515912 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.787975477 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.346988271 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.635650634 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473281992 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.36103976 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412911539 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.860851549 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.429212151 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.541362938 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.415347425 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.420951961 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42491558 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.145162421 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692052155 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.407899021 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.410198147 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.407513071 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.426645495 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506758987 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.52702265 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417346397 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.086341752 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.764944386 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.668334609 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412321587 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.397370122 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.414713434 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41247124 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129339957 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373517829 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416418547 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986499012 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.417300496 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.422927751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.416518211 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.628863692 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624183092 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411170588 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645777093 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41394518 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444053744 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.318678575 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.180324565 seconds)
  done (took 1711.740764666 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417880548 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.442205292 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.455628325 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.423189576 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.446270374 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420540017 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.492152922 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435599481 seconds)
  done (took 52.84989751 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.418821081 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.564485757 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.444205108 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.423053482 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.422787737 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.41813603 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.918723027 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.421562675 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.414342831 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.422064965 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.413934584 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.415207349 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.094121571 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.424783362 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.423663474 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.413711276 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.412909334 seconds)
  done (took 66.789925583 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.844488542 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.594184615 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.694054063 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.422645461 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.456990511 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.406357312 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.630686017 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.433654534 seconds)
  done (took 54.801580588 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.431938873 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.433331074 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.432896635 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433095645 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.433252621 seconds)
  done (took 8.48168403 seconds)
done (took 2117.21495125 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.418685782 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.422047265 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.417567073 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.422287074 seconds)
  done (took 6.996826192 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.400542909 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.125404968 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.395188838 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.41147785 seconds)
  done (took 18.650112096 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.424665915 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.42346395 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161933588 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098941627 seconds)
  done (took 5.579895228 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.16631576 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.177947873 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.163699503 seconds)
  done (took 7.827763051 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.413605988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.415776889 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.416279301 seconds)
  done (took 20.563957262 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.726047895 seconds)
  done (took 3.045840041 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.564070361 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.613408973 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.734149984 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.739216843 seconds)
  done (took 7.971829753 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804994665 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.805081053 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.613787187 seconds)
  done (took 6.542781018 seconds)
done (took 91.347008297 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.405296563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410015362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.623445255 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.380961776 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.641269197 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.623037561 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.849249957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.341422336 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.887597644 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.869208799 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.371535437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.643983761 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.570017916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.418622549 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.571453454 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422214094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.825197526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.44957767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.095138809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.257413169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.836289725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.01782424 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.207241348 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.0322467 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.780238125 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.570787693 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.599113904 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.412380905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.279413005 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.616512352 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564069576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.419306967 seconds)
  done (took 195.312515689 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.417365835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.410789227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.411590329 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.425968237 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409898923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.412320035 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.428286824 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.411797397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.410090008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.43188763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.411557459 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415467584 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.412529885 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.42693595 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.412611386 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412166157 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.427598055 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.419121579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410778175 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430573615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427191601 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.419520052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.41980376 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.431595991 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.411596517 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.413077647 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.420611388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.421465599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.411200444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419561907 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.422516076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.441832495 seconds)
  done (took 206.733483009 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.420239461 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.422194911 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434229102 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.421297594 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.421182631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.429064766 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421727947 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.4218798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.420882019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.421037419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.441047411 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436009019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.422434568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.422535658 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.423330297 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.422496298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.423089064 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432840011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.422544955 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.437823415 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.424935193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.423215421 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.421288481 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.449873455 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.422549584 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.423771272 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.42569096 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.431313347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.425290285 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.431801769 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.425206743 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.437501011 seconds)
  done (took 206.985115899 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.623736729 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.429055428 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.430597411 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.367467166 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.430773108 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.430422224 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.42552178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.619968264 seconds)
  done (took 15.080641607 seconds)
done (took 625.432688161 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.800046408 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.500269358 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.627433459 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.449687892 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.280029041 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460729327 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.452580877 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.635147804 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.364218423 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.634673597 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.698766338 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.44089409 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.835681274 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.441687792 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.711674016 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.545991134 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.31930618 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.41451479 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.769309876 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.007813914 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.71107353 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.948142245 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623609523 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.362179662 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.841851283 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.945166849 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.214004926 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.314225279 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.460324487 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.781237399 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.163349008 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.518355627 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.498521311 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494660593 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.557994494 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.553916437 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.469592999 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.51225127 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.642014306 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.763262473 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.027698644 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.176528583 seconds)
  done (took 96.297010215 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.421187938 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.422293705 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.420631995 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.422231839 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.422669868 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.421499929 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.420453825 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.420728763 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.422505272 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.422257506 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.4221872 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.4235161 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.420156122 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.42274988 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.421840434 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.421190078 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.423313324 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.425221375 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.421948489 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.423189692 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.423323274 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.422676833 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.422846124 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.425459391 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.422645895 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.425367364 seconds)
  done (took 38.314341021 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.434730554 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.686987789 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.852977094 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.432294085 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435722046 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.438503157 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.5188154 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.436397901 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438489758 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.438338755 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.611174489 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.42982286 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.472397816 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.885250117 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.43002768 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.43681912 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.436783808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.43686592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.69705197 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.43782496 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.536434256 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431981754 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.521363088 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.4466859 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.456344783 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.435864264 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.441769951 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.012552459 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.431651667 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.612907969 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.274379298 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.519442838 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.951164506 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.870807731 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.272266397 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.437878589 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.437461302 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.620042303 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.430604182 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.437160686 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.521945109 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.430753101 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.871461349 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.09368408 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.447641483 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.43831929 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.021000821 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.607286192 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.693160215 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.448621273 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.893302795 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.432569057 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.439518249 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.441099296 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700548495 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446411431 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.43885018 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.009464578 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451495975 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.523225146 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.440743223 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.440538008 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.706554976 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.429984657 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690857703 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.433224302 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.448116606 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.457606838 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.874568497 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.433602045 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.126473523 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.450338152 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.439425463 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.617590084 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.684639035 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.048632464 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.435979087 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.709661462 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954531918 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.512249845 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.437830565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.991593775 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.517883601 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438719922 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.442549998 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.442400516 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.440951951 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.492395936 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.523851402 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.066253847 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.113169925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.029639361 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.533280736 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442183792 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.441926755 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.014213443 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.44989074 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.441774097 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.872432976 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.117984313 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.452796615 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.44873478 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.127963586 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453668076 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.526791911 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441544352 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.880394598 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.435149988 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494523121 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443229619 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.449026173 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.464068647 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.526406006 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.443276971 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.443348861 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.099644801 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.633475018 seconds)
  done (took 189.000568372 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.436472065 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.428266015 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.443595043 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.428249139 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.437390546 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445057117 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.436136953 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.436539383 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.441002753 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.435233979 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.435492039 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.436119935 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.436019693 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.440386745 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.440992332 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.444814059 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.049096961 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.438194371 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.436057149 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.429088451 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.243889034 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.440408826 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.437781818 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.429280497 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.438970018 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.439849559 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.44684013 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.43239824 seconds)
  done (took 155.002876379 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.444694547 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038924066 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.438587566 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.588128754 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459212092 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.442956852 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.581507183 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.499990102 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.448308153 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.442319749 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.44442756 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.763693386 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.438597599 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.01317126 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.649870104 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.57733723 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.014457795 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.463841081 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.443905272 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.44325548 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.589187619 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.448254491 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.768334804 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.040662137 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.438986835 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.042050439 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43119594 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.446388477 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.445362789 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.043107752 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.436266137 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.767443719 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.521683197 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.507896848 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.075525896 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.989365701 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.995931267 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.593997181 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.437821854 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.444805576 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.444787945 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.437768277 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.048537162 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.440252688 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.446236013 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.039232876 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456572552 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.448767746 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.452646558 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.445880813 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.511367895 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.515367164 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.772398784 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.070051227 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.529054446 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.454674137 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.590724756 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.843541761 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.442652515 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.021281419 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.440129918 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078932576 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468538215 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.438886381 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.449398461 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.452577448 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.609405189 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.590624319 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.994553359 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.457234773 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.018791051 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.626774823 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.448724744 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.446888139 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.450440007 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.079012729 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.021302739 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.628083963 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.593259145 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.652895419 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.439968661 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.44845488 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.439281238 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.532824919 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.4454594 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.079277582 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.037832643 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.468015067 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.451180323 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.450907295 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.451508142 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.638427732 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.079031154 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.53312119 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.985027392 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.799014536 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.790831741 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.451994127 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.512741388 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.465844254 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.790633098 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.4520459 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.510678798 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.915744331 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.792898087 seconds)
  done (took 172.764573113 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.708091995 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.697148606 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.544424246 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607260859 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.074210951 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.036029637 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.781918399 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.591916452 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.567134459 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.720680643 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.685243185 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.539831499 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.679485928 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.539212685 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.202892519 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.517617552 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547803476 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.602294976 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.597109036 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.498704786 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.149338368 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.744263676 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.648155929 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.400080007 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.550909704 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.295482181 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.034273867 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.982808867 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.641455791 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.838064193 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.009150867 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.604064456 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.485177738 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.173451908 seconds)
  done (took 69.641309645 seconds)
done (took 722.348567633 seconds)
SAVING RESULT...
DONE!
