cset: moving following pidspec: 19422
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.365755874 seconds)
loading group "string"... done (took 0.485067182 seconds)
loading group "linalg"... done (took 8.082903537 seconds)
loading group "parallel"... done (took 0.18562158 seconds)
loading group "find"... done (took 1.249029184 seconds)
loading group "tuple"... done (took 2.024996056 seconds)
loading group "dates"... done (took 1.359656973 seconds)
loading group "micro"... done (took 0.250212805 seconds)
loading group "io"... done (took 0.68693746 seconds)
loading group "scalar"... done (took 42.983592848 seconds)
loading group "sparse"... done (took 13.14393013 seconds)
loading group "broadcast"... done (took 1.141799285 seconds)
loading group "union"... done (took 14.93770875 seconds)
loading group "simd"... done (took 5.183611695 seconds)
loading group "random"... done (took 10.11117625 seconds)
loading group "problem"... done (took 1.99900565 seconds)
loading group "array"... done (took 24.059801266 seconds)
loading group "misc"... done (took 1.428812435 seconds)
loading group "sort"... done (took 3.519439761 seconds)
loading group "collection"... done (took 19.093081017 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.449596881 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138636404 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.143358127 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148875727 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.181892845 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13228628 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.151096259 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.10688341 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.848295254 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.17409335 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.139847754 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.487547311 seconds)
done (took 4.750872603 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.215753455 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.079402479 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095121631 seconds)
  done (took 0.767769942 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.087014812 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.140745302 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.087636717 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.074311751 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.088655468 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074126512 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074626289 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.086861457 seconds)
  done (took 1.221431926 seconds)
done (took 2.89243657 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.707708375 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.269871134 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.201363002 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.48803538 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.174358137 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.205539594 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.662793204 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.287544823 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.235037915 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.097368127 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.128085712 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38693847 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.112572426 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.665139809 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08572784 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.120567101 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.166089144 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.390136974 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.087294697 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088843136 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.110611311 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.147288889 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.110123336 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081043922 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.174956607 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.076261676 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.180751429 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.104275592 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.074636727 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.272674584 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.198267521 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.671703371 seconds)
  done (took 10.392421565 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110859392 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.131785048 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09076626 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.134125697 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133325223 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.080417877 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.095010526 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.074889746 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.117008733 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.173521656 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.127777728 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134797784 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071996513 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077362838 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.11249076 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24025725 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.101812388 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.115306054 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.093101944 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086250911 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.130016962 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.092113077 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.103076773 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.087374755 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.163818982 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207802261 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.103204918 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117836234 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087016218 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090303089 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.138300816 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.150319124 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07312607 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088971737 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.168951764 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101894001 seconds)
  done (took 4.815269727 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.104689884 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.180479517 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.098245127 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163577078 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.155332844 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.134200533 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160187064 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09147511 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249113859 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.085798906 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.171423157 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.121388206 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106368834 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076132297 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.095026366 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.116827426 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.074054151 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.679756404 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072096333 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.147674067 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12107957 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.110334841 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095035822 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.081190102 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096122845 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.073424353 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077955481 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.126093684 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.320777349 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14180328 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094616664 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.140791699 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116406687 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.076387931 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13001095 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192932757 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.07229915 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.121878073 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.113784151 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093968591 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.072773092 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172683341 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097529478 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.074322551 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11998735 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112870743 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.130033446 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.090510488 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074645636 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21704445 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073306572 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089588524 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.957245328 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.171470974 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.098051613 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072245972 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32641027 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.111058304 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074398092 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.090163031 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.246860849 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119213881 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.090641167 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07512376 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080859018 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.092888447 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377673457 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073452411 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.053061572 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.075433402 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.083693315 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090626536 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087804652 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082112097 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097444304 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.093101919 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090064292 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07726992 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07516703 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.090945222 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.075883186 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110657709 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.094399833 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.074855305 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152016602 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.072918423 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094207857 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120285341 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.089533081 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073556563 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125063675 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076123891 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088317419 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.130564998 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.07615831 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.111693498 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.088591196 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120720208 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.087838474 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.144529058 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.085155259 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102296658 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.092512812 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.123279598 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099795343 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075841344 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095443736 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072216302 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08945091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.141056003 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.073912579 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.088366664 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07481075 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103924745 seconds)
  done (took 21.953112217 seconds)
done (took 37.755329823 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.338568752 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101834959 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10183422 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10151489 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100323446 seconds)
  done (took 1.411182051 seconds)
done (took 2.052994032 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.261577505 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.165219179 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070162433 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17614116 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070889343 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.167272763 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.153037631 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.103718881 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.176964997 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086489254 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.156255633 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070941042 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.086873261 seconds)
  done (took 2.413205949 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089458711 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108737202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077520218 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.089028195 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086164374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088429021 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103704983 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09418319 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103780763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079291255 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088067599 seconds)
  done (took 1.647618243 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088496797 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10617936 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.076841606 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087525871 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.086703641 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089220493 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.104160789 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094753749 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103873431 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080039896 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088093752 seconds)
  done (took 1.64392979 seconds)
done (took 6.338653984 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088530018 seconds)
  done (took 0.722264174 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.985942244 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.868289986 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113566131 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.159177817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.318793716 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.203194496 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.577617585 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.126466334 seconds)
  done (took 15.181755241 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.123758047 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.092133539 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.075562061 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090565689 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.075789132 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.091351846 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078982804 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.092263628 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.077547523 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.090519632 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.074999449 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.090442877 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.078754645 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.092120402 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.079702914 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078187667 seconds)
  done (took 2.080561138 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.111583945 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.110291024 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096161646 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083856177 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.095222503 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.079044364 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.09672491 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.095005788 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078814884 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093540829 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.084258862 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.096864493 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.082437542 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091902798 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081315776 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.099043184 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078616051 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.096408548 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.08179027 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.097278846 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.09767726 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.079666815 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.095857281 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.083847712 seconds)
  done (took 2.929503956 seconds)
done (took 21.553250096 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.143687626 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.080406162 seconds)
  done (took 0.867393393 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096024448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111028486 seconds)
  done (took 0.856956326 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100453222 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089953364 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12735287 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.09210268 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.091357707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.0768172 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121970986 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.091727342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.077008215 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090860893 seconds)
  done (took 1.609647029 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080467831 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.093903464 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.085221584 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.111350642 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.088105945 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094855427 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.081600532 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.095398374 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083271655 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090043358 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.08446673 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.109365086 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.098163073 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.094980655 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.096427458 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096463085 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085730699 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095312054 seconds)
  done (took 2.318128051 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.076539462 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.078204841 seconds)
  done (took 0.804578527 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079145109 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089303623 seconds)
    (3/7) benchmarking "month"...
    done (took 0.078262538 seconds)
    (4/7) benchmarking "year"...
    done (took 0.092535593 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.075447826 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08914136 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.075530771 seconds)
  done (took 1.231437872 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.467970818 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134586664 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258993409 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.079361616 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.114820544 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302519021 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.089787294 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079296259 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.096054409 seconds)
  done (took 2.328294638 seconds)
done (took 10.66667756 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086630083 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.109815453 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.107342861 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.44856296 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111129008 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07415008 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.152765608 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244861636 seconds)
done (took 1.990525127 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142347803 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328970151 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.118616283 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.082501981 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.074557323 seconds)
  done (took 1.260929876 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.074693285 seconds)
    (2/2) benchmarking "read"...
    done (took 0.077349605 seconds)
  done (took 0.809576278 seconds)
done (took 2.868283398 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074724488 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073739255 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.087546807 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073588821 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.123284037 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.070924127 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088804729 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073483377 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088652736 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.074140272 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.074608993 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.090250685 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07364551 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089959993 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071931073 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088488003 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076703832 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.073642939 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087893084 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0727389 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090117807 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.073300702 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.072960199 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087855419 seconds)
  done (took 2.642439798 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102312594 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090086636 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.079578968 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09539645 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.078632926 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.096847029 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.079741783 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08987208 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.080347057 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091720696 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093163672 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.079195042 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.09121622 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.079304572 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091992006 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.078689708 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.09483751 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075155858 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09091353 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.078913956 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.095520983 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075847148 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.094428803 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080457182 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.094311157 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.077755047 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.092869033 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.074994568 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095428856 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093408682 seconds)
  done (took 3.273935759 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.079770374 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.071669674 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087986337 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.078264978 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086692957 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.076733185 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08725572 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.073042181 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.072740512 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087690769 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.073142287 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087945236 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.072875441 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.088511931 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.073947722 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074825691 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.101299868 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.072945036 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088222582 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.073103984 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.090708308 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.072317778 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.07475335 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.087363049 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.07197852 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086866385 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.072648692 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.086976085 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.073609987 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.071969956 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090843434 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.075301974 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088564645 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078874929 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.091461439 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.072595153 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.176407923 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.086558889 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.072232924 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086528192 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.071609852 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.072897621 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086515807 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079258191 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.091675343 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.073593594 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.088839861 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07386101 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.073062066 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090626388 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.071296778 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.088227195 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.074172335 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088900307 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.075922889 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.086132903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.073201072 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.071980182 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.088660207 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.071333968 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.086368385 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.071698986 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.089859055 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.073378834 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087977242 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.093800793 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.071743896 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089686481 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.076314031 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.089831197 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.07386088 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.100671092 seconds)
  done (took 6.575857811 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.077614053 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097835538 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.074285483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.07343724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086551332 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072611952 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09237576 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072252081 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089599778 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.090643023 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087545116 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073639034 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091100921 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077161247 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.087640819 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074802866 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.097485895 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071449557 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08871413 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076600416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088620237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077662269 seconds)
  done (took 2.48162762 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.204046494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097463848 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133102628 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090536511 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107834322 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.104777673 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.079161296 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.096376294 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079288905 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097594663 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081587821 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095037563 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105969801 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082138847 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098206007 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083714085 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094003775 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098265997 seconds)
  done (took 2.495160338 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.088536436 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.091108071 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096423519 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091152584 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07573857 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.093845984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0811075 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105762543 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.077435474 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091019706 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.084892014 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093235895 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.077305585 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090916419 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077377723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.091467094 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.078260051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091480962 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085221079 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097147644 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096160365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08604299 seconds)
  done (took 2.606237147 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09186482 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092311739 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095109184 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093682086 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07426608 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092311667 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.082394666 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.090720417 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.083608886 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.093552186 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07522536 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091259688 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.083308376 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091937119 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.08177512 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090561442 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077433018 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091254338 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077773078 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089519372 seconds)
  done (took 2.408636908 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114059352 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105287567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090145656 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116562689 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08911661 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10580969 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115193865 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.089860179 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106222842 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103309704 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105346693 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104240955 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101131768 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111482505 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.089960891 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115935075 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114301138 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099786444 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105543611 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089778841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117539464 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104955823 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098886618 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106715434 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089839183 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105673652 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090165212 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111936703 seconds)
  done (took 3.566781822 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075734633 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075179096 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088096133 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.073033847 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088829623 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.073018196 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.073663904 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.089795215 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07678665 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089765064 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.077375492 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.092421843 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077601165 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.077174927 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092303923 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.076754736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.092743739 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.073344787 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076151302 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089884485 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.07503542 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091777434 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.075698761 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.087939461 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07387131 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.076094371 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089552592 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073003388 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.091770206 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072998063 seconds)
  done (took 3.109357753 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.085875336 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100042843 seconds)
  done (took 0.859389101 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.073847609 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107302831 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.074010647 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079867698 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096688429 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.075796462 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.101016999 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096688847 seconds)
  done (took 1.376838998 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094143106 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110153258 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081549022 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102630997 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.093633545 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.108375693 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.149919155 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.082998709 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.081642144 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.090298919 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.092137534 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.092366516 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081677426 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093954612 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.082061894 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098248374 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.077300472 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103117966 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.083512633 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.094976261 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08248975 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103977742 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07818157 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.087872133 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.077512942 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.10177098 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085637785 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.092646229 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079493247 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10049424 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.081526764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.069348199 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.096636842 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.081057014 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.092761036 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.092742034 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.104528319 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078659411 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.100244842 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08191315 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10142823 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.073992526 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097017541 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.082584894 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.101636408 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.080459955 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09754306 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.074726285 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.089068022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.07846061 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.089878484 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.076627581 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.070201704 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.098716489 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.08083436 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10570467 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078611859 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.093482463 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.079026295 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.094706291 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.085415288 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.094010629 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.078451779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095048807 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083329459 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095349765 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082812569 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090371034 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.070969814 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.077186062 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.100981893 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113734549 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.085421349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096423483 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08202922 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092403097 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079433006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09656251 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.083780698 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.100024219 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082170138 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.097854937 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.084568544 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091008435 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.078503931 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.082314422 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.094727652 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.078915936 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.089226908 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.090996961 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.09393246 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.076428809 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.089088517 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084765096 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.095129373 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0798174 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088982823 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08356552 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.070104436 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.097056261 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081108194 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093134861 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.085616597 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098078973 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.081359755 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.099209701 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.085765205 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091290225 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.079292509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.088714605 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081678262 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.093824502 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.083622349 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.085667198 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079466628 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.077520279 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.09646261 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098827021 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.078019329 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080438812 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099663312 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.082478299 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094923473 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.072943885 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.095486448 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.080237851 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101080552 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.083600276 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0947784 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075269646 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.090293286 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.080574233 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096289251 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.081560304 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09743537 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079675339 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.070238068 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095121333 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.081571281 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.100584989 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.076255752 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093030021 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.081189664 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.09330824 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.079455762 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.097761787 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.079257482 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.091149556 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080891984 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.094319999 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.07587476 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100796217 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.079648817 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.078504313 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.096029299 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084711924 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.094920246 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081970629 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094712488 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.081788941 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097725071 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.074767172 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091606581 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079193485 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101321759 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.078924478 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.074555889 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.08905722 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.082429245 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.08957718 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080242927 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.091131244 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.078530772 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.097640298 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.077369736 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.095112706 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.077597352 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107468106 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089355634 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097251234 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.0818425 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.101560565 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080584121 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093782871 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080167143 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.082044642 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097702989 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.083191072 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.097507024 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.081407124 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.094326583 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.072507666 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098281606 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.084141428 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.091757354 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.077154681 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.091390456 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.081051512 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.098681981 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.080960723 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096490715 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078520431 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076964536 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10103776 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.079155172 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095423954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.075071138 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.096962812 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.075206288 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.0987859 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082358112 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.102007026 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08020736 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.091337668 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085043617 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094949504 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.082339453 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.090923452 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.075142107 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.074963852 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.098641537 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.079432168 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.095215728 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.070362132 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.100300543 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084391734 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093373248 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.076283647 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.097096292 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.086141542 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.094206536 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079939835 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.079751899 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.098277267 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.105781553 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.076188957 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.079728197 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.101918777 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.080809248 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087327 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.082420461 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095529163 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.075986954 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.095749058 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078933479 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09597724 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083365084 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09722697 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.070843465 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.094848168 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.079576634 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074833539 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.092231557 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.083146291 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.096693672 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07950769 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.103212249 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082346889 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098182835 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080795313 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.096527166 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.081740346 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.098595476 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079551647 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098272001 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.079816584 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.091887142 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.079825373 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.074952885 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.093955266 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.077918325 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.098207316 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.076736832 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.098152057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.079814671 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093323512 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.081488963 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0980407 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077717098 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.093513071 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.076467835 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080513504 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093332224 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.076614214 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.095308056 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.075190809 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100689567 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.08082394 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101260406 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.077287277 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.089479735 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.082698334 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094935474 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.082901167 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.081113984 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098440639 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.077914313 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.097971325 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.079937098 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102125411 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.07440883 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.102951221 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082674245 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094023408 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.079587431 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093071233 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.078284847 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.091880523 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.078849817 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097548423 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07753762 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.079772903 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.097774643 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.079750769 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.093326808 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.078394649 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.098382561 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07760612 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098741714 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.071204548 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.09145773 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.076592164 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.080893534 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.100883076 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081007749 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.096149126 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.079534449 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100116124 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.080900463 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.089802339 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.085394569 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099790256 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.081765728 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101406864 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.075863282 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.094010552 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087327279 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.086870312 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.079526749 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.077318418 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.091271097 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08442971 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.09825434 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093466865 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.092947798 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.076262178 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.090401246 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082515452 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.095630162 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.071928109 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.077072892 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096767972 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.079517538 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096423765 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082572873 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096449441 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083002295 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.101500402 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.080439321 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09533275 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.082380742 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.090128346 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.076031943 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.075499346 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.097281464 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.082135731 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.091764504 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.074451735 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.097002581 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.079398243 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.094079665 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.080884577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.078196917 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100904586 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0810186 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.096630643 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086741399 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.089061987 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.080338985 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096824382 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.081051768 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.092323162 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.081092835 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097289024 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.08335816 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10079147 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081078146 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093947305 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082010665 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.093905099 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081617301 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08104343 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.098865341 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.075832154 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.099227857 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.085599655 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094921198 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.079062813 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093401751 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.078030921 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.098195354 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08252852 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.096080257 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08542246 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096265784 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.079271818 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.082819473 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.098669859 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079908069 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099586342 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.079347468 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.100414787 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07595237 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.102338756 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.076932798 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.099103232 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.079027587 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090938994 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.080998476 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.097084753 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.080121265 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.081497551 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.099114028 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.076622067 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.092594637 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.078200974 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.096345223 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08671217 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.101589013 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.079856572 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097296197 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076530286 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090984822 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.082789675 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.074482726 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.095571986 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.079907973 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.100431095 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07953472 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.094808646 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.079762524 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.101899258 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.083619334 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.099260745 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.074838065 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.098965358 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.0831925 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.096387701 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.077886595 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.094309204 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083478337 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09904337 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.080084029 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07634233 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102285884 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.081604522 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100903331 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.078772451 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094639148 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.078412225 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.092847287 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.082893682 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.096425455 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.085356417 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.0965452 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0823405 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104073866 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.077568529 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094773825 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087316633 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098658045 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.085447734 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.076507963 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095656898 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.082739072 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099825303 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.075850154 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.093867574 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.07568446 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.096730407 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.077644495 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.092392382 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0884795 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101736685 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.080812653 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.096849111 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080824536 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.076579327 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.093245226 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.077503111 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100141415 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07990939 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.104406664 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.077219743 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.093193354 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.076735669 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097730518 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08190789 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.080678259 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.092405188 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.076607316 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.093378137 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.08026791 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.101888413 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081108766 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.09943841 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081959657 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.097448968 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.079506515 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104332621 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.075131373 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.081166273 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.106090756 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082597243 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095848195 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.083779411 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102931367 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.082888578 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.093485885 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.083021336 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.09731948 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.078134814 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100451367 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083543951 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110364186 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081540548 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.094254971 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.081355752 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.09730826 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.077915452 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.102073537 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084287443 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100194481 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.083514272 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.096271231 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085268037 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.080659195 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100777015 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.080108736 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.09824378 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081774614 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.096447597 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.080226697 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093072634 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084577487 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.100420537 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082218323 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.101276995 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.078062548 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105252302 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.086897486 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099427457 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.074892338 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.076660282 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.095081394 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.07614115 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.101042289 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.076484881 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.097130709 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.080330024 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.079901696 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095499455 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.083108302 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09720414 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.083917957 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.099490952 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.072650047 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.096459638 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.080938366 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095628091 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.07502583 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.082323301 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.100264275 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.084022928 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104443152 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079097784 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09872372 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.079492472 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096232084 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.077363933 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.101446242 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081357377 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.097179923 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.077991001 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082659096 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101024752 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.081381337 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10128974 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084748993 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.097815651 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.086676662 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102980376 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.075650483 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.092969494 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.084688252 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097504043 seconds)
  done (took 53.199561286 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.140891967 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08456876 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.073247938 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09344328 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117483768 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077376438 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090095956 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.078168898 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.094874115 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087463899 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090252909 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074297626 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111751847 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119598432 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115353263 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088333615 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091038964 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.078551584 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09073067 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078126354 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111827273 seconds)
  done (took 2.703366796 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.100602296 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110270185 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107664173 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095369667 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102500095 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.108209737 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.090053699 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108795441 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113069155 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086573237 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112222272 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109107091 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.085797533 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104893381 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084851395 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106300141 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.112215491 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083954655 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.110072997 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108376656 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088820161 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.108682553 seconds)
  done (took 2.954630873 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087120352 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.081398604 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099331895 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.072989242 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.099297676 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.072851632 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.103628045 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.07640577 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.103250355 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.077533975 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.076381034 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.093902686 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082205918 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.091362024 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.077662842 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.093545104 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.147477786 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.086312318 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.09951187 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.08333066 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.093483086 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.080989709 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.075763548 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.094880021 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.076565422 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.108967003 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.082791399 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.100214656 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.082519469 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.09389372 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.082734381 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.075369727 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.097067232 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.078889054 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.09502589 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.077964344 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099112199 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.082554561 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.076023285 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.09663486 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.078509674 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.095414306 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083015042 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097058494 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.079856845 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.093424571 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.081249501 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08170476 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09120087 seconds)
  done (took 5.056456294 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.110886849 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.129733385 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099382499 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139407262 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.113936612 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09070926 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101451068 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.137080833 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.076312959 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.099166502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.097560291 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.11399798 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101047739 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.087511043 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100620463 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.081851767 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101916971 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.077639979 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.104606005 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.078807733 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.106538143 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.103553288 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.095225964 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.112915921 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105128842 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.080722624 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.096216996 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087306724 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.111758626 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.106636289 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087605114 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106748937 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.114988465 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.084554551 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096159069 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.08521324 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.116091764 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083286528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105696361 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.076884038 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104486886 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105070123 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.086681136 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.116927802 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082936058 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103348205 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08199367 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.094698327 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111714897 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.08455665 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110505734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.113348536 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.086304481 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.101988045 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087175215 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.114764929 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09983274 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081939824 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.103775002 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.093666655 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.095254323 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.0863255 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.112966015 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.102834738 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091348172 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113917144 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101184387 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.086315878 seconds)
  done (took 7.619594601 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.110689551 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104774539 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097767931 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11598086 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105561777 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.087415269 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105510988 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.086971102 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105717725 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110406023 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0877211 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.151630061 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.102615907 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092653966 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.105943018 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08679038 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105193504 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086682066 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105531034 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08659597 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.105318695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116371712 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086933784 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.115471976 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11782488 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083880268 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106194551 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087267745 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11579418 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.1053047 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118027172 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.087317042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105203567 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.09802247 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.118018494 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106034884 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.081307143 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.105547653 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.088291201 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.106355906 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083927206 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116250175 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105566051 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084767278 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107534028 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086832965 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116532946 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119348232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.092250686 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111712324 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.105710497 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.097763838 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106359438 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105105686 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.097985528 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.123082426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116962653 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116207946 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.088193503 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116307635 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116302727 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.104993235 seconds)
  done (took 7.146721622 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110743331 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111322069 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118301098 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.074946146 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096336111 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086506095 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095640962 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.076924853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.111880218 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093318792 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113529995 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105238313 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089341066 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114478924 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1065325 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090224889 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10654675 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105146728 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09228143 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105858112 seconds)
  done (took 2.737594246 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.088908577 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.118377385 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.080088245 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105159586 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.08269687 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105779354 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.081249246 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101651524 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080168254 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102703739 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091963585 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10969237 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098193429 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086210656 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.110730158 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.086711151 seconds)
  done (took 2.260740137 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.092864074 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118730619 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.117656678 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.080166735 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.095676253 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.075661326 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.081733028 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.095248431 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.075171293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.114436409 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.079244255 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.104895147 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.082046501 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097657613 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.075232727 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104653292 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.075603356 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.096106463 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.081883963 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117609388 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.090339353 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.100003182 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083710306 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.101147243 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.097849112 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.086299655 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.098681718 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.077141183 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.096562721 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.08286593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.098019928 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.08716331 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.094575971 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.078463377 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.097408454 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07763971 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.082308512 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101446407 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.103724298 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.082765644 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.077840533 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.09851067 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.082228293 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.09993032 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.075439042 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10264792 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.075230665 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104315796 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.077316181 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.099375193 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.081553915 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.101137146 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.080466834 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.110754056 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.083507173 seconds)
  done (took 5.76606595 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093804275 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103014602 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.074906223 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.076869083 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101281818 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.081210854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102911115 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.082375841 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100859589 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07710002 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100666449 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.084280572 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100461317 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083196362 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101391769 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083613179 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.093624316 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.08131868 seconds)
  done (took 2.361725711 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086247748 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079448829 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105470177 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080226257 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.098687188 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081328824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094843158 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.078235281 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097089508 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.079995076 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097929557 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.082496167 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096874928 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.082933333 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079918932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099152672 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.081732708 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096583837 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079776799 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095161656 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.081907671 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097082955 seconds)
  done (took 2.692454681 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.116262515 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.120515417 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.087860273 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.204088473 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.121246076 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.124442768 seconds)
  done (took 1.51260432 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105448616 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133819588 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080830999 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101912483 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09221332 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104710286 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084218782 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103670994 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115260813 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115907705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085223455 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115981803 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095809624 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11291709 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111130408 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091552658 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103132061 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103139272 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081222971 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122650789 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084582688 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11570875 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103451629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084947839 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103469383 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094365322 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114877897 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116939844 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08375908 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115361839 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111135785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084163258 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115381068 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1170597 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082227186 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11504022 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102665472 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105763582 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111354451 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113145507 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082551495 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110938063 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095509664 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110631129 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114621131 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08374573 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109405848 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10338341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084530567 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130779498 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111944128 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095161989 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111417725 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115597762 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095874018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129244145 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116345466 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113563973 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111217731 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098458923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114683883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111872798 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094592486 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115307327 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110296816 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113823451 seconds)
  done (took 7.66262508 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11817321 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101504135 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084607658 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116520992 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113875177 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08446172 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103639722 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103994331 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084583217 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101277825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146413905 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084608033 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113271434 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113632796 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085033826 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10405558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084878942 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114031771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081953652 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130591324 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104791952 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113458739 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09594055 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114519454 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116921649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110433567 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085398976 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103231682 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085498426 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10466623 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090587785 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103637856 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114197654 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.082187318 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113654554 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084866696 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103926438 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110472562 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085658294 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111574612 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112923715 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104624072 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104465279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084686211 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118257838 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103983821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084120174 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101315871 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084823377 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101144936 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117115517 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097508914 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117241424 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113913894 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103823563 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085262463 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103604412 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.084367273 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104422416 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.091620314 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114634804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103936781 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131270989 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085178786 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104033632 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094417572 seconds)
  done (took 7.50554059 seconds)
done (took 143.234498394 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.095571885 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.131778217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.092906782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156984444 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.080505548 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.13100473 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.110812203 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.11315472 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.080455974 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.079953397 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.100068508 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.081950695 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161023579 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.080112818 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.099172232 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.082054218 seconds)
  done (took 2.421927834 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.175918119 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.283182394 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097975486 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098240934 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.084591091 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099976116 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07856897 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.088449199 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.101046108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080099663 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.099665716 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.080876855 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.098872312 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.081000167 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.101163787 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.081215295 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.079420591 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099599497 seconds)
  done (took 2.661752655 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.107765301 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.135890291 seconds)
  done (took 0.993109657 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.114055096 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.169456482 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.266478515 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.145808364 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.129474877 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096945779 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149463349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.119830196 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197664744 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122237014 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12170173 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.087088099 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.133247886 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.089340573 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.107989631 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.087297402 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.133279311 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.106677221 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.089089103 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.107593325 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.112046053 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.100344017 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.089649176 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.107327757 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181401839 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119925303 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.079927782 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.079598093 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.108289073 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.108110667 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.086822471 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11343107 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.100408079 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.161886831 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.092860357 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.144329248 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.107278555 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.086395915 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.108485914 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.086084614 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.110544216 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.1100316 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.094973738 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.106465237 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.079911455 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105864086 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.082056028 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.079443917 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108141721 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.088252091 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107619381 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.105745881 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.143529291 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088445193 seconds)
  done (took 6.907861349 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795835266 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153710547 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.084475901 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.887404607 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135268325 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097462068 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.782322087 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.129624466 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224269201 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.804324547 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107357273 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120082992 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.200685007 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.240677727 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.908251079 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.300112803 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.676179307 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118143013 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.336835641 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.142620439 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09146373 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130826343 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122694807 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.400555338 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.106206535 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.085065825 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110163614 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114355716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.151819332 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085137012 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.108022327 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169860687 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.234497479 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.195305551 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.085428237 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.104166104 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.083992695 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.156404279 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25798331 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.206709571 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.148382324 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101014744 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.084274332 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.114521532 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12260145 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.080774374 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.152543369 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.161925073 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.182533263 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087543498 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.114298272 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092455682 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113599148 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.152663156 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.103147757 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.282474094 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.301688701 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10485567 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.092663729 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120424878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.234457243 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103690137 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215408656 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.109886537 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.204941089 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.083674602 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790459485 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.156107147 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.104458405 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.090926591 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.110766872 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.088843085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.112536257 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157705385 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.381036332 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.095073974 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107148851 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083169768 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224468105 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084479369 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104063895 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.152954432 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.085135216 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111523662 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096556043 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113837771 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16048937 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.213410541 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.114810325 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110688032 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.088182902 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116442495 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.085228052 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.202367232 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.2075356 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.149563664 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.199625551 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.112953912 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.154299002 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.155121643 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112063935 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.158689536 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.110176928 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09787661 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113279918 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.207489647 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.134169017 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083824342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108507679 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089087279 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.136242826 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086457294 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.110779261 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.157399508 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.472468856 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.154324405 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.080353316 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.107761611 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090614388 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.152578545 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111438991 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232667826 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.113011702 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.155413569 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110193462 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.080634264 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.111084639 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.154459014 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.114881138 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.091696786 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.115063951 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.090098749 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238010028 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.188936755 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116274059 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21218423 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171934254 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110533856 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.162325763 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.111890879 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.158627977 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091628096 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.113027512 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.085831912 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.768110337 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.11566801 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090539764 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108391871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.176232183 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.083547566 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084417937 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104543939 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.080852038 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.767479287 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086287962 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102466421 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08387178 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111488367 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.090763483 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109912866 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.088529075 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172202097 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.198793688 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113059369 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.110300595 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083592422 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.151324433 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.107099663 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08436795 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.105508595 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084879111 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.112725822 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.087004336 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104730329 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.161907313 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150244742 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.211726446 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569110895 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.104831334 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08392479 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217443849 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.083202253 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275771696 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.112393068 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.194656774 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.174913483 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082401438 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.299201995 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.158609312 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178051384 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086506311 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.160945765 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102144812 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.090658125 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173305192 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.084508795 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.110691424 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151651064 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097289168 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.115868966 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.915820504 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084009785 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.217847466 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.102756353 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.159404628 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.085612186 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114136933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282130596 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.084454083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122365364 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153004449 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.108912464 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.086026178 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.72201357 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10675416 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.094450704 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11109345 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.212579717 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.157088664 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.111490764 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091372946 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.115762737 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.15418988 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.201545127 seconds)
  done (took 41.401049706 seconds)
done (took 55.136954311 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.265068041 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.202193134 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.2512607 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.157400979 seconds)
  done (took 1.728962253 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169668082 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.118073117 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.136655952 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.099465862 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.12411183 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.099137657 seconds)
  done (took 1.523662368 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.347519438 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.258704067 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.227705644 seconds)
  done (took 1.615588606 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.237285168 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.256190031 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.316742974 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.398261013 seconds)
  done (took 2.079570839 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.19590198 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117654025 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095009335 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.130656219 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.140513199 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.195671889 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.134406783 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.145038578 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.102981116 seconds)
  done (took 2.077174568 seconds)
done (took 9.808177142 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.162904551 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.301875351 seconds)
    (3/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.259912013 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136251695 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.258428348 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.155749721 seconds)
    (7/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.231626561 seconds)
    (8/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.094439607 seconds)
    (9/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.212242553 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.183523949 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.116661745 seconds)
    (12/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100378046 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168994033 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.108484612 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.166168365 seconds)
    (16/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.19212144 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.114381932 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.183405552 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.191481969 seconds)
    (20/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.200752704 seconds)
    (21/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179637626 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.192583678 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.170384949 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.221062196 seconds)
    (25/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.087766204 seconds)
    (26/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.098256387 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.069187696 seconds)
    (28/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174619222 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.106511394 seconds)
    (30/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.105453768 seconds)
    (31/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.16806504 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 0.222906936 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.12637645 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.147096415 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.089354131 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.133318355 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.212633626 seconds)
    (38/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.179724032 seconds)
    (39/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.180909537 seconds)
    (40/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144450187 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.112165823 seconds)
    (42/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088420857 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158855792 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.08200147 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182295561 seconds)
    (46/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.105746873 seconds)
    (47/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160978096 seconds)
    (48/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20196612 seconds)
    (49/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111551101 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.087071945 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.121181673 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.102051576 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.178758886 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.108777017 seconds)
    (55/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.081352224 seconds)
    (56/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093455949 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100051015 seconds)
    (58/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.091539212 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.232857166 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.10899659 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.105167016 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.12950443 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088391532 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100868252 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.087337054 seconds)
    (66/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.201934876 seconds)
    (67/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.114810763 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157977952 seconds)
    (69/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.133570037 seconds)
    (70/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103583934 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.070699189 seconds)
    (72/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.143972735 seconds)
    (73/286) benchmarking ("sort", Int8, true)...
    done (took 0.199657431 seconds)
    (74/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.101735853 seconds)
    (75/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.087779604 seconds)
    (76/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.193598202 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107583808 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 0.080983045 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.079988628 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.089895943 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.080227567 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.108221704 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.182995891 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.094163839 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.09197351 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.097006316 seconds)
    (87/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.130229669 seconds)
    (88/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.181330243 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.087608297 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108564919 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.087788776 seconds)
    (92/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.146836657 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.162552803 seconds)
    (94/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.093227147 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.130238448 seconds)
    (96/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.089722693 seconds)
    (97/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.115862332 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.090720977 seconds)
    (99/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.115715211 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.082091403 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.126487873 seconds)
    (102/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.095824247 seconds)
    (103/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.115095054 seconds)
    (104/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.080271819 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.118399503 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099776045 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.172410534 seconds)
    (108/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088072829 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11413253 seconds)
    (110/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082404237 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090842501 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.08468283 seconds)
    (113/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.168800469 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079912243 seconds)
    (115/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.155029742 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.080146019 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.17954616 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.113299866 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.087768242 seconds)
    (120/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090155601 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.085078188 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107642976 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.088465639 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12733815 seconds)
    (125/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.121371592 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.102521095 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.105196067 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102051405 seconds)
    (129/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186247097 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.089435103 seconds)
    (131/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142325295 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.071793928 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.080175712 seconds)
    (134/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089735981 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.088062245 seconds)
    (136/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.089364216 seconds)
    (137/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068011746 seconds)
    (138/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.1785676 seconds)
    (139/286) benchmarking ("sort", BigInt, false)...
    done (took 0.216536214 seconds)
    (140/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.10755108 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.112718186 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.090355525 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091432605 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.068696812 seconds)
    (145/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.070901213 seconds)
    (146/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.113019808 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.080372803 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102850944 seconds)
    (149/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.082830071 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108346138 seconds)
    (151/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082899658 seconds)
    (152/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.151984215 seconds)
    (153/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093344925 seconds)
    (154/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.103198296 seconds)
    (155/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149074039 seconds)
    (156/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.105830988 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.080813097 seconds)
    (158/286) benchmarking ("sort", Int8, false)...
    done (took 0.186631611 seconds)
    (159/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.170183793 seconds)
    (160/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.145284035 seconds)
    (161/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080700369 seconds)
    (162/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068799662 seconds)
    (163/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.187130285 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109035401 seconds)
    (165/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.162527186 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.116103603 seconds)
    (167/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.069081179 seconds)
    (168/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.102252447 seconds)
    (169/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068999521 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.10852163 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.084886843 seconds)
    (172/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.070585727 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.128795011 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.182830281 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.106729582 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.11468434 seconds)
    (177/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.087304687 seconds)
    (178/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092268027 seconds)
    (179/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.090374301 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081783755 seconds)
    (181/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.109761966 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.082337486 seconds)
    (183/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.090629401 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.069383122 seconds)
    (185/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069447149 seconds)
    (186/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091149966 seconds)
    (187/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.073191746 seconds)
    (188/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099083713 seconds)
    (189/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.137151174 seconds)
    (190/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114616683 seconds)
    (191/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.069298778 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.226181562 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079507568 seconds)
    (194/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.130090893 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.080969315 seconds)
    (196/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.129873924 seconds)
    (197/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.147370054 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.074321348 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.080669766 seconds)
    (200/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.091751901 seconds)
    (201/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.235305759 seconds)
    (202/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.077834475 seconds)
    (203/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.099069224 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.081560528 seconds)
    (205/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071257476 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.11148933 seconds)
    (207/286) benchmarking ("sort", Float32, true)...
    done (took 0.232036318 seconds)
    (208/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.083768021 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11599306 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.082833421 seconds)
    (211/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.080486248 seconds)
    (212/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.093908732 seconds)
    (213/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.09553511 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.1222765 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079747576 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.101440977 seconds)
    (217/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071720524 seconds)
    (218/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091200935 seconds)
    (219/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.070762043 seconds)
    (220/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.161642235 seconds)
    (221/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.070569204 seconds)
    (222/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.079866602 seconds)
    (223/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10219659 seconds)
    (224/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.123471464 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.129003961 seconds)
    (226/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083780741 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.125456358 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070113127 seconds)
    (229/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.099752557 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.081324055 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.09148147 seconds)
    (232/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.07834822 seconds)
    (233/286) benchmarking ("sort", Float64, true)...
    done (took 0.231431958 seconds)
    (234/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.0908587 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.094976271 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.080924281 seconds)
    (237/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101332846 seconds)
    (238/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.070453399 seconds)
    (239/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.163887646 seconds)
    (240/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.070346826 seconds)
    (241/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.103278168 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.08160034 seconds)
    (243/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.087101049 seconds)
    (244/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.105162835 seconds)
    (245/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.082248547 seconds)
    (246/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101427722 seconds)
    (247/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079238187 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069603749 seconds)
    (249/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113594582 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.087409263 seconds)
    (251/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.103254498 seconds)
    (252/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.082792784 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.112735241 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.069132932 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 0.172386436 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.108684844 seconds)
    (257/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.104766779 seconds)
    (258/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158354119 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.1170237 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068762275 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.103506511 seconds)
    (262/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071457529 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.072349954 seconds)
    (264/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.100058817 seconds)
    (265/286) benchmarking ("sort", Float32, false)...
    done (took 0.172094821 seconds)
    (266/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08009923 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.088808245 seconds)
    (268/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.092632862 seconds)
    (269/286) benchmarking ("sort", BigInt, true)...
    done (took 0.236012445 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.079854551 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.101730453 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.106872366 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.081309815 seconds)
    (274/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.10189781 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.089219065 seconds)
    (276/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.156485766 seconds)
    (277/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.08014237 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.094045715 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.08144193 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.101870705 seconds)
    (281/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.082433792 seconds)
    (282/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.104662068 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.079616309 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.082869579 seconds)
    (285/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.094294556 seconds)
    (286/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.070125592 seconds)
  done (took 34.518409264 seconds)
done (took 35.306545425 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.0946443 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143297398 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.090691316 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.130861105 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.094294233 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.117521018 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.089374029 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.115593084 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.093657881 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.117575484 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.092267299 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093021106 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.092074461 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.114221578 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09221421 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134364631 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.094198484 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.087985098 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.106554289 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.079940795 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.10731425 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.080656161 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.104998022 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071374847 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.092313723 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.110562758 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.087132428 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.114167492 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.080785242 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.103330394 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.080044778 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.110435151 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.080927044 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.09463606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.108798354 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.084547243 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.115894403 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.090481591 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.105905994 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.080952187 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.111103681 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.083120337 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.088627589 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.11051552 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081952554 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.102736088 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.084660273 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.117077816 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112664865 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108846496 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.089230944 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.11433508 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.090929211 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.109867201 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.080276881 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.084342666 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.102619602 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112289596 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.107256297 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.085851623 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.112380167 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.089067708 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.102640261 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.084520959 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.107426408 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.091723226 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.092232872 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.102762902 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.091413496 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.109162766 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.080618044 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.107379849 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08037967 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.081311084 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.112832305 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.092444651 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.102415952 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.082966152 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.110918301 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.086878628 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.102288857 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084313705 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.083477694 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.105026075 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.083544103 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093352734 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.08112366 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.087361832 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.102771934 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.084136865 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.109640819 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.087808535 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.104335512 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.092521258 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.081041757 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.102379017 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.081280625 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104210527 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.083220505 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.08146477 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.10264483 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.084468742 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.1130699 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.082343797 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.105416495 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.094066252 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.103168919 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.088813528 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08092254 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.102922331 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.096750136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.114019987 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.081459565 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.108456251 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.080529952 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.083365868 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.102830754 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.081898549 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.103318387 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.081488411 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.083164081 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.103331731 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.083899179 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.105465213 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.094906369 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.103388677 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080545509 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08409595 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.103718985 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.086759887 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104323862 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.081200703 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.105706224 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079854688 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.085014207 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.104000284 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.083937318 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.106427764 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.084842095 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.104847524 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08531268 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.08619668 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.105536566 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.081075317 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.102718323 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076285116 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.086913195 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.106569389 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.082807819 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.103665952 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.083335291 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.103956773 seconds)
done (took 15.415287458 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.082544343 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.175795864 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.139041933 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.11545703 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.124903956 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.08182349 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.114560632 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13464555 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.083073148 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.135472368 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.103941277 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.124448431 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.141924231 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.080872036 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.081881869 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.108131081 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.082693336 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.120788959 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.140089909 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.102892813 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.137190495 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.080389035 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.13370637 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.126963566 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091523208 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130512709 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.08234094 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.085857117 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107478032 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.098685375 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124186017 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.085132161 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.105015999 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102636494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.120860686 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.089124717 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.104695547 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.088445451 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.104024992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.081939863 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.12672393 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103327707 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.109524385 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.087762025 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.108572897 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090519494 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.105205289 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.09057712 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114511092 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086498612 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.118879857 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.109086913 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.10788785 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.097691565 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.103263197 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.092379473 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120084035 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.08931825 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.105898868 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089714297 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.104656167 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.086073392 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.1190113 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.105367583 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108379871 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.096695546 seconds)
  done (took 7.862758783 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.099927765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13445892 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.099997331 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.122576615 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.081622819 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.105657216 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.082216345 seconds)
  done (took 1.568938683 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.083924281 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.125369927 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.131066997 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.130541397 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.104575249 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.132232409 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087655554 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.105518325 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.101795936 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.106364934 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.107184833 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144972448 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.084884562 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.114612082 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110478774 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.10567248 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.109338139 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.105771732 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.085775874 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.132532509 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.085564253 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.12394717 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.084790032 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.105958652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101452214 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.083208587 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152882917 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110786772 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.080610043 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.086166826 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103347048 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.145086025 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100829866 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.114285576 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.082823135 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125507939 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.101959873 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.103667205 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.09889167 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.110385059 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.100834927 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.084110948 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.107527832 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.081219019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.110879693 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.096640684 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.10970834 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.084059903 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.08588519 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.128825904 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.084587392 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123415713 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.082442535 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.110032913 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.084769545 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109766427 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.092506862 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.107447895 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.107293535 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.081339726 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.126216196 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.124644399 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.100755977 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.125082429 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085529456 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.123053925 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101305065 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.08610479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107626416 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.086572148 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12635425 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08084182 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.109143243 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.097412588 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.108000963 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.110206485 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.132448974 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.085077225 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117225447 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.083888911 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.084211142 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.10609254 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.110324029 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.109456943 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.083002747 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.110251601 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.087224735 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.104073188 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.083059677 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.087031838 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.104644589 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.085079864 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.109325986 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.083541332 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108698172 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.10325769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.107612004 seconds)
  done (took 10.916144195 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.0846347 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.084970008 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109340456 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.085324868 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.107067651 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.084251637 seconds)
  done (took 1.405268811 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112349996 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.108204774 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.096473129 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.111195918 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.122845881 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.131813302 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107626013 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115992653 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.123725051 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.095879292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.13360775 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109059192 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138449754 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.088607122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.131293703 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.087711527 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130487903 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.089032457 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.117458626 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.088620452 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.12363851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.088657013 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111675095 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.103419212 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116213959 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.088744603 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.1117227 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.096020978 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.117651023 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.092889183 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.111687821 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.092881523 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.11160695 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114655637 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10805301 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.112617496 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08878763 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117270958 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.090064196 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.115678237 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.109547324 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.117682498 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.093785002 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119298674 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.09265638 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.11475801 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094645782 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112774401 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.107422317 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123507716 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.094256921 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.112039409 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.092371249 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118711334 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.088745332 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116469776 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094626899 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.132357463 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.088974598 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.113515651 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.086799508 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116291639 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.093084043 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115243309 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.093756114 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.116853326 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.111119778 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.089549112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.089359809 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.111346332 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.094860311 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.108690853 seconds)
  done (took 8.576065077 seconds)
done (took 31.161736954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.671678857 seconds)
  done (took 1.521662706 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.772647125 seconds)
  done (took 1.625527438 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.77709309 seconds)
  done (took 17.655437797 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442677578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.513364346 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.939353774 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.158222953 seconds)
  done (took 2.906477624 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.935777353 seconds)
  done (took 1.803489504 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.272729256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.224079339 seconds)
  done (took 1.355060265 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.720138042 seconds)
  done (took 1.585905222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.389077366 seconds)
  done (took 2.252349016 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.311624612 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.15316103 seconds)
  done (took 1.340884328 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.5513175 seconds)
  done (took 1.422504881 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.573195561 seconds)
  done (took 10.444543811 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235438046 seconds)
  done (took 1.116553211 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.284488974 seconds)
  done (took 1.156036209 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.406961095 seconds)
  done (took 4.276906533 seconds)
done (took 51.320910822 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.093994133 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.096413457 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.119369926 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.093532687 seconds)
  done (took 1.268733373 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.098784098 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.112857958 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.098546785 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.112912612 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.099831421 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.113526045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.09280355 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.123410476 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.089181352 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.114656042 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.090200844 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.088863338 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.116554517 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115735724 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.087551018 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.093249541 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.121579277 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.08948444 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.11707503 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.090801189 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.111479099 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.092907693 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.118399594 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.088330138 seconds)
  done (took 3.35498603 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.094539518 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.089439809 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.114217488 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.088063779 seconds)
  done (took 1.26496458 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.095176909 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.12281804 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.100226995 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.117534682 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.102015473 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.123336681 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.086793033 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.085656392 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114221539 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.094100067 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108354302 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.106609134 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.123913594 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09299117 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.11979881 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.083757649 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.109649494 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.100192219 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.118127832 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.094823233 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11058736 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.093703147 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.084581462 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125121697 seconds)
  done (took 3.394094184 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.166824962 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.120403299 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.107820616 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.117629716 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.129405725 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.133647127 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.081964669 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.132246467 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.081532179 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.122916816 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.086824662 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.152319916 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.119637622 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.082765037 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.081874312 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.105616241 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.094788992 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.118942105 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.085346 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.120437887 seconds)
  done (took 3.124150356 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.093064458 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.087216002 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.105411171 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.085510508 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.116547446 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.090093133 seconds)
  done (took 1.457119253 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091087505 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.083857555 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.111123487 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.085379857 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.112337126 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.083506974 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.106169392 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.084624767 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.083986232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.106852824 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.085351482 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106841198 seconds)
  done (took 2.024099757 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.493562511 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.110082486 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.086145635 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.106113105 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.093928253 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.107418805 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.100083015 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.109667749 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.111189661 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.110036327 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.083946308 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.08606828 seconds)
  done (took 2.478268934 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193452871 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094373955 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24590529 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.33480143 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148338356 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152864503 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264550116 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156213214 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.166963577 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132569063 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186022699 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148461458 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121710516 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163884813 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131489307 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144985948 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161611859 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178507027 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115776528 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214320242 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148948674 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133335188 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169508148 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141852855 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131156098 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150859565 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.090194571 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122169774 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161126811 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157424978 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162264032 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115597589 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1320369 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.460802171 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204875977 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172246452 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275282459 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126897416 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167577965 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135310823 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234122953 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108005653 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204300207 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121378298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12933054 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167568706 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323858482 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.16493508 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.124920178 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134862737 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167228293 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169005214 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.164538241 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106437098 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308712276 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116649359 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.134254563 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174838728 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17025629 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178188253 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160468719 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.114272436 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176221552 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172229093 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166958329 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.134787456 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.151821854 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094395031 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159553699 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183535548 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162140008 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151988708 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.171676112 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129601604 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152845926 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160334575 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14542032 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142617808 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148180508 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11376541 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140489566 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105645923 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124142654 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.162376487 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119109616 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186261278 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126657931 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163360253 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192375515 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123647836 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149998664 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152089049 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153568226 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138462815 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085435438 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138637664 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.144371065 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147281513 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100086998 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147976959 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134121559 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.095839093 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14338478 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.091456901 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148678962 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.120379318 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337163092 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154403396 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.117617612 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130050394 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138947889 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.141926537 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158828702 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174784886 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126213219 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100859236 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183545722 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149896738 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.126642906 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164082828 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169888061 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.121941857 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130544016 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156499178 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177012471 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132323211 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176179062 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110102241 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126133971 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133731288 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149705369 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12384591 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151266712 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12516575 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118348268 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205360502 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.092849681 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129641912 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163785702 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096223558 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122279744 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10831576 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129279445 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.127132373 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.107775977 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.129412109 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147106368 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148719965 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122066525 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142742857 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133508473 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177759972 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127108085 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.11715688 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139801473 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.088801889 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.165457036 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174253613 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125949566 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182911001 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153553587 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187263522 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151612592 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124173833 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166511765 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.097913193 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.113917848 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154428501 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147180443 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126458648 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.16917187 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207906849 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.153716543 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116267794 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139790702 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155036594 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.156253024 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140643916 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.104569951 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151998509 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148482967 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.090068534 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.117607449 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.120637978 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107784899 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12355941 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102767311 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16660533 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154829998 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202115959 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127006296 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131761989 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172530243 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.119363893 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152305379 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.377047538 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133407035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.171296497 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17081141 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155665916 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13295229 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160424104 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.089957007 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.092774149 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.126091741 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152443606 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127332658 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102233168 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132681122 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171625098 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.335553809 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140895977 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214861819 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156031345 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180463667 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.08968959 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.161024777 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159976093 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124137025 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.164162527 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12503991 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.116226133 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168471552 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136713204 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172308836 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152638187 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156745313 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178708408 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.140130336 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099671998 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13993705 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154181876 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130535558 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133081425 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137672111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128954628 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320689252 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.119757797 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094398499 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162854846 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136878869 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161567427 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.139355603 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153418805 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.095508989 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133477618 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150350416 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11306844 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109640247 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337537141 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170641404 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135881161 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.323094817 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162281366 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12403368 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.295305415 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177472477 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.367371586 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103918917 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13516708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151531585 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151308856 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.327312128 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171475563 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137574684 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166005368 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123210406 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.127349631 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128835375 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114316301 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143003311 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133668376 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099613972 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.143391273 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.128702202 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16410942 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133504796 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122972498 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155126851 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.1437568 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.111185034 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137206849 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188338379 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149400097 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164557924 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.139986249 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.129442201 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208550688 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093658943 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122800805 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.095768701 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168629182 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125508117 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124116789 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.204122265 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187176458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15068515 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154716054 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106012584 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.112685046 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151434919 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114831195 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211292449 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109158432 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.127385902 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175784413 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.136044482 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099436278 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15143627 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.276937571 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137597998 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163677179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.081229019 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.270488614 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118728238 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099868841 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154204852 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160362951 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.130057524 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.138983268 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153841443 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135958071 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152018856 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105334236 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180408033 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217924603 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131856671 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160482519 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.127012366 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150720959 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.327016503 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165676445 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137498937 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.127266587 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129180359 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172325055 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174222477 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.125963611 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153877527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154160314 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125279449 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156251119 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129066062 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186487346 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124138721 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155452577 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105964318 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117256628 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148606639 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.175641174 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100637458 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161415941 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150497429 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124930254 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093757895 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142350415 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149501858 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1339943 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.094472898 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163239849 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.091300301 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154860543 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16869012 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126110933 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120867515 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139174097 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128887645 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107857328 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134689135 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129506787 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.129194268 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168055889 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123343726 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166781035 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162886771 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154963598 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.324747856 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134774861 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632015815 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.122188325 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172723005 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138856571 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169123046 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114470893 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156201034 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15224256 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142574297 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155620311 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115638763 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.224208824 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155593384 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.15044924 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09806633 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13565336 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135431579 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.098252581 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144968631 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153184761 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132662841 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.104627256 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149276359 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136048926 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.100877448 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132186807 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174087519 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114260463 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189463595 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142919983 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131427123 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156770365 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157407032 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122455877 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125425623 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162129693 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134957038 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142152081 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.100852835 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.128067206 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17046307 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.091383314 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151776863 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151959559 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151396457 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126593299 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.128719042 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151359132 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133597076 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128031715 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124765567 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.144886507 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14932023 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102484173 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.120817341 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121965943 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144643601 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.143121458 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092803423 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.155873905 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172496647 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.089644096 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126296695 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2710316 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149568977 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177748307 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.109476306 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129004036 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136416903 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112108407 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144631855 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15195084 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.095396986 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125609574 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.122740003 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130320542 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137472817 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148373032 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177291085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.331349042 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185311276 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.130329259 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.272172558 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106437698 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147351366 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089908318 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.123167362 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134887924 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101372718 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136570156 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181659659 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17046175 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.138707296 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.101340746 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120299282 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.092457492 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125833592 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152099774 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118598965 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151072133 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133841177 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082068375 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140063879 seconds)
  done (took 73.251579726 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.15917748 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130606298 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.141351237 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.191450569 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160025224 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.244368194 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.200660036 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.230665263 seconds)
  done (took 2.421631652 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.087993104 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.136974973 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.124026656 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134227337 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.109193749 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.110183689 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.295307059 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.13366755 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.109403142 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.114238168 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.129432793 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.110863808 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506620175 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.119741794 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.091830636 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.104447054 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.109587039 seconds)
  done (took 3.485750454 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.052327089 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.460826071 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.869811342 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.183961794 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.169073225 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.090808751 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.690382978 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.089095073 seconds)
  done (took 11.569464419 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.113943576 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135365904 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.127566574 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161521145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.119230327 seconds)
  done (took 1.631127192 seconds)
done (took 111.592889543 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.091705086 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.121084703 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099590768 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130919108 seconds)
  done (took 1.401075974 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.099787872 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079247576 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.113123324 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.082937391 seconds)
  done (took 1.34092085 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.196800162 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.173292635 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.389974163 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.073677024 seconds)
  done (took 1.462645661 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.109129877 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.125262386 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.099434463 seconds)
  done (took 1.311475305 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.100774623 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.09524079 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.128265914 seconds)
  done (took 1.298430392 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.099127464 seconds)
  done (took 1.06885725 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.105721802 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142756154 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.115209047 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.141776926 seconds)
  done (took 1.479639679 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.092946801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.094425917 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.140323126 seconds)
  done (took 1.303639024 seconds)
done (took 12.009051696 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.100729187 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.232267573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383881547 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137529898 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.681210436 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.401469318 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.884534721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.141507799 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16232378 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093593036 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137499381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648924444 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.903320023 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.150063602 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.889404773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.149076883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.710854726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087085295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.111250774 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.086917746 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.896658821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.087071493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086273085 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112528644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.682458379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.416699242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086611022 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.174729631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.085898573 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120021263 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.366223358 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111987167 seconds)
  done (took 15.284308595 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.093245099 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17121061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.099925257 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12086532 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.09503613 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.115531686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.091076026 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.087314674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175029646 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121297497 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.104288145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.118587124 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.091254808 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.113568206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.106890501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.113397757 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.088066056 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112165223 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.087921234 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087034086 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.132151903 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.086756547 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118199888 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.087538407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11445847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.101092244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113497846 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.087429054 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112787457 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096040727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.089412042 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.114249017 seconds)
  done (took 4.422285078 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139118259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1839038 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.124233794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.121795041 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.166235255 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.088523801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192257913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144243369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182332825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093460877 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13691526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09032487 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148473185 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.091924145 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133501608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.086799976 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113384884 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.087860329 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.112443649 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.087756729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.106405427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112766052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.086434861 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113622993 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.087149197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.12799108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.086932021 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.113748841 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.08712746 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120769632 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.090121185 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113078648 seconds)
  done (took 4.752859982 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.091379102 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.092004949 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129613292 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.103256778 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120037926 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.090039147 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.117885404 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.088092765 seconds)
  done (took 1.81142633 seconds)
done (took 27.2447937 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.105491715 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.092790097 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.127231967 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.100038756 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.123859204 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.100574834 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.12027051 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.098412719 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.132750387 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.096242583 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128909796 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.086711853 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.088355615 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112287692 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.10017166 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.125270129 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107139197 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132054343 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.106993263 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137940448 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095388869 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134916012 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104493909 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.136924802 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.109723125 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.137793988 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.110803306 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.126461029 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.088731898 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.089006568 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126480312 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.115297735 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122750276 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10184563 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124989976 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092227316 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.115698719 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.091511424 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.126401687 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099768735 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.120062711 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098751405 seconds)
  done (took 5.669082231 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112990414 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.147579691 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.113052237 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.116382778 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.08822446 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.107826692 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.111800467 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.083461992 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109839686 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111105128 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.108908925 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.07896506 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.106847411 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073897927 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078126599 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.103857983 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080312279 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.101969764 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078842024 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077588575 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.108025223 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073974931 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080343637 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.106841877 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.076939272 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.10867053 seconds)
  done (took 3.533758292 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.094407448 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.102330163 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137979913 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.167033604 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.121508019 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.122548749 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.095185285 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132639221 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.102923122 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112291975 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.089458273 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.141733398 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104116361 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.12072602 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090937496 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.101498629 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.127601143 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.088707576 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119468479 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.107061527 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.131984201 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.097076157 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.126437037 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.097641832 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.1135275 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089435456 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.117937209 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.097308603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096266084 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.127840585 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09267903 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117640328 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.08823499 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127330871 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.09243762 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.118313466 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.107347898 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128433791 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.096048645 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.118510352 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.094641424 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.091575214 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.135367565 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.156489089 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.093765798 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.093061533 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.116119616 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.096409269 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.115199581 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104767442 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124883677 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.087128534 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.116461455 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.088698639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.08830274 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.130810859 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.088511161 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.116199842 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.099656268 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126945158 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.099202114 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118304283 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.101963656 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115404229 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.094791744 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.088193229 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.118869866 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.086248088 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13839546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.09777859 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161109935 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.095425276 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122357518 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.095323271 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126908949 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092741146 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11474069 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.102197112 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123512183 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.093737168 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.097559678 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.116539762 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.088929662 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.132611613 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.088843316 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.115160911 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.088334685 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.11992484 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.089985389 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.087447783 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.1284624 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.085872369 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.120449359 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.100417904 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120963976 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.087724875 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.120592429 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.091954896 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112616991 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.100651653 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.119341737 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.088084308 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.125514622 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093953793 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09592623 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13238904 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.099110594 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.12474705 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.098157776 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126623797 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.087634786 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.117365002 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.090626176 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.089217513 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.12477241 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.093721866 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.12401535 seconds)
  done (took 13.729839061 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.223418421 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.217841171 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.195400073 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.29516088 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.108207605 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.148500398 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214962864 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.131185753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12342779 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.15291811 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16373765 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.148551093 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167254245 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.187385735 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.176770065 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.124485469 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112644469 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.161244381 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21884658 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.268306978 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.142904373 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.095477324 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.154074003 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.158514795 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.128031997 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.095999536 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.130976515 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.099321273 seconds)
  done (took 5.540748093 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.103259431 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146757486 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.092780533 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.136715296 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.113216253 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.114526209 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.091358188 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116519076 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.099913914 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.128611423 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.08646961 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.12139224 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.094355285 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.124511557 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.087833006 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.124095289 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.097652031 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.116135732 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.091133246 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.091670603 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.124789937 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131773352 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.091610531 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.086131404 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.123960107 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.086373543 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.116360748 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.136233536 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.088334505 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.13584135 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.08576822 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09602503 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.127716677 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.087575427 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.115086967 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.089662405 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.116499898 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.089818229 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.089926108 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.112477831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.085969393 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.107786999 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.086922139 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130345142 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.093836628 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109023434 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.094149386 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.121826597 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.089214449 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.085172852 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.117466745 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.090974822 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117972477 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.096004568 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.115800601 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.088832798 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.090495202 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114299188 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.093900214 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.11790086 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085780605 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.112742063 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.093486935 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117934427 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.097212417 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.091578517 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.112584825 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.08959658 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.120297931 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.094445516 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.115572735 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.09520882 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.085100445 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.117286722 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09061287 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.121278825 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.0913551 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.113583314 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.088545287 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.087746085 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.104435922 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.08742838 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.10305663 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.091103532 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.085975091 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.113778151 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.090075551 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.122016453 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.103534539 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.117495234 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.096132486 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.117034074 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.086953673 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117359448 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084852337 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.091019314 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.132323825 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.134063222 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.087576951 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.113293302 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.102439374 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.090014453 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.114195768 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077249193 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.12505137 seconds)
  done (took 11.977702072 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.126166226 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.146684057 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.089713463 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133341054 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.121105562 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15580097 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.094222835 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.122619673 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.089131178 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.135457235 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.08803787 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126717575 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.088363666 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.129404645 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.121926878 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126514708 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.089541822 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.130931464 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.092157209 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.162688706 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.10817969 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143317855 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.108069394 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123118853 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.093504121 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.135550178 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.124827791 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.134078161 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.101322105 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.1433836 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.102076859 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160140217 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.135546552 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099178114 seconds)
  done (took 5.092387607 seconds)
done (took 46.528805551 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.069760553 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.305350231 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.072216033 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.868757815 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.136278124 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.089588614 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.082523138 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.068984589 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.519375841 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.073628489 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.303294438 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.57453644 seconds)
done (took 58.168622044 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.112520646 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.226993085 seconds)
    (2/2) benchmarking "String"...
    done (took 1.360489478 seconds)
  done (took 3.589328248 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.679597583 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.007441087 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.331641318 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.066368778 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.072419458 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.366199286 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.684225757 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.329900066 seconds)
  done (took 26.860249808 seconds)
done (took 40.245097865 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.076134402 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.102832048 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.072948951 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.053773159 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.177777907 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.114879604 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.348320551 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.058000654 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.072114298 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.069270115 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.06820039 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.073285208 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.073827171 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.345719466 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.082329852 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.073079938 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.091283309 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.363709335 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.472284426 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.080155602 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.071494575 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.074453132 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.093417541 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.087833179 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.09051683 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.068704248 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.079157484 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.078211733 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.630425487 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.075175992 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.07042742 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.491912564 seconds)
  done (took 186.785132518 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.068521268 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.1626759 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.29617784 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.134937216 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.563212311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.27329413 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.21626386 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.640035688 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.090804009 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.101407643 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.200002302 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.069044942 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.261586722 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.037488532 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.099247161 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.15341507 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.403757118 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.267156149 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.105743638 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.180893885 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.071049133 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.088352518 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.030507535 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.162595033 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.107053652 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.137282506 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.107497627 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.080050102 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.265200654 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335645763 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.111402761 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.101200712 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.694488484 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.927009834 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.094794367 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.077840782 seconds)
  done (took 144.722342547 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.069413515 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.069490911 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.069793896 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.071522863 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.102332278 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.06987357 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.630898562 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.651946067 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.599687007 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.63090805 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.445717573 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.341710777 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.076260859 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.163315488 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.08579474 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.070900256 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.071331556 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.086361509 seconds)
    (19/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.07067472 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.070780956 seconds)
    (21/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.097762484 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.071490275 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.638999687 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.091318949 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.246362325 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.088421948 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.102900848 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.468984983 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.196254845 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.076860466 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.103546045 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.401752872 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.120445029 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.071402993 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.371345184 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.382626828 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.076554551 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.185458856 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.073919243 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.10378476 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.07287244 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.351211272 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.07308517 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.07328503 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.076382939 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.718242844 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.078016273 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.632907385 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.073376215 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.042574634 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.078270601 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.07246502 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.600790692 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.713809101 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.09476579 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.072280006 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.075822059 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.073295419 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.073096212 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.106417338 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.608543329 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.165711451 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.074043979 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.076811308 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.105856182 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.074706208 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.180023053 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.073623307 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.496117844 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.148693247 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.178449087 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.648652966 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.079152287 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.168458271 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.195254906 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.07387639 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.074053828 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.075501835 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.074423381 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.185544076 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.074723149 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.46603273 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.249933799 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.091772156 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.468905544 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.177521248 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.075681117 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.400298666 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.081500012 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.074877207 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.847287093 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.173203482 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.075293174 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.074940011 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.074948701 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.466588557 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.660335853 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.326160874 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.081267551 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.891478067 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.096811545 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.476680276 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.628625378 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.743527013 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.082698072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.186363243 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.251512775 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.093212867 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.075172255 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.446830422 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.081790536 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.131824708 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.07576646 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.473303624 seconds)
  done (took 352.019352197 seconds)
done (took 684.531237103 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.677965588 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.669529452 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.779077154 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.66266106 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.626711759 seconds)
  done (took 9.42642744 seconds)
done (took 10.43664452 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.264444228 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.263951193 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.136202319 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.265983139 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.108743526 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.282765484 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.244394194 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.096541009 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.179201625 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.157331081 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.177997528 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.129019263 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.110405852 seconds)
  done (took 16.428147136 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.408572316 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.389405687 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.14037587 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.408070237 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.116806644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.423040229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.310111839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.287937594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.294145896 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.091764003 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.090041781 seconds)
  done (took 14.973268072 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.401895176 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.396246983 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.144490947 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.404238628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.11888452 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.39891019 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.286801456 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.296155373 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.298538032 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.093469465 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.090916354 seconds)
  done (took 14.942952962 seconds)
done (took 47.355371639 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.087359152 seconds)
  done (took 2.100025474 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.121803657 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.287879966 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.106366383 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.092739645 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.087853972 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.089597788 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.093570407 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.089866924 seconds)
  done (took 9.983540276 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.08744481 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.083719608 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.083690009 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.084838853 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.082872677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.083490198 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.086270805 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.085935202 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.086057961 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.083969455 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.083932651 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.083528935 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.085953201 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.088851799 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.086052765 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.085679259 seconds)
  done (took 18.37735246 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.085328607 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.083365728 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.083686261 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.083926788 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.084436354 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.084026193 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.084779297 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.083824553 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.082917062 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.08429703 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.084135721 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.083236689 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.08358769 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.083498616 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.083931854 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.085604926 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.083851132 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.084494749 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.088632184 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.084135475 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.084970223 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.084981408 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.085764608 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.085094896 seconds)
  done (took 27.042426388 seconds)
done (took 58.515775515 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.691423616 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.451568757 seconds)
  done (took 6.158067547 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.144721385 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.147250622 seconds)
  done (took 3.307844387 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.087766769 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.087475358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.088356417 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.087830181 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.087822094 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.086730255 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.088350828 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.089082732 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.08799896 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.087399932 seconds)
  done (took 11.894113693 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.087726978 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.088329286 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.085863772 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.087567381 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.087647638 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.085880873 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.087750502 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.087453704 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.088525071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.084718063 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.08926418 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.086066979 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.087982443 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.085852464 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.08805644 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.196732451 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.198547072 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.199005948 seconds)
  done (took 20.918803896 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.214189692 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.223013386 seconds)
  done (took 3.561959346 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.329153963 seconds)
    (2/7) benchmarking "second"...
    done (took 1.241122969 seconds)
    (3/7) benchmarking "month"...
    done (took 1.309122844 seconds)
    (4/7) benchmarking "year"...
    done (took 1.297010099 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.241026174 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.219018871 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.241016296 seconds)
  done (took 10.002434688 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.203586933 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.398252281 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.499017324 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.795104248 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.202217023 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.205710365 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.071567039 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.205910587 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.209371957 seconds)
  done (took 13.916496709 seconds)
done (took 70.773657199 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.205537915 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.194918019 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.456025242 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.207135663 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.216474717 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.536456696 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.249983037 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.342102953 seconds)
done (took 37.534456684 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.194956651 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.191401913 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.943868704 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.214851594 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.263288091 seconds)
  done (took 18.737977485 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.216820437 seconds)
    (2/2) benchmarking "read"...
    done (took 1.529713669 seconds)
  done (took 4.870452549 seconds)
done (took 30.927777466 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.200669468 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.201357549 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.199277948 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.201128827 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.2004308 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.198765655 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.198565934 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.202209269 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.198242995 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.202125821 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.201645194 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.201963341 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.200946418 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201040603 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198992722 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198837115 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201377626 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.200906805 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199198727 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200158671 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201906833 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.199574375 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.200470368 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.199678559 seconds)
  done (took 29.934123728 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.202733556 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.199770551 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.202306362 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.202502248 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.200268488 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.20283472 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.202526368 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.199435262 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.202903778 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.203103165 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.20090742 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.200429794 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.20313409 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.201194262 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.203241811 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.201039802 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.202768361 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.201418137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.202960222 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.201118855 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.203286446 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199887748 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.201072105 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.204100837 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.201940401 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.201134002 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.205606115 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.202625149 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.203783996 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.201413927 seconds)
  done (took 37.188028845 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.209639748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.211722004 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.204067039 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.204503344 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.204817506 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.204719495 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.204089391 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.203451557 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.204581659 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.203779567 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.205246176 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.204761681 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.204632224 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.204702792 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.204283934 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.204897799 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.204337895 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.204129442 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.204152217 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.205195813 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.205977914 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.20506902 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.204868488 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.205662762 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.205586246 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.206155963 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.205235616 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.205188595 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.205365874 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.206395552 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.207157785 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.205786409 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.205954358 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.204998002 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.206201033 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.20757752 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.211477203 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.213565734 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.205788473 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.205871842 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205906399 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.206217954 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.206238178 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.205713248 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.207457256 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.20629003 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.205865443 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.206826856 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.206665213 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.207538437 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.207067971 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.206988318 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.206461676 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206490578 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.207391249 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.206637092 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.207328628 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.206778517 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.207745245 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.207818656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.207302513 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.207579233 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.207663722 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.206935449 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.207572074 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.207382068 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.207551087 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.208721655 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.207957666 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.207805458 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.20753458 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.208219843 seconds)
  done (took 87.9893917 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.20773468 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.205204242 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.206812856 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205943132 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.206269658 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20879554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.206569625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.20816536 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.206868909 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.208521486 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209760199 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.206934695 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205825929 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.209399483 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209044057 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.206883025 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.210123271 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207280592 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.209663397 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.210555646 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210297862 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.206849438 seconds)
  done (took 27.70510937 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.208884045 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210905633 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206920097 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.210520535 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.210660166 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.212512833 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209013959 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.212222826 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.21458086 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207474429 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207671482 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.210151409 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209696257 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207729164 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.207342482 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.209718332 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.209370554 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208793097 seconds)
  done (took 22.906947092 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.209103721 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.206995104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.210695938 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.207571401 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.207133069 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.210147176 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.207265712 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21005235 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.210642427 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.208389398 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.212002339 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.209222408 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209834809 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.207516147 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209170238 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.207276802 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.210071345 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207484521 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209881344 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.207204628 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.207503034 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.210154928 seconds)
  done (took 27.729122095 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.210177575 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.210067242 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.207721523 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.206887669 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.207529027 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.209796036 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.209086444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.207575637 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.211100594 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.208587962 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.207882066 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.210397468 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.211405531 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.208835649 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.208392182 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.208226308 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.210273083 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.209388385 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21052451 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.208284025 seconds)
  done (took 25.314648672 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.213098709 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.212966407 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.212431291 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213363635 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211418082 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.212906515 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211954691 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.213356195 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.212041289 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.212607347 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.21257515 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.212429174 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212866027 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.212277598 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212729305 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21305387 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212866132 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.212345931 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.211546697 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.211536474 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212947731 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.212619554 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.211988775 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.21241904 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.212818343 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.211983148 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211944147 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.212760348 seconds)
  done (took 35.084248084 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212070295 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.211815456 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.210380983 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21043306 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.209906317 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.209251787 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.210352855 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.209410234 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.657637208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.208998874 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.212031292 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.212424818 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211822561 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.211911913 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.213383717 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.212592576 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.211409309 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.209914565 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.211064863 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.209865798 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.212715185 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.213676491 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.213251712 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.209706748 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210231003 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.213823224 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.2111768 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.210863415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212815416 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.210915878 seconds)
  done (took 37.920995304 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.232358547 seconds)
    (2/2) benchmarking "in"...
    done (took 1.231651105 seconds)
  done (took 3.599691688 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.212345766 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.21354148 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.212714531 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.211055012 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.210958374 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.213793177 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.214396824 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21159135 seconds)
  done (took 10.835759495 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.213232707 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.216317667 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.215260553 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.21473493 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.215646057 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.214311414 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.221548897 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.23190726 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.213489558 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.216469198 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.2206664 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.220766426 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.216429688 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.214761832 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.21315753 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.215954508 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.214955408 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.215157208 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.216316161 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.215168292 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.215576305 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21575466 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217105518 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.213202672 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.216144065 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.225327013 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.218564352 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.214590072 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.213783275 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.217301236 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.21379827 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.210890742 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.214522282 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.214936778 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.216245323 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.215235906 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.224491852 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.234462176 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.220195513 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214859188 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.215941123 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.212752354 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.216074623 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.214811226 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.215697745 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.215179021 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.214808401 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.211675699 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.21312358 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.218162153 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.219583303 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216067319 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.211303336 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.216995602 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.214770378 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.221509632 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.234110805 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.216568875 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.223456834 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.22583796 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.227438915 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.236227649 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.215044361 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.214944134 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224531666 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.237194979 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.221041907 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.229358924 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.212157425 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.214957248 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.221336058 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228483435 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.23984758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.215261391 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215560624 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.21590488 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.214567798 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.214793265 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.222541444 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.23470402 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.216953461 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.216353125 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.226340987 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238134329 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.215015944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.21647918 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.217352879 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.215605134 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.217134426 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227669224 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.235396333 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.215626759 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.215307832 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.215838296 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.216806616 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.216462781 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.216447015 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21608726 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.213877029 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.217421068 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.217835136 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.220406917 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.224948296 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.21759505 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.217976363 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.22312973 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.216558994 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216752244 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.222937154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.216802363 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.217049549 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.219065385 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.221892183 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.214408275 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220415403 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.224389125 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.218485414 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.217815685 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.217406509 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.218348204 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.227051933 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.242970048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.218501703 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.217954696 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.223727021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.228967821 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21897475 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219762775 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.218676712 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.214958831 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.215840839 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.218093845 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218414296 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.218581617 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218549589 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.218894239 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.215638412 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.218244556 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.217991614 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.219369684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.218714549 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.218658645 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.219035301 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.220538369 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.219125011 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.220085362 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.22571537 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.21767654 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.220188412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.218267566 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.216230388 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.21845343 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.219139295 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.219013524 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.219249296 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.219605652 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.218266502 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.221471969 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.218881069 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.218914269 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.219168833 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.219813322 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221846752 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.219627778 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.22156419 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220455232 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.215435485 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.21881482 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.220283284 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.217781734 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.219480622 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218313366 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.222311319 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.227013186 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.219102707 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.218181705 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.221376935 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.218953478 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.220133226 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.21917559 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.22243402 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.226665058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.220674991 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.226281764 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.219563768 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219481225 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.219293731 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.218345764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.219470084 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219873404 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.224712527 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.226216588 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.23204181 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.242137229 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.219834871 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.223519068 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22058926 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.223248582 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.22185742 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.219732332 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.219091375 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.219530891 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.217505472 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.219146634 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.219897943 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.218978659 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.218598786 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.218785112 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.218702598 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.220215401 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219136504 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.218009762 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2188316 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.216072115 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.220102346 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.218983053 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.218099952 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.216693472 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.217816473 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.218107846 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.220294649 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.218876455 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.224955256 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.216732508 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.219467515 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.219981529 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.219269201 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.217870372 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.219609679 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.220504591 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.218463784 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225926561 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.236546908 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.219215915 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.226118453 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.237226355 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.218394981 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.222050416 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.220333368 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.217389045 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.222492718 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.227480052 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.219262236 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.220700523 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.22087608 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.220391413 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.221452626 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.225975054 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.219363695 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.219828638 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.221780198 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.222028082 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.218517922 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.221403885 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.221698344 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.221797299 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222507036 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.221913425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.221270916 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.223337612 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.222399086 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22318266 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.222617972 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225258711 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.229885579 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.226784232 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.22166431 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.223079346 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.223861897 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.226513784 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.222213699 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.222530814 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.223850615 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.234897474 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.245454826 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.229876162 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.223977506 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.224274876 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.228013402 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.224754409 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.22744416 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.222915956 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.222813198 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.222153792 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.22183221 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.2207915 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.223459369 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.222371075 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.223857768 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.223614931 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.226472379 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.223472307 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.222692623 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.224050446 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.22313358 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.223984769 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.222565182 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.223841063 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.22441471 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225104585 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.22214733 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.222986858 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232199681 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239937847 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.224654234 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.223072192 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.223415089 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.222517041 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.224566607 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.224312805 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.227860096 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.231854696 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.227228165 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.232278024 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.226614871 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23418388 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.225757138 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.228173075 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.232448888 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.222513386 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.22342973 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.224679879 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.224804802 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232498963 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.241797707 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.226614033 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.229885648 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.225319096 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.225747619 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.22567259 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.226335508 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.226380613 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.225985554 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234073813 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.24692099 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.229266994 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.227552668 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.223503226 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.227617089 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.226746215 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.225953258 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.229073348 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.227372886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.226660862 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.226088077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.226192436 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.226725716 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.227312734 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.227504487 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.223965204 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.226715338 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234418709 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.245239083 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.230709489 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.227493254 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.234737367 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.227800218 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.234861162 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.24515226 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.227699592 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.227813622 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.227388282 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.228534153 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.228178922 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.228078688 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.228297333 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.229062251 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.231205648 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.228340575 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.229878258 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.227994696 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.228473707 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.227859309 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237890218 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.251098162 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.229953262 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232326516 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.22638386 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.229906525 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.234384181 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.229535922 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.227810889 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.232324886 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23905959 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236532331 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.22948443 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.229168115 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.228556187 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.230598374 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.228700492 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.230273428 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.229663499 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.230049904 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.229720623 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.229614895 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.232407286 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.229860255 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.229940254 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231838555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.231697496 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.24015404 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.231679164 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.231072909 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.231490472 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.232245217 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.231155564 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.23149302 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.231403069 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.23098852 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.231677175 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.233429387 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238335449 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.236945391 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.233181252 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.231342489 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.232248598 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.231758311 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.231769821 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.231695308 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.232490635 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.233545025 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.233402095 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.23205522 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.232921667 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.231011062 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.232726152 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.232406379 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232646276 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.235528623 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.239108861 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.232930023 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.230484308 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.23228243 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.234066749 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.231806756 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.232997128 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.240883027 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.236885254 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.243911155 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.242272315 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.237129448 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.232988578 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237342884 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.240802418 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.231857069 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.233896051 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.234503145 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.23429451 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.234009033 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.236731653 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.234778371 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.239705729 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.234064458 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.23292859 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.242137665 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.254351119 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.234416277 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.235785926 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.238368876 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.233652375 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.231850058 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.234979125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.233786142 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.241180248 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.251873868 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235410867 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.235375235 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.233549948 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.236698911 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239330077 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.235339966 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.235554597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.232643377 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.234222543 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236147431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.235299657 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.232857708 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.234468322 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.23422411 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.238890105 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.241704293 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232653991 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236296397 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.235277539 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.236246917 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.23650854 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.236272788 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.233558041 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.233746059 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.236005077 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23668704 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.236212029 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.238856893 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.23555215 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.237836719 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.238005445 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2369923 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239411931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.247318727 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.244025158 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.23463373 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.235833318 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.236776485 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.239343792 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.237678673 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.239142859 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238290497 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.237934179 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.236772218 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238422261 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.237226022 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.241849331 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.253395368 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.257866743 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238290199 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.237865343 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240459674 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.23916384 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.235535782 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.238846628 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.239228637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.242145958 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.245799045 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.238647391 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.24516115 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255883824 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.239457571 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.242465154 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.240887604 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.245713731 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.240836536 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.239555721 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.239629075 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.244427258 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.254581553 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.240110318 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248458705 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.268145077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.255606022 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.239652047 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.240136797 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238393999 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.240936966 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.240342629 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.239771611 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.240715648 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.240361735 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.240091902 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.241374639 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244897737 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.240828651 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.241588663 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.240088796 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.239697295 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.240768239 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.238019984 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.241177095 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.24140284 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.240872968 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.240578229 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.240955924 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.2407354 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.252976768 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.264286919 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.241339177 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.241255595 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.23860495 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.24387991 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.244054083 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252238475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.249060177 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.241851445 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.242224647 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.242070313 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241720057 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.240713164 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.242080442 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.241716731 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2419433 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.239202316 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.254075743 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.265779322 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.247292708 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.242855499 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242056471 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.243369574 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.242647667 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243205855 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243600327 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.243291057 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.24537428 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249235761 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.242927121 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.243675942 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.245865403 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.249874173 seconds)
  done (took 733.175814229 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241408885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240201839 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.239950375 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.240512847 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.241158953 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240432702 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240639582 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.242100073 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.241044235 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240125822 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.241252976 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241105452 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241204592 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240777055 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241339866 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241553275 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241236082 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.24129136 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241882043 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242867209 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241027654 seconds)
  done (took 27.226133904 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.244909386 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.241633858 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.242009464 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.244932178 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.241853778 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.244669623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.243098115 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244350171 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24524097 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2419336 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.245236055 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244620012 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.243417335 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.24224903 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24241165 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.245225535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.245959328 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.242128761 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.246050365 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.243361153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245766735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.243652477 seconds)
  done (took 28.529773274 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.246695655 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.246717705 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.245449679 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.244005066 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.246562846 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.243110792 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.246960619 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.246386689 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.24696257 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.246276675 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.245284098 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.247824264 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.253831094 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.25150295 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.247672002 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.247577544 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.390931534 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.247263944 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.247941309 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.248896418 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.244500177 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.251789864 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.244262472 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.244300652 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.247026522 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.248019229 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.248332641 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.248232356 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.248195637 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.248495842 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.251373869 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.24870086 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.248119606 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.249780982 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.247455263 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.248619098 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.252091088 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.250519685 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.24623197 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.248081065 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.258730301 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.26775413 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.249104367 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.254415816 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.249523501 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.248819645 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.251102457 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.256061429 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.24567186 seconds)
  done (took 62.499327016 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.248412003 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.248377056 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.245842944 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.248088621 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.250043389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.248785462 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.249451295 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.249298497 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.246227333 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.247033764 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.249325397 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.246480705 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.246257633 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.249160088 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.249365519 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.247537362 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.246438539 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.246939571 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.246855828 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.247095682 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.247622333 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.2500889 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.25041828 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.248111632 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.250811636 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.248481361 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.247650703 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.250782172 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.247927134 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.248558605 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.251926293 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.252468486 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.251535043 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.248293019 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.247823678 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.251417084 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.251001308 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.247650236 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.250129246 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.247691621 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25070964 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.251477456 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.250943534 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.251279523 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.248514564 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.249186882 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.249426215 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.24857085 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.248996418 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.251514235 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.252017794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.249437296 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252069272 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.249162682 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.252056643 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.252898529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.249374158 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.249957836 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.252427655 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.250157281 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.249692168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.252985046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.251256084 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.25189025 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.252085782 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.251013139 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.250560623 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.252213115 seconds)
  done (took 86.139764902 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.253167801 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.253638495 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.253295938 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.253359728 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253910311 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.254305846 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.254628435 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.254150795 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.254996278 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25429593 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.254557441 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.254459368 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.25443187 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.254319178 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.254854176 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.254550077 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.255463547 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255509537 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25510479 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.255143813 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.255408204 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.253887096 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.25533328 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255280128 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.255838998 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.254944002 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255290021 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.256057537 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.255212594 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.255628565 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256548211 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.255579227 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.255586875 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.255692559 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.256481002 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.256564172 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.255902621 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255822666 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.256245152 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.25574645 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.256152587 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257236859 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.255726468 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.256374068 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256207429 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.256653689 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.257092623 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.257236115 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.257145189 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.255763275 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.255247261 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.256330943 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.257532669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257421098 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.256812123 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.257405485 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257532026 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256506352 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257662719 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.258074627 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.257448899 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.258307313 seconds)
  done (took 79.026703441 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257124155 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.257098665 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.254934119 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.253903432 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.257608824 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255241848 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.256985883 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.257197235 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.257444521 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.257496614 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258457549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.256597851 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25727599 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.258998803 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257478157 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257692914 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257152212 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256801344 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257818368 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.25641675 seconds)
  done (took 26.315329397 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.256924489 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.258724337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.255451992 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256215485 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.258664211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.256413334 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.257549106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259167437 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255620561 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259108513 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.259518082 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.259899764 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.256892068 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.256704239 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.259091142 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.257190142 seconds)
  done (took 21.300710828 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.2573135 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.258804187 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.25883258 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.260012564 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.256558015 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.256400457 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.259687129 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.256652769 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.256465423 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.260575731 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.25827625 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.260599782 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.259655132 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.259361782 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.257191274 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.260418293 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.257593303 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.257279984 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.2601886 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.259789301 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.258549029 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.256399261 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.260346329 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.260217409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.25874269 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.2589311 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.257452232 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.258174237 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.257503829 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.261240662 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.258711521 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.258596032 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.257889838 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.25823852 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.261465467 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.258907536 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.260897865 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.261860914 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.262393736 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.262165089 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.261985651 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.258805042 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.262021807 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.262330686 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.259202947 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.2624662 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.260893079 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.260073914 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.259699694 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.260779362 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.261950855 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.263380438 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.263081162 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.263496754 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.262865748 seconds)
  done (took 70.462808892 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.264357788 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.263208477 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.258922017 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.263876323 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.263212753 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.260571278 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.263074198 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.261123135 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.261651714 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.26384214 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.260703704 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.264232536 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.260633115 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26447802 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.262176445 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.263319952 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.260890876 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.260952433 seconds)
  done (took 23.902005559 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.261185935 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.262845279 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.265156394 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.260965477 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.261144222 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264879415 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26181176 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.263157114 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.264242807 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.262138347 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.262344145 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.264982265 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26413787 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.264937632 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26173058 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261259332 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.264877263 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.264817145 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.262367271 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262628327 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.265633391 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265027996 seconds)
  done (took 28.97436391 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.264024966 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.263978395 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.264409174 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.280469139 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.283870846 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.286792646 seconds)
  done (took 8.826237824 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272435454 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265359006 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262060352 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.266602073 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264288148 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262681307 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263203223 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264267657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265619396 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263297093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.263188272 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265848706 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267191818 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264686392 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266738734 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266049802 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265333245 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264489973 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264376162 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267026044 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264257834 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.266890765 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264618876 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.264661875 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265350811 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26440356 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267321254 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.265646926 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.264217824 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267886316 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.266989771 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265292729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267583503 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.264988686 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268587822 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267955693 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265617703 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270266949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267893325 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.265258692 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268142909 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.26741046 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267538789 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265304925 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268277224 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265329018 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266694288 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265967962 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.26574193 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268843693 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268233141 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265622199 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.268728998 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268304913 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269251873 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269366084 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.266186398 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266201882 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268511774 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266883675 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267768403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26873114 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266477452 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26697241 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269742829 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26770551 seconds)
  done (took 84.792224546 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.267078087 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.267160322 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.267524725 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269337917 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.267768371 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.266769953 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268295355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268453425 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268297255 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.267803685 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270497791 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267811147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268656784 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268204864 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268711946 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268527087 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269483969 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269330239 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267584939 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270658633 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26767587 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268165539 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269092387 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.268317007 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.268912754 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273203337 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.268210011 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268638734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.268923298 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.268374875 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270248099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.26944425 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.269420138 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.269770469 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270888873 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270341996 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269974271 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269947545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.269514849 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272520159 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270507299 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272021366 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270084635 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27024153 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269778513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.269780956 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.269499834 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270041704 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.270846258 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269997859 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.270056269 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271274745 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.26936788 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.269851457 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.269847406 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27031312 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272043035 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271251764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27105992 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273734469 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270193991 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.270721353 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273306269 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271309043 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271699127 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271550852 seconds)
  done (took 84.989037699 seconds)
done (took 1713.492615478 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.434783266 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.388457398 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.274953987 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.275559766 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.27578804 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.295121482 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.29280459 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.275031359 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.275717711 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.275865346 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.27504692 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.462598771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.327848555 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.276731036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.276173189 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.369475321 seconds)
  done (took 42.24472808 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.303242172 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.28331402 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.390943879 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.30361344 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.304120899 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.461014296 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.336583775 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.281836729 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.446370658 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.319956573 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.77758742 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.304683613 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.28186189 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.34802261 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.298912072 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.464227007 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.522394156 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.795898612 seconds)
  done (took 29.419843031 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.712994089 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.291927308 seconds)
  done (took 9.202391777 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.299727562 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.281136816 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.282066035 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280493128 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.274318464 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.287700002 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.279766732 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.27516112 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.783725715 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.406277485 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.282485779 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.291434586 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.299442435 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.281583022 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.277777678 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.316077797 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.430367787 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.279014425 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.277991626 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.286729672 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.281362235 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.377563503 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.320022752 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.278675582 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.401142414 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.75257524 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.29027846 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.288328999 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.413042814 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.281060056 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.280518338 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.280698832 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.284886317 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.154825395 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.775957039 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.274836963 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.304018158 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.289324509 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.27802168 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.423944722 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.281442169 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.286935569 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.28855203 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.749109977 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.407214423 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.388660861 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.465190208 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.289636389 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.282648648 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.338979983 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.281362529 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.282223872 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.325023375 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.07046038 seconds)
  done (took 108.44950105 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.316288177 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.668444333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.43975092 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.294567381 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.987139314 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.836023381 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.289401929 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.540616282 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.319804524 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.273954823 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55639754 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.756952098 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.289652345 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.302708214 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.452140103 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.278594565 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274933625 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.926191805 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.287928214 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.275358174 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759983682 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.281195028 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.296148259 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.45018263 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.310981866 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.707268615 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.5425344 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.599867046 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.289341019 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.273518967 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.715547054 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.288685278 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.352719882 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.277115772 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.525988366 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608244573 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.586684618 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.28077662 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.30762439 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.274711639 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.312864699 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.705907205 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.597554834 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.274301082 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.289243025 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.703886328 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27561246 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.278984128 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.280334411 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.473439335 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.885223726 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.275113445 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.555675596 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.281228748 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.560881935 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.333891517 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.325981286 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737472543 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.276781435 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.336152036 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322890094 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.27786992 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284094526 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.278215588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.281464888 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606042492 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.527502346 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.278298326 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.604545763 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.718364298 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.296646475 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.793844613 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.098423742 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.298328549 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.327207288 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.275877637 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.786256311 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754814381 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.295878412 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.276812747 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.590518315 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.28634895 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.54800587 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.291327308 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282947614 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.789870214 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.289926165 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.309461469 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.28118157 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.28223048 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.948669552 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.280352035 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.538298953 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.306641346 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.277097682 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.277769299 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.305767019 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.27790341 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.299412877 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.284133533 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.780042385 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.301148107 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.385270901 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295875393 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.277672611 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.284610107 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.280872595 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.279937289 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494443361 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.803576034 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.303507959 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.277839327 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.279130149 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.284618956 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.456803986 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.284501043 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.567390597 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.287017815 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27845441 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.302260415 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.876858578 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.305070296 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.278541979 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.294478076 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.177892307 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.48021411 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.297580975 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.280177428 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28191293 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.301484051 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.433724309 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.296644033 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.349411072 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.283465349 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.958917283 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.342150469 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.306440125 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.542740073 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.285484006 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.069399488 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.300175581 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.280458039 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.562131174 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.535435588 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.404367796 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.282763351 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.299446209 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.938391163 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313195934 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.426062619 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299220033 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.320352795 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475749781 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.425495301 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.281872042 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.888493669 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.282419719 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492521678 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.281421909 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.580375428 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.746973288 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302475366 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.282599538 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963635522 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.002900996 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.966955198 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.287175864 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.548283323 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.226283026 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.761546353 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.281998035 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.281948366 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.752520991 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.283481546 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.28583126 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.28225393 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.28287386 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.438848784 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.454154664 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.438001625 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.287372191 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.716508161 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311095741 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.283521582 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.29518842 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.283129773 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.630160934 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.345718149 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.287592512 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.32231999 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.285068329 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.284472279 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.735974924 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.104418832 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.284120583 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.434349117 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888616315 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.3057834 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.285559087 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.991105886 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.978041424 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775946197 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.296893594 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.573390281 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.292968836 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.321942282 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.869704948 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378919067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.738009997 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.291571362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.29129927 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.859044443 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.306400041 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.389932634 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.284637877 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.285482428 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.805731953 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.306518267 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.28733378 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.438986756 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303305151 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5521802 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.286129807 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.309334417 seconds)
  done (took 1096.267160015 seconds)
done (took 1286.774460689 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.285799319 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.285339022 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.277784754 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.29149018 seconds)
  done (took 26.348456982 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.304798313 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.292280151 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.293840118 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.291836571 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.295690369 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.292103456 seconds)
  done (took 8.979070662 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.317455212 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.287812366 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292790336 seconds)
  done (took 19.107461353 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483731103 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.496271784 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.603145944 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.307615651 seconds)
  done (took 10.100983473 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295216365 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.295098095 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.29397284 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.296554802 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.305749385 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.306818327 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.297081406 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.297173349 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.307551257 seconds)
  done (took 12.904100988 seconds)
done (took 78.648416454 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.981943335 seconds)
    (2/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.29037089 seconds)
    (3/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.803455846 seconds)
    (4/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.310779733 seconds)
    (5/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.108094552 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.570003389 seconds)
    (7/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.250362141 seconds)
    (8/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.431938273 seconds)
    (9/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.274702789 seconds)
    (10/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.510902931 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.350608349 seconds)
    (12/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.026684823 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.288323072 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.32153146 seconds)
    (15/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.523609484 seconds)
    (16/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.317695164 seconds)
    (17/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.412146992 seconds)
    (18/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.278732384 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.453154069 seconds)
    (20/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.477346902 seconds)
    (21/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.449797613 seconds)
    (22/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.503655827 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.179983651 seconds)
    (24/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.281970758 seconds)
    (25/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.315017125 seconds)
    (26/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.654636356 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.500009415 seconds)
    (28/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.283091199 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.809824314 seconds)
    (30/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.352837055 seconds)
    (31/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.781466101 seconds)
    (32/286) benchmarking ("sort", Int64, true)...
    done (took 6.289131777 seconds)
    (33/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.691112497 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.326691766 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.402502714 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.289734325 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.303212939 seconds)
    (38/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.653367883 seconds)
    (39/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.282923428 seconds)
    (40/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.070612451 seconds)
    (41/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.39226629 seconds)
    (42/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.290572806 seconds)
    (43/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.311822312 seconds)
    (44/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.383681987 seconds)
    (45/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.277872277 seconds)
    (46/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.375734735 seconds)
    (47/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.398908316 seconds)
    (48/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.280264218 seconds)
    (49/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.308135846 seconds)
    (50/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.425214838 seconds)
    (51/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.739349134 seconds)
    (52/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.557916712 seconds)
    (53/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.863027463 seconds)
    (54/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.311881319 seconds)
    (55/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.0895687 seconds)
    (56/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.323406938 seconds)
    (57/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.347921851 seconds)
    (58/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.325293855 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.591444446 seconds)
    (60/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.339839783 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.308284149 seconds)
    (62/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.34979479 seconds)
    (63/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.373384242 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.895932156 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.31849493 seconds)
    (66/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.758286805 seconds)
    (67/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.305415043 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.409327969 seconds)
    (69/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.214652379 seconds)
    (70/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.360972042 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.307866789 seconds)
    (72/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.872178443 seconds)
    (73/286) benchmarking ("sort", Int8, true)...
    done (took 6.298560087 seconds)
    (74/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.315302145 seconds)
    (75/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.439741061 seconds)
    (76/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.790180907 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.017604383 seconds)
    (78/286) benchmarking ("sort", Int64, false)...
    done (took 5.491987328 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.135400696 seconds)
    (80/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.111797404 seconds)
    (81/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.19260673 seconds)
    (82/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.284834931 seconds)
    (83/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.285378372 seconds)
    (84/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.282798614 seconds)
    (85/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.305355162 seconds)
    (86/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.285805455 seconds)
    (87/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.641877702 seconds)
    (88/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.777837049 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.640548553 seconds)
    (90/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.162341634 seconds)
    (91/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.32515139 seconds)
    (92/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.868977909 seconds)
    (93/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.324893743 seconds)
    (94/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.401467457 seconds)
    (95/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.32990439 seconds)
    (96/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.303809079 seconds)
    (97/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312476562 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.636246233 seconds)
    (99/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.437936698 seconds)
    (100/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321887846 seconds)
    (101/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.518088571 seconds)
    (102/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.602569699 seconds)
    (103/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.311573758 seconds)
    (104/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.042400684 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.431052439 seconds)
    (106/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.095165924 seconds)
    (107/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.287685585 seconds)
    (108/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.383562885 seconds)
    (109/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.379368873 seconds)
    (110/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.303400788 seconds)
    (111/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.281578765 seconds)
    (112/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.988317482 seconds)
    (113/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.08845926 seconds)
    (114/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.636916863 seconds)
    (115/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.03932743 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.703705769 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.823263647 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.317407294 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.575323285 seconds)
    (120/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.83324512 seconds)
    (121/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.319357276 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.015530033 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58076514 seconds)
    (124/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.114857678 seconds)
    (125/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.058679285 seconds)
    (126/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.729989285 seconds)
    (127/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.140936624 seconds)
    (128/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.19925003 seconds)
    (129/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.40295729 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.404171648 seconds)
    (131/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.107113073 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.287783298 seconds)
    (133/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.041534588 seconds)
    (134/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.660243483 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330022143 seconds)
    (136/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.235556764 seconds)
    (137/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.901144527 seconds)
    (138/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.964897979 seconds)
    (139/286) benchmarking ("sort", BigInt, false)...
    done (took 6.31465838 seconds)
    (140/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.731180833 seconds)
    (141/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.324757121 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.923540323 seconds)
    (143/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.29363959 seconds)
    (144/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.564165079 seconds)
    (145/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.382712197 seconds)
    (146/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.327222098 seconds)
    (147/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.114116039 seconds)
    (148/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.305990401 seconds)
    (149/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.367078636 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.323103598 seconds)
    (151/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.382673952 seconds)
    (152/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.384948108 seconds)
    (153/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.427611623 seconds)
    (154/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.423513565 seconds)
    (155/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.664254427 seconds)
    (156/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.382301563 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.888202777 seconds)
    (158/286) benchmarking ("sort", Int8, false)...
    done (took 4.34912513 seconds)
    (159/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.284220379 seconds)
    (160/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.293449139 seconds)
    (161/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.329173671 seconds)
    (162/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.774346196 seconds)
    (163/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.285779566 seconds)
    (164/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.577011321 seconds)
    (165/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.30037439 seconds)
    (166/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.340766829 seconds)
    (167/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.935808806 seconds)
    (168/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.323920116 seconds)
    (169/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.284267057 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.348140543 seconds)
    (171/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.308144365 seconds)
    (172/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.68771864 seconds)
    (173/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.298368388 seconds)
    (174/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.304999855 seconds)
    (175/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.693118312 seconds)
    (176/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.346061048 seconds)
    (177/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.32454709 seconds)
    (178/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.295872986 seconds)
    (179/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.360733614 seconds)
    (180/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.322899102 seconds)
    (181/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.324827207 seconds)
    (182/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.397483893 seconds)
    (183/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.511148743 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.988204689 seconds)
    (185/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.300063162 seconds)
    (186/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.292251094 seconds)
    (187/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.321753505 seconds)
    (188/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.682064441 seconds)
    (189/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.315725657 seconds)
    (190/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.372218083 seconds)
    (191/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.290082922 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.319008753 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.371093353 seconds)
    (194/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.382988953 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.302588826 seconds)
    (196/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.335266576 seconds)
    (197/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.897201015 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.289872568 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.705333358 seconds)
    (200/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.813171039 seconds)
    (201/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.307282216 seconds)
    (202/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.519064596 seconds)
    (203/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.653300754 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.709858938 seconds)
    (205/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.302283448 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.517486727 seconds)
    (207/286) benchmarking ("sort", Float32, true)...
    done (took 6.300511065 seconds)
    (208/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.307385111 seconds)
    (209/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.298741955 seconds)
    (210/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.300919525 seconds)
    (211/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.646386111 seconds)
    (212/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.743017531 seconds)
    (213/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.996897625 seconds)
    (214/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.636678655 seconds)
    (215/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.329133006 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.342412782 seconds)
    (217/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.288022859 seconds)
    (218/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.336088464 seconds)
    (219/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295036235 seconds)
    (220/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.491210434 seconds)
    (221/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.287833508 seconds)
    (222/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.405274564 seconds)
    (223/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.50277492 seconds)
    (224/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.50046381 seconds)
    (225/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.561889831 seconds)
    (226/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.455244112 seconds)
    (227/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.712895923 seconds)
    (228/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.295258422 seconds)
    (229/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.644966522 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.866531977 seconds)
    (231/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.295808029 seconds)
    (232/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.583279614 seconds)
    (233/286) benchmarking ("sort", Float64, true)...
    done (took 6.308222681 seconds)
    (234/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.353168285 seconds)
    (235/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.29019778 seconds)
    (236/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.195525931 seconds)
    (237/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.039420609 seconds)
    (238/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.29029063 seconds)
    (239/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.288740497 seconds)
    (240/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.23683164 seconds)
    (241/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.325693982 seconds)
    (242/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.511938527 seconds)
    (243/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.34280513 seconds)
    (244/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.346451789 seconds)
    (245/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.314337278 seconds)
    (246/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.533692737 seconds)
    (247/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.648366004 seconds)
    (248/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.569434534 seconds)
    (249/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.388405352 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.329341655 seconds)
    (251/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.302401715 seconds)
    (252/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.311517257 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.720067682 seconds)
    (254/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.488270266 seconds)
    (255/286) benchmarking ("sort", Float64, false)...
    done (took 5.579168473 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.142993802 seconds)
    (257/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.429613828 seconds)
    (258/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.124853692 seconds)
    (259/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.640848148 seconds)
    (260/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.845882609 seconds)
    (261/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.298053226 seconds)
    (262/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.296111947 seconds)
    (263/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.291641023 seconds)
    (264/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.038846904 seconds)
    (265/286) benchmarking ("sort", Float32, false)...
    done (took 5.290310523 seconds)
    (266/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.365048518 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.411343784 seconds)
    (268/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.141653435 seconds)
    (269/286) benchmarking ("sort", BigInt, true)...
    done (took 6.31230018 seconds)
    (270/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.387395695 seconds)
    (271/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.41678818 seconds)
    (272/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.569240993 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.929895208 seconds)
    (274/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.433062865 seconds)
    (275/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.143623463 seconds)
    (276/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.4088394 seconds)
    (277/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.387333615 seconds)
    (278/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.291138644 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.305083695 seconds)
    (280/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.35517178 seconds)
    (281/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.390114375 seconds)
    (282/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.423621937 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.327473435 seconds)
    (284/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.330163578 seconds)
    (285/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.293713976 seconds)
    (286/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.294007988 seconds)
  done (took 925.480263222 seconds)
done (took 926.689959656 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.338420039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.341013378 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.316514359 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.338689118 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.434918804 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.491926906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.32626473 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.318248143 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.364079182 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.365378447 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.322521638 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.491053599 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.325235297 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.323876838 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.317223463 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339900134 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.336856212 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.332213881 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.340466186 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.326954472 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.341653333 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.32377926 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.366157203 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.491276131 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.320770478 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.31940414 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.327086842 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.344384708 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.436183614 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.328333374 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.320749718 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.334814811 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.316957569 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.317172236 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.312384774 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.345231413 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.336358183 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.328535007 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.321745673 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.3574239 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.702466235 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.325546527 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.327702247 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.319529224 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.320029982 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.323300956 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.326997131 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.325612696 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.339777402 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342947815 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.691062579 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.343015453 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.329561758 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.320332483 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.331604808 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.327702344 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.322696657 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344703273 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.346285327 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345578114 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.306701905 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.325946819 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.321317503 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.344117887 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.335326113 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.732971397 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.315930614 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.324988024 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.710752964 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.324367936 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.734164936 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.335964681 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.322468319 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.342350095 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.360546431 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.325986499 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.316741041 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.31983329 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.335818592 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.328547807 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.33104265 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342396634 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.325412346 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.321711714 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.343495299 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.497225032 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.331584433 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329470258 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.330311093 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.347665352 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.33584263 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.340205438 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.325334363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.316552489 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.329648281 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.324921183 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.332899324 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.332204163 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.327282697 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.332622171 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.708658096 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.34823053 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.319289616 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.318995615 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.322675745 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.342528216 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.712768259 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.330409343 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.345517234 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.369520684 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.324638885 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.313646068 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.335065987 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349566135 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.332349954 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.326012157 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.319053517 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.315951416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.699616164 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.3454684 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.325716102 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.328852532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349393402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.326405657 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.321489437 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.331403869 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.326529914 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34658242 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.452342357 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.336358485 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.364709785 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.330824929 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.328240902 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.359276646 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349948621 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.364228744 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.328461798 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349274091 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.348411316 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.321790347 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343493279 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.335962296 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.32733134 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.330288089 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.31909482 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.360687122 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346511463 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347416754 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.34686551 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.454697267 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.322869757 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.316805168 seconds)
done (took 223.957884891 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.386400867 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.321091387 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.41534368 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.322508719 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.421212677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.420509585 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.320151568 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.320475411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.321003747 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.703852252 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.320701172 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.320080783 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.323521543 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.321168767 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.405771511 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.32405604 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.321065347 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.667073115 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.324318105 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.394874881 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.316288758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.32109953 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.324134988 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.705884022 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.315606373 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.324558228 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.394648392 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.32476454 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.669584818 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.31747177 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.319617793 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.672011179 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.413825542 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.341286554 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.335533767 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.330577603 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.424521176 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.341872826 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.405968413 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.406079543 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.417456238 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.362941377 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.321594055 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.32264644 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.325782912 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.325868469 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.32334535 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.352215837 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.325158889 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.32335777 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.66781781 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.334499137 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.333012472 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.322991252 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.322595227 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.345826446 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.324482432 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.327721401 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.416128938 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.327778442 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.388533739 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.709262251 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.708183186 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.325787333 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.328595937 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.32589464 seconds)
  done (took 147.828270996 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.393031265 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.400952611 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.435940293 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.327965357 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.379762265 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.440195122 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.329345332 seconds)
  done (took 10.946310894 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.33298243 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.328031726 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.376773627 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.378409136 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.327499376 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.506586042 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.328237611 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.33907823 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.325079588 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.37918925 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.330369062 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.329249534 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.333790432 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.322507383 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.375756345 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.340158596 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.443088184 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.329275463 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.32900801 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.488528032 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.327024001 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.334959084 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.379742742 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.340716924 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.331088006 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.333803124 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.161209122 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.329986661 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325844714 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.3291552 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.327000004 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.408955667 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.329641803 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.32889279 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.325858357 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.443879234 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.329764887 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.327434678 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.330620146 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.32816794 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.329767347 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.329116741 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.329948671 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.327095015 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.329632153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.353274089 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.330475881 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.329803061 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.33134937 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.330060144 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.379442261 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.331548772 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.326722427 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.328135815 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.385088621 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336989788 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.33111046 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.328794862 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.331616232 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.328213262 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.490922269 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.378208026 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.331616144 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.380046045 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.331923703 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.332136722 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.332038798 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.331016612 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.386654502 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.331522193 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379360144 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.329841908 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.510437445 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.354987886 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.333480909 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.334896572 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.335315253 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.332280756 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.328086294 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.338016075 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.328349307 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.333112018 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.339022743 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.32985344 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.32962572 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.504325826 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438974227 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.330528801 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.344470581 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.338516418 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.330583005 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.385811623 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.333402651 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.330581547 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.384808804 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.447883301 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.385440753 seconds)
  done (took 153.306536814 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.337794861 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.340388478 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.337196972 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.356418238 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.334567427 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.333175578 seconds)
  done (took 9.285015672 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.335493283 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.334924282 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.334095282 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.334080927 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.334232042 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.335910107 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.334930741 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.335759973 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.337818039 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.33425588 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.336653836 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.340195698 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.337304387 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.33485843 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.335403542 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.335131121 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.336002913 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.332157291 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.334912789 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.335555086 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.431381355 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.335516703 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.336002772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.336512861 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.340174134 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.335688368 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342607246 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.335626005 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.336225051 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.343000086 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.353880253 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.337360519 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.337827897 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.340770274 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.339723912 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.33775158 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.339515223 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.340218456 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.334674616 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.338010106 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343130419 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338073199 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.337020362 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.341042235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.3387751 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.341274012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.344850125 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.345247258 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.338945011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.341745767 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.342498138 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.337226905 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.339120471 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.343099047 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.340651777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357371828 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.34570758 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.338645345 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.337777455 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.339287855 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.338916484 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.339305573 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.33964986 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.341842106 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344905832 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.342229601 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.340223154 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.341248205 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.33927541 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.338637176 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.342491337 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.337589078 seconds)
  done (took 98.748368841 seconds)
done (took 421.349955428 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.69488354 seconds)
  done (took 7.945828306 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.381965755 seconds)
  done (took 7.635141247 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.188682653 seconds)
  done (took 21.447118714 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.420495305 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.454769969 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.354782046 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.333740767 seconds)
  done (took 26.815063451 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.834913398 seconds)
  done (took 8.086316245 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.331396388 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.336043613 seconds)
  done (took 13.920714824 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.897978546 seconds)
  done (took 8.148520089 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.952836408 seconds)
  done (took 8.211186578 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.350545546 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.352307379 seconds)
  done (took 14.219438283 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.319034981 seconds)
  done (took 7.570891196 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.347602281 seconds)
  done (took 11.601121662 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.331087924 seconds)
  done (took 7.584872552 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.418512894 seconds)
  done (took 7.670230862 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.142509724 seconds)
  done (took 9.3943509 seconds)
done (took 161.501070724 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.333629098 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.334245263 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.334899232 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.334604941 seconds)
  done (took 26.588944614 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.374056097 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.373279458 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.375763695 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.385067101 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.376910092 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.375166615 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.365760809 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.36581042 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.385905946 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.377719286 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.377092231 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.37760835 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.375110043 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.366127734 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.377998508 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.375999508 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.385683901 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.375673421 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.367045942 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.37705248 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.342604564 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.385515453 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.378061007 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.342487311 seconds)
  done (took 34.212711463 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.862300862 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.413426199 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.495972357 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.393424651 seconds)
  done (took 7.419164078 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.394914724 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.395615963 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.406331368 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.445365432 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.475359097 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.405029962 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.368935748 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.364010984 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.350510621 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.396181221 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.471949666 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.413119454 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.485259825 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.343013585 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.548681618 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.343773773 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.34286209 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.395627696 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.446765122 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.470990905 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.343239793 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.395047635 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.397928182 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.413174076 seconds)
  done (took 35.067995948 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.34325673 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.361371197 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.342576785 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.341740376 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.350653525 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.342578593 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.343577295 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.344176095 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.343186631 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.349802623 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.341882236 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.354933065 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.342911035 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.343917638 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.3504842 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.344471844 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.348871339 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.342995472 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.343274166 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.350311048 seconds)
  done (took 28.183447721 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.337642581 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.273664929 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.689423251 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.592889326 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.338584772 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.338472473 seconds)
  done (took 28.827802969 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.412345277 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.542184227 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.346119692 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.689886786 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.77442225 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.354577787 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.346243642 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.578029755 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.88596159 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.876372636 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.407911513 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.411471315 seconds)
  done (took 19.883279967 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.339970682 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.34748821 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.352066886 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36116212 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.398235524 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.350589859 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.353092201 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.340053796 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.405238689 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.403846239 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.349994582 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.400085283 seconds)
  done (took 37.66070573 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427586841 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.384543424 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.225288065 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360265993 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058574598 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5516202 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.36125848 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.039282424 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.363992868 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.616142137 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353031314 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430453363 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.596920332 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353859475 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350082453 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.281944928 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567383782 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808931421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350978097 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.307920738 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37451973 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.343287601 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.373957807 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.577968959 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563834205 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.320533835 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.604166317 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.119917785 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.615269984 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364209114 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353439822 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.343299596 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.61705455 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.280971053 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439241295 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55358793 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351862279 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.912598255 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.340689214 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.317477554 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361387478 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.345536567 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.354125901 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34453222 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.277962298 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.356153125 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.38898317 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.349836599 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.056480236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.344486917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.593961439 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44819766 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.348775721 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.915469957 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.356044519 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.350625691 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.34900241 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438990882 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92143782 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.524398521 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364437868 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.286165694 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363997308 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.313309673 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94675689 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.351026803 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.34872449 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.348843105 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.279555241 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.298372009 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367539003 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49287943 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.370804469 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996359388 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013471085 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35825157 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.276496417 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.873245507 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359656874 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.287897301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.573866248 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123237021 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.280754833 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.289918101 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281538297 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017067901 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363195061 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.737665046 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369782867 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.047335351 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580486372 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374600155 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370777432 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569669713 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.232908594 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347473965 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.349081973 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475235093 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369334811 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.050330814 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30010593 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.351708978 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60306765 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.558939136 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348215583 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.306255616 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.131220087 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361581725 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.370792799 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.348718368 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.570103643 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.918352625 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.364330376 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.55095963 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372268843 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.126488272 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053573825 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36437673 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.359741751 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.352828436 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.609688049 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.087004783 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.23308706 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.417595283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354397686 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.349641541 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317208155 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.206794966 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.508960166 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.551967001 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37462825 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.368348749 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.351032683 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298153185 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.347356474 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357798829 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.14624199 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.573317726 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.350893848 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649689656 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284711381 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498483111 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.359508695 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.573778019 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.521266437 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.363110847 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610361993 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360348895 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.35765526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369672006 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370262323 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450743311 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373640715 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.350306666 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615903831 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.355014563 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.35496101 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.324156045 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.138227876 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356663822 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.357601244 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37281595 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920885842 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32951717 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.357233144 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.241145426 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.366777613 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419710096 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358278111 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567772393 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.54899698 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361143207 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.381149515 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.363900839 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583330284 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363470111 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.317527169 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44090967 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.826569465 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934248724 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366852665 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.287653342 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.064383556 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.045975962 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353308047 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.542965021 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.354979892 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.565930596 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.376621257 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356852873 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925443992 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356626605 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.343194811 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.367792922 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366928312 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.625169573 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356151197 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.536454748 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.56187384 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375456498 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.373650664 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497144159 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.368813989 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288965662 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.872080077 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.360509407 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.355593869 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.130327387 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390170476 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.337525165 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.530833138 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637367017 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371818932 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.613808273 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.413310997 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.392854704 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.36464387 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360480698 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363762959 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.36409951 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372060478 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.367657027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.324256286 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.800710652 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.925097566 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.050199874 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863476829 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575083268 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.359709432 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.246863461 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.074016695 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309607737 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.013475062 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586452924 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069072817 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320837292 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158423907 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.53532564 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110525492 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.609745251 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.593684249 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.571062547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.359411846 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612052854 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.577433561 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392221766 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36165447 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293702483 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.882384014 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.260913665 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358981737 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455142226 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.434150672 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365189703 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.138515735 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.430878151 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.997340789 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.03999471 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903762079 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.745572699 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36896805 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.37347884 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519874577 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388639141 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.884249758 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956962522 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.361432581 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.84190276 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315588553 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.573936824 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.380259466 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.363031812 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.860139127 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.357091611 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.612755554 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.61268204 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302075286 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.371798408 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875422347 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.216104033 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365325808 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361326333 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071884992 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.374321295 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647001799 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.373698696 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.557565892 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366593774 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.295422917 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294941064 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.053840548 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369804746 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336046364 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832943354 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.376805516 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385496096 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373980628 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215245853 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616988029 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.375523286 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927306819 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587149459 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36364649 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408702247 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.36560633 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.363286325 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.357236601 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.262223391 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.596638175 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398489536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.586071484 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.276831649 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.270423919 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389750372 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573574291 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.257753956 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377035442 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5947723 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.08125161 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.371178965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.044417093 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387554471 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364036097 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.397875818 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36629195 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39208813 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434892932 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578987893 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.382457787 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375287497 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.028659683 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363949638 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.373806172 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.378504281 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457851401 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.601386579 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.568838859 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.137026595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93599273 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.068282375 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.937966488 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626819795 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373347206 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371424448 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299118027 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513856892 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.890507347 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.638022894 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494735471 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.367002355 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.395145146 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.373939362 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38689912 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584853433 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640288764 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.235602414 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365958584 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.032717835 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.248973895 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.375645578 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.577112608 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839322515 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903329257 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483530059 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366703769 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.087000982 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660222333 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.457168211 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367349035 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956449817 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.387832568 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.023145819 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.380495916 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366422753 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521362754 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.618910119 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.308954163 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.37744851 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.523746474 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.14073992 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.363520113 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.630255879 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.79173077 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583417895 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947476269 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.050628749 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637767842 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437123881 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583793635 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.476793932 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.515650292 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.369861479 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258215332 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.367809138 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.213209365 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.078714431 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.37834164 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942685582 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639844147 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.372775718 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.370309458 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398723886 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.378552006 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592076193 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052725613 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599799151 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379168021 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378433892 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.939071044 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.944475362 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.631515355 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31399745 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.372690077 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593115162 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613854808 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394508055 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.822689346 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.082074418 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.907430812 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.342627483 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391937851 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378601376 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.06145632 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954920706 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.57323488 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855807096 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.037217789 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371161127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.65270961 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.37595208 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.372245604 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655347034 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.375264738 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.376669441 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.597911654 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.950752613 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.128243734 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.385168101 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.402637236 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.315539509 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597214868 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436809708 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30775433 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.380674248 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.792873907 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398281967 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502640396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3836737 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.377828856 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371604441 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.127632565 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653240654 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.377547993 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.39031126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.377448151 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381807219 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.487159947 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305158393 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377116475 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.047579135 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.722543472 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.627978882 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.372873077 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.367710543 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.376642608 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373549152 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091012328 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.342912888 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374007512 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920174077 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.384527722 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.391050978 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.378058067 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.591017777 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.584755265 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376658581 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.600291457 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395207468 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39650102 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.280407714 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.141331079 seconds)
  done (took 1681.751740479 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.409144996 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.417415674 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.402830673 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.406237945 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.392881908 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.469664356 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.449103869 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.479898303 seconds)
  done (took 52.716832639 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.382347768 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.541135847 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.40469138 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.377369319 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.39116439 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.374286299 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.82791814 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.383123382 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.384345878 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.38526737 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.380249 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.386248445 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.992816554 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.392699858 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.387560112 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.375748922 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.383617621 seconds)
  done (took 66.046864789 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.341023306 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.674298126 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.130667473 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.391660471 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.403592026 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.391056878 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.898348009 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.390382799 seconds)
  done (took 58.91265697 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.393202745 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.393261758 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.393444836 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.394014487 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.393569731 seconds)
  done (took 8.25903337 seconds)
done (took 2086.785441828 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.380784455 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.383352376 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.380899073 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.383244578 seconds)
  done (took 6.820114975 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.362619896 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.092113535 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.365466447 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.386037495 seconds)
  done (took 18.497688037 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.395371492 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.410033519 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.046024653 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.984797959 seconds)
  done (took 5.3245673 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.127933396 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.138612548 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.125137913 seconds)
  done (took 7.684880013 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.377446067 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.384126978 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.384222362 seconds)
  done (took 20.438034962 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.674486913 seconds)
  done (took 2.967582515 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.524383908 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.574376592 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.693678044 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.701040699 seconds)
  done (took 7.787444683 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.765502247 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.76667771 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.564677788 seconds)
  done (took 6.38954687 seconds)
done (took 90.007694376 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.124943873 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.624327241 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.580026639 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.100511599 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.612767454 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.581014776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.59228586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.066170998 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.671222767 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.604688285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.098875381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.61054822 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.543728076 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.378724233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.543232417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.382105762 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.761505988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.170948007 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.785176139 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.984829664 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.596050083 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.739098849 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.934947304 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.758212033 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.790511491 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.539158259 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.318836207 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.383526065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.961881034 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.341074685 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.536585234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.166333223 seconds)
  done (took 191.179178031 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.392662543 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.379698543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.379287967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.380728642 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.395672337 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.382068594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.396001147 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.397596599 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.380644587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.379840739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.394045924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.394357758 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.380210016 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.379888546 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380354995 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381069651 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.380519876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.381735249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.379551009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.381035508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.382861211 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.379901859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.380748619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.397093875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.380354117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.381559773 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.395597093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.381341705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.382176927 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381136188 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.39015202 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404490396 seconds)
  done (took 205.630018709 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.381125153 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.39776864 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.38156101 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.398739852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.3961663 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.405832796 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.399003593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.3823623 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.381455772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.390555586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.395870682 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.390777948 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.382321593 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.382679385 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.382864301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.381720835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412615584 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.398745735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.38367862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.389545094 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.38390879 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.382271845 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.396801029 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.398050247 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390651467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.38430386 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.386922049 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.396930783 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.383422352 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.412605534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.383971814 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384464958 seconds)
  done (took 205.797899551 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.585628235 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.390633787 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.391817923 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.329115203 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.390977693 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.390639333 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.385747023 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.581379542 seconds)
  done (took 14.74426644 seconds)
done (took 618.643930056 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.69813845 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.415360903 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.599253607 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.411018221 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.154091704 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.429252976 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.412545395 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.577684727 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.306131399 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.593330161 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.594528629 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.409171183 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.746099586 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.412024852 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.659966185 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.507590431 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.254002941 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.346380784 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.721582228 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.943957903 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.676400522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.851600081 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.582093358 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.299194859 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.768992764 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.86133636 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.078864995 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.252252736 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.434888034 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.726930821 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.050422769 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.370454798 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.459557218 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.453671198 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.510255043 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.506068406 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.316836868 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.474277283 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.595702805 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.63812318 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.9430488 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.128301386 seconds)
  done (took 93.472044488 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.382284547 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.38217527 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.381449247 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.382693989 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.383595252 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.382243828 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.382484758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.383015674 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.383358804 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.381854039 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.382491767 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.384674244 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.383456502 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.382764508 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.38310687 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.382684366 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.383196224 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.384933784 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.38436923 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.38301377 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.384041419 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.382405706 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.383272748 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.382503285 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.384090021 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.384836832 seconds)
  done (took 37.263445891 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.395613141 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.636870209 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.800964161 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.400797528 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.395749467 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.399379021 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.472981898 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.398841229 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.398348563 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.398577016 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.56354465 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.398095532 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.429441212 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.826332731 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.398498153 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.397217494 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.396508928 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.395786444 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.645597387 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.405630708 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.490603369 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398693396 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.472471355 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.406815953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.418099883 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.397939642 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.40306594 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.956139523 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.400292369 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.563555346 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.171120614 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.476250028 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.904233859 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.818226928 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.172090128 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.406859778 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398920509 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.567237716 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.399516685 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.397991292 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474741785 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.398532989 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.817547017 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.058914106 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.414357318 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.399795776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.976960192 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.567486045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.636274077 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.410507827 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.841146727 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.409479303 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.400618069 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.400246984 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.636558658 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.414096961 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.399011618 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.959080644 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.420112025 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.475056091 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.400235077 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.400269022 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.661752903 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.400617561 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.643828436 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.401994368 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.409865756 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.419314622 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.814850127 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.40271146 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.083491623 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.41693826 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.400522662 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.565079458 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.643940394 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.007868489 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.40440028 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.667040352 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.919881068 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.474616744 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.405144262 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.950603511 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.479316974 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.407108297 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.403559195 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.402293442 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.4010464 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.452108085 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.473945701 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.012464346 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.070042705 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.988028229 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.495911868 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.41058879 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.40150253 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.964417042 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.418702321 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.402107559 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.81236499 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.078627967 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.418783715 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.409677082 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.080261382 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.420143573 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.481238259 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.408319626 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.822842835 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.410701582 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.455152218 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.403653893 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.410120191 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.424300931 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.479357438 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.406039748 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.404201114 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.049673002 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.59186535 seconds)
  done (took 184.03866664 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.398671796 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.396949984 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.397775841 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.413297057 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.39696375 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.405265663 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.397474825 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.397281868 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.403375391 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.397628368 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.39784871 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.395514161 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.400227887 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.399405458 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.408737921 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.405115329 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.009631086 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.397860866 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.398003534 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.414064855 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.190167885 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.406374915 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.399654811 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.39745439 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.397902421 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.399287913 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.398997719 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.400864909 seconds)
  done (took 153.934033596 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.406601236 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.963162816 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.415155465 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.532941987 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.42601505 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.403344064 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.53147854 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.468660328 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.407032831 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.40429189 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.403765447 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.700152589 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.409682995 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.904953083 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.591719426 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.53123407 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.904589419 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.422575979 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.403953655 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.404222619 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.53523703 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.420189226 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.700986796 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.956737512 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.408027581 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.957650081 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.39778653 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.408607471 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.40565421 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.961288062 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.405960688 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.703155455 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.480087329 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.464283874 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.960881425 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.909585032 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.93133851 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.549534169 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.406861223 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.406230352 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.405612685 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.396650043 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.960712297 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.410185486 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.408426092 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.955233647 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.425967861 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.409375873 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.412055908 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.405919717 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.465115087 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.465678789 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.706314744 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.96643757 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.481461759 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.419002338 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.53480906 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.804395698 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.411304651 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.90860452 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.39673955 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.973083094 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.436268635 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.398097239 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.40837759 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.414089504 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.553331189 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.534772894 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.911009368 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.426027606 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.910543179 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.569296967 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.406777047 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.408048657 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.410787971 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.974136624 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.920096295 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.569590851 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.53933567 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.598305998 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.409192109 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.409057022 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.398378451 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.48422889 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.408815639 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.976237578 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.937460363 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.427917461 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.412021247 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.412037459 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.412200787 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.581958958 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.985490227 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.494245924 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.907767688 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.731047986 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.72400452 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.420717253 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.466841426 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.425779723 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.716362872 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.421798147 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.466175073 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.873837109 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.716472963 seconds)
  done (took 167.053658562 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.64869854 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.547477118 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.495418233 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.55450796 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.004847841 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.982563099 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.725096496 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.556188705 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.51534108 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.664580134 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.545029318 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.500828484 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.620210904 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.484491342 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.123089912 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.474108072 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.498469993 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.551464466 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.548193602 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.39736508 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.075746438 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.69553182 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.598329367 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.232238379 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.507299552 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.170927014 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.961614846 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.934078462 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.582946293 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.68353524 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.931407326 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.506995346 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.37779126 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.0864698 seconds)
  done (took 67.103866272 seconds)
done (took 704.164052391 seconds)
SAVING RESULT...
DONE!
