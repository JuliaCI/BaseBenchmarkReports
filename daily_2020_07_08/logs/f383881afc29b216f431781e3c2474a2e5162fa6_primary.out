cset: moving following pidspec: 16200
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.596649295 seconds)
loading group "shootout"... done (took 1.136194622 seconds)
loading group "string"... done (took 0.484556952 seconds)
loading group "linalg"... done (took 8.01246873 seconds)
loading group "parallel"... done (took 0.153047144 seconds)
loading group "find"... done (took 1.403426528 seconds)
loading group "tuple"... done (took 1.945976405 seconds)
loading group "union"... done (took 12.790576418 seconds)
loading group "dates"... done (took 1.339744782 seconds)
loading group "micro"... done (took 0.203782907 seconds)
loading group "simd"... done (took 4.311257432 seconds)
loading group "io"... done (took 1.009809239 seconds)
loading group "random"... done (took 8.586982487 seconds)
loading group "problem"... done (took 1.622212818 seconds)
loading group "array"... done (took 19.395636191 seconds)
loading group "misc"... done (took 1.517774892 seconds)
loading group "scalar"... done (took 39.485890467 seconds)
loading group "sort"... done (took 3.053576704 seconds)
loading group "sparse"... done (took 11.628263235 seconds)
loading group "collection"... done (took 17.101147089 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532331742 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131847986 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141565933 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125221024 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.163057253 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123604672 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129039577 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086467273 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.918469384 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.158464962 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118371608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.472741236 seconds)
done (took 5.485242857 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.179495419 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094836443 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083586097 seconds)
  done (took 1.236701771 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068526014 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132434072 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069223989 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070155882 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.07005383 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070177372 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069325949 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069553199 seconds)
  done (took 1.611236363 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076909927 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.072235646 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071549654 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071860783 seconds)
  done (took 1.349637278 seconds)
done (took 5.516887927 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.255370107 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.11515272 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.316899271 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.3753418 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.493725076 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.095006287 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.077108408 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.073246745 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.133338026 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342831828 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.124679333 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.206424696 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105881264 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.191149689 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.045707191 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.140572252 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.089459009 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.131363163 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.097430769 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.134851193 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.396483292 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.081285934 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.091478722 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.076013698 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.071919418 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.66207958 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.675467322 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155592655 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.086782744 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.109035035 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.120388529 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.648498953 seconds)
  done (took 10.818830977 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108941626 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.106519589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073151197 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130167336 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106288634 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073315696 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079347524 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071221086 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095619826 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134700854 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.097227272 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.116033316 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070091644 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073090468 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.090814228 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203977888 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084960528 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086802347 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.073235718 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.084184138 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112527073 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083123985 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085320593 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085241947 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.134005896 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.17336305 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100871861 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101778989 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071808312 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087019339 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119185403 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13334306 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.071250429 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.072263541 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.132613768 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098639358 seconds)
  done (took 4.722738934 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.198651693 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.096945281 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.113687655 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.664420691 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070551157 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.171119156 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255213374 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.078541535 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.448395928 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.1697097 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.159177837 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.157404353 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.130322596 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.075390772 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.403179963 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.132998764 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.487889963 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.073380385 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.072525383 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06972767 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.100223859 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.08326249 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.073391761 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068594181 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.084100463 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096110213 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.096197418 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.216226801 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.093626439 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.335643729 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.076341852 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.172312101 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.096892644 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.39957334 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.076169198 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.105104937 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.421044581 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.135356661 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071160163 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.182721228 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.142250846 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070089927 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.128228398 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.087978625 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.076675929 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.078627334 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.075432586 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.087892086 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.087943389 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.109287465 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.074314793 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071507949 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.18131998 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070734514 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.073938875 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074866998 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155869192 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071138626 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.168130887 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070905161 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074800811 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.102794033 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.077584877 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.100775885 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.144865231 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.344090258 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071284363 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.074661675 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.045046814 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.916706782 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.08527139 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.072993101 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.093438629 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.073247826 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.075538734 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070169817 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.074047731 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.086564908 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.076526016 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07476402 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.1173489 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07278496 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.076005645 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.072579594 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.079120949 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.106712808 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.071562947 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.490595538 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.106816238 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.072493164 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.086892936 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.113994494 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.073898635 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.081781773 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074361882 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.078782027 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.071430288 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.074033152 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080232469 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097667596 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.183114353 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120114195 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.04131166 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.078947693 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.073551008 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.079810173 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078563592 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.076082528 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.072451309 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.079003936 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.075283712 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072159646 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.135707787 seconds)
    (113/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07292724 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070694279 seconds)
  done (took 23.171501797 seconds)
done (took 40.969746893 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.280146163 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09859703 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.098631271 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.098148262 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098800039 seconds)
  done (took 1.837745063 seconds)
done (took 2.979656863 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.12227652 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.070954572 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.113649947 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.113124242 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.07125908 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071547279 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.109180257 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.071340119 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.109561137 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.11461014 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.115975478 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.11536397 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.07187262 seconds)
  done (took 2.433705079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.079218672 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.088794176 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.09244789 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.069729715 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.080343911 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.090062954 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.069005515 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.088745915 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097809386 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.090285059 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.089947876 seconds)
  done (took 2.071587494 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.076956676 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.089562711 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.093157949 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.070008362 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.081479627 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.090158472 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.069909801 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.089819302 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.096276975 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.090080591 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.090266194 seconds)
  done (took 2.065845308 seconds)
done (took 7.701216004 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.088117555 seconds)
  done (took 1.206738811 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.622394737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.154301993 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.090616094 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.119424385 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.198760502 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113114703 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.252191182 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085477209 seconds)
  done (took 8.950015945 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110862398 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070649737 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071555177 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071669281 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072352516 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072258482 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.071182006 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07151851 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072606129 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072420592 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072254676 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072854841 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072863912 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071744941 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071390181 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071758881 seconds)
  done (took 2.421145901 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100411293 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099831464 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075857103 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077879675 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.075151763 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074702531 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077623984 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077327949 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073736763 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075309344 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078085852 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076979835 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.076209916 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066798477 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077531516 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079542812 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073399506 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.07686892 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079708562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.078320898 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078408528 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066567242 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076245836 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.0775822 seconds)
  done (took 3.126391038 seconds)
done (took 16.834706373 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.122567194 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083139346 seconds)
  done (took 1.345377404 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081834348 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083989682 seconds)
  done (took 1.317501603 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082507196 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064845109 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093047297 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079865711 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06594485 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064561146 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090408001 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065135849 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064973731 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065306174 seconds)
  done (took 1.888597087 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067112082 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078125453 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072999166 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082737174 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073407422 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066916255 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071403878 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067047979 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077375825 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065366222 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072452495 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086774441 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071270077 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088461997 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071153826 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071332627 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074586806 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.070252704 seconds)
  done (took 2.482682133 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06585422 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066181733 seconds)
  done (took 1.288742484 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069915994 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065976329 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069835509 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070007853 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.066435215 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065317505 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.066093156 seconds)
  done (took 1.627438608 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.375882811 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.125945301 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340553283 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072785194 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082953345 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262089398 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066670858 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072347912 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072724344 seconds)
  done (took 2.6724273 seconds)
done (took 13.786123123 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082506256 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088012077 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101246474 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460846811 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.094655104 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069225887 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11638834 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.190885667 seconds)
done (took 2.375026852 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213464412 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.413150015 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.943143622 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.068658105 seconds)
  done (took 3.584639017 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.342255244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089477378 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078651963 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068790737 seconds)
  done (took 1.753017022 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068520044 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072235887 seconds)
  done (took 1.31179746 seconds)
done (took 8.035527492 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066475825 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066377422 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066899723 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066735001 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066596891 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066581379 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.092875387 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066623477 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066646003 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066475396 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067453654 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.066202713 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065924074 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067146316 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.066527275 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06662571 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06685494 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067104251 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067000687 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066926886 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066961277 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066556089 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066554873 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067280122 seconds)
  done (took 2.829325793 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085915166 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06881418 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070809585 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070984853 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071083449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070702929 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070879122 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069367305 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071312807 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068603106 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070670104 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070984869 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068596561 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071038112 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06869021 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07077508 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07060276 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068965662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068755488 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071315367 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070895676 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068865137 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070761759 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070399618 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07124457 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071013424 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068721277 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069564134 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071339742 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071372958 seconds)
  done (took 3.304186006 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067490674 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062550058 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064833501 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071790014 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063360591 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.063957728 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064000664 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063151725 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063693611 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.065049954 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064025746 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.062895778 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064283025 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.062847362 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06350362 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064319979 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067398802 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080747083 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06433337 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063313527 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067121353 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.063115818 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062974659 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063010408 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.064066234 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063831814 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065099796 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063934922 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.063004604 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.063757353 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.063338364 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066637911 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068733622 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.062926329 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071949785 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067183502 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.062938748 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066814125 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.064356959 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062958211 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062603867 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063293803 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.06303968 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063477118 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071915251 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.063519057 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065038014 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.063998682 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063368297 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.062896592 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063343091 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.065825807 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068177603 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.064764356 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.063167229 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064506925 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063357846 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06440453 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.062885761 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062777248 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062881661 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065831292 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.065344149 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063890915 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080549423 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.064844968 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071641221 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063556606 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064821631 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066366155 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.063748549 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078778626 seconds)
  done (took 5.885868379 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092198356 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092244426 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068393912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068387549 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065047702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063993449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072417459 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064324161 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069019319 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084080443 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063938026 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068082682 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067913836 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06821386 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066725543 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068874099 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073366162 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06410219 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06414044 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068667117 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064781468 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072691699 seconds)
  done (took 2.746694822 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159516799 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070520199 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.10900347 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076178262 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074271718 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076199239 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070059078 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070390137 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070788845 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070669633 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070915684 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070491624 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07344211 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070654212 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071014418 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07099789 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070452698 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0710002 seconds)
  done (took 2.601605337 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081254289 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.06925183 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090615803 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068921114 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.070083347 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069579978 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073957458 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076194917 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069573875 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069655232 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075585773 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069445252 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069458806 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069809103 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06932778 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069329337 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069717726 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070057816 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075536165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073954144 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073803782 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075453175 seconds)
  done (took 2.790656271 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08170967 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068053184 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084107572 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071182381 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064113169 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064774978 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070502822 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068361238 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071116474 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068545373 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068976804 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064339483 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.071155721 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068826656 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071772855 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068543062 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068732599 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069011695 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068714656 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064303924 seconds)
  done (took 2.588246814 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087364287 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067873263 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076356205 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077554937 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067985137 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067554928 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075405574 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068320483 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067394942 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089960606 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067418652 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06782691 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075061278 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072461955 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067645813 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075051527 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075478151 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077629091 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06783984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067555061 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089599092 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067822447 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075655263 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067417686 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067665891 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067474547 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067598036 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072421368 seconds)
  done (took 3.226676958 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06735541 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067344825 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066933124 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066462059 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066623333 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067102798 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066583738 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066356559 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06623416 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067115595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066591723 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066847183 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066274745 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066695578 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067023307 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06661092 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06668924 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067173527 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067012994 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066504295 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.066155676 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066255238 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066264124 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067365294 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066419131 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066313558 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066747903 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066784244 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066460487 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066952165 seconds)
  done (took 3.198660529 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078169357 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077111539 seconds)
  done (took 1.352793769 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065802682 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082385316 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064373246 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074486647 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074536017 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067495083 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074212248 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073907678 seconds)
  done (took 1.770005401 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.079973518 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.104010392 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.067421558 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067871845 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078918503 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130421794 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087531301 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.075334964 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.080131707 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066913991 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.066656714 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086419985 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.065759297 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07755235 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068278823 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073585971 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073674047 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082337855 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076804389 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064168169 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.079404507 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069369214 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064880375 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06760432 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065938196 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072145125 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.080901516 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076535966 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073640778 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062524022 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.087852959 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064090951 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06648368 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073662802 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077201841 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.064849032 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.102540541 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.065990093 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.071547737 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.064070154 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077297116 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086523484 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077548015 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.083255929 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066583482 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067515206 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06391503 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.067646717 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.067767079 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073581332 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064246349 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071674825 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.063993513 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.067375659 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074704626 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065223774 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.072820604 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073137972 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079860204 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074728169 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072697826 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079090153 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072887472 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.076198358 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066039172 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08430664 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.067626915 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076034204 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.078306702 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.066651964 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079792604 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064303672 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063254743 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06438762 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099110182 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067042112 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.067390493 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.064870675 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064818114 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.066515739 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073541671 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.072078 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070969632 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.069475705 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081484386 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074704816 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.064444927 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075285165 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.082688044 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066799464 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065067187 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.080112042 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066284724 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064309767 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.084949831 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072014228 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.066498794 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06714862 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066836839 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077925134 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066651922 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06250086 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070983671 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.066296274 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074508681 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.070137519 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070251485 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.06379994 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073099911 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.070488024 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.065519391 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061509614 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066891191 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.065498006 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061533214 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072101135 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.063431362 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0781667 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06857669 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.076003388 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077570807 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.073118447 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08012664 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.063724395 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061915001 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.082871514 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07174838 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.064630671 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.082417816 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062246991 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072497364 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062399527 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.065443381 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.071342416 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061521428 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.192919723 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06553696 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.076050546 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.068479465 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.06734677 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070278287 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072436078 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076980674 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.066729945 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072227134 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065864324 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.082475149 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074168614 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068370474 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.07011506 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.065823889 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076309841 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071701058 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.074943505 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063542967 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.066365604 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064721582 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075134854 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074290506 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067422357 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077813593 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068574086 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.066006942 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065245574 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.066282503 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066732156 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069542502 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065770839 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072583291 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.074084141 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.079028123 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074633127 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073647639 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063834423 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063813771 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.067747926 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.064338023 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069232849 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.074752524 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078521849 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076344259 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084580145 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.064812243 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073299542 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067609912 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081606223 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077039684 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.065786878 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.071191772 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063321431 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067546798 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074427836 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075834236 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.078510902 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.078385719 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069225159 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06862341 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064166706 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078430183 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.06560253 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072135205 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.074835902 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071943739 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.065049091 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067445696 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073782094 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.0686162 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06507787 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.081289952 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074293436 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063744032 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077510244 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.065119673 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.07568494 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063714682 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067783326 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068487955 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068327771 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.073805553 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.082853346 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062908119 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066318777 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.083388988 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.067304895 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.067618141 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071862893 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.080649772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069435956 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.071833927 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074710526 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072846075 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068374717 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.072675365 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066494105 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.075147202 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.069976224 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076173017 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.064639102 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.081949258 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062768291 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.080170087 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065048761 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.074913921 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065768355 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073235085 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.0659706 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.080685703 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.065959617 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.065281042 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.076517685 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061741981 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.0737503 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062818417 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067003833 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068121005 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.073613822 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.065786777 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071451356 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066094268 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071160878 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066973906 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070814101 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.073689688 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066791469 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063085732 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07233087 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074185001 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.07091736 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.065723201 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.065796073 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064846773 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073676937 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066250447 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.065340545 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072292208 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067531376 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.20059559 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068497246 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.069020643 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.06793462 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077007184 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075062843 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.083840998 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072606008 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071839901 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.075054505 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066460618 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.083574417 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.064382684 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070893196 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063555057 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074387813 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.075311416 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.064967229 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082868013 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066571719 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072666698 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078389506 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072655789 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067534693 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.084101703 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.069550193 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.073096899 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072335662 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068588343 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071317668 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06866574 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072556246 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.075789566 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075884763 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065717708 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071351681 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07321365 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.067739489 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.076471307 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066721319 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07207885 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067902619 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063631393 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.06893912 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075212078 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068753231 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.069310036 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066297561 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063264277 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065196903 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075175647 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068942632 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072323658 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078348364 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.063097801 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.066278565 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064417696 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067757191 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.082652796 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073956352 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072630672 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069159556 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063719327 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067286989 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.067939574 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.065444191 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.069501963 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06370369 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064634448 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074859663 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.066916942 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067803865 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065580939 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066953324 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073114239 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.071451619 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066164593 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070196959 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.065355882 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068531622 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063699271 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066939299 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.06857152 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063610994 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067334733 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.074246823 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.08033342 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.07020465 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072575511 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067566937 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072238344 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.080149626 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.07576107 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06720944 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.07309235 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063556699 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.085226567 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073062936 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072511149 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074162524 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067930446 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081895414 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068086432 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074310547 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.082817526 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066789418 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.075044143 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063967809 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.083235006 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.069643421 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063455408 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071598665 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071078855 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068875293 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076607689 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.064854046 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071255609 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071078287 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066481283 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.066107511 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.066332837 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071347293 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078765711 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.064433331 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07003362 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070582301 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071384084 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067591048 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074907418 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071364364 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065222475 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06629628 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06624817 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064943963 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074864632 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064364015 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067804222 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066955441 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062669806 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068556231 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077728971 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.211480887 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075359163 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065075402 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065232448 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.084441265 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068689263 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.070471538 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07288769 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073877001 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077180406 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074921895 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0820425 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06651304 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069410078 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077462131 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.066936757 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.06501652 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067780035 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066640969 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073696978 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.074906386 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.072437743 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069611848 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070409141 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.076363444 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.067478317 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069031502 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.072782655 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.065790873 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073328431 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07171961 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073384605 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067692603 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06386766 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066886222 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074842923 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071545708 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074780594 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067171815 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.07548558 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.078913237 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071078275 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.070224385 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.064615671 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.070378877 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073160249 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.071282165 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063653167 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068292767 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067403521 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.07486901 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074781312 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068180105 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063553335 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.081644183 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07256223 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.073254586 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.067723835 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.067440816 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06559008 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063807284 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.075089182 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064040401 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.066883224 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068072237 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.067099674 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.081447491 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072168533 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.082981341 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066346783 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06808628 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064036151 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074171283 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068652129 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.064535315 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074391925 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.0638573 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.083027172 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.076832286 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.073946548 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064469587 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068710011 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.072149229 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.080088734 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073581198 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074365477 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.069940435 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074063194 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.067354952 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.075006164 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064998088 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063151681 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074995621 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072727849 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076493676 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06442365 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.074690136 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.067528214 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071678062 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072379652 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067344622 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.067180668 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067218651 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074160642 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068735032 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073746479 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068552009 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082131354 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.066341472 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074921851 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072840168 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.074427859 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.077013722 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077844438 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074222915 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065015913 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070350726 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070872518 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.065513851 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067305161 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.068606878 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.087783812 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066199255 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066428273 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.078040449 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.073843442 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.064126631 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.073659508 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067226021 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.074984139 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.065050825 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.073080567 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.070326973 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.064939314 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067520613 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068256646 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062485022 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063047873 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063176285 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.207990183 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069590164 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065935537 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083757608 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.068061075 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.07311129 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075930766 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.070788008 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.067246349 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064859303 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.068076838 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076266864 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078449993 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067159091 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072717406 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067867035 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075505042 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063413834 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072542541 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.072329171 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072461904 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065132877 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065662561 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078371155 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.078848111 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.068711126 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073730806 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073486973 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067263342 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.08920892 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073136597 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067637261 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.07562628 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068171068 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063979095 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063410899 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.068247104 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075731194 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064366592 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.067560672 seconds)
  done (took 44.126580833 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103299962 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065338088 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063894816 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064788156 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076690393 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065552848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063917556 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065440444 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065014822 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067546916 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063875481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063900534 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074014997 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08156519 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076893945 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069654529 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064343704 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065584212 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064527337 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065893603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074021426 seconds)
  done (took 2.772145239 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073454858 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081510932 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.077953834 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084298496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073624914 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070029264 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077588245 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070029933 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.079111792 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075269393 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079167148 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070735878 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075064857 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07512698 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074933235 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071143726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.079269338 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073577367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070248576 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077746197 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070522717 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078309755 seconds)
  done (took 2.950064392 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066659853 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065183193 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072502056 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063249828 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.063196521 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069000984 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.063679335 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.067677124 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.067184202 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.06787973 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072211511 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.066374537 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.064204043 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.068645738 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.063468705 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.065124529 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111868075 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.064863977 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065243132 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.063866723 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.067451876 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074981542 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063351307 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064078046 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06702229 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068489159 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.063677334 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.067722573 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.064929785 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067975378 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065549249 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063147928 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072445468 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.074035075 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.06779249 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066932584 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.066131103 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.067766484 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063820775 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063743168 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072552943 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.065661091 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.064341294 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067243797 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.073892165 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.06470281 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.063507441 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072036532 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063372593 seconds)
  done (took 4.616041696 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080861395 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115653847 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070359995 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095513266 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080184505 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073398998 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069833048 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096996778 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065866065 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066560332 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.082207164 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081288802 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068702442 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070885478 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071593092 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068222907 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068967597 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067316709 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072236118 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068140994 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072920684 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071600476 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080683936 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081034516 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069868428 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067432351 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068377766 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070504579 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080388612 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073068326 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07080723 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072126603 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.08094385 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.07241807 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067573865 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067851902 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081938722 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06877998 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068179428 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.065756537 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06776101 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070278671 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071783835 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082131063 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068765818 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.072053271 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068585628 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065520137 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081461538 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068015334 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07403621 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082392877 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06999678 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06939618 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071043119 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081302935 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068848799 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066428031 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068917213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080199254 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066215795 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07042879 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081590946 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067405658 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073425898 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082019017 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072148778 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070427666 seconds)
  done (took 6.461862947 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074313495 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096951439 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084017464 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08549191 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076782933 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076898122 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076157502 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076098106 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076329553 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081156801 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076469212 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.118930769 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071530808 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079211018 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076169382 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076242385 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.077359605 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077033943 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076924813 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076441948 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076368506 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084077741 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075980423 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084249309 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080395246 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071379097 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076111402 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.076211428 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084685328 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076369872 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080647717 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076251884 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076668378 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08450162 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080639375 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076657844 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06521004 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076053465 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076450911 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076212146 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071194535 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084308402 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.076243232 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071394674 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076456645 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07612131 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.084601012 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081685923 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079137094 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081770127 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076668526 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084539507 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077112999 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077027688 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084674791 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.089010161 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084786952 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084982735 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076824653 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084971481 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084727342 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08883777 seconds)
  done (took 6.269881133 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082242744 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073715826 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.0861321 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066243273 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06435008 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074974097 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06382227 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064033672 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073510061 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073356744 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076373595 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075197915 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078365119 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075693005 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075018446 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078192119 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075690953 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075278501 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073594221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075063721 seconds)
  done (took 2.801677764 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078230744 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086146879 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070518229 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075353174 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.070290025 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075122372 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069207575 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070906774 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075912484 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070574073 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077278996 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077246533 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070845458 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074745165 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077780808 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075310666 seconds)
  done (took 2.503212856 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.086379664 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074786872 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080900021 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066383755 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06924152 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064488275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065400216 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063628963 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06461119 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07968849 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065593718 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07722467 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066110101 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064397191 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065643967 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071656003 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.064659887 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065561242 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06530498 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079836668 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073145325 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067023038 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069793384 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065922065 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07125838 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074246145 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068300368 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.069330923 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065634283 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066522844 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072121114 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073010619 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065512908 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066674998 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064994742 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.065733269 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06549243 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066051045 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072016309 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065675649 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063829649 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070862014 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066280506 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067060875 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064987682 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066387216 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064931927 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071791257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066312963 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.071873274 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065877203 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068828172 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066022551 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074228964 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069033129 seconds)
  done (took 5.094230618 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082099971 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070563659 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064331839 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064357299 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069777478 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.070480504 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070005976 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08663367 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070768964 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064039251 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071385242 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069087745 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070966639 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070568636 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070290134 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071354701 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.064241565 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070312422 seconds)
  done (took 2.589747198 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074718084 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069270043 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074468124 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069377363 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069211042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070000689 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066315267 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064563651 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064604997 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069293771 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069287991 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068897715 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064312668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069362123 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068815841 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068895572 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068790155 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06451594 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06953459 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064357254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068664957 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064369541 seconds)
  done (took 2.813158631 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097620296 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086134683 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145777286 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081102069 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090419844 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073772601 seconds)
  done (took 1.886852523 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093895285 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102241248 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069412567 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069742571 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076945538 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073747293 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073195917 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074250489 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078902879 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079839455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075380088 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079345781 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079132378 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081733965 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076086521 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076716626 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073767094 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073925583 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069109426 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086357287 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073622512 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079624724 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073942419 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074214145 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073902321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08150901 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079170955 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079922934 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073371332 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079652402 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076432769 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073707262 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079828793 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079674867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069651311 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079771162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073856775 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085858215 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076680606 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081984619 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069438219 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076795802 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079204706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07897863 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079403442 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073970536 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078606425 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073825895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073834595 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091985931 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07719349 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081790258 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077036875 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080008469 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079525217 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088124041 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080152438 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082074931 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076719891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079927376 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08214224 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076724648 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082000866 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079613787 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076754494 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081627341 seconds)
  done (took 6.484155584 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109467949 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070277327 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073872503 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08001502 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081629085 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073608118 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074058147 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074133413 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074026965 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069340781 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111879269 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073974995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082668359 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082765908 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07393261 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073548604 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074106559 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082213561 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069360565 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087847175 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073924422 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082192799 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081739884 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081546246 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080122696 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07637705 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073880001 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07337783 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073612473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073629718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07854248 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07401996 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081486274 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069757647 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082042667 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073830765 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073872191 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078668998 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07375687 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076601647 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081973553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086167017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073416514 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073367736 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079797178 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073487232 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073469055 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069461872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073714676 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069390451 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080037211 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080002593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079845829 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081716662 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073841641 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074606915 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073568363 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074181448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074096062 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076439904 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081546594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073534743 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088402404 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073702021 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074113293 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081581123 seconds)
  done (took 6.458906387 seconds)
done (took 131.295614907 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215274081 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186188401 seconds)
  done (took 1.702468675 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075941453 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.107766115 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084680585 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135856211 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072681315 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.107618142 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.106195481 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.084856079 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.072624308 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072610959 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.072096034 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.075568052 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137871496 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072220639 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.072002574 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.075677629 seconds)
  done (took 2.751648812 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.108198086 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.219637068 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111234121 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.071359564 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.106779636 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.079105929 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072800178 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.085154687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.077851426 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072587242 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079121625 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07698354 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.072411836 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.077137454 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078017864 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.079571104 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072084362 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.078997006 seconds)
  done (took 2.944165387 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106175491 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.097219681 seconds)
  done (took 1.532531357 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.178992822 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.135861429 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207154838 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.36181229 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.161091899 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.429516932 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143255184 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142333166 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115324084 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138821472 seconds)
  done (took 3.337770838 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107020474 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.211102131 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.302763181 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124140434 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077801819 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116983886 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125951594 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082782752 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084177198 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083704592 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083844582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.079821872 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103533817 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.079364582 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077455383 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080060587 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106412314 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076631869 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077732847 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078545131 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105588704 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071197294 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079232587 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.076568323 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081084369 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.080927335 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07280392 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070900557 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078307338 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077794807 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081202397 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114358345 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081334995 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108753581 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.07596486 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110106098 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079806134 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075854463 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078206336 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.076206754 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080619159 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080182894 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.080317724 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079631299 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072395278 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080034333 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072732135 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07149628 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082168576 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072664977 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082527506 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.081131183 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108524797 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072947973 seconds)
  done (took 6.307525188 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112486851 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.113744945 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0759582 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.12097357 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111964012 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076405483 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.11242066 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105110094 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.113788438 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075410547 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073142104 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075201722 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086544326 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085966373 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.123340081 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.115999967 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078606632 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076385647 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114032813 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.114264681 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073246108 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109133182 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.103368188 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11258314 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071612411 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075669668 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073074713 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075450275 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079947872 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.08136102 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07695212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.085348582 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088428101 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081292449 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071457674 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073015059 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073050134 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083851006 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08296627 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081434334 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081658523 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071907077 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072559846 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073961173 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074401191 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071375242 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081734481 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083620372 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081823108 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073254353 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075000844 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072601652 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073804608 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083687273 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081325873 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083996692 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083357008 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072912009 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072952817 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077658395 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083038587 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082684397 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082758743 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075367808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083464282 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07299209 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083535513 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088073162 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073206224 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074763613 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073167377 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073199161 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074036032 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080465249 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.08046322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075528021 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073563765 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073097949 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082429931 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081503674 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073701353 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079915178 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071763827 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073226025 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075007161 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07523353 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.080524443 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083995094 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.075391732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073326111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073819412 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073401861 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071634401 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079995781 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083838385 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083010576 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081203353 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073892441 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081631301 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081356883 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074488427 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082064232 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072685347 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073969854 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073249431 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081047911 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.079061063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081330916 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072613296 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071862613 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079402917 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082076058 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071706975 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080029592 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081155722 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080357831 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070686047 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.21702698 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07463587 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083155359 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074265033 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082930072 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073910723 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083172983 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073762855 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072165549 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073126266 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.082102006 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074806532 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073519958 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07476726 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074620813 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082874259 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085550887 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075730881 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081270884 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.08226133 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075130782 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081464867 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073352349 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081775366 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074089687 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074505491 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072179241 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08468674 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073286786 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073117671 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074545147 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082789475 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073535722 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083272928 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080604056 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071898199 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084346605 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083165243 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080121546 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083087574 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075722193 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07325839 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072626707 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074013478 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080707107 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081915359 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075424319 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0729994 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081391856 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082161132 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072027479 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08085322 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081750335 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081742113 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073578713 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073866618 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083883417 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.084162999 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082307426 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081249605 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081598752 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073771486 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080982781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080827711 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073314895 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087565257 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072754873 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086123943 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081828513 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080095556 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082281727 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083584956 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082779168 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084098007 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086930701 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072156511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072477088 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083185678 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073253292 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074489067 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082608176 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075242659 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.075010333 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086886631 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073517638 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.082630972 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072433667 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083171352 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071541893 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07532463 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087101933 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073348401 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.075089899 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085473114 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073096057 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08118958 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082931855 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080894366 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072652511 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074743755 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082367424 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080391125 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072110599 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072110399 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074786538 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079351284 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078941772 seconds)
  done (took 19.458096562 seconds)
done (took 39.375164785 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.225398233 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.167638062 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.201380701 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.125079261 seconds)
  done (took 2.151821484 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117408523 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.106246712 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093457105 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067541368 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10010266 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067534211 seconds)
  done (took 1.922242523 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.328825052 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.222825491 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.197054698 seconds)
  done (took 2.112406747 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.222420383 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.213049949 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.46625239 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.2970107 seconds)
  done (took 2.663569225 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150924457 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089720833 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066383668 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085390288 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136158137 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.16017276 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100823295 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126904876 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077868579 seconds)
  done (took 2.417465864 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.159432896 seconds)
done (took 12.815589528 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.205964534 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.327831908 seconds)
    (3/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.113076074 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.092513522 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.075176145 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077523134 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07070417 seconds)
    (8/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075723097 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087637672 seconds)
    (10/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.220412451 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.239672002 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178375212 seconds)
    (13/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.273225998 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.078584588 seconds)
    (15/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.185284329 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.181157306 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.181141329 seconds)
    (18/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077043917 seconds)
    (19/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.243979898 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.173868774 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.158732 seconds)
    (22/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.097299593 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077607821 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130669038 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111070968 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076603897 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188337535 seconds)
    (28/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.188803003 seconds)
    (29/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.196423609 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088080311 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074825919 seconds)
    (32/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.067910724 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.239972044 seconds)
    (34/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.067634239 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076551262 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07596852 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.067083017 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.19635961 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.067448093 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.107043051 seconds)
    (41/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.091379805 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079044801 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 0.143999425 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.08786689 seconds)
    (45/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.202001331 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.144042236 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.076867727 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.106477369 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 0.06929339 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140664836 seconds)
    (51/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.199095038 seconds)
    (52/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.080513311 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196385051 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.09002843 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171538067 seconds)
    (56/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.084078035 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16748358 seconds)
    (58/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.067214475 seconds)
    (59/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.081416762 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067427379 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076837693 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211713775 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.067220392 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168556766 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.136416848 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07142945 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.067234775 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.165542255 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.081492072 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06751419 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076956444 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082551887 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087156683 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.143152439 seconds)
    (75/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.246530087 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16163059 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.078648541 seconds)
    (78/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.07602721 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.066509961 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067549787 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 0.249770595 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067359118 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.193505012 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117444087 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.119795283 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066497591 seconds)
    (87/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.075283178 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 0.182821299 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.216731628 seconds)
    (90/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070261692 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.199242978 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.128746043 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.068002503 seconds)
    (94/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.163696297 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.07263776 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06769783 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085401854 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068774476 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069502797 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.124050341 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.143162756 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07547926 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068294335 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101275425 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094178361 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.144257132 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09317058 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.144310485 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075555859 seconds)
    (110/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.146625124 seconds)
    (111/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.072699804 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.167310795 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095975726 seconds)
    (114/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074722989 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.18716045 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.173963852 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068730197 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183272793 seconds)
    (119/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.169208652 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070673124 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0774129 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077233922 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.067713427 seconds)
    (124/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.067990135 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.212214297 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066971988 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068806365 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096306481 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.095374051 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 0.135180111 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.06904012 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.097729369 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.202397512 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076906244 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069126469 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078845974 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067444435 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.096079259 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.076355871 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067250322 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068088991 seconds)
    (142/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.097469694 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.134451845 seconds)
    (144/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.239643328 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137283692 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076423687 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076954489 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06865227 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075710744 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075578068 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.068770637 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095581432 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.09419011 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187845219 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067410693 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.187174208 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.187251091 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.080034163 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.069039187 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091856198 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067220268 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067834892 seconds)
    (163/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.144065187 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067428704 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074259286 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147113138 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082483294 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.068438984 seconds)
    (169/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.069382883 seconds)
    (170/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.067874563 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.06700171 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067292506 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067213356 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070034321 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076385108 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093103166 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093642523 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067473917 seconds)
    (179/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.068322468 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172001912 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068046639 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068666802 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.131687933 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.068385144 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095774664 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.08089506 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068331905 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.068493845 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136213812 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076442205 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145882484 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066790212 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066957658 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126439097 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076349354 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.06710469 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.068051273 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196876688 seconds)
    (199/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.076170778 seconds)
    (200/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.067479553 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066705818 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067615603 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091532743 seconds)
    (204/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.06711311 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067562973 seconds)
    (206/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.067489587 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076677588 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.08093853 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.297398933 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.072568603 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.081844631 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077882954 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139080276 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.069597329 seconds)
    (215/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.069575214 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.069589862 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07654382 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080555814 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084610613 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.123609979 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.0675464 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.093689059 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.077529231 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075228413 seconds)
    (225/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.069396466 seconds)
    (226/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.077079578 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140720573 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.068551202 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.09427725 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069110905 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.166449185 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076047984 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.07099705 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070080838 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075165218 seconds)
    (236/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.070776436 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.097737493 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.142378339 seconds)
    (239/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079784038 seconds)
    (240/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.150552578 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.080170498 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.067248069 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.084490847 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067578414 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149632302 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069372069 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068752201 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07619843 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.145941106 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.067209901 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.067099983 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.145286915 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.144466291 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.068021503 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068751361 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093285804 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069040276 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068329889 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068221359 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.070230674 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069969951 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.075985629 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071599879 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172735404 seconds)
    (265/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068789785 seconds)
    (266/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.069229357 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093679905 seconds)
    (268/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069089884 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.069771822 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112545428 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075067678 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067531552 seconds)
    (273/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069264615 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.069629336 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124141729 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067752117 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075518317 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122600699 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.069872363 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093953955 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.076200442 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075890012 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.115664778 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067412661 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067815268 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076048873 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068933501 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094690606 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068356247 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077057011 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067878674 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141043684 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068673827 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 0.134773126 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068073285 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069068308 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068794413 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074868283 seconds)
    (299/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070709481 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.06920387 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.086046421 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068486526 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071019825 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.130593278 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068816412 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075433243 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06803886 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067976623 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067927604 seconds)
  done (took 33.851588951 seconds)
done (took 35.23157835 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090195965 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102414988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076449803 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097893871 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085294807 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101156401 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.07669942 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081718313 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084112668 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083093107 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.083400155 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.074265431 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077744702 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078576895 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076179585 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10042425 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.082717863 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.07692952 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077262907 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068021555 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076587298 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068297993 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067465759 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074559622 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079961967 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076235165 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.078376766 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.07819564 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068360471 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068423849 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072724547 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076853174 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067855567 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080559803 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076370104 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076949081 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.078200611 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080452629 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067955592 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068462924 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07873811 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068634653 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076880319 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07476457 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073730948 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075120261 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077065431 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08171627 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100641483 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072348072 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078281803 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080320492 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080673556 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073553373 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073221602 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077594534 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074564711 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100313682 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076759967 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072105235 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078221555 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077270862 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074454245 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077425808 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076934166 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079401202 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080685248 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074307443 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07884869 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074787149 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067870678 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076484644 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.07510738 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068345391 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079841836 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080820894 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067042517 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072272542 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076113775 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076912128 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068113429 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071939467 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068188326 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073095723 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071913752 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074109978 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073176817 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.075224166 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067565219 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077183454 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075313373 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07596973 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068106746 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081483874 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067962754 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074232309 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068659413 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068065007 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067625276 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07341423 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067820353 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072032268 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076431763 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067866226 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072821572 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082436265 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.0679616 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075795077 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067950588 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068580369 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080366523 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079076482 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068127888 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072200014 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067806018 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073526823 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067875709 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068031583 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06758108 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067809254 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072138337 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068097139 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071598636 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072959417 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080627303 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067831482 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07237215 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071526089 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067871717 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07386548 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067622238 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068040019 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067214628 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081954096 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071191587 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067315819 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072791878 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070965578 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07583478 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066407351 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076177254 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072948403 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071323263 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073032403 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066445197 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07850724 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070697209 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071296633 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066802256 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066952 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066475397 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067305553 seconds)
done (took 12.904847643 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071267709 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.125911663 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098327353 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096907735 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086580714 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068990983 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076798211 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095432065 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070342161 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102313628 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089873812 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091225137 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115104495 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067497227 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068523447 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070256795 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070257804 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080491485 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097106514 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091483931 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111823116 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.06847905 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091334882 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090152496 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087094613 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094131313 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069749888 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069657399 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071164121 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090501425 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.094747701 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071620378 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069529776 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.094607974 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.087911947 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083724734 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.07000726 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078001292 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069681913 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068951582 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070376309 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.091456914 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078357573 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078283425 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070004474 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076667507 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070057257 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08588088 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091493761 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078090369 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085832491 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.096598641 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072357815 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085435553 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067862608 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085486816 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078748862 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069454652 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069115273 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073923869 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069724356 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071889279 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080395751 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.07985188 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073718253 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08689349 seconds)
  done (took 6.846120234 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087500437 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09690945 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086126751 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085975886 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068658257 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069983868 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069391924 seconds)
  done (took 2.049246116 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069480514 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092942986 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094897194 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094106131 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086517187 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095829692 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069392304 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.102711176 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068465949 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090922485 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.127909335 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.096529926 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073288755 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.081109595 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068987693 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.086481606 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06911861 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.077666547 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.086835912 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095199953 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074633159 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096519821 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.083400092 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069499137 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.104211694 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083172809 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.068672721 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069086289 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070126598 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070286651 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069942923 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113741226 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082087497 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083662159 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070415141 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.068980639 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083705787 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072602124 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080653815 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079038008 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083483966 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070621536 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067996097 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070426296 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072549757 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081379632 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068309035 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070541305 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070765179 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090615003 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067971306 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082541106 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073505466 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07559157 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074954176 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074925867 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077874229 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070787318 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090411912 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.077719295 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070445519 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087687717 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086882538 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08300091 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086858584 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.074151935 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082454103 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083465329 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070357241 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.071736092 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070553431 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08667367 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.069940403 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.071288484 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072610316 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071246126 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08149646 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094912533 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095736852 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083084915 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069896796 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070731922 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081050434 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.095304007 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075305792 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070859755 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.072728719 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068558646 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073441797 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070503331 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074859134 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070178809 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.07789814 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.07147464 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072904247 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087166126 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068694816 seconds)
  done (took 9.172647592 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072849953 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071769434 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073793184 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071333862 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071127563 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071799967 seconds)
  done (took 1.94848765 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.097564954 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07151956 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08469554 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071042205 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111240839 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085913078 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086872367 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081591964 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08308371 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.084837072 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086321527 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089640807 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091669112 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072279959 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086190763 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072223842 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086760193 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076054155 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083298205 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073436479 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085521278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072527015 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073013761 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091389066 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073745009 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072338687 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.079277532 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083083308 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082700464 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081385501 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072305044 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073631327 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078797133 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081131016 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088987362 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079550021 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070776937 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077409404 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072831258 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073735337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089223536 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073955382 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07369344 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077395878 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081638507 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.079619829 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077431457 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079898512 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085490543 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077250013 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07729862 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072331285 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.073756851 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076891999 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078922621 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081766714 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077584179 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08689223 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.0722558 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078927356 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071158757 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073723492 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080909332 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074376535 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078617713 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077767277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.079378611 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072816495 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07331834 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07118454 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077476401 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070953311 seconds)
  done (took 7.200726 seconds)
done (took 28.729721341 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.935499503 seconds)
  done (took 2.403602711 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.662026046 seconds)
  done (took 2.164972038 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.127221772 seconds)
  done (took 8.627363772 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.458920453 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.54043625 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.797627641 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.142307555 seconds)
  done (took 3.476658319 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713092886 seconds)
  done (took 2.225158881 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.242925749 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230986061 seconds)
  done (took 1.996114178 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.363446852 seconds)
  done (took 1.864832794 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104054463 seconds)
  done (took 2.605601823 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.27589126 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.17435119 seconds)
  done (took 1.962047154 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461606195 seconds)
  done (took 1.965112939 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.295668366 seconds)
  done (took 5.803900898 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.248676654 seconds)
  done (took 1.793048179 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.246340988 seconds)
  done (took 1.753779452 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.76149037 seconds)
  done (took 3.267842811 seconds)
done (took 43.424230894 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086131775 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089221772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.088977131 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08508349 seconds)
  done (took 1.831855113 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.077743712 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.074423265 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.077317356 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.078027489 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075832824 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077666489 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.077109721 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073950541 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07559035 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.073821661 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.072213555 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.074057319 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.076387029 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.073616902 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.076553298 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.078367017 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.073908538 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.073347095 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077378248 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.073561454 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.076490986 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.073678926 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.072140334 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072382015 seconds)
  done (took 3.316613591 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082111771 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07663802 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078417168 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074847134 seconds)
  done (took 1.828028015 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.079842131 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.090938088 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.092969858 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.099037379 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080034416 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.080528581 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.089055619 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.090212486 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069298136 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.093489662 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.071822421 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.070145252 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.070266665 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.090861675 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.088850035 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066831857 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068050164 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.080079226 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.079362491 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.082911369 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071985496 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.06898164 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080207407 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.080001844 seconds)
  done (took 3.447211289 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.088440889 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068919446 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08960362 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.097237973 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096749218 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068858248 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088845075 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09777163 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.142408499 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069097179 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075055192 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069300871 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.109086001 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069718691 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.087263914 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111320816 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115113957 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.07323883 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102298823 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06901376 seconds)
  done (took 3.311166592 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.08798481 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072621034 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073707512 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068626118 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079365663 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075975099 seconds)
  done (took 1.978381321 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071751383 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071003657 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070835377 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072662663 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076385488 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069780014 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069213929 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071065731 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070961386 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071042758 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070792949 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06906037 seconds)
  done (took 2.369560329 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.167237721 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072326659 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074313219 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070124095 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075882974 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070945438 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085783562 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072429831 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089296709 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069944754 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07062628 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.072944392 seconds)
  done (took 2.509931659 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123109556 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220567351 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112398443 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077211991 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245852645 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112012914 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.096263546 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.139908151 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106918629 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.074027562 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118346323 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148921035 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115957858 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.149053591 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107589736 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168892386 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18199472 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112405718 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134014916 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091166667 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.075310596 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167578054 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075273024 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106572803 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14932403 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.11433343 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127353178 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149620661 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103472741 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.099719235 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109800995 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080288564 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184155815 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.089222333 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.119448936 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135494223 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151964345 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096675917 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.090450797 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182832198 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18232486 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151852088 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146440787 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149452126 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084242468 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.120936871 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09029475 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118844596 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166270968 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108567102 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080379087 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117940348 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121289079 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.300627076 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.114728984 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091637299 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200152158 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142230317 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136101466 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087391979 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118044121 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.122444775 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12088347 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192016252 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160324607 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111686892 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153831913 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133060383 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113955222 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114669724 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130757583 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098261403 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130930132 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138598528 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15718932 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133753314 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143270783 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121323034 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089681737 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121238601 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141054963 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109832323 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134985891 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180435908 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125597916 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104547012 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129643135 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.146982078 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076111981 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177320143 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100379881 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132387433 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115447504 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159688847 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111933531 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.091459385 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117072229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170886035 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111692189 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150162933 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1086645 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12925713 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104470653 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150128433 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087753946 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107771153 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118315741 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.104321009 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.227316807 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121510983 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17982595 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13043938 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081038652 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122555959 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105324648 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.081971861 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134034839 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161007648 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090018441 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082404856 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168030777 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.10348947 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.127493478 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123092085 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108636622 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147440439 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161668787 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105411485 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103110115 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081267752 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208882174 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082138611 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1591407 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090751044 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1393807 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117133477 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157889323 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158288955 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108308654 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084861341 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11948502 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.125469353 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113865135 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130380093 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082763915 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122236004 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168710865 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111610787 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099617517 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.10262776 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.074709259 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134643544 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083066303 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110114739 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109126507 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.105296212 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.100125076 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164305364 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.111145195 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124135583 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105709398 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.071342064 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098298622 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178249781 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088310983 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.12048271 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146214406 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2575189 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07466623 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.14219518 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080612147 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170088745 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129317501 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118972587 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085045222 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142754755 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073932727 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079909936 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152222099 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113830787 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112621573 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.154743738 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116281614 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.132073368 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122660755 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.115271101 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108336341 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11446804 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.120753485 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133256027 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096201564 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171282852 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106674373 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084588306 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099207452 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084261287 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.082544702 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147782519 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180135045 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128739417 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111909375 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11513006 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1391057 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.114156205 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100182255 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085552403 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149623608 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082259462 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080785794 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131549617 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.12289981 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097974158 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.155741056 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.08411991 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155116577 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142046231 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103407864 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146495156 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074261732 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074890862 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093028412 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127559997 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133050464 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08423443 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084004811 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154582541 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146651145 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126505907 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267524375 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074803407 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124291805 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157067913 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.12154754 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088062726 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123074174 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093160239 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142412348 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108700113 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192616607 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116544767 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124931514 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.097764848 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.086047662 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079874377 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106960463 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149053211 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100686832 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088548917 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.072425487 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079273971 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143779266 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104234451 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130197413 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125572816 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153812201 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078435288 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118655731 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122355919 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121038612 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128853181 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121712193 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.101976576 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098523135 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120431437 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139770043 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07984677 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180208205 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148468632 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086784034 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112252241 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110798755 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120113257 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124329137 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12895381 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121387203 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143543853 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138065332 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111653958 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098923537 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106612832 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109970208 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.104771577 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088001725 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116503929 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13245637 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110220577 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118088056 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.099931953 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.097599118 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122024343 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275534741 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100322171 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.127858579 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177197939 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.109606454 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182362778 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12076557 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122209664 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115193094 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124212747 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.149649398 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171610673 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076347365 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082704527 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.076139487 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142618766 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085999339 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133038204 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083321777 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118194994 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14835053 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099351926 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072759688 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109843847 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099237565 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109639524 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164048094 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.118653006 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079850231 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117326207 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118911497 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108250146 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184729806 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.108932802 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111182572 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077898295 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143239409 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080929795 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129392348 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164656771 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089191396 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.092267209 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.076017904 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12209047 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117375825 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129471554 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104471385 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112901975 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132562262 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160692937 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115003262 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134311054 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159304749 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12554651 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102200708 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18813947 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152804434 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162892272 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.08948205 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.09537332 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113359049 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113679261 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107231785 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081804148 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08323424 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166386436 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139980031 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.072712088 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113843435 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09392144 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.09430105 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123948631 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130405099 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086482255 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140673752 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078948468 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115799391 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10295293 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135228171 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129814539 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1675011 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101105522 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092815615 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082471753 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165622398 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08840674 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143076379 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134004945 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110617711 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.072157998 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102213949 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136213095 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.64204809 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114826197 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078656321 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145862196 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115330078 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175021399 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097398834 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.12440964 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121703261 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105473217 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100466871 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145049113 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10111498 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115588545 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.177335291 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13058793 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.112760777 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077343909 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.086891277 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077003687 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.095524108 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09011577 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105533613 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115155896 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114445412 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110368007 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095761123 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115172908 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398549347 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133794126 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.11658916 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103606201 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161853804 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12421193 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149953612 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147509409 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087709038 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084767902 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.130047705 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167286645 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112029761 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104311734 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.087696016 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109457006 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18327127 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172014486 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118210721 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113059822 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.099495273 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118784562 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132350592 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135225036 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12410969 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099580893 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.116237383 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114163699 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086847597 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082312585 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106796982 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.07644536 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104032765 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154157586 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122139804 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103638688 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.118723809 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085867502 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126528698 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124265666 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121803393 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.084287971 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116221654 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085896513 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.093122823 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114542955 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122318064 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129025373 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171963571 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114463952 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110966344 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.085522008 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.231256997 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100053393 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105521773 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.120783145 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.083096918 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.140608212 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099123237 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100891259 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108797234 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111195027 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.335181363 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09926681 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124007033 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130288073 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129347827 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115011272 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120785159 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106708835 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10699149 seconds)
  done (took 60.675165344 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108992033 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144757563 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.156042632 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.08605891 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.099439404 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.129317022 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206810649 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19645949 seconds)
  done (took 2.801474541 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.080059582 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100248306 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10585709 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.0854855 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069545437 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.079361603 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.246105338 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083894021 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069324629 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.105310282 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083465811 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072145968 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.459737037 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069347423 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070242573 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.08103059 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070143768 seconds)
  done (took 3.587048671 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.396342148 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616148329 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.38239103 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.078253471 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.76528344 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093159649 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.235551642 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.142047888 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085139488 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.503215509 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369364167 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130915483 seconds)
  done (took 18.467365296 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084203913 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08130274 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093644844 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093659842 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.080913007 seconds)
  done (took 2.101730937 seconds)
done (took 109.746008972 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084267596 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.206974336 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071617461 seconds)
  done (took 1.976656061 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.094914127 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.092373727 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.091961354 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.090460002 seconds)
  done (took 2.048320305 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078407087 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079523913 seconds)
  done (took 1.829669825 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24724269 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.178195224 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100588792 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087753608 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083974476 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084740123 seconds)
  done (took 1.931340811 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076853015 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077968048 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078718278 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082190765 seconds)
  done (took 1.983828553 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07151189 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069785372 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072090131 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075380634 seconds)
  done (took 1.958622753 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.089509634 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087606426 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082989854 seconds)
  done (took 1.931307644 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.108128017 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096615797 seconds)
  done (took 1.87438826 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086125699 seconds)
  done (took 1.753493834 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098112259 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104741784 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.144027841 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.123139282 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.151727141 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.129118716 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090182599 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.096170335 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084779119 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09133004 seconds)
  done (took 2.779904166 seconds)
done (took 22.349378931 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082701161 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37306951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364425588 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094979188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675748797 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360330627 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.974004255 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095812535 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.113563492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072724996 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091030968 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652459238 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964899138 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327934005 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95264091 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327459019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655457876 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07179083 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070854071 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072672386 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.959587558 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071549195 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072556431 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072330585 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652440969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378275493 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073891857 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328977559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072690297 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077848492 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.362814149 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074032577 seconds)
  done (took 16.233421932 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073343561 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125021634 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077985856 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08913595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074329464 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072955049 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074937018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072607906 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122874815 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072785938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090844225 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071620742 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07637125 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073631607 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093489327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071609905 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076683983 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073313668 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072405565 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074121217 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092767165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072802724 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073746584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073281766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073336066 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086077407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074226133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073012752 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073192002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.078041988 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078951095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074678798 seconds)
  done (took 4.238243146 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120671833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130053032 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078643907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11056896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121034569 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073884343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149250095 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096529021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126236192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073474791 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091726306 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071544802 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106855736 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074339407 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095288771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072763192 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.076739724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07329225 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072366415 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073893041 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093235632 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07227747 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073794074 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073150926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074381903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088498297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074600206 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073011868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073506534 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077844019 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.079680808 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074707323 seconds)
  done (took 4.511332378 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073692038 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07662172 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085048038 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084978081 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.071646602 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073088638 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073956213 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071206163 seconds)
  done (took 2.306150239 seconds)
done (took 28.967382493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081661967 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.071206161 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073874041 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.09019281 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07650329 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082612376 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068574291 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077714731 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.07810981 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074996514 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07599111 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069973157 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.073546952 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068331235 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075563851 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069269919 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084197115 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073890791 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083183968 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084000312 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072605399 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076417281 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07831948 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084413412 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084152132 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084788119 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080176971 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075889873 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071248693 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073825482 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073325279 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083529997 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.085656934 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.08598817 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.070804917 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070819716 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074732773 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073025247 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084950979 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080277484 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.071857083 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079733459 seconds)
  done (took 4.908066858 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089823298 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093143468 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086827378 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.082781712 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.102619603 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.085370499 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090705256 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080845647 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.080069017 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090325751 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077400518 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.084015031 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.082257455 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.075566641 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.080193134 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.078552208 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.083859476 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077517725 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.080519974 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.080849401 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.091437054 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.075097783 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.0908706 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.082385639 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07766202 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.083719657 seconds)
  done (took 3.890178102 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077399728 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088314413 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095688675 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146917041 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114670234 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087806602 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084498189 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.095150167 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099543357 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071195287 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075653687 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095405376 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095210278 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076682955 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.113163202 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087125927 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082649526 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072854718 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077905281 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099338483 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091622611 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08755222 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097516493 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08668853 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069820785 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073293647 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075312009 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085839968 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073339012 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082349483 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074502832 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074994649 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072033999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.081667173 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073855108 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070262528 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091054371 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082189107 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083538362 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.10909029 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080383852 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071834474 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096409317 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129698314 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.069998689 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074374116 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074675278 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082458994 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070152547 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.098270258 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082488713 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071157444 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071747342 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070697692 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070779683 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073378034 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072888106 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.073145472 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081137811 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078049376 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.089675094 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076375541 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090721203 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070169339 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081169383 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069815264 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.07191197 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.069820793 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099213635 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072672733 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115300993 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072003049 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069656664 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082301134 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081089741 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076291173 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070775791 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090498884 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081707488 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07520188 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.079129765 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07440969 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074486922 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101190139 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071067204 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073157024 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069368806 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07434092 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074695348 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071684649 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082895927 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070823307 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075126834 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.091268019 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070563157 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071708674 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074282212 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073531618 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070406542 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081974523 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076137093 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072428743 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.085134297 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071466222 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074454842 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084294033 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.077425596 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06987616 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072739207 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074614132 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.07241732 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072253837 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074925651 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072506997 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077915975 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.077236829 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07684336 seconds)
  done (took 11.190791732 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.179103381 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.169160986 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074045616 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.160558769 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080734991 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.087288053 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.162984107 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.102557819 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073379915 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073980937 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072031307 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.11639696 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111876535 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121830767 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.085224188 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072360781 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.099034716 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121255694 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.165345228 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.159894302 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09568142 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08072204 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074913291 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073803321 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074069975 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081968793 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089268384 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080919753 seconds)
  done (took 4.764103352 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085746193 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108531544 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076452702 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095173195 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094736083 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072418257 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074140702 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073796856 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088240053 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.085040376 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072284263 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078182965 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076411538 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075523564 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073378521 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079069134 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079588016 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.071974022 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076024009 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078243362 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083339185 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100233629 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077907238 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071945932 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.075154726 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072424586 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.084375386 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088055978 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072613966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.113010843 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070311089 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077677964 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087284365 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072758015 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071924357 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072185981 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.071746329 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.071983157 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072286562 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071371739 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070474785 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07670336 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070918894 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083779134 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.085600726 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079195887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075289819 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.075209856 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.075351561 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069958126 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074878598 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075055608 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075321262 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080206491 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076495836 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07502938 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073332951 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.100237241 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078532216 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071857336 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.071210647 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07112071 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.074437357 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.086156297 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.0879152 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074303574 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071292333 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07242319 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.085502948 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085264487 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072111626 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076785489 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070118182 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07327771 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07457449 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074900124 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07316652 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.0710301 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071873792 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072002564 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.072612689 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071976385 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.071908679 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075426298 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070362844 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.073452786 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072518334 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074499498 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084713345 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.071588419 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075815663 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073157894 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071381479 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074782107 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.078279982 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075359981 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083342108 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086476706 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072207514 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070333113 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086529526 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.074588963 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.075579085 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.078337366 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076860817 seconds)
  done (took 9.874791542 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095516385 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071998199 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089504951 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095688324 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.082390211 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077661989 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081887729 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.071751201 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088322172 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076707915 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.080188341 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070869371 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082820873 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081811972 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073132171 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082617673 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075105269 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090636034 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087146979 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.070670675 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.08085369 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084648114 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.084350372 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086193262 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085620128 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087218999 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.084527291 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082022226 seconds)
  done (took 4.055667353 seconds)
done (took 40.374624623 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.787245221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.958086813 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.776341654 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.99395765 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.041117872 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.796262208 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.927729399 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.762634234 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.852975762 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.816291315 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.112653657 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.264235267 seconds)
done (took 65.921368186 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.789529382 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.912290106 seconds)
    (2/2) benchmarking "String"...
    done (took 2.021586501 seconds)
  done (took 5.629454547 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.981545175 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.4259366 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.025163184 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.763754232 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.766042128 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.189987488 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.530763261 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.223730305 seconds)
  done (took 30.622925398 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.933571 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979160516 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.450445602 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.484918796 seconds)
  done (took 15.591166792 seconds)
done (took 63.401309541 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.804640333 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.763590882 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.807486584 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.790974926 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.770416033 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.766137957 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.765947504 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.766718301 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.786721404 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.763596441 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.762197831 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.780312203 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.765954656 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.771864865 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.382523256 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.827539091 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.788824986 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.766680339 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.777183747 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.827412148 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.771828157 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.768183514 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.184142968 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.963417512 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.363969459 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.91000124 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.111246251 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202475957 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.770850677 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.767267108 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.812867518 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 6.914799631 seconds)
  done (took 203.474543916 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.767254785 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.623174882 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.703599587 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.767339276 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.104693164 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.940084932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.877814981 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.166094863 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.770607342 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.793514514 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.917161662 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.767691113 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.926427483 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.753503137 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.805305015 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.855724969 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.929105352 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.95726454 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.806633935 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.932371684 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.793318116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.734704613 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.69104411 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.896343414 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.778961127 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.788329185 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.775679006 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.79663292 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.951872885 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.909961761 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.805658543 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.783987603 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.924473536 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.638204257 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.781079745 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.776961677 seconds)
  done (took 168.69263675 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.95969312 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.777920829 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.768926834 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.82151109 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.88764216 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.77021171 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.414703212 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.777988418 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.964133795 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.771620949 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.769329912 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.769124297 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.770492177 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.781410504 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.847122212 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.771827518 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.785182786 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.770990845 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.794235681 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.771579988 seconds)
    (20/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.768920454 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.770024935 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.770309899 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.770806721 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.768467509 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.769098189 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.77043439 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.193394517 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.009657315 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.771536569 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.770056997 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.866629712 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.781859618 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.809900056 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.771859353 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.862575758 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.823739663 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.882256095 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.772832162 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.98740801 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.842381412 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.770206976 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.770880095 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.834524202 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.781626341 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.769797279 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.772628844 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.777704561 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.836166177 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.010327444 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.771071731 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.891031804 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.249207772 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.771735717 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.771118267 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.773216099 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.352128356 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.772805114 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.773357693 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.778738899 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.776567027 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.772432492 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.772067022 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.15829511 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.843856965 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.034168286 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.771499677 seconds)
    (67/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.773939413 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.979674006 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.229815384 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.919573561 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.772880586 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.772676761 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.772089192 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.775660561 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.772165172 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.772546464 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.775427501 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.894325197 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.778082472 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.897921812 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.855168508 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.890446896 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.775257296 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.783258058 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.592377331 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.84426768 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.811213712 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.598274703 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.775500231 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.147967112 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.533349878 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.772879211 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.773819544 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.786107106 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.771951627 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.774099545 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.774993648 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.852449041 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.77171577 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.893293263 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.48432799 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 21.961058942 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.777904231 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.773393064 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.782220923 seconds)
    (106/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.857483083 seconds)
    (107/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.893393408 seconds)
    (108/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.775469387 seconds)
    (109/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.839269141 seconds)
    (110/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.779487728 seconds)
    (111/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.774946532 seconds)
    (112/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.854271297 seconds)
    (113/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.773969976 seconds)
    (114/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.775279446 seconds)
  done (took 400.167811138 seconds)
done (took 776.047301901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.426575109 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.400817003 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.492303421 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.413636221 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.390132004 seconds)
  done (took 13.82988867 seconds)
done (took 15.535751504 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.789768814 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.780561324 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.833194806 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.856855362 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.789350047 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.795987844 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.855687067 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.794697351 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.825483508 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.829058983 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.861468349 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.858623925 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.801538365 seconds)
  done (took 25.379474787 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.785317249 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.929144203 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.020659598 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.81870872 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.81058041 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.010848806 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.842314328 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.916877365 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.920129261 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.009865812 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.01637892 seconds)
  done (took 22.793194428 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.789791466 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928328124 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.000118335 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.821429858 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.786679524 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.012250899 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.850380198 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.923736876 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.928454489 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.014383935 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.02391543 seconds)
  done (took 22.796660897 seconds)
done (took 72.67783334 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.780385915 seconds)
  done (took 3.489524294 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.798263852 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.954716977 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.779393925 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.781132114 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.779594325 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.779755251 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.779934626 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.779722378 seconds)
  done (took 16.14539869 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.780626172 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.779091501 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.7807785 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.779249415 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.779386392 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.78028327 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.78007979 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.779926705 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.779738561 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.782160923 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.780227213 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.780090806 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.781991035 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.780321434 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.780870875 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.779682087 seconds)
  done (took 30.194895667 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.783203424 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.779233814 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.778626444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.779779544 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.779730983 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.780060377 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782879013 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.781370018 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.78118926 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.783104166 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.780618316 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.779957952 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.781505111 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.779919769 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.781345565 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.781751037 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.780237365 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.780658741 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.783308903 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.779642181 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.78129833 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.781165485 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.781062602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.781580051 seconds)
  done (took 44.461191785 seconds)
done (took 96.007950366 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.519023671 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.635169261 seconds)
  done (took 9.86617363 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.785578837 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.781379381 seconds)
  done (took 5.358824504 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.782986872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.782531413 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.782935222 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.782185937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.782742939 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.781598391 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.784039069 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.784057797 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.785335284 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.782458991 seconds)
  done (took 19.542904089 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.782772602 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.783826459 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.78270352 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.783264769 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.784051166 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.783093214 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.78397193 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.783472133 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.784841705 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.783406001 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.783869669 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.784261416 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.783511329 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.782819071 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.784413638 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.782839534 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.78422163 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.785307505 seconds)
  done (took 33.819008078 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.784421258 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78569352 seconds)
  done (took 5.283142914 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.784007193 seconds)
    (2/7) benchmarking "second"...
    done (took 1.78570413 seconds)
    (3/7) benchmarking "month"...
    done (took 1.784608562 seconds)
    (4/7) benchmarking "year"...
    done (took 1.785142534 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.785355561 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.785288501 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.786796089 seconds)
  done (took 14.209991808 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.785120826 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.945872884 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.004877246 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.441391484 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.785780022 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786950231 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.705182168 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.788039293 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.791345696 seconds)
  done (took 19.749452195 seconds)
done (took 109.540260626 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.582592256 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.786755044 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.086693634 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.932414798 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.807549395 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.080321096 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.816146092 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.096293901 seconds)
done (took 42.901975366 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.795076434 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.782076813 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.811493034 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.811794431 seconds)
  done (took 22.120671712 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.792682613 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.123297113 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.805017019 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.610176281 seconds)
  done (took 22.055486703 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.147793043 seconds)
    (2/2) benchmarking "read"...
    done (took 2.178531923 seconds)
  done (took 6.045206481 seconds)
done (took 58.734894396 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.786898045 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.785825193 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.787717428 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.787140372 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.784991114 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.787434831 seconds)
    (7/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.785904887 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.786924608 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.786934569 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787011385 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.787992487 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.786722367 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.786966054 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788201422 seconds)
    (15/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.787331998 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.789056809 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79195108 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.787678729 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.787081414 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786208663 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.789725734 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.787597563 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.788161384 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.78894088 seconds)
  done (took 44.617397067 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.788287901 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.789322057 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.787890498 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788259585 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.788372711 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.789517147 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.788050789 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.789071379 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.788980532 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.789455317 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788177015 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788502443 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.788019137 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.787707976 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78789671 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.787885913 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.7889001 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787256732 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790805009 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.788567098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.787967795 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789167735 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.789593366 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.789674834 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.788832519 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789195174 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.789945985 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.787959724 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788456423 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.789563923 seconds)
  done (took 55.37950489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.788119671 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.788176583 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.790731154 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.788342083 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.787724658 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.790068803 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.788896806 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.791231161 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.78883185 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.788623669 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790556436 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.790337991 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.789158021 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.790781529 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.791646852 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.790164018 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.790867964 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.789400468 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.789947105 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.789850455 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.791089781 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.791888126 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.790998238 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.790360952 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.790066833 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.789120352 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.79108553 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791358569 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.788858424 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.792020941 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.792601238 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.791654879 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.790282588 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.791970945 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.790022583 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792765433 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.790794304 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.790563896 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.791730892 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.790315931 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792016392 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.792940334 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.791442894 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.793168523 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.791520061 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.792209887 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.7925004 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.790555572 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794064329 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.791692016 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.791115779 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.791333478 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.791345756 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.792164047 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.793136372 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.791831249 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.792046898 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.791763356 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.793923433 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.790934445 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.790464602 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.791861061 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.793786796 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.792631003 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.792971218 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.792822325 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.792731589 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.791949639 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.792193593 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.793645779 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.794434784 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.792674176 seconds)
  done (took 130.687666877 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.792526756 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793316044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.792656757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792942094 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793257818 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794376784 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792480956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.795479524 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.792613864 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.793745406 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793360452 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.792824661 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.791870845 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.794735428 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.794179881 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794729981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.792889694 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.792893598 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.79217413 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.79445708 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794233645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793764882 seconds)
  done (took 41.177907732 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.793384033 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.793165956 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.794840565 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.795867086 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.791676689 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796487258 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.793217315 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.794768986 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79230834 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795399605 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793442044 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794407484 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793908953 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793626159 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795019552 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796420734 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.792799942 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795423849 seconds)
  done (took 34.020698335 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.794314571 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795745588 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.794523729 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795295299 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.794639331 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.794616049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795629959 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.795993946 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.796712937 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796555154 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.797020297 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796376179 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.794441661 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798346865 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796056169 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795070369 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.797006308 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795373004 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795974699 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795676804 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796498171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.794385085 seconds)
  done (took 41.229071371 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.794680129 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.796124358 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795030865 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795823279 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.795643171 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.795711939 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.794551338 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.799873927 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.796743499 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.797413257 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795895952 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.796852859 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.79635616 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796557786 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.797467287 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796434964 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797871416 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795727038 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79690436 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795679679 seconds)
  done (took 37.653893724 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798259864 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797025655 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.796833299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.79978317 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798983608 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.797883995 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797500324 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.797462649 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797283623 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.797206382 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.798154655 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.797256209 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.796316241 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797990091 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80037948 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798342289 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800540712 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797815075 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.7971376 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798008327 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799628521 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798796695 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.797068645 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.799837742 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798961339 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.799310619 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.797473365 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.800163295 seconds)
  done (took 52.077424641 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797745966 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.799391006 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799545975 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799014701 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.80020948 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.799954912 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.799307762 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.803517792 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801129651 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799141676 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.798899522 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.798688418 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79746154 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800048844 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.799694342 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801386706 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799236891 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.799715339 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.799691181 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800104608 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.80134215 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799057352 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.800194925 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800260271 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8031875 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.800172265 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799795394 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.80048366 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79997538 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.801442241 seconds)
  done (took 55.728051484 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.823726392 seconds)
    (2/2) benchmarking "in"...
    done (took 1.819203272 seconds)
  done (took 5.370162732 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.799001878 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799344555 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.799654725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.800449248 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802177954 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.798991809 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.801716837 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802214553 seconds)
  done (took 16.132243377 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.799460884 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.804965141 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.803020141 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.800429523 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.801567755 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809869053 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.802863307 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.801575918 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.80433244 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.802223445 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.804632004 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.806881393 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.810058718 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.803658654 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.803331294 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.803807506 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803966663 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.804572298 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.803604731 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.801947863 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804242563 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.802125166 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.802130245 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.802751249 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.800525654 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.803516008 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.812376991 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.805009737 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804338363 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.801253617 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.809325513 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.8025537 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.803213776 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.804758898 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.802476182 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.80336662 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.809334033 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.803536274 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.801353918 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.801497142 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.805790576 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805682245 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.806316986 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.809355106 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.805059881 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.802432007 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.801341376 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.80292893 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.806056134 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.808294545 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.810467625 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804470461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804809506 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.805406136 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.80522137 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.805467072 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.805121835 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.807493198 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811992038 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.810156468 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.807897344 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.824402989 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81215575 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.804748598 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.807124717 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813984197 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.831447873 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.806350461 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.805265055 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.804872723 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.809861129 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804677566 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.804968468 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.803855811 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816929189 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.811957735 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.805426434 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.804780613 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.805646164 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.805617534 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.806919396 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.808862303 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805908225 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.806016625 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815289768 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.828608362 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.805288365 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.805609377 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.808949319 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.806429919 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.811284137 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.808178294 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.807551072 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.80418342 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809081218 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.808560208 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.807076241 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.810833205 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.815330587 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.816909849 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.808230264 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.805956114 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810526716 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.814179643 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.80307121 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.807096112 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806293862 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.805256576 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.815398661 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.807316363 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.807955139 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.806126024 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.80705147 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.812446584 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.810105058 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.810861964 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.816385525 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.815634886 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.808094667 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.810645133 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.81261041 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.813518588 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818284418 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.832320849 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.806351401 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.810738111 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.811234952 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.820826764 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.813329913 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.805687536 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.81002989 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.8085665 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.807761785 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.811202428 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.807732044 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.806949577 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.808222763 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.807561366 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.806489265 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.8087003 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.810863534 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.809193732 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.810278743 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.811870308 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811737609 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.808396867 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.812497845 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.814490988 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.809229774 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.807215406 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.809527229 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.81184487 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.810970286 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.810794294 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.808428851 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.806357224 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812091228 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.808947762 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.810887028 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.811769386 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.81036256 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.812860445 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.813441076 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.813161983 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.811345343 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.808050923 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810471975 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.808098017 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808506033 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.813024305 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.81033492 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809910614 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.811764209 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.808225793 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.808311357 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.809228942 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.80886769 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.809534107 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.815646058 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.821855306 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816519171 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.822649411 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.812013346 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.818439708 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.809347717 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.812915551 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.810631911 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.810391888 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.808322311 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.812744897 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.81158359 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.815418287 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831446619 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.82216861 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.812712054 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.811021359 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.817100079 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.814070845 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.813860277 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.811266193 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812619818 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.811026994 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.812380089 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.81041806 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.809541684 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.810223547 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.810039681 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.809105837 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.813978598 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.811213933 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.810410057 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.809493819 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.809684349 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.811957107 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.81108301 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.812897949 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.811145097 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.810216537 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.819043057 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812752231 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.811923974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.811677015 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81647823 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.810342023 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.812422896 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.814895379 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.818904734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.81192033 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.815432867 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819888363 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.812067874 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.810136333 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.8133165 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.81355433 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.813615412 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.811050655 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.816009444 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.821540772 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.816752692 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.814001504 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.813468757 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.811813192 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.812436495 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.812101615 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813953218 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.811214396 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.813413667 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.811263268 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.811623427 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.817391864 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.81174347 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.813965774 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.810170827 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.815507416 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.813579374 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.814553127 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.814320731 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.81423368 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.823245405 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.819524002 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.810596456 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.818142364 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.811758362 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.816468116 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.817752674 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.814884049 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827611168 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.822666653 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.814283263 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.812910069 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.812221944 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.816505788 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.812283638 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.811987788 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.818165882 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.815136661 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.81593713 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.818143345 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.814934975 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.81428617 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.821595104 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.815314653 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.815905243 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814895349 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.815306268 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.818272261 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.814568796 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.816426698 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.812926511 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.818233517 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.81638927 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.815852832 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.816257575 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.81342619 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.821584819 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.812808986 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.815295658 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822030569 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.816317694 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.816153781 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.815154589 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.813004788 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.816442379 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.815466133 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.816310853 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.817787352 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.813871915 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.817465982 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.823167688 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.819026634 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.822724296 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.817964556 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823742502 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.814623514 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.816213354 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.814781206 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.819868791 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.823785041 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.81452094 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.817334711 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.821092039 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.815577731 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.815336844 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820134854 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.81535885 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.815222869 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.81640444 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.815669612 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821080632 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.818763503 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.816567948 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.816406674 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.814736673 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.815683177 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.819334448 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.819251983 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.817912097 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.814542733 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.813504845 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.816800813 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.818053327 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.816662197 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.815734859 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.815210506 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.814932123 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.823476914 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.81731739 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.818724377 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821060561 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.817709768 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.823366447 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.81654492 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.816772782 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.818823079 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.814535119 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.819934263 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.818527944 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.818188501 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818813951 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.817145949 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.818648971 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.826505025 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.824037559 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.823346555 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.819215908 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.816777702 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.818171301 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.826004736 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.841566982 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.817109275 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.821075586 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.821638442 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.824628806 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.819442805 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822104532 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.823084427 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.826936751 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.818419493 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.818075933 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.822721592 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.832175084 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817780956 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.818057524 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.819271076 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.822822965 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.820995078 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.819203753 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.822286074 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.82066466 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.820010231 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.829519249 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.819545188 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.820128132 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.819837459 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.817683187 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.81857777 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.821238122 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.823008079 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.821601577 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.818897213 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.818917844 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.821496822 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.825220944 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820990682 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82237261 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.830324824 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81854414 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.817682074 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.82371119 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.819044142 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.821804319 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821441285 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.822689038 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.823691312 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.818188038 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.82181626 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.824472685 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.828542681 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.822584876 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.822958493 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.821047958 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.825710731 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.822774352 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.819494826 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.826976896 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.827923471 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.824624092 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.831589325 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.832027193 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.824401466 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.824473376 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82920078 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.828250791 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.819863336 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.81982434 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.820467494 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.82339022 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.824259724 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.822801273 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821450723 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.822619065 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.827608205 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.82259163 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.823757697 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.823648176 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.822449151 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.824027918 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.824907055 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.828004657 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.823153845 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.823068901 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.822787758 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.823402957 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.824563902 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.823529954 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.823571894 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.822549929 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.824792897 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.826387476 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.825703587 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.821766937 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.822825044 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.826922681 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.822938588 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.825564516 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.825208162 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.824574013 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.82378938 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.82896112 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.830954759 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.823193138 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.824161347 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.828531768 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.827674234 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.823374851 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.825081473 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.823250714 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.822908204 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.833204899 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.824756539 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.824151719 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.824888425 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.824274572 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.829565625 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.827976985 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.828823594 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82509234 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.823553803 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.823323916 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827892172 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.832750859 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.828966904 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.826908021 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.83150102 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.830236117 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.829648079 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.825082185 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.824079618 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.823422887 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.828128087 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.829938401 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.827482965 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.826505413 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.825464546 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.827294545 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.826015264 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.826280393 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.825929777 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.827712553 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.829236096 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.835646344 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.837233925 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828134965 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.828043312 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.825418141 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.829873202 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.840187554 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.825769557 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827057188 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.825398825 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.828390999 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.827438669 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.832393093 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.833723118 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.831476068 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.826654994 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.83133948 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.844566493 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.832861121 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.83620922 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.855208518 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.828663013 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.827289901 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829450447 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.827592209 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.826762998 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.83263961 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.826339279 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.83325254 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.827612662 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.827878913 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.83515421 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.829454918 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.828834515 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.83017844 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.830026199 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.834712117 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.82555477 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.835267597 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.826746057 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.827802411 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.827103219 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.832199887 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.831521068 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832554947 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.828200244 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.831453716 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.828065068 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.827933645 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838100345 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.830731814 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.83151348 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.840218517 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.841158166 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.828029325 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831326823 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.828546098 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.836829253 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.833507179 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.830660514 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.833247876 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.838227231 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.83423758 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.838486187 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.835739581 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.831829515 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.832310502 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.83358388 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.831552557 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.844776682 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.845180704 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.834040667 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.834713678 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.838434882 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.83120656 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.837934253 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.839062184 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833769786 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.835616797 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832682511 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.832781128 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.830580082 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.833480807 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.838154049 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.84228464 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.831300475 seconds)
  done (took 1085.278428839 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.831580519 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833632433 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833621382 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.834250005 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834461576 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830786451 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830542533 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832465744 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.834628531 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833350676 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.832388221 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834214431 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.832853446 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.834107665 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834756031 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.835913351 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833504966 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.835848115 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834452868 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83595203 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.835922914 seconds)
  done (took 40.268910993 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.834243252 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.833067552 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.835359503 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832802548 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834103662 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.832875377 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.83452013 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837293839 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833768509 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833283875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.835134187 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835153285 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.836019911 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.832579306 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833322122 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.831800244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.832231537 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835656355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.832809846 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83500265 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833213227 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.834482045 seconds)
  done (took 42.109449625 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.835068307 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.836537894 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.837944304 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.833821343 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.8333832 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.836939831 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.836736858 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.836589794 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.835944762 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.835903785 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.842979119 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.844714825 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.836574602 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.84020372 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.836368692 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.836473976 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.981636544 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.835976771 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.838652735 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.833903228 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.837969398 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.843705243 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.83348278 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.836634581 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.837306995 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839087836 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.836049245 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.836873128 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.837754503 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.839485952 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.842765292 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.83518545 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.837814222 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.842852816 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.838900516 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.837382333 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.84159808 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.838465651 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.837199729 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838497063 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.84865271 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.863190597 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.836246505 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.838318978 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.846198411 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.838100307 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.83818595 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.842687344 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.845220871 seconds)
  done (took 92.014754683 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.835702017 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.839538101 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.836166683 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.836700941 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.837918468 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.837630876 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.83940384 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.837768219 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.838594707 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.83584574 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.837563381 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.838673736 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.839478627 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.836328132 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.837142837 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.837955526 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.838786871 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837825808 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836982242 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.836985415 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836148554 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.837332334 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839461737 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.837810506 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.838005345 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837563722 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.838687114 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.840321368 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.838658495 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.83583502 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.837315561 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.837758779 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841360878 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837828267 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840544504 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.83978778 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.838655912 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.8406327 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.837686913 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.840912442 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.840197871 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840082689 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840451338 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.839095134 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.840468106 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.840459192 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.839120746 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.836575269 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.841387476 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.839372827 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841927796 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.842138701 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841866033 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.841412271 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839063613 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.839354088 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.842476064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.839535598 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.841296677 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.839324101 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.840165822 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.837934163 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.840705124 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.841213852 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.840703425 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.844455051 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.840572284 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.84294607 seconds)
  done (took 126.822900729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.840349753 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.840652667 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.839661495 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840646529 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.841277571 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.841122142 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84010947 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.843150229 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.842884397 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.841475474 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.842421378 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840650996 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.844732635 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843591646 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.842388223 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.840796571 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843062271 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.841798879 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845029695 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843241206 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.841773563 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843196055 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843794307 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.844975301 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843493494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842503261 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845122372 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843735092 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842883946 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842393816 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840798388 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.843437378 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.844072553 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.84387992 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.84222884 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.844595661 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842086568 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843505656 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.845601448 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.843442478 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844050554 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843201597 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845987749 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.843883859 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844121378 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84493347 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843062838 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.84608419 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.843902432 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845320716 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843308364 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846018154 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845198183 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.84355954 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845078581 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.844788933 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84633437 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844558197 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846461608 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.847209969 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.845228357 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.844980366 seconds)
  done (took 116.06280076 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845035828 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.843973087 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.846414885 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.846892133 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.844737166 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.843489203 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845103261 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843963585 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844785525 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.843102044 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844502514 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.846486489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844895561 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.843137157 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.847958789 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.846288234 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.846009993 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.846784682 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845098454 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.848059355 seconds)
  done (took 38.67918351 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.846685947 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848824892 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.847563272 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846075645 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.845354644 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846100222 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.847640207 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845963186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.846164061 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847675119 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.849081121 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.847274244 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.848153275 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.848564903 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847130647 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.846601328 seconds)
  done (took 31.327904451 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.84775722 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.847198355 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848313397 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.849149221 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.846849221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.845737275 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.847039694 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.846515319 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.846196293 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.848392648 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.847281411 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848984247 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.848116454 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.847970731 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.847915347 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.846673551 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.847865295 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.847803798 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.848053319 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.848401387 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.848531805 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.846612141 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.849822127 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.848097434 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.848593725 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.85053053 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.850417259 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.849751663 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.848517646 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.849414148 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.848753982 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.848856789 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.849201794 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.849400914 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.850006452 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.850442025 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.849275981 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.849768164 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.850099916 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.848866785 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.849358851 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.850565351 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.851677422 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.849053721 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.849721432 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.849709304 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.850404148 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.849041257 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.849812831 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.850340701 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.848087352 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.851240844 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.848865 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.850791155 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.85073823 seconds)
  done (took 103.461808419 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.848568468 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846630034 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.852716567 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.850875961 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.850555792 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.851650962 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849503037 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.848897064 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.849847172 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.850670986 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850403356 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850057741 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850034582 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.849361269 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.853428788 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.850991572 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.852853986 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.849767824 seconds)
  done (took 35.082758553 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850114866 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.850073394 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.85094248 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.852333988 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.852780011 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.852509242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851428975 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.85055102 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.849781287 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.852818796 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.851055341 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.851372187 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.84889185 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.851359543 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.852446486 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850448571 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.85564795 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.85238532 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850187971 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85307053 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.853046268 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853219118 seconds)
  done (took 42.518219101 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.851209849 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.853524016 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.864446008 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.875391786 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.87389325 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.890312616 seconds)
  done (took 12.985899595 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852710728 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851519322 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852434998 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850156702 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854378299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85220415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850308227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851082772 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849630671 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85133912 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851454191 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851600083 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851650268 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850584515 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851089665 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852032318 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852388428 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852514334 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851545205 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850634621 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850885797 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853077507 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854285822 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854100809 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850766566 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854317493 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85413389 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852280051 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855671127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852156157 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854243058 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851807862 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852534292 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852738551 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856014498 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851872142 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85133984 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853522868 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852510399 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855469339 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855111248 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854882444 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852093441 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853754064 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85288187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854980137 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852540499 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853402031 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855605349 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851744823 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857131676 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852649973 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.850348286 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854390648 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852880735 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853307128 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853302077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852102146 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852751138 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853823498 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853561363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852769131 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852479198 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85341562 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853609191 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852575153 seconds)
  done (took 124.0621606 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856265082 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.856209177 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85402835 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853729113 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854856847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854279152 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852874319 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854125099 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857051147 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855675902 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856305344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855051973 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854339915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857492675 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854469579 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856359438 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856605405 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856741276 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854250289 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854643317 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854855673 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855425427 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856200027 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853960084 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851928685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855701438 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854892937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854501792 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8545252 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855044949 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85563411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854375517 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856825887 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855777317 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854819202 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855965197 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854675067 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856675047 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856968393 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853814692 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854864834 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856745084 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856191697 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857144913 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856495638 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85523814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857509214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856297028 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8575041 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857929824 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858492461 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857401829 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856187142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857180296 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855991412 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856638037 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857143276 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857663151 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858522109 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856073754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857145071 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856709313 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857249087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857668817 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859185259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858273675 seconds)
  done (took 124.274256535 seconds)
done (took 2530.742904209 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.935117016 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.885467387 seconds)
  done (took 15.602081997 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.018592975 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.973257663 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.858590204 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.856368637 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.85602866 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.881616909 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.881586028 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.856376804 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.856732227 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.858756785 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.858514335 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.0428346 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.859978695 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.858334854 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.860798719 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.951154081 seconds)
  done (took 52.120156328 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.862756215 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.863468143 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.871439007 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.868643851 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.860977301 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.874939308 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.894939471 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.865434942 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.897302316 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.872180488 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.930086522 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.87217241 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.861707652 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.91248714 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.874490783 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.877312484 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.953465306 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.935629204 seconds)
  done (took 35.732900048 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.938752155 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.866422685 seconds)
  done (took 10.600321088 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.871594533 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.89061884 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.869430352 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.87759122 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.869573861 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874477646 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.869493481 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.87169992 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875766109 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.889735269 seconds)
  done (took 70.547744355 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.87106542 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.867009552 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.864410913 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.861967479 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.863232228 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.865668676 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.865211559 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.864111547 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.515041803 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.897816521 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.869243747 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.870184304 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.864071293 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.864007111 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.862187675 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.886689337 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973101654 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.861040238 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863553996 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.871929844 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.865640931 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.918753356 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.879312615 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.861926931 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.894193083 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.514337943 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.870363793 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.870314333 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.997545764 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.8613016 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.865748446 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.054471224 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.865263281 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.320421389 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.140728818 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.867036578 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.875500916 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.871590107 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.861754965 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.992099484 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.864722308 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.870395726 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.73862164 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.114977098 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.977338477 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.909894081 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.205063784 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.882453617 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.865330545 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.894603041 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.868517331 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.864755521 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.877817196 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.3814788 seconds)
  done (took 132.473861891 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.863403801 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.221412971 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026561361 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.861584849 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1471143 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.065012777 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.859557759 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906896193 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.86013453 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.099964559 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024511093 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.964128791 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.860948549 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.859079352 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.858205566 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.857710221 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.009787348 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.927892455 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.857272273 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.85553854 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.886329044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101625683 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.994777321 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.859674621 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.875056772 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071315766 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.980168733 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.960826386 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.397780601 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.857728632 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918009772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.859685246 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.857051057 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.855841112 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.019844741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.94839859 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.937028037 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.857245222 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854251439 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.854953196 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.520050712 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053950169 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.952239303 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.986800348 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.052533395 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.060395161 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.635319271 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.856451816 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.59683352 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018643751 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.084235256 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104375133 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.975544472 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.858047402 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.199820789 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.856401632 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.857001919 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104556576 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.999498379 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953835846 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.859225727 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.856845367 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.854153909 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096147037 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.855340705 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.949709315 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856445906 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.858198333 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.953432715 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.954524497 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.997450553 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.067299879 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.883513425 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.811734153 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.41029315 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.103002966 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920726431 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104483944 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856173817 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.853574918 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.933984535 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.707026423 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.017324353 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10000478 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.11023286 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888355587 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.591467097 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 7.302842 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.084127282 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.075901518 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105398656 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062982457 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.0118528 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.029899016 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.855915907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.857292152 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.069413904 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.980039539 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.857839752 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.205520095 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086650399 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.418702737 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.873145734 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.15957593 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.986471587 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.858799019 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.48900956 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.857434589 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.078550752 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.897264907 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.857657784 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857283761 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.07516471 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.826345493 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.857811703 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.734968879 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.91602999 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.856234549 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088969046 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.858192597 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.117667407 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.858611885 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089197967 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.377667584 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886435927 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.032017304 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.062581581 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.860317381 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.098571192 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.098243281 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969529512 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128790152 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.807017515 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.856991657 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14260826 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.857544255 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.855596235 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028987857 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.858377798 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.004724629 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.860903804 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.140975946 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876953147 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.017045501 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.860833093 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.125314711 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887686198 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.90738115 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.858982038 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987207668 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.861125338 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.707766999 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.012445456 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86007644 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.855748821 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.41371143 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.858261118 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005435332 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.084953051 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875507867 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930399607 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.516220957 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.856740849 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938040857 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877341905 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.249327114 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.857606164 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.015177229 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.857944976 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.854005488 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.853012814 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089975427 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.091276162 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857906769 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.849790703 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.746729229 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.851625086 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84707982 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.024554312 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.241286887 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845883487 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046551145 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844482601 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970713831 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843586219 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.911067091 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.172241932 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83383243 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.834817043 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.832087828 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.832875238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.828238729 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.033972672 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.85876149 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.358000861 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.966907714 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097370064 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.138167976 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.07893501 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.869482313 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.830668476 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.07794664 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.827779114 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.886073782 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.825644382 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.845723204 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.057247821 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.827172948 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.036592553 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103600274 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.690795178 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8747691 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.827523683 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.826061372 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.825540456 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.991529736 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911165674 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.828023564 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.823113533 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.939667919 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.963358039 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035550852 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.831056214 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.977423761 seconds)
  done (took 898.36144014 seconds)
done (took 1217.22142931 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.818195352 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.819610406 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.821801838 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.819067903 seconds)
  done (took 29.029547023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.818896931 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.81712138 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.815949398 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.82075114 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.810983826 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812932047 seconds)
  done (took 12.640579007 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.912768399 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.809815633 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809824172 seconds)
  done (took 21.275553231 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.878630098 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.190549166 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.946871958 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.222609367 seconds)
  done (took 9.977643854 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.806703776 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.807583715 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.804084994 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.803675251 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.805195666 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.806607257 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.804803209 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.80599966 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.80604597 seconds)
  done (took 17.989392114 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.782192353 seconds)
done (took 96.443994017 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.873084973 seconds)
    (2/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.360583791 seconds)
    (3/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.254287776 seconds)
    (4/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.874552021 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.934394787 seconds)
    (6/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.892062366 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.995710764 seconds)
    (8/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.96764079 seconds)
    (9/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.020389507 seconds)
    (10/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.153571927 seconds)
    (11/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.870743613 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.111406522 seconds)
    (13/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.33650793 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.89092731 seconds)
    (15/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.979722679 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.871188166 seconds)
    (17/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.315269181 seconds)
    (18/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.879099589 seconds)
    (19/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.352771297 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.056258655 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.876803384 seconds)
    (22/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.844740764 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.041872597 seconds)
    (24/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.997195891 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.14958308 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.902212475 seconds)
    (27/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.021458657 seconds)
    (28/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.356213149 seconds)
    (29/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.616042633 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.964618365 seconds)
    (31/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.956634928 seconds)
    (32/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.605130466 seconds)
    (33/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296693792 seconds)
    (34/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.243298077 seconds)
    (35/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.957733591 seconds)
    (36/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.046370223 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.978571643 seconds)
    (38/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.233888133 seconds)
    (39/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.007602277 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.212120348 seconds)
    (41/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.299020233 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.873022679 seconds)
    (43/309) benchmarking ("sort", Bool, false)...
    done (took 3.579199501 seconds)
    (44/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.119300747 seconds)
    (45/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.879783084 seconds)
    (46/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.201091407 seconds)
    (47/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.04182935 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.257170431 seconds)
    (49/309) benchmarking ("sort", Int64, false)...
    done (took 5.585747696 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.915108722 seconds)
    (51/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.31899233 seconds)
    (52/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.014435142 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.290487877 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12971632 seconds)
    (55/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.112824186 seconds)
    (56/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.569149706 seconds)
    (57/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.003619229 seconds)
    (58/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.061497726 seconds)
    (59/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.008665584 seconds)
    (60/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.029800344 seconds)
    (61/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.89776805 seconds)
    (62/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.892195762 seconds)
    (63/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.276963639 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.635348698 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.008448064 seconds)
    (66/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935603057 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964231985 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.996275668 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.19092882 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.217854334 seconds)
    (71/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.891192153 seconds)
    (72/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.875830021 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274997249 seconds)
    (74/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.135554268 seconds)
    (75/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.662670218 seconds)
    (76/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.021673115 seconds)
    (77/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.901039765 seconds)
    (78/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.005775459 seconds)
    (79/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.105693606 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.271206576 seconds)
    (81/309) benchmarking ("sort", BigInt, false)...
    done (took 6.880110898 seconds)
    (82/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.883365749 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.245209715 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.007240336 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.014932498 seconds)
    (86/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.109335035 seconds)
    (87/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.970569545 seconds)
    (88/309) benchmarking ("sort", Int8, false)...
    done (took 4.773406447 seconds)
    (89/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.940032858 seconds)
    (90/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.311538546 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.295563408 seconds)
    (92/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.007302861 seconds)
    (93/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.963922527 seconds)
    (94/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.790320235 seconds)
    (95/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.961028398 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.19302468 seconds)
    (97/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.4339552 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.889993221 seconds)
    (99/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.081312725 seconds)
    (100/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.907002894 seconds)
    (101/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.878230812 seconds)
    (102/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 3.203653702 seconds)
    (103/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.005907711 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.882606885 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.981737969 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.05000269 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.854536992 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.144194014 seconds)
    (109/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.901122086 seconds)
    (110/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.97687313 seconds)
    (111/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.036287742 seconds)
    (112/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.98576429 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.497179417 seconds)
    (114/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.893158058 seconds)
    (115/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.878552487 seconds)
    (116/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.089866929 seconds)
    (117/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.880545108 seconds)
    (118/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.526968293 seconds)
    (119/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.735622597 seconds)
    (120/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.964469039 seconds)
    (121/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.168339961 seconds)
    (122/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.901334149 seconds)
    (123/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.144468506 seconds)
    (124/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.257073501 seconds)
    (125/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.881269593 seconds)
    (126/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.097492545 seconds)
    (127/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.140754541 seconds)
    (128/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.66469398 seconds)
    (129/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.146156654 seconds)
    (130/309) benchmarking ("sort", Float32, false)...
    done (took 5.618939809 seconds)
    (131/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.181692234 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.849994604 seconds)
    (133/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.400273767 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910422855 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.194680771 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.911129838 seconds)
    (137/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.012246807 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.202296204 seconds)
    (139/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.135570168 seconds)
    (140/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.022839491 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.279717338 seconds)
    (142/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.916532227 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.878552186 seconds)
    (144/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.290249446 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.910834797 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.127679775 seconds)
    (147/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.877283591 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 3.845473321 seconds)
    (149/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.019422661 seconds)
    (150/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.90783851 seconds)
    (151/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.071956646 seconds)
    (152/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.501438567 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.784053468 seconds)
    (154/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.041560936 seconds)
    (155/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.981151274 seconds)
    (156/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877508015 seconds)
    (157/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.341294445 seconds)
    (158/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.884286457 seconds)
    (159/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.066378839 seconds)
    (160/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.894057394 seconds)
    (161/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.073338133 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.230066118 seconds)
    (163/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.114888074 seconds)
    (164/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.041705613 seconds)
    (165/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.89282609 seconds)
    (166/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.88069412 seconds)
    (167/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.368582761 seconds)
    (168/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.886978119 seconds)
    (169/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 5.221465399 seconds)
    (170/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.786137166 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.220367793 seconds)
    (172/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.971824416 seconds)
    (173/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.186253723 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.885142862 seconds)
    (175/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.002476983 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.846210438 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.793685101 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.299990181 seconds)
    (179/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.013164803 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.879790667 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.263370678 seconds)
    (182/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.374731814 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.989218598 seconds)
    (184/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.874934592 seconds)
    (185/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.14983726 seconds)
    (186/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.811836523 seconds)
    (187/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.876246301 seconds)
    (188/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.259001807 seconds)
    (189/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.87855494 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.952429831 seconds)
    (191/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.871968262 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.292612244 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.237402219 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.981838484 seconds)
    (195/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.872298371 seconds)
    (196/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 3.507375875 seconds)
    (197/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.987521046 seconds)
    (198/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.320872651 seconds)
    (199/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.902190746 seconds)
    (200/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.043626397 seconds)
    (201/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.080481826 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.110905503 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.774993277 seconds)
    (204/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.568634735 seconds)
    (205/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.875868209 seconds)
    (206/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 4.057330739 seconds)
    (207/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.893508527 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.537609598 seconds)
    (209/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.878487605 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.883807771 seconds)
    (211/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.955437159 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.046506 seconds)
    (213/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.871967811 seconds)
    (214/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.234191771 seconds)
    (215/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.494300326 seconds)
    (216/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.870490945 seconds)
    (217/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.163843962 seconds)
    (218/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.86957702 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.974734852 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.874437822 seconds)
    (221/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.046363365 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.549201762 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.186328629 seconds)
    (224/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.879964059 seconds)
    (225/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.318169396 seconds)
    (226/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.887672704 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.861081715 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.21705555 seconds)
    (229/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.880706268 seconds)
    (230/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.297116889 seconds)
    (231/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.974228432 seconds)
    (232/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.887785551 seconds)
    (233/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.856656468 seconds)
    (234/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.137726129 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 2.467880068 seconds)
    (236/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 1.984762548 seconds)
    (237/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.85252478 seconds)
    (238/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.129769195 seconds)
    (239/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.861655154 seconds)
    (240/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.46039637 seconds)
    (241/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.856325828 seconds)
    (242/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.962438273 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.850385862 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.388542635 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.850296292 seconds)
    (246/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.851398864 seconds)
    (247/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.920842847 seconds)
    (248/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.162256806 seconds)
    (249/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.95373937 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.941347611 seconds)
    (251/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.068088588 seconds)
    (252/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.051360719 seconds)
    (253/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.962320284 seconds)
    (254/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.058923208 seconds)
    (255/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.841773047 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.194044077 seconds)
    (257/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.93049739 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.042050951 seconds)
    (259/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.834225534 seconds)
    (260/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.935560059 seconds)
    (261/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 7.418870802 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.991011213 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.887708851 seconds)
    (264/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 4.977225086 seconds)
    (265/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.921779989 seconds)
    (266/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.018665186 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.711249819 seconds)
    (268/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.992191735 seconds)
    (269/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.149231224 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.955167079 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.8409334 seconds)
    (272/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.916167709 seconds)
    (273/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.378703539 seconds)
    (274/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.9579642 seconds)
    (275/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.829724184 seconds)
    (276/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 2.970795191 seconds)
    (277/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.059135208 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.832102611 seconds)
    (279/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.925081218 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.800675736 seconds)
    (281/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.912620607 seconds)
    (282/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.84667737 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.954603427 seconds)
    (284/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.014760251 seconds)
    (285/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.935196856 seconds)
    (286/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.847524493 seconds)
    (287/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.824718649 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.616647839 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.00309238 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.671738556 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.139875361 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.828406392 seconds)
    (293/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.829655902 seconds)
    (294/309) benchmarking ("sort", Float64, false)...
    done (took 5.680647083 seconds)
    (295/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.140413861 seconds)
    (296/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.834997304 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.92362487 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.948436035 seconds)
    (299/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.922837298 seconds)
    (300/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.119293879 seconds)
    (301/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.645607601 seconds)
    (302/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.011911412 seconds)
    (303/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.894760316 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.959309039 seconds)
    (305/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.149899636 seconds)
    (306/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.850885763 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.035258662 seconds)
    (308/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.066388442 seconds)
    (309/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.183877553 seconds)
  done (took 1005.849116324 seconds)
done (took 1007.712991828 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.859241885 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.848770864 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.833155067 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.855728947 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.952210713 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.879940308 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.846832323 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.836459147 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.883227457 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.883729359 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.841398609 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.880066398 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.841852128 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.840704665 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.834010512 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.847337095 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.137625586 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.866909669 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.859080389 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.845538776 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.859136789 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.838852809 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.884037447 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.878593338 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.838100083 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.838769729 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.847754129 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.861035898 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.954079186 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.844041057 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.838775727 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.85434307 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.1371052 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.859111539 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.832820467 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.860706972 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.853992438 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.847404371 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.838678418 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.87411718 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.225680659 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.87666584 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.844697993 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.836183915 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.83562436 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.842740128 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.842205526 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.844079036 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849307337 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.849610535 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.221762726 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.893303631 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.84569081 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.836313028 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.850009727 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.842905419 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.840359165 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850730638 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.864377941 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850443801 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.127241687 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.869821367 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.840064665 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.861923126 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.8518155 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.257389173 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.870039075 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.84418966 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.227220604 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.879745359 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.258233408 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.88895648 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.8391119 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.8593103 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.8785606 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.139024933 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.860621726 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.836736939 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.851557765 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.840436839 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.848454464 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.850092185 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.842779368 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.83826306 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.850853878 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.882696852 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.849705327 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.844445043 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.849863562 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.862301393 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.854761873 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.855053982 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.841438088 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.835503876 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.85033586 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.842132277 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.846451563 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.847227946 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.843069057 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.852025783 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.2262239 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889424849 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.836397522 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.83667111 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.838977155 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.859671762 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.228234848 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.880399653 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.862856792 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.888668053 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.840578436 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.127977223 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.87353488 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85381898 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.851117342 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.842123398 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.837354158 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.127704503 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.251345672 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.895910791 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.839878719 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.8449601 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855113464 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.840922006 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.836915129 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.140985895 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.868297794 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.854179859 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.96856025 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.853219263 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.877377039 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.843770362 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.844954798 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.886131394 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.855232262 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.878940854 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.843507507 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856951698 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.863321397 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.838045075 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.857695028 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.853516993 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.840188189 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.848916523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.838315524 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.886854561 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854144205 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.853675052 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.860819397 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.969274512 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.839513316 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.129975812 seconds)
done (took 289.266230362 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.91317882 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.837204959 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.927127896 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.837632263 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.925012449 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.912703234 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.837791291 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.838728977 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837920492 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.337358588 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.837503197 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.844102148 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.836281137 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.837787606 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.90648349 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.837536889 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.837648327 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.282814259 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.837905099 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.916676556 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.836470832 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.838166768 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.836938831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.367434969 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.838063085 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.832961895 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.910804645 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.8315446 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.280689514 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.830518016 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.829677989 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.278885434 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.907738161 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.856960209 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.83684569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.838204368 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.921968338 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.839101532 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.899363478 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.895158801 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.926223588 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.863896853 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.827224132 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.829249433 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.834832121 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.832019881 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.830665382 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.86263725 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.830997132 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.8354019 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.274302913 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.838097618 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.837371508 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.832374271 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.830624589 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.858739931 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.831271413 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.832071217 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.908495609 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.832374844 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.90397943 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.359000826 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.330085068 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.830916589 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.829553671 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.831911164 seconds)
  done (took 182.889835324 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.895814009 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.905676852 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.895799253 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.834246764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.877743815 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.896714794 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834395207 seconds)
  done (took 14.899093194 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.836993614 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.830227749 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.881708326 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.875988758 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.827838327 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.00836289 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.840493167 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83187638 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.852183845 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.827206638 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.460204598 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.873961233 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.830086778 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.823858514 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.832382024 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.880379517 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.819166752 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.818560061 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.933015089 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967334269 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821711881 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.824777028 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.844683394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.829161906 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.81860537 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.819461431 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.818541345 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.824692243 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818935926 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.81831108 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.818506258 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.86869677 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818749366 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.817604108 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818303037 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.818931675 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.81804472 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818674507 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.818498889 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.817469523 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.818747352 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.819290831 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.818501698 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.817969325 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.819152088 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.842395499 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.819670096 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.821424301 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.821433159 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.819697959 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.845015806 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.819321747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.819035792 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.824247969 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.861407721 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824204439 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.81972591 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.818905509 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.819873487 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.820807973 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819998757 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.968861533 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.8706663 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.821219292 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869290326 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 1.974886494 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820220591 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82030183 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.81960807 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.908827632 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.821013425 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.864887329 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.816347385 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.931484816 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.816240732 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.996723273 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.835842488 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.817385312 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.817177368 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.814327462 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.817331106 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.810313631 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.812793999 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.819034277 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813355281 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.809143883 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.808309702 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.809833552 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.815697875 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.80951762 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.858865222 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.808596867 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.809739389 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.949280989 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.809153155 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.924823055 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.836401797 seconds)
  done (took 200.924954826 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.815615373 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.815997338 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.811014873 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.825934563 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.810703875 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809564326 seconds)
  done (took 12.628268749 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.811357956 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.81421979 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.80973593 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.80965284 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.810687595 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.810710351 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.809950056 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812388875 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.815072232 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.809759954 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810435338 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.811290595 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.811114717 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.811088517 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.810777364 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.810972313 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.809823443 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.810810653 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.810140022 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.81104279 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.018942167 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.809884984 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.811450902 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.814429013 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.814755604 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.810721004 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.823753085 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.810753883 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.810391602 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.818636089 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.815359425 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.811686565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.814748369 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.817553249 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.815966036 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.814623952 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814179717 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.813384477 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.811462756 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.813188943 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.813074268 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.812679602 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.812133895 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.813352594 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.814025816 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.819233821 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.816794766 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.82454428 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.813021369 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.813314397 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.813079161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.812996711 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.812124361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813754926 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.817847804 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.818704299 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.817150765 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.812788407 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.813328954 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.816114381 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.81596475 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.813057738 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.814537126 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.815533256 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.819997692 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.813946978 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.816859704 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.816874638 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.812688186 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.813911827 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.815292229 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.813223297 seconds)
  done (took 133.530875738 seconds)
done (took 546.653442821 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.347689987 seconds)
  done (took 9.08996697 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.98302524 seconds)
  done (took 8.835785134 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.128807575 seconds)
  done (took 9.873245534 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.822916006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.825401679 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.827306682 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.821274956 seconds)
  done (took 29.059693578 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.845799273 seconds)
  done (took 8.589045525 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.836459559 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.812533844 seconds)
  done (took 15.426276083 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.82838708 seconds)
  done (took 8.57214775 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.172054131 seconds)
  done (took 8.922212443 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.835697287 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.812373594 seconds)
  done (took 15.412629259 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.81783093 seconds)
  done (took 8.561389655 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.86520693 seconds)
  done (took 9.694307331 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.839171004 seconds)
  done (took 8.653969889 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889503301 seconds)
  done (took 8.633613577 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.757693281 seconds)
  done (took 9.502182947 seconds)
done (took 160.567889694 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.830385906 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.814417643 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.815656912 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.813108269 seconds)
  done (took 29.017769311 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.849328403 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.849480163 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.85867296 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.849033048 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.840712581 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.840050545 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.854041559 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.851484723 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.843117709 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.847974936 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.850084169 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.847938386 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.850722308 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.857912431 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.858808453 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.847244164 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.849621985 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.850369657 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.840697301 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.859329261 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.848126104 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.850380284 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.816412244 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.816921415 seconds)
  done (took 46.074036713 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.033280364 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.900486249 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.983954648 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.889543593 seconds)
  done (took 9.555359857 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.815353521 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.893087707 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.885132393 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.871603215 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.876167999 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.93111026 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.885514987 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 1.958377216 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.944496495 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.9469221 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.825745876 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.837259008 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.842630861 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.872966504 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.932624252 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.818176189 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.817586613 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.935528783 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.894079048 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.125552003 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.817163995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.885627199 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.877706175 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.886289404 seconds)
  done (took 47.123113712 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.817873047 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.828809722 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.824908687 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.817686337 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.8190411 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.818837183 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.825196722 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.820276462 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.839260447 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.820543609 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.818739262 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.819662583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.825361282 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.819321194 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.819169907 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.831759847 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.832930469 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.82030485 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.823245499 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.826149369 seconds)
  done (took 38.21673184 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.816497143 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.076181372 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.161210529 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.069184906 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.816703634 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.817700099 seconds)
  done (took 31.505537858 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.830231233 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.823988035 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.817744808 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.874927743 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.959099651 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.826454355 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.819419045 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.830034703 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.86328535 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.883300723 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.839786573 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.847910433 seconds)
  done (took 23.963940563 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.819295966 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.819342612 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.819909281 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.83167073 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.828917068 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.825996559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.826110189 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.819202715 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.832107263 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.837564921 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.825618331 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.829798597 seconds)
  done (took 43.66922986 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.52321981 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895715734 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.818379344 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.844174939 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260613589 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.367331655 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.712432635 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.48402172 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.758680201 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.843729366 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.121029616 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.917139932 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.0013709 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.918124439 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187479161 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.37280106 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13311821 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.161372308 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916893558 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.00978163 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.120240901 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126827383 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.206513453 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.918930329 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919758915 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.923678169 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.592803489 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.596250064 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030418087 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 6.238694452 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129298616 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.870108516 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966261386 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.922513739 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.932572299 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921913931 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924023404 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190534416 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.926765701 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11533778 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989205609 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167863892 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924588728 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329819422 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.628033378 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.209163292 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.052114273 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.921332238 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92540614 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922655039 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.847613611 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004090346 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.924947191 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.926303311 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.621418192 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923058893 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997163782 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.923816589 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.124226594 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.731613633 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604724581 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.925068714 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92543279 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.477061477 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.935138007 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.112961894 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.552575193 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.374938214 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.338157813 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.021029245 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.924370248 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926556768 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253013124 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.856879908 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.548184555 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.040996199 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062737162 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.940379027 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.56441248 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.219072625 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.335466128 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.497344248 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842880473 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190511932 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.787535698 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.892774527 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14092958 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.778169432 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.850994315 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131113137 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956187343 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928292097 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.189422447 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551025504 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.115638736 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.938668654 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.355900709 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947937221 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930654727 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927631061 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140105971 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500029533 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931496674 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.046561317 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941989545 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008149456 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852672128 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.93945998 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.927721506 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.808781439 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.926441535 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926615454 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.938263132 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.926842865 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931319159 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.873553793 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.928989322 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929711578 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.045057877 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.877835404 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167987444 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.219152027 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.568941842 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965889672 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.025424276 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.283966462 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169325521 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936434524 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.141068687 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454176 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.306978624 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.988402602 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205486623 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.98419731 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208769548 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342650904 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993566583 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.619434731 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535934878 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.144850501 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941599319 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.929457841 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.931727102 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933808297 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863123377 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.792403422 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.249435436 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.104836009 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.143723843 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 6.49987602 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.890430624 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.940438708 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.202433661 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065412747 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.910323475 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.569279459 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 6.339072209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.608892947 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.022891421 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.260149566 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.254244725 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.858496934 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942609997 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021269303 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946022607 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.942388887 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.213370486 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.302944054 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.931986109 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.931268973 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.876385638 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933351037 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.932120559 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.459563761 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.898501138 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.937440894 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.942018391 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.805068371 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992665693 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933406584 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.933659647 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.476012994 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.435735217 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.939798024 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.615063127 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.940930371 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.078142043 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192578548 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.266599931 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066342994 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.630777098 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.295524204 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.04646581 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.632075776 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85752127 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931563558 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.869939689 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937789387 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.931784661 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.9372039 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.121862841 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.199939071 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228588634 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.396670511 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993800488 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134788247 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.594054559 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.959759123 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.933017075 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937539075 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.934103166 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932675152 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.42547706 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.476236035 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.917033123 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037426054 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.938437313 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061909039 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.943755153 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.858234992 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.934470032 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.935418114 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397073878 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.065223606 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.879655388 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.210360716 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.718882337 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131495296 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984150728 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.944859479 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939930381 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.547669107 seconds)
    (233/481) benchmarking "4d"...
    done (took 3.049073794 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863928304 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395057806 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.052143507 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.595116756 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.696333456 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.486690286 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224375951 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.238298355 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.249456303 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 2.001901199 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.148201252 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018106301 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.989012479 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.02526906 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871809099 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.860030941 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.56815379 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.260804889 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25776856 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946506503 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151638422 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.604072023 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.238025766 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964142794 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.818883249 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312616653 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908834464 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.951712652 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 6.377941903 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124826743 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017171447 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937969017 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.884137336 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.262136093 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972884249 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.639996179 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948723134 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.287579918 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.399817152 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.172226853 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.272686806 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155920074 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.942664605 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276521973 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.190773432 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.05710764 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.941342091 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.915215145 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.159615603 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.517122082 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.790225108 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942246889 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.119050533 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.301903152 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.838807931 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.939735316 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.12932884 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278637732 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937908038 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.251242732 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.304978646 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.035799136 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990001046 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163470257 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.655534612 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317723604 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.481239793 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.407611783 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950118462 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86344946 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.639489421 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.139638569 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.938541467 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.901988313 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140546977 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168194561 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615885564 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158853814 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.181695668 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.949197937 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20148503 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007353279 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.035448106 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.220349226 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.388997774 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.181181222 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165723377 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.46865688 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157695505 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.37612071 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.083199951 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.943364723 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145277001 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.156240277 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.152881581 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.284535322 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.109226809 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648276568 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.944364749 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.147202069 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228800219 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997693347 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.287872379 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.120204963 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.024084233 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946720498 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.014876292 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945588359 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94878722 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.292000793 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.470899715 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.955313619 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0161082 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.93434478 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.504251355 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.950954245 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.945514753 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202609254 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281493931 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.26137693 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920861755 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94468297 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94219491 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068883875 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.867008963 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945689543 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211379173 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.944608069 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369228631 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.175788467 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95755008 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.221421906 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.338492883 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.643811974 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.056410763 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946553675 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15129817 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233555229 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.178119596 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.138087946 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212754467 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.267332388 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.971268153 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.287127116 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193748737 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945250462 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.965540954 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945231695 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065865618 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.144523618 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207080114 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.444879626 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555484611 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.284632503 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.792545077 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94581783 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.606589099 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.290489963 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.205477623 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991834491 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020120458 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948128471 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406096505 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.749344459 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075196399 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.789333102 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871546946 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.956641606 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.231785413 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.185168969 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.652812185 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.945742519 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209928482 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.243534507 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208958055 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.991365246 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.807066147 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16033135 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946408516 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.952846485 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162039744 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151608074 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185651283 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94731597 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946070317 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.751042939 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869883069 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.946204589 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988828356 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170541577 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961897433 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.459118624 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.64455366 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215229777 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989013803 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947279071 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.207579029 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.465847515 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.479346394 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.955019456 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149412988 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.87532548 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330092256 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.946696981 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.423892845 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331759044 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.946544694 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.50562583 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.275196722 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21574015 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88342502 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.957182997 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163060413 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.822067421 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.947110974 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.92780682 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420466189 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.262594212 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.680516872 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50493852 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.948813709 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.949496549 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414893349 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061718906 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416683821 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.047979269 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964247989 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.46950049 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.658285324 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.233931703 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.189224912 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.521002367 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.680177565 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.948213591 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.945532336 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950176787 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.866299235 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.134908985 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.137198997 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222138273 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.976349391 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418387134 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.066308535 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.294947537 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073711751 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.135110551 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069914467 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.469030701 seconds)
  done (took 1697.318465426 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.958288637 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.992688003 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.998732803 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.95929947 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.960269952 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.952322907 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.961316582 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.0373109 seconds)
  done (took 57.693918771 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947132337 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.087476208 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.952862788 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.948990607 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.95933593 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.949411074 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.106283766 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.964518968 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.953232827 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.953302199 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.950110378 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.949510246 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.24155316 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.972780204 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.950454864 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.952020946 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.953596328 seconds)
  done (took 75.674942011 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.952256375 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.275210893 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.994681345 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.950411073 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.398172827 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.955807522 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.071943212 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.99210546 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.957843234 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.159354242 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.243237002 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.027094421 seconds)
  done (took 90.85377441 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.952436322 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.951741177 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.95161249 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.952248199 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.951151323 seconds)
  done (took 11.634290447 seconds)
done (took 2204.134024119 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.32188179 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.009637083 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.054288333 seconds)
  done (took 5.939584011 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.096023487 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.142409777 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.254829868 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.015535244 seconds)
  done (took 10.392910365 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.263676713 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.329098863 seconds)
  done (took 6.468970106 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.276217315 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.976127675 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.340769896 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.952511231 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.956059212 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.955999471 seconds)
  done (took 22.744192985 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.952496618 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.950244608 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.953248276 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.951266786 seconds)
  done (took 9.682237387 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.95009128 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.661372937 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.949929528 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.963057419 seconds)
  done (took 21.399830186 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.098396591 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.068956951 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.094040118 seconds)
  done (took 8.13661161 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.188506146 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.168419061 seconds)
  done (took 7.233478735 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.092304571 seconds)
  done (took 3.967976204 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.97949959 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.222313713 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.43649727 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.466566577 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.531655126 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.778948678 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.262960037 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.176733189 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.389475704 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.393367704 seconds)
  done (took 25.514562079 seconds)
done (took 137.269769249 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.28432436 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.987503978 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.160216361 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.298706552 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.183451397 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.156353699 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.165201062 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.28789039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.979975267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.967694982 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.300538295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.181619307 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.109940314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.96926342 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.121927318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.972506608 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.177676707 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.308212474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.016326932 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.286418096 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.179457045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.948542431 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.144061768 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.96673856 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.180807669 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.108882503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.493637871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.976453691 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.160061669 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.50862974 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.110264057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.420282323 seconds)
  done (took 170.991787965 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.954506048 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.953972789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.955020582 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.953934587 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.410089838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954829299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.956221892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.954266563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.356556893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.336912751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.954922143 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.397519354 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.956666562 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.954122785 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.955237737 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.953584542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.50158 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.955946633 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.956536534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.953975845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.956254305 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.234849613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.954773953 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.248085186 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.486722216 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.957055548 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.954994652 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956186735 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.954887984 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.955006256 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956405239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955082583 seconds)
  done (took 211.778028856 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.955406502 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.956597147 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.956247138 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.973750745 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.954857867 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.95953623 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.955970134 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.968433603 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.705679473 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.693383227 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.975495716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.955546234 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957533524 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.956796831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958241124 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.956516617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.956427859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.959189252 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.9579523 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.95841486 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.958826414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.519772607 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.958410296 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.527566609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.957050713 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.95891035 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.958102624 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.957662232 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957458733 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.958842697 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.959246864 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.957742657 seconds)
  done (took 223.183189211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.198333858 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.958865025 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.959417781 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.952558946 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.960016552 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.960956404 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.933888252 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.209598614 seconds)
  done (took 20.01687479 seconds)
done (took 627.855234701 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.309526419 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.15654568 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.116366637 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9822041 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.24043236 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025672218 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.978722517 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041084799 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.807661759 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.056869665 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.615231714 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.001961782 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714398333 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.009811084 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.085199378 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.037981453 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.57020493 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.676118915 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.104225284 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.045651963 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.141782733 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.898892636 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.062089763 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.845309352 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.63262113 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.941870894 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.007122431 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.581898813 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.992678828 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.117947013 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.652228931 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.261438196 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.99701006 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.979583026 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.033894031 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.013347372 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.191847264 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.993615723 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.086482816 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.686600176 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.074835708 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.709927387 seconds)
  done (took 106.363371904 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.972788322 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.966860187 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.969706446 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.967084261 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.976485409 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.967191779 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.967268207 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.967275175 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.967467377 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.967646064 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.966937208 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.97667486 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.967229834 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.976756344 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.967182391 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.967690968 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.96846486 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.97816059 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.968056457 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.967001854 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.967870573 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.968833251 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.963161852 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.968616359 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.968170621 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.968428692 seconds)
  done (took 53.097036384 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.962985713 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.120250685 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.203606556 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.983179355 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.963357087 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.969208555 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.981656392 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.969448474 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.966080197 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.966386596 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.067232469 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.970787564 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.981360879 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.20244011 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.981238448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.964134128 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.964143814 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.964247743 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.129094304 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.980151126 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.985259007 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.968412178 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.982487524 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.977202139 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.966117579 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.964710151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.967775731 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.422714318 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.973232329 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.066353134 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.009142081 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.986652199 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.360974325 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.214472897 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.019298838 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.972022997 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.963733486 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.070643378 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.971143464 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.965376407 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.982613262 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.970883855 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.203160094 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.486059486 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.979696534 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.965421567 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.432977145 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.082044275 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.006837294 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977741844 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.207735701 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.982399777 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.965928399 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.966603728 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.001393099 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.972468505 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.96579416 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.290590786 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.978246929 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.984379423 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.970763686 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.966869498 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.135160884 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.974757967 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.123238033 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.975688871 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.972611737 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.966910896 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.206795546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.983159475 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.50003148 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.981400569 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.965866768 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.07137405 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.127148212 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.45540749 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.97925576 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.137537833 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.378627206 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.991504174 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.974662755 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.41355663 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.995299742 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.975439778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.968684182 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.96891824 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.967091806 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.014178734 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.983547099 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.416895092 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.500900434 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.307932715 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.995179665 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.985981751 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.968497502 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.289158212 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.976891056 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.968427757 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.200652462 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.508171579 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.982990569 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.97584417 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479030646 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.984413559 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.987890104 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.976984552 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.214701926 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.98753091 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.015069127 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.969233162 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.975330273 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.970901463 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.98665987 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.976482301 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.968762095 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.473237408 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.092580192 seconds)
  done (took 243.65424172 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.969421756 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.969281181 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.967218405 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.968900455 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.965793245 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.968186799 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.969375349 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.967416573 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.968695846 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.967733299 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.967679228 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.968401486 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.970102185 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.972991278 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.538908525 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.970641043 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.574677163 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.967542297 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.968955974 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.972683261 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.650121596 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.974126651 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.969551989 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.967627969 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.967603431 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.969371777 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.97798332 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.974010825 seconds)
  done (took 170.900499244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.971015082 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.153120116 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.991421544 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.000756777 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.978245859 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.97085151 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.110854284 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.995516708 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.979965846 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.971221851 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.970774923 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.030505372 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.982104744 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.069412362 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.006033425 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.079329493 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.078062378 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.9806125 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.97134088 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.970639782 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.00032758 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.981421282 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.032150039 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.098371985 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.993589162 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.085202405 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.991400284 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.972554794 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.972320326 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.083792161 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.989901597 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.032383799 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.000351959 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.989979442 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092156666 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.090266329 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.080538872 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.081573644 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.983597104 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.973071243 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.97300018 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.974952166 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.087085023 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.992889902 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.974341911 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.090998774 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.992917202 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.974546438 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.973258778 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.973433179 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.98684412 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.992452469 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.038575803 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.104418901 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.009191032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.997451958 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.073101733 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.101623588 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.974769259 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.071870264 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.987438095 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.086915941 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.992740833 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.976270095 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.975415581 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.977458917 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.002735784 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.080848891 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.084636195 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.982890061 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.072491025 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.012541496 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.982718678 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.975840949 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.974679664 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.088443218 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.091820642 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.011757591 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.010982002 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.004997195 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.985882532 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.974213162 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.976832205 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.994043719 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.979361821 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089666784 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.093263247 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.984699802 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.975909063 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.976532887 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.976903873 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.999848651 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.096700541 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.011689556 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.083476944 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.043570902 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.049107579 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.988115059 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.991928571 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.981073533 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.037983804 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.990489387 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.988063428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.274779361 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.036182476 seconds)
  done (took 213.996201002 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.368780063 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.025489947 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.033392475 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.289129288 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337226184 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.100524348 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.024462288 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.02498886 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.047605528 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.208291244 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.099918254 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.044483127 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.011112413 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.998489429 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.025974965 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.044839033 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.0332872 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.371899662 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.245609978 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.20050011 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.017209256 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.293107975 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.344851871 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.610099252 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.074273614 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.439446643 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.603426924 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.155566811 seconds)
  done (took 64.98003541 seconds)
done (took 854.874140254 seconds)
SAVING RESULT...
DONE!
